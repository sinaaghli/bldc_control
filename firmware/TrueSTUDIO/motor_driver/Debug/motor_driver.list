
C:\Users\sm\Google Drive\Projects\magnelab\BLDC Control\crossworks_project\motor_driver\TrueSTUDIO\motor_driver\Debug\motor_driver.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00010540  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001394  080106d0  080106d0  000206d0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    0000012c  08011a64  08011a64  00021a64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM          000001d0  08011b90  08011b90  00021b90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .init_array   00000008  08011d60  08011d60  00021d60  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .fini_array   00000004  08011d68  08011d68  00021d68  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .data         00000548  20000000  08011d6c  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .ccmram       00000000  10000000  10000000  00030548  2**0
                  CONTENTS
  9 .bss          0000017c  20000548  20000548  00030548  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200006c4  200006c4  00030548  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00030548  2**0
                  CONTENTS, READONLY
 12 .debug_line   00004d47  00000000  00000000  00030578  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_info   0000c698  00000000  00000000  000352bf  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_abbrev 00002115  00000000  00000000  00041957  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_aranges 00000990  00000000  00000000  00043a70  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000b78  00000000  00000000  00044400  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_loc    000063d5  00000000  00000000  00044f78  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00003548  00000000  00000000  0004b34d  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007e  00000000  00000000  0004e895  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003e68  00000000  00000000  0004e914  2**2
                  CONTENTS, READONLY, DEBUGGING
 21 .stab         000000cc  00000000  00000000  0005277c  2**2
                  CONTENTS, READONLY, DEBUGGING
 22 .stabstr      000001b9  00000000  00000000  00052848  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000548 	.word	0x20000548
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080106b8 	.word	0x080106b8

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	2000054c 	.word	0x2000054c
 80001cc:	080106b8 	.word	0x080106b8

080001d0 <d_make_comp>:
 80001d0:	b470      	push	{r4, r5, r6}
 80001d2:	1e4c      	subs	r4, r1, #1
 80001d4:	2c4a      	cmp	r4, #74	; 0x4a
 80001d6:	d82c      	bhi.n	8000232 <d_make_comp+0x62>
 80001d8:	e8df f004 	tbb	[pc, r4]
 80001dc:	3c3c3c3c 	.word	0x3c3c3c3c
 80001e0:	2b2b2b2b 	.word	0x2b2b2b2b
 80001e4:	263c2626 	.word	0x263c2626
 80001e8:	26262626 	.word	0x26262626
 80001ec:	26262626 	.word	0x26262626
 80001f0:	2b262626 	.word	0x2b262626
 80001f4:	27272727 	.word	0x27272727
 80001f8:	27272727 	.word	0x27272727
 80001fc:	2626263c 	.word	0x2626263c
 8000200:	262b2626 	.word	0x262b2626
 8000204:	2b3c3d27 	.word	0x2b3c3d27
 8000208:	3d27273c 	.word	0x3d27273c
 800020c:	26262b2b 	.word	0x26262b2b
 8000210:	3c3c3c3c 	.word	0x3c3c3c3c
 8000214:	3c3c263c 	.word	0x3c3c263c
 8000218:	2b2b3c26 	.word	0x2b2b3c26
 800021c:	2b262626 	.word	0x2b262626
 8000220:	26262b2b 	.word	0x26262b2b
 8000224:	3c26      	.short	0x3c26
 8000226:	3c          	.byte	0x3c
 8000227:	00          	.byte	0x00
 8000228:	b1ca      	cbz	r2, 800025e <d_make_comp+0x8e>
 800022a:	6944      	ldr	r4, [r0, #20]
 800022c:	6985      	ldr	r5, [r0, #24]
 800022e:	42ac      	cmp	r4, r5
 8000230:	db02      	blt.n	8000238 <d_make_comp+0x68>
 8000232:	2000      	movs	r0, #0
 8000234:	bc70      	pop	{r4, r5, r6}
 8000236:	4770      	bx	lr
 8000238:	eb04 0544 	add.w	r5, r4, r4, lsl #1
 800023c:	6906      	ldr	r6, [r0, #16]
 800023e:	3401      	adds	r4, #1
 8000240:	00ad      	lsls	r5, r5, #2
 8000242:	6144      	str	r4, [r0, #20]
 8000244:	1974      	adds	r4, r6, r5
 8000246:	d00c      	beq.n	8000262 <d_make_comp+0x92>
 8000248:	5571      	strb	r1, [r6, r5]
 800024a:	6062      	str	r2, [r4, #4]
 800024c:	60a3      	str	r3, [r4, #8]
 800024e:	4620      	mov	r0, r4
 8000250:	bc70      	pop	{r4, r5, r6}
 8000252:	4770      	bx	lr
 8000254:	b11a      	cbz	r2, 800025e <d_make_comp+0x8e>
 8000256:	2b00      	cmp	r3, #0
 8000258:	d1e7      	bne.n	800022a <d_make_comp+0x5a>
 800025a:	4618      	mov	r0, r3
 800025c:	e7ea      	b.n	8000234 <d_make_comp+0x64>
 800025e:	4610      	mov	r0, r2
 8000260:	e7e8      	b.n	8000234 <d_make_comp+0x64>
 8000262:	4620      	mov	r0, r4
 8000264:	e7e6      	b.n	8000234 <d_make_comp+0x64>
 8000266:	bf00      	nop

08000268 <d_cv_qualifiers>:
 8000268:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800026c:	68c3      	ldr	r3, [r0, #12]
 800026e:	f1b2 0a00 	subs.w	sl, r2, #0
 8000272:	4604      	mov	r4, r0
 8000274:	460f      	mov	r7, r1
 8000276:	781a      	ldrb	r2, [r3, #0]
 8000278:	bf15      	itete	ne
 800027a:	f04f 081c 	movne.w	r8, #28
 800027e:	f04f 0819 	moveq.w	r8, #25
 8000282:	f04f 091d 	movne.w	r9, #29
 8000286:	f04f 091a 	moveq.w	r9, #26
 800028a:	bf14      	ite	ne
 800028c:	261e      	movne	r6, #30
 800028e:	261b      	moveq	r6, #27
 8000290:	460d      	mov	r5, r1
 8000292:	e012      	b.n	80002ba <d_cv_qualifiers+0x52>
 8000294:	2a56      	cmp	r2, #86	; 0x56
 8000296:	d01b      	beq.n	80002d0 <d_cv_qualifiers+0x68>
 8000298:	2a4b      	cmp	r2, #75	; 0x4b
 800029a:	d122      	bne.n	80002e2 <d_cv_qualifiers+0x7a>
 800029c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800029e:	60e1      	str	r1, [r4, #12]
 80002a0:	3306      	adds	r3, #6
 80002a2:	6323      	str	r3, [r4, #48]	; 0x30
 80002a4:	4631      	mov	r1, r6
 80002a6:	2300      	movs	r3, #0
 80002a8:	461a      	mov	r2, r3
 80002aa:	4620      	mov	r0, r4
 80002ac:	f7ff ff90 	bl	80001d0 <d_make_comp>
 80002b0:	6028      	str	r0, [r5, #0]
 80002b2:	b1a0      	cbz	r0, 80002de <d_cv_qualifiers+0x76>
 80002b4:	68e3      	ldr	r3, [r4, #12]
 80002b6:	781a      	ldrb	r2, [r3, #0]
 80002b8:	1d05      	adds	r5, r0, #4
 80002ba:	2a72      	cmp	r2, #114	; 0x72
 80002bc:	f103 0101 	add.w	r1, r3, #1
 80002c0:	d1e8      	bne.n	8000294 <d_cv_qualifiers+0x2c>
 80002c2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80002c4:	3301      	adds	r3, #1
 80002c6:	3209      	adds	r2, #9
 80002c8:	60e3      	str	r3, [r4, #12]
 80002ca:	6322      	str	r2, [r4, #48]	; 0x30
 80002cc:	4641      	mov	r1, r8
 80002ce:	e7ea      	b.n	80002a6 <d_cv_qualifiers+0x3e>
 80002d0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80002d2:	3301      	adds	r3, #1
 80002d4:	3209      	adds	r2, #9
 80002d6:	60e3      	str	r3, [r4, #12]
 80002d8:	6322      	str	r2, [r4, #48]	; 0x30
 80002da:	4649      	mov	r1, r9
 80002dc:	e7e3      	b.n	80002a6 <d_cv_qualifiers+0x3e>
 80002de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002e2:	f1ba 0f00 	cmp.w	sl, #0
 80002e6:	d101      	bne.n	80002ec <d_cv_qualifiers+0x84>
 80002e8:	2a46      	cmp	r2, #70	; 0x46
 80002ea:	d002      	beq.n	80002f2 <d_cv_qualifiers+0x8a>
 80002ec:	4628      	mov	r0, r5
 80002ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002f2:	42bd      	cmp	r5, r7
 80002f4:	d0fa      	beq.n	80002ec <d_cv_qualifiers+0x84>
 80002f6:	201d      	movs	r0, #29
 80002f8:	211e      	movs	r1, #30
 80002fa:	221c      	movs	r2, #28
 80002fc:	e007      	b.n	800030e <d_cv_qualifiers+0xa6>
 80002fe:	2b1b      	cmp	r3, #27
 8000300:	d00b      	beq.n	800031a <d_cv_qualifiers+0xb2>
 8000302:	2b19      	cmp	r3, #25
 8000304:	d100      	bne.n	8000308 <d_cv_qualifiers+0xa0>
 8000306:	703a      	strb	r2, [r7, #0]
 8000308:	3704      	adds	r7, #4
 800030a:	42bd      	cmp	r5, r7
 800030c:	d0ee      	beq.n	80002ec <d_cv_qualifiers+0x84>
 800030e:	683f      	ldr	r7, [r7, #0]
 8000310:	783b      	ldrb	r3, [r7, #0]
 8000312:	2b1a      	cmp	r3, #26
 8000314:	d1f3      	bne.n	80002fe <d_cv_qualifiers+0x96>
 8000316:	7038      	strb	r0, [r7, #0]
 8000318:	e7f6      	b.n	8000308 <d_cv_qualifiers+0xa0>
 800031a:	7039      	strb	r1, [r7, #0]
 800031c:	e7f4      	b.n	8000308 <d_cv_qualifiers+0xa0>
 800031e:	bf00      	nop

08000320 <d_ref_qualifier>:
 8000320:	b410      	push	{r4}
 8000322:	68c3      	ldr	r3, [r0, #12]
 8000324:	781c      	ldrb	r4, [r3, #0]
 8000326:	2c52      	cmp	r4, #82	; 0x52
 8000328:	460a      	mov	r2, r1
 800032a:	d00f      	beq.n	800034c <d_ref_qualifier+0x2c>
 800032c:	2c4f      	cmp	r4, #79	; 0x4f
 800032e:	d003      	beq.n	8000338 <d_ref_qualifier+0x18>
 8000330:	4608      	mov	r0, r1
 8000332:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000336:	4770      	bx	lr
 8000338:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800033a:	3103      	adds	r1, #3
 800033c:	6301      	str	r1, [r0, #48]	; 0x30
 800033e:	2120      	movs	r1, #32
 8000340:	3301      	adds	r3, #1
 8000342:	60c3      	str	r3, [r0, #12]
 8000344:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000348:	2300      	movs	r3, #0
 800034a:	e741      	b.n	80001d0 <d_make_comp>
 800034c:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800034e:	3102      	adds	r1, #2
 8000350:	6301      	str	r1, [r0, #48]	; 0x30
 8000352:	211f      	movs	r1, #31
 8000354:	e7f4      	b.n	8000340 <d_ref_qualifier+0x20>
 8000356:	bf00      	nop

08000358 <d_count_templates_scopes>:
 8000358:	2a00      	cmp	r2, #0
 800035a:	d04c      	beq.n	80003f6 <d_count_templates_scopes+0x9e>
 800035c:	b570      	push	{r4, r5, r6, lr}
 800035e:	4605      	mov	r5, r0
 8000360:	460e      	mov	r6, r1
 8000362:	4614      	mov	r4, r2
 8000364:	7823      	ldrb	r3, [r4, #0]
 8000366:	3b01      	subs	r3, #1
 8000368:	2b4a      	cmp	r3, #74	; 0x4a
 800036a:	d82a      	bhi.n	80003c2 <d_count_templates_scopes+0x6a>
 800036c:	e8df f003 	tbb	[pc, r3]
 8000370:	3e353535 	.word	0x3e353535
 8000374:	26262929 	.word	0x26262929
 8000378:	35353535 	.word	0x35353535
 800037c:	35353535 	.word	0x35353535
 8000380:	35353535 	.word	0x35353535
 8000384:	29353535 	.word	0x29353535
 8000388:	35353535 	.word	0x35353535
 800038c:	35353535 	.word	0x35353535
 8000390:	2e2e3535 	.word	0x2e2e3535
 8000394:	35293535 	.word	0x35293535
 8000398:	2a353535 	.word	0x2a353535
 800039c:	35353535 	.word	0x35353535
 80003a0:	35352629 	.word	0x35352629
 80003a4:	35353535 	.word	0x35353535
 80003a8:	35353535 	.word	0x35353535
 80003ac:	29293535 	.word	0x29293535
 80003b0:	2a2a2a35 	.word	0x2a2a2a35
 80003b4:	3535292a 	.word	0x3535292a
 80003b8:	3535      	.short	0x3535
 80003ba:	35          	.byte	0x35
 80003bb:	00          	.byte	0x00
 80003bc:	68a4      	ldr	r4, [r4, #8]
 80003be:	2c00      	cmp	r4, #0
 80003c0:	d1d0      	bne.n	8000364 <d_count_templates_scopes+0xc>
 80003c2:	bd70      	pop	{r4, r5, r6, pc}
 80003c4:	6864      	ldr	r4, [r4, #4]
 80003c6:	2c00      	cmp	r4, #0
 80003c8:	d1cc      	bne.n	8000364 <d_count_templates_scopes+0xc>
 80003ca:	e7fa      	b.n	80003c2 <d_count_templates_scopes+0x6a>
 80003cc:	6862      	ldr	r2, [r4, #4]
 80003ce:	7813      	ldrb	r3, [r2, #0]
 80003d0:	2b05      	cmp	r3, #5
 80003d2:	d103      	bne.n	80003dc <d_count_templates_scopes+0x84>
 80003d4:	6833      	ldr	r3, [r6, #0]
 80003d6:	3301      	adds	r3, #1
 80003d8:	6033      	str	r3, [r6, #0]
 80003da:	6862      	ldr	r2, [r4, #4]
 80003dc:	4631      	mov	r1, r6
 80003de:	4628      	mov	r0, r5
 80003e0:	f7ff ffba 	bl	8000358 <d_count_templates_scopes>
 80003e4:	68a4      	ldr	r4, [r4, #8]
 80003e6:	2c00      	cmp	r4, #0
 80003e8:	d1bc      	bne.n	8000364 <d_count_templates_scopes+0xc>
 80003ea:	e7ea      	b.n	80003c2 <d_count_templates_scopes+0x6a>
 80003ec:	682b      	ldr	r3, [r5, #0]
 80003ee:	3301      	adds	r3, #1
 80003f0:	602b      	str	r3, [r5, #0]
 80003f2:	6862      	ldr	r2, [r4, #4]
 80003f4:	e7f2      	b.n	80003dc <d_count_templates_scopes+0x84>
 80003f6:	4770      	bx	lr

080003f8 <d_append_buffer>:
 80003f8:	b37a      	cbz	r2, 800045a <d_append_buffer+0x62>
 80003fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80003fe:	460d      	mov	r5, r1
 8000400:	4604      	mov	r4, r0
 8000402:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8000406:	18af      	adds	r7, r5, r2
 8000408:	f04f 0800 	mov.w	r8, #0
 800040c:	e009      	b.n	8000422 <d_append_buffer+0x2a>
 800040e:	460b      	mov	r3, r1
 8000410:	42bd      	cmp	r5, r7
 8000412:	f101 0101 	add.w	r1, r1, #1
 8000416:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800041a:	54e6      	strb	r6, [r4, r3]
 800041c:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8000420:	d019      	beq.n	8000456 <d_append_buffer+0x5e>
 8000422:	29ff      	cmp	r1, #255	; 0xff
 8000424:	f815 6b01 	ldrb.w	r6, [r5], #1
 8000428:	d1f1      	bne.n	800040e <d_append_buffer+0x16>
 800042a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800042e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8000432:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8000436:	4620      	mov	r0, r4
 8000438:	4798      	blx	r3
 800043a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800043e:	3301      	adds	r3, #1
 8000440:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8000444:	2300      	movs	r3, #0
 8000446:	2101      	movs	r1, #1
 8000448:	42bd      	cmp	r5, r7
 800044a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800044e:	54e6      	strb	r6, [r4, r3]
 8000450:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8000454:	d1e5      	bne.n	8000422 <d_append_buffer+0x2a>
 8000456:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800045a:	4770      	bx	lr

0800045c <d_number.isra.0>:
 800045c:	b430      	push	{r4, r5}
 800045e:	6803      	ldr	r3, [r0, #0]
 8000460:	781a      	ldrb	r2, [r3, #0]
 8000462:	2a6e      	cmp	r2, #110	; 0x6e
 8000464:	4604      	mov	r4, r0
 8000466:	d016      	beq.n	8000496 <d_number.isra.0+0x3a>
 8000468:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 800046c:	2909      	cmp	r1, #9
 800046e:	d81c      	bhi.n	80004aa <d_number.isra.0+0x4e>
 8000470:	2500      	movs	r5, #0
 8000472:	2000      	movs	r0, #0
 8000474:	3301      	adds	r3, #1
 8000476:	6023      	str	r3, [r4, #0]
 8000478:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800047c:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8000480:	781a      	ldrb	r2, [r3, #0]
 8000482:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8000486:	2909      	cmp	r1, #9
 8000488:	f1a0 0030 	sub.w	r0, r0, #48	; 0x30
 800048c:	d9f2      	bls.n	8000474 <d_number.isra.0+0x18>
 800048e:	b105      	cbz	r5, 8000492 <d_number.isra.0+0x36>
 8000490:	4240      	negs	r0, r0
 8000492:	bc30      	pop	{r4, r5}
 8000494:	4770      	bx	lr
 8000496:	1c59      	adds	r1, r3, #1
 8000498:	6001      	str	r1, [r0, #0]
 800049a:	785a      	ldrb	r2, [r3, #1]
 800049c:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 80004a0:	2b09      	cmp	r3, #9
 80004a2:	d802      	bhi.n	80004aa <d_number.isra.0+0x4e>
 80004a4:	460b      	mov	r3, r1
 80004a6:	2501      	movs	r5, #1
 80004a8:	e7e3      	b.n	8000472 <d_number.isra.0+0x16>
 80004aa:	2000      	movs	r0, #0
 80004ac:	e7f1      	b.n	8000492 <d_number.isra.0+0x36>
 80004ae:	bf00      	nop

080004b0 <d_number_component>:
 80004b0:	6943      	ldr	r3, [r0, #20]
 80004b2:	6982      	ldr	r2, [r0, #24]
 80004b4:	4293      	cmp	r3, r2
 80004b6:	da14      	bge.n	80004e2 <d_number_component+0x32>
 80004b8:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 80004bc:	6901      	ldr	r1, [r0, #16]
 80004be:	0092      	lsls	r2, r2, #2
 80004c0:	b510      	push	{r4, lr}
 80004c2:	3301      	adds	r3, #1
 80004c4:	188c      	adds	r4, r1, r2
 80004c6:	6143      	str	r3, [r0, #20]
 80004c8:	d008      	beq.n	80004dc <d_number_component+0x2c>
 80004ca:	2340      	movs	r3, #64	; 0x40
 80004cc:	548b      	strb	r3, [r1, r2]
 80004ce:	300c      	adds	r0, #12
 80004d0:	f7ff ffc4 	bl	800045c <d_number.isra.0>
 80004d4:	4623      	mov	r3, r4
 80004d6:	6060      	str	r0, [r4, #4]
 80004d8:	4618      	mov	r0, r3
 80004da:	bd10      	pop	{r4, pc}
 80004dc:	4623      	mov	r3, r4
 80004de:	4618      	mov	r0, r3
 80004e0:	bd10      	pop	{r4, pc}
 80004e2:	2300      	movs	r3, #0
 80004e4:	4618      	mov	r0, r3
 80004e6:	4770      	bx	lr

080004e8 <d_compact_number>:
 80004e8:	b510      	push	{r4, lr}
 80004ea:	68c3      	ldr	r3, [r0, #12]
 80004ec:	781a      	ldrb	r2, [r3, #0]
 80004ee:	2a5f      	cmp	r2, #95	; 0x5f
 80004f0:	4604      	mov	r4, r0
 80004f2:	d00b      	beq.n	800050c <d_compact_number+0x24>
 80004f4:	2a6e      	cmp	r2, #110	; 0x6e
 80004f6:	d006      	beq.n	8000506 <d_compact_number+0x1e>
 80004f8:	300c      	adds	r0, #12
 80004fa:	f7ff ffaf 	bl	800045c <d_number.isra.0>
 80004fe:	68e3      	ldr	r3, [r4, #12]
 8000500:	781a      	ldrb	r2, [r3, #0]
 8000502:	2a5f      	cmp	r2, #95	; 0x5f
 8000504:	d006      	beq.n	8000514 <d_compact_number+0x2c>
 8000506:	f04f 30ff 	mov.w	r0, #4294967295
 800050a:	bd10      	pop	{r4, pc}
 800050c:	2000      	movs	r0, #0
 800050e:	3301      	adds	r3, #1
 8000510:	60e3      	str	r3, [r4, #12]
 8000512:	bd10      	pop	{r4, pc}
 8000514:	3001      	adds	r0, #1
 8000516:	e7fa      	b.n	800050e <d_compact_number+0x26>

08000518 <d_template_param>:
 8000518:	b538      	push	{r3, r4, r5, lr}
 800051a:	68c3      	ldr	r3, [r0, #12]
 800051c:	781a      	ldrb	r2, [r3, #0]
 800051e:	2a54      	cmp	r2, #84	; 0x54
 8000520:	d001      	beq.n	8000526 <d_template_param+0xe>
 8000522:	2000      	movs	r0, #0
 8000524:	bd38      	pop	{r3, r4, r5, pc}
 8000526:	3301      	adds	r3, #1
 8000528:	60c3      	str	r3, [r0, #12]
 800052a:	4604      	mov	r4, r0
 800052c:	f7ff ffdc 	bl	80004e8 <d_compact_number>
 8000530:	1e05      	subs	r5, r0, #0
 8000532:	dbf6      	blt.n	8000522 <d_template_param+0xa>
 8000534:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8000536:	6963      	ldr	r3, [r4, #20]
 8000538:	69a1      	ldr	r1, [r4, #24]
 800053a:	3201      	adds	r2, #1
 800053c:	428b      	cmp	r3, r1
 800053e:	62a2      	str	r2, [r4, #40]	; 0x28
 8000540:	daef      	bge.n	8000522 <d_template_param+0xa>
 8000542:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8000546:	6921      	ldr	r1, [r4, #16]
 8000548:	3301      	adds	r3, #1
 800054a:	0092      	lsls	r2, r2, #2
 800054c:	6163      	str	r3, [r4, #20]
 800054e:	188b      	adds	r3, r1, r2
 8000550:	d0e7      	beq.n	8000522 <d_template_param+0xa>
 8000552:	2005      	movs	r0, #5
 8000554:	5488      	strb	r0, [r1, r2]
 8000556:	605d      	str	r5, [r3, #4]
 8000558:	4618      	mov	r0, r3
 800055a:	bd38      	pop	{r3, r4, r5, pc}

0800055c <d_source_name>:
 800055c:	b570      	push	{r4, r5, r6, lr}
 800055e:	4604      	mov	r4, r0
 8000560:	300c      	adds	r0, #12
 8000562:	f7ff ff7b 	bl	800045c <d_number.isra.0>
 8000566:	1e06      	subs	r6, r0, #0
 8000568:	dd4e      	ble.n	8000608 <d_source_name+0xac>
 800056a:	68e5      	ldr	r5, [r4, #12]
 800056c:	6863      	ldr	r3, [r4, #4]
 800056e:	1b5b      	subs	r3, r3, r5
 8000570:	429e      	cmp	r6, r3
 8000572:	dc2c      	bgt.n	80005ce <d_source_name+0x72>
 8000574:	68a2      	ldr	r2, [r4, #8]
 8000576:	19ab      	adds	r3, r5, r6
 8000578:	0752      	lsls	r2, r2, #29
 800057a:	60e3      	str	r3, [r4, #12]
 800057c:	d504      	bpl.n	8000588 <d_source_name+0x2c>
 800057e:	5daa      	ldrb	r2, [r5, r6]
 8000580:	2a24      	cmp	r2, #36	; 0x24
 8000582:	bf04      	itt	eq
 8000584:	3301      	addeq	r3, #1
 8000586:	60e3      	streq	r3, [r4, #12]
 8000588:	2e09      	cmp	r6, #9
 800058a:	dd0c      	ble.n	80005a6 <d_source_name+0x4a>
 800058c:	2208      	movs	r2, #8
 800058e:	491f      	ldr	r1, [pc, #124]	; (800060c <d_source_name+0xb0>)
 8000590:	4628      	mov	r0, r5
 8000592:	f00c ff43 	bl	800d41c <memcmp>
 8000596:	b930      	cbnz	r0, 80005a6 <d_source_name+0x4a>
 8000598:	7a2b      	ldrb	r3, [r5, #8]
 800059a:	2b2e      	cmp	r3, #46	; 0x2e
 800059c:	d01a      	beq.n	80005d4 <d_source_name+0x78>
 800059e:	2b5f      	cmp	r3, #95	; 0x5f
 80005a0:	d018      	beq.n	80005d4 <d_source_name+0x78>
 80005a2:	2b24      	cmp	r3, #36	; 0x24
 80005a4:	d016      	beq.n	80005d4 <d_source_name+0x78>
 80005a6:	6963      	ldr	r3, [r4, #20]
 80005a8:	69a2      	ldr	r2, [r4, #24]
 80005aa:	4293      	cmp	r3, r2
 80005ac:	da0f      	bge.n	80005ce <d_source_name+0x72>
 80005ae:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 80005b2:	6921      	ldr	r1, [r4, #16]
 80005b4:	3301      	adds	r3, #1
 80005b6:	0092      	lsls	r2, r2, #2
 80005b8:	6163      	str	r3, [r4, #20]
 80005ba:	188b      	adds	r3, r1, r2
 80005bc:	d007      	beq.n	80005ce <d_source_name+0x72>
 80005be:	b135      	cbz	r5, 80005ce <d_source_name+0x72>
 80005c0:	2000      	movs	r0, #0
 80005c2:	5488      	strb	r0, [r1, r2]
 80005c4:	4618      	mov	r0, r3
 80005c6:	605d      	str	r5, [r3, #4]
 80005c8:	609e      	str	r6, [r3, #8]
 80005ca:	62e0      	str	r0, [r4, #44]	; 0x2c
 80005cc:	bd70      	pop	{r4, r5, r6, pc}
 80005ce:	2000      	movs	r0, #0
 80005d0:	62e0      	str	r0, [r4, #44]	; 0x2c
 80005d2:	bd70      	pop	{r4, r5, r6, pc}
 80005d4:	7a6b      	ldrb	r3, [r5, #9]
 80005d6:	2b4e      	cmp	r3, #78	; 0x4e
 80005d8:	d1e5      	bne.n	80005a6 <d_source_name+0x4a>
 80005da:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80005dc:	6962      	ldr	r2, [r4, #20]
 80005de:	69a1      	ldr	r1, [r4, #24]
 80005e0:	3316      	adds	r3, #22
 80005e2:	1b9e      	subs	r6, r3, r6
 80005e4:	428a      	cmp	r2, r1
 80005e6:	6326      	str	r6, [r4, #48]	; 0x30
 80005e8:	daf1      	bge.n	80005ce <d_source_name+0x72>
 80005ea:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 80005ee:	6921      	ldr	r1, [r4, #16]
 80005f0:	009b      	lsls	r3, r3, #2
 80005f2:	3201      	adds	r2, #1
 80005f4:	18c8      	adds	r0, r1, r3
 80005f6:	6162      	str	r2, [r4, #20]
 80005f8:	d0e9      	beq.n	80005ce <d_source_name+0x72>
 80005fa:	2500      	movs	r5, #0
 80005fc:	54cd      	strb	r5, [r1, r3]
 80005fe:	4a04      	ldr	r2, [pc, #16]	; (8000610 <d_source_name+0xb4>)
 8000600:	6042      	str	r2, [r0, #4]
 8000602:	2315      	movs	r3, #21
 8000604:	6083      	str	r3, [r0, #8]
 8000606:	e7e3      	b.n	80005d0 <d_source_name+0x74>
 8000608:	2000      	movs	r0, #0
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	080110a0 	.word	0x080110a0
 8000610:	080110ac 	.word	0x080110ac

08000614 <d_abi_tags>:
 8000614:	b538      	push	{r3, r4, r5, lr}
 8000616:	68c3      	ldr	r3, [r0, #12]
 8000618:	781a      	ldrb	r2, [r3, #0]
 800061a:	2a42      	cmp	r2, #66	; 0x42
 800061c:	460d      	mov	r5, r1
 800061e:	d110      	bne.n	8000642 <d_abi_tags+0x2e>
 8000620:	4604      	mov	r4, r0
 8000622:	3301      	adds	r3, #1
 8000624:	60e3      	str	r3, [r4, #12]
 8000626:	4620      	mov	r0, r4
 8000628:	f7ff ff98 	bl	800055c <d_source_name>
 800062c:	462a      	mov	r2, r5
 800062e:	4603      	mov	r3, r0
 8000630:	214a      	movs	r1, #74	; 0x4a
 8000632:	4620      	mov	r0, r4
 8000634:	f7ff fdcc 	bl	80001d0 <d_make_comp>
 8000638:	68e3      	ldr	r3, [r4, #12]
 800063a:	781a      	ldrb	r2, [r3, #0]
 800063c:	2a42      	cmp	r2, #66	; 0x42
 800063e:	4605      	mov	r5, r0
 8000640:	d0ef      	beq.n	8000622 <d_abi_tags+0xe>
 8000642:	4628      	mov	r0, r5
 8000644:	bd38      	pop	{r3, r4, r5, pc}
 8000646:	bf00      	nop

08000648 <d_substitution>:
 8000648:	68c2      	ldr	r2, [r0, #12]
 800064a:	7813      	ldrb	r3, [r2, #0]
 800064c:	2b53      	cmp	r3, #83	; 0x53
 800064e:	d002      	beq.n	8000656 <d_substitution+0xe>
 8000650:	2100      	movs	r1, #0
 8000652:	4608      	mov	r0, r1
 8000654:	4770      	bx	lr
 8000656:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800065a:	1c53      	adds	r3, r2, #1
 800065c:	60c3      	str	r3, [r0, #12]
 800065e:	7853      	ldrb	r3, [r2, #1]
 8000660:	b18b      	cbz	r3, 8000686 <d_substitution+0x3e>
 8000662:	1c93      	adds	r3, r2, #2
 8000664:	60c3      	str	r3, [r0, #12]
 8000666:	7854      	ldrb	r4, [r2, #1]
 8000668:	2c5f      	cmp	r4, #95	; 0x5f
 800066a:	d12d      	bne.n	80006c8 <d_substitution+0x80>
 800066c:	2300      	movs	r3, #0
 800066e:	6a02      	ldr	r2, [r0, #32]
 8000670:	4293      	cmp	r3, r2
 8000672:	d21c      	bcs.n	80006ae <d_substitution+0x66>
 8000674:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8000676:	69c1      	ldr	r1, [r0, #28]
 8000678:	3201      	adds	r2, #1
 800067a:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 800067e:	6282      	str	r2, [r0, #40]	; 0x28
 8000680:	4608      	mov	r0, r1
 8000682:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000686:	461c      	mov	r4, r3
 8000688:	6883      	ldr	r3, [r0, #8]
 800068a:	f003 0308 	and.w	r3, r3, #8
 800068e:	2b00      	cmp	r3, #0
 8000690:	bf14      	ite	ne
 8000692:	2501      	movne	r5, #1
 8000694:	2500      	moveq	r5, #0
 8000696:	d00e      	beq.n	80006b6 <d_substitution+0x6e>
 8000698:	4b4d      	ldr	r3, [pc, #308]	; (80007d0 <d_substitution+0x188>)
 800069a:	2274      	movs	r2, #116	; 0x74
 800069c:	f103 01a8 	add.w	r1, r3, #168	; 0xa8
 80006a0:	e001      	b.n	80006a6 <d_substitution+0x5e>
 80006a2:	f813 2f1c 	ldrb.w	r2, [r3, #28]!
 80006a6:	4294      	cmp	r4, r2
 80006a8:	d037      	beq.n	800071a <d_substitution+0xd2>
 80006aa:	428b      	cmp	r3, r1
 80006ac:	d1f9      	bne.n	80006a2 <d_substitution+0x5a>
 80006ae:	2100      	movs	r1, #0
 80006b0:	4608      	mov	r0, r1
 80006b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80006b6:	2900      	cmp	r1, #0
 80006b8:	d0ee      	beq.n	8000698 <d_substitution+0x50>
 80006ba:	68c3      	ldr	r3, [r0, #12]
 80006bc:	781b      	ldrb	r3, [r3, #0]
 80006be:	3b43      	subs	r3, #67	; 0x43
 80006c0:	2b01      	cmp	r3, #1
 80006c2:	bf98      	it	ls
 80006c4:	2501      	movls	r5, #1
 80006c6:	e7e7      	b.n	8000698 <d_substitution+0x50>
 80006c8:	f1a4 0530 	sub.w	r5, r4, #48	; 0x30
 80006cc:	b2eb      	uxtb	r3, r5
 80006ce:	2b09      	cmp	r3, #9
 80006d0:	d879      	bhi.n	80007c6 <d_substitution+0x17e>
 80006d2:	2100      	movs	r1, #0
 80006d4:	e00d      	b.n	80006f2 <d_substitution+0xaa>
 80006d6:	3b30      	subs	r3, #48	; 0x30
 80006d8:	4299      	cmp	r1, r3
 80006da:	d8e8      	bhi.n	80006ae <d_substitution+0x66>
 80006dc:	68c2      	ldr	r2, [r0, #12]
 80006de:	7814      	ldrb	r4, [r2, #0]
 80006e0:	1c51      	adds	r1, r2, #1
 80006e2:	b11c      	cbz	r4, 80006ec <d_substitution+0xa4>
 80006e4:	60c1      	str	r1, [r0, #12]
 80006e6:	7814      	ldrb	r4, [r2, #0]
 80006e8:	2c5f      	cmp	r4, #95	; 0x5f
 80006ea:	d014      	beq.n	8000716 <d_substitution+0xce>
 80006ec:	f1a4 0530 	sub.w	r5, r4, #48	; 0x30
 80006f0:	4619      	mov	r1, r3
 80006f2:	b2ed      	uxtb	r5, r5
 80006f4:	f1a4 0241 	sub.w	r2, r4, #65	; 0x41
 80006f8:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
 80006fc:	2d09      	cmp	r5, #9
 80006fe:	b2d2      	uxtb	r2, r2
 8000700:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8000704:	d9e7      	bls.n	80006d6 <d_substitution+0x8e>
 8000706:	2a19      	cmp	r2, #25
 8000708:	d8d1      	bhi.n	80006ae <d_substitution+0x66>
 800070a:	eb01 02c1 	add.w	r2, r1, r1, lsl #3
 800070e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8000712:	3b37      	subs	r3, #55	; 0x37
 8000714:	e7e0      	b.n	80006d8 <d_substitution+0x90>
 8000716:	3301      	adds	r3, #1
 8000718:	e7a9      	b.n	800066e <d_substitution+0x26>
 800071a:	695c      	ldr	r4, [r3, #20]
 800071c:	2c00      	cmp	r4, #0
 800071e:	d049      	beq.n	80007b4 <d_substitution+0x16c>
 8000720:	6942      	ldr	r2, [r0, #20]
 8000722:	6981      	ldr	r1, [r0, #24]
 8000724:	428a      	cmp	r2, r1
 8000726:	da43      	bge.n	80007b0 <d_substitution+0x168>
 8000728:	eb02 0642 	add.w	r6, r2, r2, lsl #1
 800072c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8000730:	f8d3 8018 	ldr.w	r8, [r3, #24]
 8000734:	00b6      	lsls	r6, r6, #2
 8000736:	3201      	adds	r2, #1
 8000738:	eb1e 0706 	adds.w	r7, lr, r6
 800073c:	6142      	str	r2, [r0, #20]
 800073e:	d040      	beq.n	80007c2 <d_substitution+0x17a>
 8000740:	f04f 0c18 	mov.w	ip, #24
 8000744:	f80e c006 	strb.w	ip, [lr, r6]
 8000748:	463e      	mov	r6, r7
 800074a:	607c      	str	r4, [r7, #4]
 800074c:	f8c7 8008 	str.w	r8, [r7, #8]
 8000750:	62c6      	str	r6, [r0, #44]	; 0x2c
 8000752:	b345      	cbz	r5, 80007a6 <d_substitution+0x15e>
 8000754:	68de      	ldr	r6, [r3, #12]
 8000756:	691c      	ldr	r4, [r3, #16]
 8000758:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800075a:	4291      	cmp	r1, r2
 800075c:	4423      	add	r3, r4
 800075e:	6303      	str	r3, [r0, #48]	; 0x30
 8000760:	dd24      	ble.n	80007ac <d_substitution+0x164>
 8000762:	eb02 0142 	add.w	r1, r2, r2, lsl #1
 8000766:	6905      	ldr	r5, [r0, #16]
 8000768:	0089      	lsls	r1, r1, #2
 800076a:	3201      	adds	r2, #1
 800076c:	186b      	adds	r3, r5, r1
 800076e:	6142      	str	r2, [r0, #20]
 8000770:	d025      	beq.n	80007be <d_substitution+0x176>
 8000772:	2218      	movs	r2, #24
 8000774:	546a      	strb	r2, [r5, r1]
 8000776:	4619      	mov	r1, r3
 8000778:	605e      	str	r6, [r3, #4]
 800077a:	609c      	str	r4, [r3, #8]
 800077c:	68c3      	ldr	r3, [r0, #12]
 800077e:	781b      	ldrb	r3, [r3, #0]
 8000780:	2b42      	cmp	r3, #66	; 0x42
 8000782:	f47f af7d 	bne.w	8000680 <d_substitution+0x38>
 8000786:	4604      	mov	r4, r0
 8000788:	f7ff ff44 	bl	8000614 <d_abi_tags>
 800078c:	2800      	cmp	r0, #0
 800078e:	d08e      	beq.n	80006ae <d_substitution+0x66>
 8000790:	6a23      	ldr	r3, [r4, #32]
 8000792:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8000794:	4293      	cmp	r3, r2
 8000796:	da10      	bge.n	80007ba <d_substitution+0x172>
 8000798:	69e1      	ldr	r1, [r4, #28]
 800079a:	1c5a      	adds	r2, r3, #1
 800079c:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 80007a0:	4601      	mov	r1, r0
 80007a2:	6222      	str	r2, [r4, #32]
 80007a4:	e76c      	b.n	8000680 <d_substitution+0x38>
 80007a6:	685e      	ldr	r6, [r3, #4]
 80007a8:	689c      	ldr	r4, [r3, #8]
 80007aa:	e7d5      	b.n	8000758 <d_substitution+0x110>
 80007ac:	2100      	movs	r1, #0
 80007ae:	e7e5      	b.n	800077c <d_substitution+0x134>
 80007b0:	2600      	movs	r6, #0
 80007b2:	e7cd      	b.n	8000750 <d_substitution+0x108>
 80007b4:	6981      	ldr	r1, [r0, #24]
 80007b6:	6942      	ldr	r2, [r0, #20]
 80007b8:	e7cb      	b.n	8000752 <d_substitution+0x10a>
 80007ba:	4601      	mov	r1, r0
 80007bc:	e760      	b.n	8000680 <d_substitution+0x38>
 80007be:	4619      	mov	r1, r3
 80007c0:	e7dc      	b.n	800077c <d_substitution+0x134>
 80007c2:	463e      	mov	r6, r7
 80007c4:	e7c4      	b.n	8000750 <d_substitution+0x108>
 80007c6:	f1a4 0341 	sub.w	r3, r4, #65	; 0x41
 80007ca:	2b19      	cmp	r3, #25
 80007cc:	d981      	bls.n	80006d2 <d_substitution+0x8a>
 80007ce:	e75b      	b.n	8000688 <d_substitution+0x40>
 80007d0:	080106e8 	.word	0x080106e8

080007d4 <d_call_offset>:
 80007d4:	b538      	push	{r3, r4, r5, lr}
 80007d6:	4604      	mov	r4, r0
 80007d8:	b929      	cbnz	r1, 80007e6 <d_call_offset+0x12>
 80007da:	68c3      	ldr	r3, [r0, #12]
 80007dc:	781a      	ldrb	r2, [r3, #0]
 80007de:	b132      	cbz	r2, 80007ee <d_call_offset+0x1a>
 80007e0:	1c5a      	adds	r2, r3, #1
 80007e2:	60c2      	str	r2, [r0, #12]
 80007e4:	7819      	ldrb	r1, [r3, #0]
 80007e6:	2968      	cmp	r1, #104	; 0x68
 80007e8:	d019      	beq.n	800081e <d_call_offset+0x4a>
 80007ea:	2976      	cmp	r1, #118	; 0x76
 80007ec:	d001      	beq.n	80007f2 <d_call_offset+0x1e>
 80007ee:	2000      	movs	r0, #0
 80007f0:	bd38      	pop	{r3, r4, r5, pc}
 80007f2:	f104 050c 	add.w	r5, r4, #12
 80007f6:	4628      	mov	r0, r5
 80007f8:	f7ff fe30 	bl	800045c <d_number.isra.0>
 80007fc:	68e3      	ldr	r3, [r4, #12]
 80007fe:	781a      	ldrb	r2, [r3, #0]
 8000800:	2a5f      	cmp	r2, #95	; 0x5f
 8000802:	d1f4      	bne.n	80007ee <d_call_offset+0x1a>
 8000804:	3301      	adds	r3, #1
 8000806:	60e3      	str	r3, [r4, #12]
 8000808:	4628      	mov	r0, r5
 800080a:	f7ff fe27 	bl	800045c <d_number.isra.0>
 800080e:	68e3      	ldr	r3, [r4, #12]
 8000810:	781a      	ldrb	r2, [r3, #0]
 8000812:	2a5f      	cmp	r2, #95	; 0x5f
 8000814:	d1eb      	bne.n	80007ee <d_call_offset+0x1a>
 8000816:	3301      	adds	r3, #1
 8000818:	60e3      	str	r3, [r4, #12]
 800081a:	2001      	movs	r0, #1
 800081c:	bd38      	pop	{r3, r4, r5, pc}
 800081e:	f104 000c 	add.w	r0, r4, #12
 8000822:	f7ff fe1b 	bl	800045c <d_number.isra.0>
 8000826:	e7f2      	b.n	800080e <d_call_offset+0x3a>

08000828 <d_lookup_template_argument.isra.6>:
 8000828:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
 800082c:	4602      	mov	r2, r0
 800082e:	b1c3      	cbz	r3, 8000862 <d_lookup_template_argument.isra.6+0x3a>
 8000830:	685a      	ldr	r2, [r3, #4]
 8000832:	680b      	ldr	r3, [r1, #0]
 8000834:	6890      	ldr	r0, [r2, #8]
 8000836:	b170      	cbz	r0, 8000856 <d_lookup_template_argument.isra.6+0x2e>
 8000838:	7802      	ldrb	r2, [r0, #0]
 800083a:	2a2f      	cmp	r2, #47	; 0x2f
 800083c:	d10d      	bne.n	800085a <d_lookup_template_argument.isra.6+0x32>
 800083e:	2b00      	cmp	r3, #0
 8000840:	dc04      	bgt.n	800084c <d_lookup_template_argument.isra.6+0x24>
 8000842:	e009      	b.n	8000858 <d_lookup_template_argument.isra.6+0x30>
 8000844:	7802      	ldrb	r2, [r0, #0]
 8000846:	2a2f      	cmp	r2, #47	; 0x2f
 8000848:	d107      	bne.n	800085a <d_lookup_template_argument.isra.6+0x32>
 800084a:	b143      	cbz	r3, 800085e <d_lookup_template_argument.isra.6+0x36>
 800084c:	6880      	ldr	r0, [r0, #8]
 800084e:	3b01      	subs	r3, #1
 8000850:	2800      	cmp	r0, #0
 8000852:	d1f7      	bne.n	8000844 <d_lookup_template_argument.isra.6+0x1c>
 8000854:	4770      	bx	lr
 8000856:	4770      	bx	lr
 8000858:	d001      	beq.n	800085e <d_lookup_template_argument.isra.6+0x36>
 800085a:	2000      	movs	r0, #0
 800085c:	4770      	bx	lr
 800085e:	6840      	ldr	r0, [r0, #4]
 8000860:	4770      	bx	lr
 8000862:	2101      	movs	r1, #1
 8000864:	4618      	mov	r0, r3
 8000866:	f8c2 1118 	str.w	r1, [r2, #280]	; 0x118
 800086a:	4770      	bx	lr

0800086c <d_find_pack>:
 800086c:	2900      	cmp	r1, #0
 800086e:	d041      	beq.n	80008f4 <d_find_pack+0x88>
 8000870:	b538      	push	{r3, r4, r5, lr}
 8000872:	4605      	mov	r5, r0
 8000874:	460c      	mov	r4, r1
 8000876:	7823      	ldrb	r3, [r4, #0]
 8000878:	2b4a      	cmp	r3, #74	; 0x4a
 800087a:	d827      	bhi.n	80008cc <d_find_pack+0x60>
 800087c:	e8df f003 	tbb	[pc, r3]
 8000880:	2626262e 	.word	0x2626262e
 8000884:	2b2e3026 	.word	0x2b2e3026
 8000888:	2626262b 	.word	0x2626262b
 800088c:	26262626 	.word	0x26262626
 8000890:	26262626 	.word	0x26262626
 8000894:	26262626 	.word	0x26262626
 8000898:	2626262e 	.word	0x2626262e
 800089c:	26262626 	.word	0x26262626
 80008a0:	26262626 	.word	0x26262626
 80008a4:	2e262626 	.word	0x2e262626
 80008a8:	26262626 	.word	0x26262626
 80008ac:	26262626 	.word	0x26262626
 80008b0:	262b2e26 	.word	0x262b2e26
 80008b4:	26262626 	.word	0x26262626
 80008b8:	26262626 	.word	0x26262626
 80008bc:	2e262626 	.word	0x2e262626
 80008c0:	26262626 	.word	0x26262626
 80008c4:	262e262e 	.word	0x262e262e
 80008c8:	2e26      	.short	0x2e26
 80008ca:	2e          	.byte	0x2e
 80008cb:	00          	.byte	0x00
 80008cc:	6861      	ldr	r1, [r4, #4]
 80008ce:	4628      	mov	r0, r5
 80008d0:	f7ff ffcc 	bl	800086c <d_find_pack>
 80008d4:	b918      	cbnz	r0, 80008de <d_find_pack+0x72>
 80008d6:	68a4      	ldr	r4, [r4, #8]
 80008d8:	2c00      	cmp	r4, #0
 80008da:	d1cc      	bne.n	8000876 <d_find_pack+0xa>
 80008dc:	2000      	movs	r0, #0
 80008de:	bd38      	pop	{r3, r4, r5, pc}
 80008e0:	1d21      	adds	r1, r4, #4
 80008e2:	4628      	mov	r0, r5
 80008e4:	f7ff ffa0 	bl	8000828 <d_lookup_template_argument.isra.6>
 80008e8:	2800      	cmp	r0, #0
 80008ea:	d0f7      	beq.n	80008dc <d_find_pack+0x70>
 80008ec:	7803      	ldrb	r3, [r0, #0]
 80008ee:	2b2f      	cmp	r3, #47	; 0x2f
 80008f0:	d1f4      	bne.n	80008dc <d_find_pack+0x70>
 80008f2:	bd38      	pop	{r3, r4, r5, pc}
 80008f4:	2000      	movs	r0, #0
 80008f6:	4770      	bx	lr

080008f8 <d_growable_string_callback_adapter>:
 80008f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80008fa:	6853      	ldr	r3, [r2, #4]
 80008fc:	6894      	ldr	r4, [r2, #8]
 80008fe:	3301      	adds	r3, #1
 8000900:	440b      	add	r3, r1
 8000902:	42a3      	cmp	r3, r4
 8000904:	b083      	sub	sp, #12
 8000906:	4615      	mov	r5, r2
 8000908:	460e      	mov	r6, r1
 800090a:	4607      	mov	r7, r0
 800090c:	d813      	bhi.n	8000936 <d_growable_string_callback_adapter+0x3e>
 800090e:	68ec      	ldr	r4, [r5, #12]
 8000910:	b10c      	cbz	r4, 8000916 <d_growable_string_callback_adapter+0x1e>
 8000912:	b003      	add	sp, #12
 8000914:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000916:	e895 0009 	ldmia.w	r5, {r0, r3}
 800091a:	4632      	mov	r2, r6
 800091c:	4639      	mov	r1, r7
 800091e:	4418      	add	r0, r3
 8000920:	f00c fd8b 	bl	800d43a <memcpy>
 8000924:	682b      	ldr	r3, [r5, #0]
 8000926:	686a      	ldr	r2, [r5, #4]
 8000928:	4433      	add	r3, r6
 800092a:	549c      	strb	r4, [r3, r2]
 800092c:	686b      	ldr	r3, [r5, #4]
 800092e:	441e      	add	r6, r3
 8000930:	606e      	str	r6, [r5, #4]
 8000932:	b003      	add	sp, #12
 8000934:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000936:	68d2      	ldr	r2, [r2, #12]
 8000938:	2a00      	cmp	r2, #0
 800093a:	d1ea      	bne.n	8000912 <d_growable_string_callback_adapter+0x1a>
 800093c:	b91c      	cbnz	r4, 8000946 <d_growable_string_callback_adapter+0x4e>
 800093e:	2b02      	cmp	r3, #2
 8000940:	f04f 0402 	mov.w	r4, #2
 8000944:	d902      	bls.n	800094c <d_growable_string_callback_adapter+0x54>
 8000946:	0064      	lsls	r4, r4, #1
 8000948:	42a3      	cmp	r3, r4
 800094a:	d8fc      	bhi.n	8000946 <d_growable_string_callback_adapter+0x4e>
 800094c:	4621      	mov	r1, r4
 800094e:	6828      	ldr	r0, [r5, #0]
 8000950:	f00c fdda 	bl	800d508 <realloc>
 8000954:	b110      	cbz	r0, 800095c <d_growable_string_callback_adapter+0x64>
 8000956:	6028      	str	r0, [r5, #0]
 8000958:	60ac      	str	r4, [r5, #8]
 800095a:	e7d8      	b.n	800090e <d_growable_string_callback_adapter+0x16>
 800095c:	9001      	str	r0, [sp, #4]
 800095e:	6828      	ldr	r0, [r5, #0]
 8000960:	f00c fb34 	bl	800cfcc <free>
 8000964:	9b01      	ldr	r3, [sp, #4]
 8000966:	602b      	str	r3, [r5, #0]
 8000968:	2201      	movs	r2, #1
 800096a:	606b      	str	r3, [r5, #4]
 800096c:	60ab      	str	r3, [r5, #8]
 800096e:	60ea      	str	r2, [r5, #12]
 8000970:	e7cf      	b.n	8000912 <d_growable_string_callback_adapter+0x1a>
 8000972:	bf00      	nop

08000974 <d_print_comp_inner>:
 8000974:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000978:	4604      	mov	r4, r0
 800097a:	b095      	sub	sp, #84	; 0x54
 800097c:	2a00      	cmp	r2, #0
 800097e:	f000 80c3 	beq.w	8000b08 <d_print_comp_inner+0x194>
 8000982:	f8d0 3118 	ldr.w	r3, [r0, #280]	; 0x118
 8000986:	2b00      	cmp	r3, #0
 8000988:	f040 80b6 	bne.w	8000af8 <d_print_comp_inner+0x184>
 800098c:	7813      	ldrb	r3, [r2, #0]
 800098e:	460f      	mov	r7, r1
 8000990:	4615      	mov	r5, r2
 8000992:	2b4b      	cmp	r3, #75	; 0x4b
 8000994:	f201 81eb 	bhi.w	8001d6e <d_print_comp_inner+0x13fa>
 8000998:	e8df f013 	tbh	[pc, r3, lsl #1]
 800099c:	094c096d 	.word	0x094c096d
 80009a0:	08bf094c 	.word	0x08bf094c
 80009a4:	09cc087b 	.word	0x09cc087b
 80009a8:	09e409a2 	.word	0x09e409a2
 80009ac:	085407c7 	.word	0x085407c7
 80009b0:	0806082d 	.word	0x0806082d
 80009b4:	05d607df 	.word	0x05d607df
 80009b8:	057a05af 	.word	0x057a05af
 80009bc:	07100553 	.word	0x07100553
 80009c0:	06c206e9 	.word	0x06c206e9
 80009c4:	0674069b 	.word	0x0674069b
 80009c8:	0626064d 	.word	0x0626064d
 80009cc:	07ad05fd 	.word	0x07ad05fd
 80009d0:	07ad07ad 	.word	0x07ad07ad
 80009d4:	07a807a8 	.word	0x07a807a8
 80009d8:	07a807a8 	.word	0x07a807a8
 80009dc:	07a807a8 	.word	0x07a807a8
 80009e0:	077607a8 	.word	0x077607a8
 80009e4:	07a80776 	.word	0x07a80776
 80009e8:	073707a8 	.word	0x073707a8
 80009ec:	04fd07da 	.word	0x04fd07da
 80009f0:	04760491 	.word	0x04760491
 80009f4:	047603d4 	.word	0x047603d4
 80009f8:	03940394 	.word	0x03940394
 80009fc:	03470371 	.word	0x03470371
 8000a00:	02f90320 	.word	0x02f90320
 8000a04:	02c702f5 	.word	0x02c702f5
 8000a08:	0472004c 	.word	0x0472004c
 8000a0c:	04170512 	.word	0x04170512
 8000a10:	04420417 	.word	0x04420417
 8000a14:	041b0442 	.word	0x041b0442
 8000a18:	02b102be 	.word	0x02b102be
 8000a1c:	0233025a 	.word	0x0233025a
 8000a20:	01d001f7 	.word	0x01d001f7
 8000a24:	09e901a9 	.word	0x09e901a9
 8000a28:	028a0183 	.word	0x028a0183
 8000a2c:	0110015c 	.word	0x0110015c
 8000a30:	00bc00e6 	.word	0x00bc00e6
 8000a34:	68ae      	ldr	r6, [r5, #8]
 8000a36:	7833      	ldrb	r3, [r6, #0]
 8000a38:	2b37      	cmp	r3, #55	; 0x37
 8000a3a:	d165      	bne.n	8000b08 <d_print_comp_inner+0x194>
 8000a3c:	686a      	ldr	r2, [r5, #4]
 8000a3e:	6853      	ldr	r3, [r2, #4]
 8000a40:	6819      	ldr	r1, [r3, #0]
 8000a42:	7848      	ldrb	r0, [r1, #1]
 8000a44:	2863      	cmp	r0, #99	; 0x63
 8000a46:	f002 808b 	beq.w	8002b60 <d_print_comp_inner+0x21ec>
 8000a4a:	7811      	ldrb	r1, [r2, #0]
 8000a4c:	2931      	cmp	r1, #49	; 0x31
 8000a4e:	f002 8160 	beq.w	8002d12 <d_print_comp_inner+0x239e>
 8000a52:	6853      	ldr	r3, [r2, #4]
 8000a54:	49d1      	ldr	r1, [pc, #836]	; (8000d9c <d_print_comp_inner+0x428>)
 8000a56:	6818      	ldr	r0, [r3, #0]
 8000a58:	f007 fd42 	bl	80084e0 <strcmp>
 8000a5c:	6872      	ldr	r2, [r6, #4]
 8000a5e:	b918      	cbnz	r0, 8000a68 <d_print_comp_inner+0xf4>
 8000a60:	7813      	ldrb	r3, [r2, #0]
 8000a62:	2b03      	cmp	r3, #3
 8000a64:	f002 81ef 	beq.w	8002e46 <d_print_comp_inner+0x24d2>
 8000a68:	4639      	mov	r1, r7
 8000a6a:	4620      	mov	r0, r4
 8000a6c:	f003 fa48 	bl	8003f00 <d_print_subexpr>
 8000a70:	f8d5 8004 	ldr.w	r8, [r5, #4]
 8000a74:	49ca      	ldr	r1, [pc, #808]	; (8000da0 <d_print_comp_inner+0x42c>)
 8000a76:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8000a7a:	f8d3 9000 	ldr.w	r9, [r3]
 8000a7e:	4648      	mov	r0, r9
 8000a80:	f007 fd2e 	bl	80084e0 <strcmp>
 8000a84:	4606      	mov	r6, r0
 8000a86:	2800      	cmp	r0, #0
 8000a88:	f041 87f0 	bne.w	8002a6c <d_print_comp_inner+0x20f8>
 8000a8c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8000a90:	29ff      	cmp	r1, #255	; 0xff
 8000a92:	f002 827e 	beq.w	8002f92 <d_print_comp_inner+0x261e>
 8000a96:	1c4a      	adds	r2, r1, #1
 8000a98:	235b      	movs	r3, #91	; 0x5b
 8000a9a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8000a9e:	5463      	strb	r3, [r4, r1]
 8000aa0:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8000aa4:	68ab      	ldr	r3, [r5, #8]
 8000aa6:	4639      	mov	r1, r7
 8000aa8:	689a      	ldr	r2, [r3, #8]
 8000aaa:	4620      	mov	r0, r4
 8000aac:	f002 fb7c 	bl	80031a8 <d_print_comp>
 8000ab0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8000ab4:	29ff      	cmp	r1, #255	; 0xff
 8000ab6:	f002 827c 	beq.w	8002fb2 <d_print_comp_inner+0x263e>
 8000aba:	235d      	movs	r3, #93	; 0x5d
 8000abc:	1c4a      	adds	r2, r1, #1
 8000abe:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8000ac2:	5463      	strb	r3, [r4, r1]
 8000ac4:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8000ac8:	686b      	ldr	r3, [r5, #4]
 8000aca:	781a      	ldrb	r2, [r3, #0]
 8000acc:	2a31      	cmp	r2, #49	; 0x31
 8000ace:	d113      	bne.n	8000af8 <d_print_comp_inner+0x184>
 8000ad0:	685b      	ldr	r3, [r3, #4]
 8000ad2:	689a      	ldr	r2, [r3, #8]
 8000ad4:	2a01      	cmp	r2, #1
 8000ad6:	d10f      	bne.n	8000af8 <d_print_comp_inner+0x184>
 8000ad8:	685b      	ldr	r3, [r3, #4]
 8000ada:	781b      	ldrb	r3, [r3, #0]
 8000adc:	2b3e      	cmp	r3, #62	; 0x3e
 8000ade:	d10b      	bne.n	8000af8 <d_print_comp_inner+0x184>
 8000ae0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8000ae4:	29ff      	cmp	r1, #255	; 0xff
 8000ae6:	f002 8325 	beq.w	8003134 <d_print_comp_inner+0x27c0>
 8000aea:	2329      	movs	r3, #41	; 0x29
 8000aec:	1c4a      	adds	r2, r1, #1
 8000aee:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8000af2:	5463      	strb	r3, [r4, r1]
 8000af4:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8000af8:	b015      	add	sp, #84	; 0x54
 8000afa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000afe:	f1b8 0f00 	cmp.w	r8, #0
 8000b02:	d001      	beq.n	8000b08 <d_print_comp_inner+0x194>
 8000b04:	f8c4 6110 	str.w	r6, [r4, #272]	; 0x110
 8000b08:	2301      	movs	r3, #1
 8000b0a:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8000b0e:	b015      	add	sp, #84	; 0x54
 8000b10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000b14:	4ea3      	ldr	r6, [pc, #652]	; (8000da4 <d_print_comp_inner+0x430>)
 8000b16:	686a      	ldr	r2, [r5, #4]
 8000b18:	f002 fb46 	bl	80031a8 <d_print_comp>
 8000b1c:	f106 0a08 	add.w	sl, r6, #8
 8000b20:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8000b24:	f04f 0900 	mov.w	r9, #0
 8000b28:	e00a      	b.n	8000b40 <d_print_comp_inner+0x1cc>
 8000b2a:	460b      	mov	r3, r1
 8000b2c:	3101      	adds	r1, #1
 8000b2e:	45b2      	cmp	sl, r6
 8000b30:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8000b34:	f804 8003 	strb.w	r8, [r4, r3]
 8000b38:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8000b3c:	f001 8299 	beq.w	8002072 <d_print_comp_inner+0x16fe>
 8000b40:	29ff      	cmp	r1, #255	; 0xff
 8000b42:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 8000b46:	d1f0      	bne.n	8000b2a <d_print_comp_inner+0x1b6>
 8000b48:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000b4c:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8000b50:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8000b54:	4620      	mov	r0, r4
 8000b56:	4798      	blx	r3
 8000b58:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8000b5c:	3301      	adds	r3, #1
 8000b5e:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8000b62:	2101      	movs	r1, #1
 8000b64:	2300      	movs	r3, #0
 8000b66:	e7e2      	b.n	8000b2e <d_print_comp_inner+0x1ba>
 8000b68:	4e8f      	ldr	r6, [pc, #572]	; (8000da8 <d_print_comp_inner+0x434>)
 8000b6a:	686a      	ldr	r2, [r5, #4]
 8000b6c:	f002 fb1c 	bl	80031a8 <d_print_comp>
 8000b70:	f106 0a05 	add.w	sl, r6, #5
 8000b74:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8000b78:	f04f 0900 	mov.w	r9, #0
 8000b7c:	e00a      	b.n	8000b94 <d_print_comp_inner+0x220>
 8000b7e:	460b      	mov	r3, r1
 8000b80:	3101      	adds	r1, #1
 8000b82:	45b2      	cmp	sl, r6
 8000b84:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8000b88:	f804 8003 	strb.w	r8, [r4, r3]
 8000b8c:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8000b90:	f001 8247 	beq.w	8002022 <d_print_comp_inner+0x16ae>
 8000b94:	29ff      	cmp	r1, #255	; 0xff
 8000b96:	f816 8b01 	ldrb.w	r8, [r6], #1
 8000b9a:	d1f0      	bne.n	8000b7e <d_print_comp_inner+0x20a>
 8000b9c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000ba0:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8000ba4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8000ba8:	4620      	mov	r0, r4
 8000baa:	4798      	blx	r3
 8000bac:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8000bb0:	3301      	adds	r3, #1
 8000bb2:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8000bb6:	2101      	movs	r1, #1
 8000bb8:	2300      	movs	r3, #0
 8000bba:	e7e2      	b.n	8000b82 <d_print_comp_inner+0x20e>
 8000bbc:	6869      	ldr	r1, [r5, #4]
 8000bbe:	f7ff fe55 	bl	800086c <d_find_pack>
 8000bc2:	f04f 0900 	mov.w	r9, #0
 8000bc6:	2800      	cmp	r0, #0
 8000bc8:	f002 814b 	beq.w	8002e62 <d_print_comp_inner+0x24ee>
 8000bcc:	7803      	ldrb	r3, [r0, #0]
 8000bce:	2b2f      	cmp	r3, #47	; 0x2f
 8000bd0:	f041 8315 	bne.w	80021fe <d_print_comp_inner+0x188a>
 8000bd4:	6843      	ldr	r3, [r0, #4]
 8000bd6:	2b00      	cmp	r3, #0
 8000bd8:	f001 8311 	beq.w	80021fe <d_print_comp_inner+0x188a>
 8000bdc:	6880      	ldr	r0, [r0, #8]
 8000bde:	f109 0901 	add.w	r9, r9, #1
 8000be2:	2800      	cmp	r0, #0
 8000be4:	d1f2      	bne.n	8000bcc <d_print_comp_inner+0x258>
 8000be6:	686b      	ldr	r3, [r5, #4]
 8000be8:	9300      	str	r3, [sp, #0]
 8000bea:	f04f 0b00 	mov.w	fp, #0
 8000bee:	f109 33ff 	add.w	r3, r9, #4294967295
 8000bf2:	46da      	mov	sl, fp
 8000bf4:	9301      	str	r3, [sp, #4]
 8000bf6:	f8c4 b11c 	str.w	fp, [r4, #284]	; 0x11c
 8000bfa:	9a00      	ldr	r2, [sp, #0]
 8000bfc:	4639      	mov	r1, r7
 8000bfe:	4620      	mov	r0, r4
 8000c00:	f002 fad2 	bl	80031a8 <d_print_comp>
 8000c04:	9b01      	ldr	r3, [sp, #4]
 8000c06:	455b      	cmp	r3, fp
 8000c08:	f341 80b6 	ble.w	8001d78 <d_print_comp_inner+0x1404>
 8000c0c:	4d67      	ldr	r5, [pc, #412]	; (8000dac <d_print_comp_inner+0x438>)
 8000c0e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8000c12:	f105 0802 	add.w	r8, r5, #2
 8000c16:	e009      	b.n	8000c2c <d_print_comp_inner+0x2b8>
 8000c18:	460b      	mov	r3, r1
 8000c1a:	3101      	adds	r1, #1
 8000c1c:	45a8      	cmp	r8, r5
 8000c1e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8000c22:	54e6      	strb	r6, [r4, r3]
 8000c24:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8000c28:	f001 80a6 	beq.w	8001d78 <d_print_comp_inner+0x1404>
 8000c2c:	29ff      	cmp	r1, #255	; 0xff
 8000c2e:	f815 6b01 	ldrb.w	r6, [r5], #1
 8000c32:	d1f1      	bne.n	8000c18 <d_print_comp_inner+0x2a4>
 8000c34:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000c38:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 8000c3c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8000c40:	4620      	mov	r0, r4
 8000c42:	4798      	blx	r3
 8000c44:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8000c48:	3301      	adds	r3, #1
 8000c4a:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8000c4e:	2101      	movs	r1, #1
 8000c50:	2300      	movs	r3, #0
 8000c52:	e7e3      	b.n	8000c1c <d_print_comp_inner+0x2a8>
 8000c54:	4e56      	ldr	r6, [pc, #344]	; (8000db0 <d_print_comp_inner+0x43c>)
 8000c56:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8000c5a:	f106 0a1a 	add.w	sl, r6, #26
 8000c5e:	f04f 0900 	mov.w	r9, #0
 8000c62:	e00a      	b.n	8000c7a <d_print_comp_inner+0x306>
 8000c64:	460b      	mov	r3, r1
 8000c66:	3101      	adds	r1, #1
 8000c68:	45b2      	cmp	sl, r6
 8000c6a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8000c6e:	f804 8003 	strb.w	r8, [r4, r3]
 8000c72:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8000c76:	f001 81e7 	beq.w	8002048 <d_print_comp_inner+0x16d4>
 8000c7a:	29ff      	cmp	r1, #255	; 0xff
 8000c7c:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 8000c80:	d1f0      	bne.n	8000c64 <d_print_comp_inner+0x2f0>
 8000c82:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000c86:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8000c8a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8000c8e:	4620      	mov	r0, r4
 8000c90:	4798      	blx	r3
 8000c92:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8000c96:	3301      	adds	r3, #1
 8000c98:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8000c9c:	2101      	movs	r1, #1
 8000c9e:	2300      	movs	r3, #0
 8000ca0:	e7e2      	b.n	8000c68 <d_print_comp_inner+0x2f4>
 8000ca2:	4e44      	ldr	r6, [pc, #272]	; (8000db4 <d_print_comp_inner+0x440>)
 8000ca4:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8000ca8:	f106 090e 	add.w	r9, r6, #14
 8000cac:	f04f 0800 	mov.w	r8, #0
 8000cb0:	e009      	b.n	8000cc6 <d_print_comp_inner+0x352>
 8000cb2:	460b      	mov	r3, r1
 8000cb4:	3101      	adds	r1, #1
 8000cb6:	45b1      	cmp	r9, r6
 8000cb8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8000cbc:	54e7      	strb	r7, [r4, r3]
 8000cbe:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8000cc2:	f001 80b0 	beq.w	8001e26 <d_print_comp_inner+0x14b2>
 8000cc6:	29ff      	cmp	r1, #255	; 0xff
 8000cc8:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8000ccc:	d1f1      	bne.n	8000cb2 <d_print_comp_inner+0x33e>
 8000cce:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000cd2:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8000cd6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8000cda:	4620      	mov	r0, r4
 8000cdc:	4798      	blx	r3
 8000cde:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8000ce2:	3301      	adds	r3, #1
 8000ce4:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8000ce8:	2101      	movs	r1, #1
 8000cea:	2300      	movs	r3, #0
 8000cec:	e7e3      	b.n	8000cb6 <d_print_comp_inner+0x342>
 8000cee:	4e32      	ldr	r6, [pc, #200]	; (8000db8 <d_print_comp_inner+0x444>)
 8000cf0:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8000cf4:	f106 0a08 	add.w	sl, r6, #8
 8000cf8:	f04f 0900 	mov.w	r9, #0
 8000cfc:	e00a      	b.n	8000d14 <d_print_comp_inner+0x3a0>
 8000cfe:	460b      	mov	r3, r1
 8000d00:	3101      	adds	r1, #1
 8000d02:	45b2      	cmp	sl, r6
 8000d04:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8000d08:	f804 8003 	strb.w	r8, [r4, r3]
 8000d0c:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8000d10:	f001 80c5 	beq.w	8001e9e <d_print_comp_inner+0x152a>
 8000d14:	29ff      	cmp	r1, #255	; 0xff
 8000d16:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 8000d1a:	d1f0      	bne.n	8000cfe <d_print_comp_inner+0x38a>
 8000d1c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000d20:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8000d24:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8000d28:	4620      	mov	r0, r4
 8000d2a:	4798      	blx	r3
 8000d2c:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8000d30:	3301      	adds	r3, #1
 8000d32:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8000d36:	2101      	movs	r1, #1
 8000d38:	2300      	movs	r3, #0
 8000d3a:	e7e2      	b.n	8000d02 <d_print_comp_inner+0x38e>
 8000d3c:	4e1f      	ldr	r6, [pc, #124]	; (8000dbc <d_print_comp_inner+0x448>)
 8000d3e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8000d42:	f106 0a1c 	add.w	sl, r6, #28
 8000d46:	f04f 0900 	mov.w	r9, #0
 8000d4a:	e00a      	b.n	8000d62 <d_print_comp_inner+0x3ee>
 8000d4c:	460b      	mov	r3, r1
 8000d4e:	3101      	adds	r1, #1
 8000d50:	45b2      	cmp	sl, r6
 8000d52:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8000d56:	f804 8003 	strb.w	r8, [r4, r3]
 8000d5a:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8000d5e:	f001 805b 	beq.w	8001e18 <d_print_comp_inner+0x14a4>
 8000d62:	29ff      	cmp	r1, #255	; 0xff
 8000d64:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 8000d68:	d1f0      	bne.n	8000d4c <d_print_comp_inner+0x3d8>
 8000d6a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000d6e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8000d72:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8000d76:	4620      	mov	r0, r4
 8000d78:	4798      	blx	r3
 8000d7a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8000d7e:	3301      	adds	r3, #1
 8000d80:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8000d84:	2101      	movs	r1, #1
 8000d86:	2300      	movs	r3, #0
 8000d88:	e7e2      	b.n	8000d50 <d_print_comp_inner+0x3dc>
 8000d8a:	4e0d      	ldr	r6, [pc, #52]	; (8000dc0 <d_print_comp_inner+0x44c>)
 8000d8c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8000d90:	f106 0a1d 	add.w	sl, r6, #29
 8000d94:	f04f 0900 	mov.w	r9, #0
 8000d98:	e01f      	b.n	8000dda <d_print_comp_inner+0x466>
 8000d9a:	bf00      	nop
 8000d9c:	0801127c 	.word	0x0801127c
 8000da0:	08011280 	.word	0x08011280
 8000da4:	0801133f 	.word	0x0801133f
 8000da8:	080110c4 	.word	0x080110c4
 8000dac:	08011254 	.word	0x08011254
 8000db0:	0801121f 	.word	0x0801121f
 8000db4:	0801132f 	.word	0x0801132f
 8000db8:	0801131f 	.word	0x0801131f
 8000dbc:	080112ff 	.word	0x080112ff
 8000dc0:	080112df 	.word	0x080112df
 8000dc4:	460b      	mov	r3, r1
 8000dc6:	3101      	adds	r1, #1
 8000dc8:	45b2      	cmp	sl, r6
 8000dca:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8000dce:	f804 8003 	strb.w	r8, [r4, r3]
 8000dd2:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8000dd6:	f001 80da 	beq.w	8001f8e <d_print_comp_inner+0x161a>
 8000dda:	29ff      	cmp	r1, #255	; 0xff
 8000ddc:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 8000de0:	d1f0      	bne.n	8000dc4 <d_print_comp_inner+0x450>
 8000de2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000de6:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8000dea:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8000dee:	4620      	mov	r0, r4
 8000df0:	4798      	blx	r3
 8000df2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8000df6:	3301      	adds	r3, #1
 8000df8:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8000dfc:	2101      	movs	r1, #1
 8000dfe:	2300      	movs	r3, #0
 8000e00:	e7e2      	b.n	8000dc8 <d_print_comp_inner+0x454>
 8000e02:	4eca      	ldr	r6, [pc, #808]	; (800112c <d_print_comp_inner+0x7b8>)
 8000e04:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8000e08:	f106 0a0a 	add.w	sl, r6, #10
 8000e0c:	f04f 0900 	mov.w	r9, #0
 8000e10:	e00a      	b.n	8000e28 <d_print_comp_inner+0x4b4>
 8000e12:	460b      	mov	r3, r1
 8000e14:	3101      	adds	r1, #1
 8000e16:	45b2      	cmp	sl, r6
 8000e18:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8000e1c:	f804 8003 	strb.w	r8, [r4, r3]
 8000e20:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8000e24:	f000 87e5 	beq.w	8001df2 <d_print_comp_inner+0x147e>
 8000e28:	29ff      	cmp	r1, #255	; 0xff
 8000e2a:	f816 8b01 	ldrb.w	r8, [r6], #1
 8000e2e:	d1f0      	bne.n	8000e12 <d_print_comp_inner+0x49e>
 8000e30:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000e34:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8000e38:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8000e3c:	4620      	mov	r0, r4
 8000e3e:	4798      	blx	r3
 8000e40:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8000e44:	3301      	adds	r3, #1
 8000e46:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8000e4a:	2101      	movs	r1, #1
 8000e4c:	2300      	movs	r3, #0
 8000e4e:	e7e2      	b.n	8000e16 <d_print_comp_inner+0x4a2>
 8000e50:	686a      	ldr	r2, [r5, #4]
 8000e52:	49b7      	ldr	r1, [pc, #732]	; (8001130 <d_print_comp_inner+0x7bc>)
 8000e54:	a804      	add	r0, sp, #16
 8000e56:	f00c fd5d 	bl	800d914 <sprintf>
 8000e5a:	a804      	add	r0, sp, #16
 8000e5c:	f007 fb4a 	bl	80084f4 <strlen>
 8000e60:	2800      	cmp	r0, #0
 8000e62:	f43f ae49 	beq.w	8000af8 <d_print_comp_inner+0x184>
 8000e66:	ad04      	add	r5, sp, #16
 8000e68:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8000e6c:	182f      	adds	r7, r5, r0
 8000e6e:	f04f 0800 	mov.w	r8, #0
 8000e72:	e009      	b.n	8000e88 <d_print_comp_inner+0x514>
 8000e74:	460b      	mov	r3, r1
 8000e76:	3101      	adds	r1, #1
 8000e78:	42af      	cmp	r7, r5
 8000e7a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8000e7e:	54e6      	strb	r6, [r4, r3]
 8000e80:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8000e84:	f43f ae38 	beq.w	8000af8 <d_print_comp_inner+0x184>
 8000e88:	29ff      	cmp	r1, #255	; 0xff
 8000e8a:	f815 6b01 	ldrb.w	r6, [r5], #1
 8000e8e:	d1f1      	bne.n	8000e74 <d_print_comp_inner+0x500>
 8000e90:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000e94:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8000e98:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8000e9c:	4620      	mov	r0, r4
 8000e9e:	4798      	blx	r3
 8000ea0:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8000ea4:	3301      	adds	r3, #1
 8000ea6:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8000eaa:	2101      	movs	r1, #1
 8000eac:	2300      	movs	r3, #0
 8000eae:	e7e3      	b.n	8000e78 <d_print_comp_inner+0x504>
 8000eb0:	4ea0      	ldr	r6, [pc, #640]	; (8001134 <d_print_comp_inner+0x7c0>)
 8000eb2:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8000eb6:	f106 0a16 	add.w	sl, r6, #22
 8000eba:	f04f 0900 	mov.w	r9, #0
 8000ebe:	e00a      	b.n	8000ed6 <d_print_comp_inner+0x562>
 8000ec0:	460b      	mov	r3, r1
 8000ec2:	3101      	adds	r1, #1
 8000ec4:	45b2      	cmp	sl, r6
 8000ec6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8000eca:	f804 8003 	strb.w	r8, [r4, r3]
 8000ece:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8000ed2:	f001 8055 	beq.w	8001f80 <d_print_comp_inner+0x160c>
 8000ed6:	29ff      	cmp	r1, #255	; 0xff
 8000ed8:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 8000edc:	d1f0      	bne.n	8000ec0 <d_print_comp_inner+0x54c>
 8000ede:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000ee2:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8000ee6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8000eea:	4620      	mov	r0, r4
 8000eec:	4798      	blx	r3
 8000eee:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8000ef2:	3301      	adds	r3, #1
 8000ef4:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8000ef8:	2101      	movs	r1, #1
 8000efa:	2300      	movs	r3, #0
 8000efc:	e7e2      	b.n	8000ec4 <d_print_comp_inner+0x550>
 8000efe:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8000f02:	792d      	ldrb	r5, [r5, #4]
 8000f04:	29ff      	cmp	r1, #255	; 0xff
 8000f06:	f001 846f 	beq.w	80027e8 <d_print_comp_inner+0x1e74>
 8000f0a:	1c4b      	adds	r3, r1, #1
 8000f0c:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8000f10:	5465      	strb	r5, [r4, r1]
 8000f12:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8000f16:	e5ef      	b.n	8000af8 <d_print_comp_inner+0x184>
 8000f18:	686a      	ldr	r2, [r5, #4]
 8000f1a:	f002 f945 	bl	80031a8 <d_print_comp>
 8000f1e:	68aa      	ldr	r2, [r5, #8]
 8000f20:	4639      	mov	r1, r7
 8000f22:	4620      	mov	r0, r4
 8000f24:	f002 f940 	bl	80031a8 <d_print_comp>
 8000f28:	e5e6      	b.n	8000af8 <d_print_comp_inner+0x184>
 8000f2a:	686e      	ldr	r6, [r5, #4]
 8000f2c:	68ad      	ldr	r5, [r5, #8]
 8000f2e:	7833      	ldrb	r3, [r6, #0]
 8000f30:	2b31      	cmp	r3, #49	; 0x31
 8000f32:	f001 82bb 	beq.w	80024ac <d_print_comp_inner+0x1b38>
 8000f36:	2b33      	cmp	r3, #51	; 0x33
 8000f38:	f041 83fe 	bne.w	8002738 <d_print_comp_inner+0x1dc4>
 8000f3c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8000f40:	2bff      	cmp	r3, #255	; 0xff
 8000f42:	f001 8731 	beq.w	8002da8 <d_print_comp_inner+0x2434>
 8000f46:	1c59      	adds	r1, r3, #1
 8000f48:	f04f 0e28 	mov.w	lr, #40	; 0x28
 8000f4c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8000f50:	1d32      	adds	r2, r6, #4
 8000f52:	4639      	mov	r1, r7
 8000f54:	f804 e003 	strb.w	lr, [r4, r3]
 8000f58:	4620      	mov	r0, r4
 8000f5a:	f884 e104 	strb.w	lr, [r4, #260]	; 0x104
 8000f5e:	f002 febd 	bl	8003cdc <d_print_cast.isra.12>
 8000f62:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8000f66:	29ff      	cmp	r1, #255	; 0xff
 8000f68:	f001 870d 	beq.w	8002d86 <d_print_comp_inner+0x2412>
 8000f6c:	2329      	movs	r3, #41	; 0x29
 8000f6e:	1c4a      	adds	r2, r1, #1
 8000f70:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8000f74:	5463      	strb	r3, [r4, r1]
 8000f76:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8000f7a:	462a      	mov	r2, r5
 8000f7c:	4639      	mov	r1, r7
 8000f7e:	4620      	mov	r0, r4
 8000f80:	f002 ffbe 	bl	8003f00 <d_print_subexpr>
 8000f84:	e5b8      	b.n	8000af8 <d_print_comp_inner+0x184>
 8000f86:	686a      	ldr	r2, [r5, #4]
 8000f88:	f002 ff7c 	bl	8003e84 <d_print_expr_op>
 8000f8c:	e5b4      	b.n	8000af8 <d_print_comp_inner+0x184>
 8000f8e:	4e6a      	ldr	r6, [pc, #424]	; (8001138 <d_print_comp_inner+0x7c4>)
 8000f90:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8000f94:	f106 0a09 	add.w	sl, r6, #9
 8000f98:	f04f 0900 	mov.w	r9, #0
 8000f9c:	e00a      	b.n	8000fb4 <d_print_comp_inner+0x640>
 8000f9e:	460b      	mov	r3, r1
 8000fa0:	3101      	adds	r1, #1
 8000fa2:	45b2      	cmp	sl, r6
 8000fa4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8000fa8:	f804 8003 	strb.w	r8, [r4, r3]
 8000fac:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8000fb0:	f001 8030 	beq.w	8002014 <d_print_comp_inner+0x16a0>
 8000fb4:	29ff      	cmp	r1, #255	; 0xff
 8000fb6:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 8000fba:	d1f0      	bne.n	8000f9e <d_print_comp_inner+0x62a>
 8000fbc:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000fc0:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8000fc4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8000fc8:	4620      	mov	r0, r4
 8000fca:	4798      	blx	r3
 8000fcc:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8000fd0:	3301      	adds	r3, #1
 8000fd2:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8000fd6:	2101      	movs	r1, #1
 8000fd8:	2300      	movs	r3, #0
 8000fda:	e7e2      	b.n	8000fa2 <d_print_comp_inner+0x62e>
 8000fdc:	4e56      	ldr	r6, [pc, #344]	; (8001138 <d_print_comp_inner+0x7c4>)
 8000fde:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8000fe2:	f106 0a09 	add.w	sl, r6, #9
 8000fe6:	f04f 0900 	mov.w	r9, #0
 8000fea:	e00a      	b.n	8001002 <d_print_comp_inner+0x68e>
 8000fec:	460b      	mov	r3, r1
 8000fee:	3101      	adds	r1, #1
 8000ff0:	45b2      	cmp	sl, r6
 8000ff2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8000ff6:	f804 8003 	strb.w	r8, [r4, r3]
 8000ffa:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8000ffe:	f001 8031 	beq.w	8002064 <d_print_comp_inner+0x16f0>
 8001002:	29ff      	cmp	r1, #255	; 0xff
 8001004:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 8001008:	d1f0      	bne.n	8000fec <d_print_comp_inner+0x678>
 800100a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800100e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8001012:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8001016:	4620      	mov	r0, r4
 8001018:	4798      	blx	r3
 800101a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800101e:	3301      	adds	r3, #1
 8001020:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8001024:	2101      	movs	r1, #1
 8001026:	2300      	movs	r3, #0
 8001028:	e7e2      	b.n	8000ff0 <d_print_comp_inner+0x67c>
 800102a:	f8d5 a004 	ldr.w	sl, [r5, #4]
 800102e:	4d43      	ldr	r5, [pc, #268]	; (800113c <d_print_comp_inner+0x7c8>)
 8001030:	f8da 7008 	ldr.w	r7, [sl, #8]
 8001034:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8001038:	f105 0808 	add.w	r8, r5, #8
 800103c:	f04f 0900 	mov.w	r9, #0
 8001040:	e009      	b.n	8001056 <d_print_comp_inner+0x6e2>
 8001042:	460b      	mov	r3, r1
 8001044:	3101      	adds	r1, #1
 8001046:	45a8      	cmp	r8, r5
 8001048:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800104c:	54e6      	strb	r6, [r4, r3]
 800104e:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8001052:	f000 8755 	beq.w	8001f00 <d_print_comp_inner+0x158c>
 8001056:	29ff      	cmp	r1, #255	; 0xff
 8001058:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 800105c:	d1f1      	bne.n	8001042 <d_print_comp_inner+0x6ce>
 800105e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8001062:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8001066:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800106a:	4620      	mov	r0, r4
 800106c:	4798      	blx	r3
 800106e:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8001072:	3301      	adds	r3, #1
 8001074:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8001078:	2101      	movs	r1, #1
 800107a:	2300      	movs	r3, #0
 800107c:	e7e3      	b.n	8001046 <d_print_comp_inner+0x6d2>
 800107e:	686a      	ldr	r2, [r5, #4]
 8001080:	68ae      	ldr	r6, [r5, #8]
 8001082:	b10a      	cbz	r2, 8001088 <d_print_comp_inner+0x714>
 8001084:	f002 f890 	bl	80031a8 <d_print_comp>
 8001088:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800108c:	2bff      	cmp	r3, #255	; 0xff
 800108e:	f001 8486 	beq.w	800299e <d_print_comp_inner+0x202a>
 8001092:	1c5a      	adds	r2, r3, #1
 8001094:	257b      	movs	r5, #123	; 0x7b
 8001096:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800109a:	4639      	mov	r1, r7
 800109c:	54e5      	strb	r5, [r4, r3]
 800109e:	4632      	mov	r2, r6
 80010a0:	4620      	mov	r0, r4
 80010a2:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 80010a6:	f002 f87f 	bl	80031a8 <d_print_comp>
 80010aa:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80010ae:	29ff      	cmp	r1, #255	; 0xff
 80010b0:	f001 8369 	beq.w	8002786 <d_print_comp_inner+0x1e12>
 80010b4:	1c4a      	adds	r2, r1, #1
 80010b6:	237d      	movs	r3, #125	; 0x7d
 80010b8:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80010bc:	5463      	strb	r3, [r4, r1]
 80010be:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80010c2:	e519      	b.n	8000af8 <d_print_comp_inner+0x184>
 80010c4:	686a      	ldr	r2, [r5, #4]
 80010c6:	b10a      	cbz	r2, 80010cc <d_print_comp_inner+0x758>
 80010c8:	f002 f86e 	bl	80031a8 <d_print_comp>
 80010cc:	68ab      	ldr	r3, [r5, #8]
 80010ce:	2b00      	cmp	r3, #0
 80010d0:	f43f ad12 	beq.w	8000af8 <d_print_comp_inner+0x184>
 80010d4:	f8d4 6100 	ldr.w	r6, [r4, #256]	; 0x100
 80010d8:	2efd      	cmp	r6, #253	; 0xfd
 80010da:	f201 830d 	bhi.w	80026f8 <d_print_comp_inner+0x1d84>
 80010de:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8001140 <d_print_comp_inner+0x7cc>
 80010e2:	f04f 0a00 	mov.w	sl, #0
 80010e6:	f108 0b02 	add.w	fp, r8, #2
 80010ea:	4631      	mov	r1, r6
 80010ec:	e009      	b.n	8001102 <d_print_comp_inner+0x78e>
 80010ee:	460b      	mov	r3, r1
 80010f0:	3101      	adds	r1, #1
 80010f2:	45c3      	cmp	fp, r8
 80010f4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80010f8:	54e6      	strb	r6, [r4, r3]
 80010fa:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80010fe:	f001 8060 	beq.w	80021c2 <d_print_comp_inner+0x184e>
 8001102:	29ff      	cmp	r1, #255	; 0xff
 8001104:	f818 6b01 	ldrb.w	r6, [r8], #1
 8001108:	d1f1      	bne.n	80010ee <d_print_comp_inner+0x77a>
 800110a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800110e:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 8001112:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8001116:	4620      	mov	r0, r4
 8001118:	4798      	blx	r3
 800111a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800111e:	3301      	adds	r3, #1
 8001120:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8001124:	2101      	movs	r1, #1
 8001126:	2300      	movs	r3, #0
 8001128:	e7e3      	b.n	80010f2 <d_print_comp_inner+0x77e>
 800112a:	bf00      	nop
 800112c:	080112c0 	.word	0x080112c0
 8001130:	080110e0 	.word	0x080110e0
 8001134:	08011223 	.word	0x08011223
 8001138:	08011263 	.word	0x08011263
 800113c:	08011257 	.word	0x08011257
 8001140:	08011254 	.word	0x08011254
 8001144:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8001148:	2b00      	cmp	r3, #0
 800114a:	f041 8188 	bne.w	800245e <d_print_comp_inner+0x1aea>
 800114e:	686a      	ldr	r2, [r5, #4]
 8001150:	4bd3      	ldr	r3, [pc, #844]	; (80014a0 <d_print_comp_inner+0xb2c>)
 8001152:	6851      	ldr	r1, [r2, #4]
 8001154:	4299      	cmp	r1, r3
 8001156:	f001 817e 	beq.w	8002456 <d_print_comp_inner+0x1ae2>
 800115a:	4639      	mov	r1, r7
 800115c:	4620      	mov	r0, r4
 800115e:	f002 f823 	bl	80031a8 <d_print_comp>
 8001162:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8001166:	2bff      	cmp	r3, #255	; 0xff
 8001168:	f001 85c0 	beq.w	8002cec <d_print_comp_inner+0x2378>
 800116c:	1c59      	adds	r1, r3, #1
 800116e:	2220      	movs	r2, #32
 8001170:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8001174:	54e2      	strb	r2, [r4, r3]
 8001176:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 800117a:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 800117e:	2b00      	cmp	r3, #0
 8001180:	f001 8100 	beq.w	8002384 <d_print_comp_inner+0x1a10>
 8001184:	4dc7      	ldr	r5, [pc, #796]	; (80014a4 <d_print_comp_inner+0xb30>)
 8001186:	f04f 0800 	mov.w	r8, #0
 800118a:	1daf      	adds	r7, r5, #6
 800118c:	e009      	b.n	80011a2 <d_print_comp_inner+0x82e>
 800118e:	460b      	mov	r3, r1
 8001190:	3101      	adds	r1, #1
 8001192:	42bd      	cmp	r5, r7
 8001194:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8001198:	54e6      	strb	r6, [r4, r3]
 800119a:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 800119e:	f43f acab 	beq.w	8000af8 <d_print_comp_inner+0x184>
 80011a2:	29ff      	cmp	r1, #255	; 0xff
 80011a4:	f815 6b01 	ldrb.w	r6, [r5], #1
 80011a8:	d1f1      	bne.n	800118e <d_print_comp_inner+0x81a>
 80011aa:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80011ae:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80011b2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80011b6:	4620      	mov	r0, r4
 80011b8:	4798      	blx	r3
 80011ba:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80011be:	3301      	adds	r3, #1
 80011c0:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 80011c4:	2101      	movs	r1, #1
 80011c6:	2300      	movs	r3, #0
 80011c8:	e7e3      	b.n	8001192 <d_print_comp_inner+0x81e>
 80011ca:	2301      	movs	r3, #1
 80011cc:	f8c0 3118 	str.w	r3, [r0, #280]	; 0x118
 80011d0:	e492      	b.n	8000af8 <d_print_comp_inner+0x184>
 80011d2:	4eb5      	ldr	r6, [pc, #724]	; (80014a8 <d_print_comp_inner+0xb34>)
 80011d4:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80011d8:	f106 0a0e 	add.w	sl, r6, #14
 80011dc:	f04f 0900 	mov.w	r9, #0
 80011e0:	e00a      	b.n	80011f8 <d_print_comp_inner+0x884>
 80011e2:	460b      	mov	r3, r1
 80011e4:	3101      	adds	r1, #1
 80011e6:	45b2      	cmp	sl, r6
 80011e8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80011ec:	f804 8003 	strb.w	r8, [r4, r3]
 80011f0:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 80011f4:	f000 867d 	beq.w	8001ef2 <d_print_comp_inner+0x157e>
 80011f8:	29ff      	cmp	r1, #255	; 0xff
 80011fa:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 80011fe:	d1f0      	bne.n	80011e2 <d_print_comp_inner+0x86e>
 8001200:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8001204:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8001208:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800120c:	4620      	mov	r0, r4
 800120e:	4798      	blx	r3
 8001210:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8001214:	3301      	adds	r3, #1
 8001216:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 800121a:	2101      	movs	r1, #1
 800121c:	2300      	movs	r3, #0
 800121e:	e7e2      	b.n	80011e6 <d_print_comp_inner+0x872>
 8001220:	686a      	ldr	r2, [r5, #4]
 8001222:	7811      	ldrb	r1, [r2, #0]
 8001224:	2927      	cmp	r1, #39	; 0x27
 8001226:	f001 81a8 	beq.w	800257a <d_print_comp_inner+0x1c06>
 800122a:	2600      	movs	r6, #0
 800122c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8001230:	29ff      	cmp	r1, #255	; 0xff
 8001232:	f001 842a 	beq.w	8002a8a <d_print_comp_inner+0x2116>
 8001236:	1c4a      	adds	r2, r1, #1
 8001238:	2328      	movs	r3, #40	; 0x28
 800123a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800123e:	5463      	strb	r3, [r4, r1]
 8001240:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8001244:	686a      	ldr	r2, [r5, #4]
 8001246:	4639      	mov	r1, r7
 8001248:	4620      	mov	r0, r4
 800124a:	f001 ffad 	bl	80031a8 <d_print_comp>
 800124e:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8001252:	2bff      	cmp	r3, #255	; 0xff
 8001254:	f001 83ef 	beq.w	8002a36 <d_print_comp_inner+0x20c2>
 8001258:	1c59      	adds	r1, r3, #1
 800125a:	2229      	movs	r2, #41	; 0x29
 800125c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8001260:	54e2      	strb	r2, [r4, r3]
 8001262:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8001266:	782b      	ldrb	r3, [r5, #0]
 8001268:	2b3c      	cmp	r3, #60	; 0x3c
 800126a:	f001 8280 	beq.w	800276e <d_print_comp_inner+0x1dfa>
 800126e:	2e08      	cmp	r6, #8
 8001270:	f001 8223 	beq.w	80026ba <d_print_comp_inner+0x1d46>
 8001274:	68aa      	ldr	r2, [r5, #8]
 8001276:	4639      	mov	r1, r7
 8001278:	4620      	mov	r0, r4
 800127a:	f001 ff95 	bl	80031a8 <d_print_comp>
 800127e:	e43b      	b.n	8000af8 <d_print_comp_inner+0x184>
 8001280:	2301      	movs	r3, #1
 8001282:	f8c0 3118 	str.w	r3, [r0, #280]	; 0x118
 8001286:	e437      	b.n	8000af8 <d_print_comp_inner+0x184>
 8001288:	ab14      	add	r3, sp, #80	; 0x50
 800128a:	f8d0 2114 	ldr.w	r2, [r0, #276]	; 0x114
 800128e:	f843 2d40 	str.w	r2, [r3, #-64]!
 8001292:	f8c0 3114 	str.w	r3, [r0, #276]	; 0x114
 8001296:	68aa      	ldr	r2, [r5, #8]
 8001298:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
 800129c:	9307      	str	r3, [sp, #28]
 800129e:	2600      	movs	r6, #0
 80012a0:	9505      	str	r5, [sp, #20]
 80012a2:	9606      	str	r6, [sp, #24]
 80012a4:	f001 ff80 	bl	80031a8 <d_print_comp>
 80012a8:	9b06      	ldr	r3, [sp, #24]
 80012aa:	b923      	cbnz	r3, 80012b6 <d_print_comp_inner+0x942>
 80012ac:	462a      	mov	r2, r5
 80012ae:	4639      	mov	r1, r7
 80012b0:	4620      	mov	r0, r4
 80012b2:	f001 ff89 	bl	80031c8 <d_print_mod>
 80012b6:	9b04      	ldr	r3, [sp, #16]
 80012b8:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 80012bc:	e41c      	b.n	8000af8 <d_print_comp_inner+0x184>
 80012be:	f10d 0950 	add.w	r9, sp, #80	; 0x50
 80012c2:	f8d0 b114 	ldr.w	fp, [r0, #276]	; 0x114
 80012c6:	f849 bd40 	str.w	fp, [r9, #-64]!
 80012ca:	2200      	movs	r2, #0
 80012cc:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
 80012d0:	f8cd b000 	str.w	fp, [sp]
 80012d4:	4659      	mov	r1, fp
 80012d6:	f8c0 9114 	str.w	r9, [r0, #276]	; 0x114
 80012da:	9505      	str	r5, [sp, #20]
 80012dc:	9206      	str	r2, [sp, #24]
 80012de:	9307      	str	r3, [sp, #28]
 80012e0:	2900      	cmp	r1, #0
 80012e2:	f001 8587 	beq.w	8002df4 <d_print_comp_inner+0x2480>
 80012e6:	684b      	ldr	r3, [r1, #4]
 80012e8:	781b      	ldrb	r3, [r3, #0]
 80012ea:	3b19      	subs	r3, #25
 80012ec:	2b02      	cmp	r3, #2
 80012ee:	f201 8581 	bhi.w	8002df4 <d_print_comp_inner+0x2480>
 80012f2:	46ac      	mov	ip, r5
 80012f4:	f04f 0801 	mov.w	r8, #1
 80012f8:	460e      	mov	r6, r1
 80012fa:	464d      	mov	r5, r9
 80012fc:	e004      	b.n	8001308 <d_print_comp_inner+0x994>
 80012fe:	6873      	ldr	r3, [r6, #4]
 8001300:	781b      	ldrb	r3, [r3, #0]
 8001302:	3b19      	subs	r3, #25
 8001304:	2b02      	cmp	r3, #2
 8001306:	d81d      	bhi.n	8001344 <d_print_comp_inner+0x9d0>
 8001308:	68b3      	ldr	r3, [r6, #8]
 800130a:	ea4f 1e08 	mov.w	lr, r8, lsl #4
 800130e:	aa14      	add	r2, sp, #80	; 0x50
 8001310:	eb02 0b0e 	add.w	fp, r2, lr
 8001314:	b99b      	cbnz	r3, 800133e <d_print_comp_inner+0x9ca>
 8001316:	f1b8 0f03 	cmp.w	r8, #3
 800131a:	f201 82ce 	bhi.w	80028ba <d_print_comp_inner+0x1f46>
 800131e:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8001322:	f1ab 0a40 	sub.w	sl, fp, #64	; 0x40
 8001326:	e88a 000f 	stmia.w	sl, {r0, r1, r2, r3}
 800132a:	f84b 5c40 	str.w	r5, [fp, #-64]
 800132e:	2301      	movs	r3, #1
 8001330:	eb09 050e 	add.w	r5, r9, lr
 8001334:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 8001338:	f108 0801 	add.w	r8, r8, #1
 800133c:	60b3      	str	r3, [r6, #8]
 800133e:	6836      	ldr	r6, [r6, #0]
 8001340:	2e00      	cmp	r6, #0
 8001342:	d1dc      	bne.n	80012fe <d_print_comp_inner+0x98a>
 8001344:	f8dc 2008 	ldr.w	r2, [ip, #8]
 8001348:	4639      	mov	r1, r7
 800134a:	4620      	mov	r0, r4
 800134c:	4665      	mov	r5, ip
 800134e:	f001 ff2b 	bl	80031a8 <d_print_comp>
 8001352:	9b06      	ldr	r3, [sp, #24]
 8001354:	9a00      	ldr	r2, [sp, #0]
 8001356:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
 800135a:	2b00      	cmp	r3, #0
 800135c:	f47f abcc 	bne.w	8000af8 <d_print_comp_inner+0x184>
 8001360:	f1b8 0f01 	cmp.w	r8, #1
 8001364:	d00e      	beq.n	8001384 <d_print_comp_inner+0xa10>
 8001366:	eb09 1908 	add.w	r9, r9, r8, lsl #4
 800136a:	f859 2c0c 	ldr.w	r2, [r9, #-12]
 800136e:	f108 38ff 	add.w	r8, r8, #4294967295
 8001372:	4639      	mov	r1, r7
 8001374:	4620      	mov	r0, r4
 8001376:	f001 ff27 	bl	80031c8 <d_print_mod>
 800137a:	f1b8 0f01 	cmp.w	r8, #1
 800137e:	f1a9 0910 	sub.w	r9, r9, #16
 8001382:	d1f2      	bne.n	800136a <d_print_comp_inner+0x9f6>
 8001384:	1d2a      	adds	r2, r5, #4
 8001386:	4639      	mov	r1, r7
 8001388:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 800138c:	4620      	mov	r0, r4
 800138e:	f002 fad5 	bl	800393c <d_print_array_type.isra.10>
 8001392:	f7ff bbb1 	b.w	8000af8 <d_print_comp_inner+0x184>
 8001396:	068b      	lsls	r3, r1, #26
 8001398:	f101 804a 	bmi.w	8002430 <d_print_comp_inner+0x1abc>
 800139c:	686b      	ldr	r3, [r5, #4]
 800139e:	b11b      	cbz	r3, 80013a8 <d_print_comp_inner+0xa34>
 80013a0:	f017 0340 	ands.w	r3, r7, #64	; 0x40
 80013a4:	f001 82cc 	beq.w	8002940 <d_print_comp_inner+0x1fcc>
 80013a8:	f027 0760 	bic.w	r7, r7, #96	; 0x60
 80013ac:	f105 0208 	add.w	r2, r5, #8
 80013b0:	4639      	mov	r1, r7
 80013b2:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 80013b6:	4620      	mov	r0, r4
 80013b8:	f002 fb9c 	bl	8003af4 <d_print_function_type.isra.11>
 80013bc:	f7ff bb9c 	b.w	8000af8 <d_print_comp_inner+0x184>
 80013c0:	68ab      	ldr	r3, [r5, #8]
 80013c2:	781a      	ldrb	r2, [r3, #0]
 80013c4:	2a39      	cmp	r2, #57	; 0x39
 80013c6:	f47f ab9f 	bne.w	8000b08 <d_print_comp_inner+0x194>
 80013ca:	689a      	ldr	r2, [r3, #8]
 80013cc:	7811      	ldrb	r1, [r2, #0]
 80013ce:	293a      	cmp	r1, #58	; 0x3a
 80013d0:	f47f ab9a 	bne.w	8000b08 <d_print_comp_inner+0x194>
 80013d4:	f8d5 9004 	ldr.w	r9, [r5, #4]
 80013d8:	4934      	ldr	r1, [pc, #208]	; (80014ac <d_print_comp_inner+0xb38>)
 80013da:	f8d9 0004 	ldr.w	r0, [r9, #4]
 80013de:	f8d3 8004 	ldr.w	r8, [r3, #4]
 80013e2:	6800      	ldr	r0, [r0, #0]
 80013e4:	6856      	ldr	r6, [r2, #4]
 80013e6:	6895      	ldr	r5, [r2, #8]
 80013e8:	f007 f87a 	bl	80084e0 <strcmp>
 80013ec:	2800      	cmp	r0, #0
 80013ee:	f001 850f 	beq.w	8002e10 <d_print_comp_inner+0x249c>
 80013f2:	2204      	movs	r2, #4
 80013f4:	492e      	ldr	r1, [pc, #184]	; (80014b0 <d_print_comp_inner+0xb3c>)
 80013f6:	4620      	mov	r0, r4
 80013f8:	f7fe fffe 	bl	80003f8 <d_append_buffer>
 80013fc:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8001400:	b183      	cbz	r3, 8001424 <d_print_comp_inner+0xab0>
 8001402:	4639      	mov	r1, r7
 8001404:	4642      	mov	r2, r8
 8001406:	4620      	mov	r0, r4
 8001408:	f002 fd7a 	bl	8003f00 <d_print_subexpr>
 800140c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8001410:	29ff      	cmp	r1, #255	; 0xff
 8001412:	f001 862a 	beq.w	800306a <d_print_comp_inner+0x26f6>
 8001416:	2320      	movs	r3, #32
 8001418:	1c4a      	adds	r2, r1, #1
 800141a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800141e:	5463      	strb	r3, [r4, r1]
 8001420:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8001424:	4632      	mov	r2, r6
 8001426:	4639      	mov	r1, r7
 8001428:	4620      	mov	r0, r4
 800142a:	f001 febd 	bl	80031a8 <d_print_comp>
 800142e:	2d00      	cmp	r5, #0
 8001430:	f43f ab62 	beq.w	8000af8 <d_print_comp_inner+0x184>
 8001434:	462a      	mov	r2, r5
 8001436:	4639      	mov	r1, r7
 8001438:	4620      	mov	r0, r4
 800143a:	f002 fd61 	bl	8003f00 <d_print_subexpr>
 800143e:	f7ff bb5b 	b.w	8000af8 <d_print_comp_inner+0x184>
 8001442:	4e1c      	ldr	r6, [pc, #112]	; (80014b4 <d_print_comp_inner+0xb40>)
 8001444:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8001448:	f106 0a11 	add.w	sl, r6, #17
 800144c:	f04f 0900 	mov.w	r9, #0
 8001450:	e00a      	b.n	8001468 <d_print_comp_inner+0xaf4>
 8001452:	460b      	mov	r3, r1
 8001454:	3101      	adds	r1, #1
 8001456:	4556      	cmp	r6, sl
 8001458:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800145c:	f804 8003 	strb.w	r8, [r4, r3]
 8001460:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8001464:	f000 84be 	beq.w	8001de4 <d_print_comp_inner+0x1470>
 8001468:	29ff      	cmp	r1, #255	; 0xff
 800146a:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 800146e:	d1f0      	bne.n	8001452 <d_print_comp_inner+0xade>
 8001470:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8001474:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8001478:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800147c:	4620      	mov	r0, r4
 800147e:	4798      	blx	r3
 8001480:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8001484:	3301      	adds	r3, #1
 8001486:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 800148a:	2101      	movs	r1, #1
 800148c:	2300      	movs	r3, #0
 800148e:	e7e2      	b.n	8001456 <d_print_comp_inner+0xae2>
 8001490:	4e09      	ldr	r6, [pc, #36]	; (80014b8 <d_print_comp_inner+0xb44>)
 8001492:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8001496:	f106 0a15 	add.w	sl, r6, #21
 800149a:	f04f 0900 	mov.w	r9, #0
 800149e:	e018      	b.n	80014d2 <d_print_comp_inner+0xb5e>
 80014a0:	0801084c 	.word	0x0801084c
 80014a4:	08011244 	.word	0x08011244
 80014a8:	080112af 	.word	0x080112af
 80014ac:	08011284 	.word	0x08011284
 80014b0:	0801128c 	.word	0x0801128c
 80014b4:	0801116b 	.word	0x0801116b
 80014b8:	08011167 	.word	0x08011167
 80014bc:	460b      	mov	r3, r1
 80014be:	3101      	adds	r1, #1
 80014c0:	45b2      	cmp	sl, r6
 80014c2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80014c6:	f804 8003 	strb.w	r8, [r4, r3]
 80014ca:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 80014ce:	f000 8482 	beq.w	8001dd6 <d_print_comp_inner+0x1462>
 80014d2:	29ff      	cmp	r1, #255	; 0xff
 80014d4:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 80014d8:	d1f0      	bne.n	80014bc <d_print_comp_inner+0xb48>
 80014da:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80014de:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80014e2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80014e6:	4620      	mov	r0, r4
 80014e8:	4798      	blx	r3
 80014ea:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80014ee:	3301      	adds	r3, #1
 80014f0:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 80014f4:	2101      	movs	r1, #1
 80014f6:	2300      	movs	r3, #0
 80014f8:	e7e2      	b.n	80014c0 <d_print_comp_inner+0xb4c>
 80014fa:	4eda      	ldr	r6, [pc, #872]	; (8001864 <d_print_comp_inner+0xef0>)
 80014fc:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8001500:	f106 0a10 	add.w	sl, r6, #16
 8001504:	f04f 0900 	mov.w	r9, #0
 8001508:	e00a      	b.n	8001520 <d_print_comp_inner+0xbac>
 800150a:	460b      	mov	r3, r1
 800150c:	3101      	adds	r1, #1
 800150e:	45b2      	cmp	sl, r6
 8001510:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8001514:	f804 8003 	strb.w	r8, [r4, r3]
 8001518:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 800151c:	f000 8454 	beq.w	8001dc8 <d_print_comp_inner+0x1454>
 8001520:	29ff      	cmp	r1, #255	; 0xff
 8001522:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 8001526:	d1f0      	bne.n	800150a <d_print_comp_inner+0xb96>
 8001528:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800152c:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8001530:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8001534:	4620      	mov	r0, r4
 8001536:	4798      	blx	r3
 8001538:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800153c:	3301      	adds	r3, #1
 800153e:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8001542:	2101      	movs	r1, #1
 8001544:	2300      	movs	r3, #0
 8001546:	e7e2      	b.n	800150e <d_print_comp_inner+0xb9a>
 8001548:	4ec7      	ldr	r6, [pc, #796]	; (8001868 <d_print_comp_inner+0xef4>)
 800154a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 800154e:	f106 0a12 	add.w	sl, r6, #18
 8001552:	f04f 0900 	mov.w	r9, #0
 8001556:	e00a      	b.n	800156e <d_print_comp_inner+0xbfa>
 8001558:	460b      	mov	r3, r1
 800155a:	3101      	adds	r1, #1
 800155c:	45b2      	cmp	sl, r6
 800155e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8001562:	f804 8003 	strb.w	r8, [r4, r3]
 8001566:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 800156a:	f000 85d5 	beq.w	8002118 <d_print_comp_inner+0x17a4>
 800156e:	29ff      	cmp	r1, #255	; 0xff
 8001570:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 8001574:	d1f0      	bne.n	8001558 <d_print_comp_inner+0xbe4>
 8001576:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800157a:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800157e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8001582:	4620      	mov	r0, r4
 8001584:	4798      	blx	r3
 8001586:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800158a:	3301      	adds	r3, #1
 800158c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8001590:	2101      	movs	r1, #1
 8001592:	2300      	movs	r3, #0
 8001594:	e7e2      	b.n	800155c <d_print_comp_inner+0xbe8>
 8001596:	68af      	ldr	r7, [r5, #8]
 8001598:	686d      	ldr	r5, [r5, #4]
 800159a:	2f00      	cmp	r7, #0
 800159c:	f43f aaac 	beq.w	8000af8 <d_print_comp_inner+0x184>
 80015a0:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80015a4:	442f      	add	r7, r5
 80015a6:	f04f 0800 	mov.w	r8, #0
 80015aa:	e009      	b.n	80015c0 <d_print_comp_inner+0xc4c>
 80015ac:	460b      	mov	r3, r1
 80015ae:	3101      	adds	r1, #1
 80015b0:	42af      	cmp	r7, r5
 80015b2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80015b6:	54e6      	strb	r6, [r4, r3]
 80015b8:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80015bc:	f43f aa9c 	beq.w	8000af8 <d_print_comp_inner+0x184>
 80015c0:	29ff      	cmp	r1, #255	; 0xff
 80015c2:	f815 6b01 	ldrb.w	r6, [r5], #1
 80015c6:	d1f1      	bne.n	80015ac <d_print_comp_inner+0xc38>
 80015c8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80015cc:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80015d0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80015d4:	4620      	mov	r0, r4
 80015d6:	4798      	blx	r3
 80015d8:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80015dc:	3301      	adds	r3, #1
 80015de:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 80015e2:	2101      	movs	r1, #1
 80015e4:	2300      	movs	r3, #0
 80015e6:	e7e3      	b.n	80015b0 <d_print_comp_inner+0xc3c>
 80015e8:	4ea0      	ldr	r6, [pc, #640]	; (800186c <d_print_comp_inner+0xef8>)
 80015ea:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80015ee:	f106 0a11 	add.w	sl, r6, #17
 80015f2:	f04f 0900 	mov.w	r9, #0
 80015f6:	e00a      	b.n	800160e <d_print_comp_inner+0xc9a>
 80015f8:	460b      	mov	r3, r1
 80015fa:	3101      	adds	r1, #1
 80015fc:	45b2      	cmp	sl, r6
 80015fe:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8001602:	f804 8003 	strb.w	r8, [r4, r3]
 8001606:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 800160a:	f000 858c 	beq.w	8002126 <d_print_comp_inner+0x17b2>
 800160e:	29ff      	cmp	r1, #255	; 0xff
 8001610:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 8001614:	d1f0      	bne.n	80015f8 <d_print_comp_inner+0xc84>
 8001616:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800161a:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800161e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8001622:	4620      	mov	r0, r4
 8001624:	4798      	blx	r3
 8001626:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800162a:	3301      	adds	r3, #1
 800162c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8001630:	2101      	movs	r1, #1
 8001632:	2300      	movs	r3, #0
 8001634:	e7e2      	b.n	80015fc <d_print_comp_inner+0xc88>
 8001636:	4e8e      	ldr	r6, [pc, #568]	; (8001870 <d_print_comp_inner+0xefc>)
 8001638:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 800163c:	f106 0a15 	add.w	sl, r6, #21
 8001640:	f04f 0900 	mov.w	r9, #0
 8001644:	e00a      	b.n	800165c <d_print_comp_inner+0xce8>
 8001646:	460b      	mov	r3, r1
 8001648:	3101      	adds	r1, #1
 800164a:	45b2      	cmp	sl, r6
 800164c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8001650:	f804 8003 	strb.w	r8, [r4, r3]
 8001654:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8001658:	f000 8533 	beq.w	80020c2 <d_print_comp_inner+0x174e>
 800165c:	29ff      	cmp	r1, #255	; 0xff
 800165e:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 8001662:	d1f0      	bne.n	8001646 <d_print_comp_inner+0xcd2>
 8001664:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8001668:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800166c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8001670:	4620      	mov	r0, r4
 8001672:	4798      	blx	r3
 8001674:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8001678:	3301      	adds	r3, #1
 800167a:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 800167e:	2101      	movs	r1, #1
 8001680:	2300      	movs	r3, #0
 8001682:	e7e2      	b.n	800164a <d_print_comp_inner+0xcd6>
 8001684:	4e7b      	ldr	r6, [pc, #492]	; (8001874 <d_print_comp_inner+0xf00>)
 8001686:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 800168a:	f106 0a19 	add.w	sl, r6, #25
 800168e:	f04f 0900 	mov.w	r9, #0
 8001692:	e00a      	b.n	80016aa <d_print_comp_inner+0xd36>
 8001694:	460b      	mov	r3, r1
 8001696:	3101      	adds	r1, #1
 8001698:	45b2      	cmp	sl, r6
 800169a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800169e:	f804 8003 	strb.w	r8, [r4, r3]
 80016a2:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 80016a6:	f000 8545 	beq.w	8002134 <d_print_comp_inner+0x17c0>
 80016aa:	29ff      	cmp	r1, #255	; 0xff
 80016ac:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 80016b0:	d1f0      	bne.n	8001694 <d_print_comp_inner+0xd20>
 80016b2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80016b6:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80016ba:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80016be:	4620      	mov	r0, r4
 80016c0:	4798      	blx	r3
 80016c2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80016c6:	3301      	adds	r3, #1
 80016c8:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 80016cc:	2101      	movs	r1, #1
 80016ce:	2300      	movs	r3, #0
 80016d0:	e7e2      	b.n	8001698 <d_print_comp_inner+0xd24>
 80016d2:	4e69      	ldr	r6, [pc, #420]	; (8001878 <d_print_comp_inner+0xf04>)
 80016d4:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80016d8:	f106 0a16 	add.w	sl, r6, #22
 80016dc:	f04f 0900 	mov.w	r9, #0
 80016e0:	e00a      	b.n	80016f8 <d_print_comp_inner+0xd84>
 80016e2:	460b      	mov	r3, r1
 80016e4:	3101      	adds	r1, #1
 80016e6:	45b2      	cmp	sl, r6
 80016e8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80016ec:	f804 8003 	strb.w	r8, [r4, r3]
 80016f0:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 80016f4:	f000 84d7 	beq.w	80020a6 <d_print_comp_inner+0x1732>
 80016f8:	29ff      	cmp	r1, #255	; 0xff
 80016fa:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 80016fe:	d1f0      	bne.n	80016e2 <d_print_comp_inner+0xd6e>
 8001700:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8001704:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8001708:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800170c:	4620      	mov	r0, r4
 800170e:	4798      	blx	r3
 8001710:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8001714:	3301      	adds	r3, #1
 8001716:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 800171a:	2101      	movs	r1, #1
 800171c:	2300      	movs	r3, #0
 800171e:	e7e2      	b.n	80016e6 <d_print_comp_inner+0xd72>
 8001720:	4e56      	ldr	r6, [pc, #344]	; (800187c <d_print_comp_inner+0xf08>)
 8001722:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8001726:	f106 0a13 	add.w	sl, r6, #19
 800172a:	f04f 0900 	mov.w	r9, #0
 800172e:	e00a      	b.n	8001746 <d_print_comp_inner+0xdd2>
 8001730:	460b      	mov	r3, r1
 8001732:	3101      	adds	r1, #1
 8001734:	4556      	cmp	r6, sl
 8001736:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800173a:	f804 8003 	strb.w	r8, [r4, r3]
 800173e:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8001742:	f000 84b7 	beq.w	80020b4 <d_print_comp_inner+0x1740>
 8001746:	29ff      	cmp	r1, #255	; 0xff
 8001748:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 800174c:	d1f0      	bne.n	8001730 <d_print_comp_inner+0xdbc>
 800174e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8001752:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8001756:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800175a:	4620      	mov	r0, r4
 800175c:	4798      	blx	r3
 800175e:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8001762:	3301      	adds	r3, #1
 8001764:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8001768:	2101      	movs	r1, #1
 800176a:	2300      	movs	r3, #0
 800176c:	e7e2      	b.n	8001734 <d_print_comp_inner+0xdc0>
 800176e:	4e44      	ldr	r6, [pc, #272]	; (8001880 <d_print_comp_inner+0xf0c>)
 8001770:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8001774:	f106 0a0f 	add.w	sl, r6, #15
 8001778:	f04f 0900 	mov.w	r9, #0
 800177c:	e00a      	b.n	8001794 <d_print_comp_inner+0xe20>
 800177e:	460b      	mov	r3, r1
 8001780:	3101      	adds	r1, #1
 8001782:	4556      	cmp	r6, sl
 8001784:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8001788:	f804 8003 	strb.w	r8, [r4, r3]
 800178c:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8001790:	f000 830c 	beq.w	8001dac <d_print_comp_inner+0x1438>
 8001794:	29ff      	cmp	r1, #255	; 0xff
 8001796:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 800179a:	d1f0      	bne.n	800177e <d_print_comp_inner+0xe0a>
 800179c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80017a0:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80017a4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80017a8:	4620      	mov	r0, r4
 80017aa:	4798      	blx	r3
 80017ac:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80017b0:	3301      	adds	r3, #1
 80017b2:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 80017b6:	2101      	movs	r1, #1
 80017b8:	2300      	movs	r3, #0
 80017ba:	e7e2      	b.n	8001782 <d_print_comp_inner+0xe0e>
 80017bc:	4e31      	ldr	r6, [pc, #196]	; (8001884 <d_print_comp_inner+0xf10>)
 80017be:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80017c2:	f106 0a1a 	add.w	sl, r6, #26
 80017c6:	f04f 0900 	mov.w	r9, #0
 80017ca:	e00a      	b.n	80017e2 <d_print_comp_inner+0xe6e>
 80017cc:	460b      	mov	r3, r1
 80017ce:	3101      	adds	r1, #1
 80017d0:	4556      	cmp	r6, sl
 80017d2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80017d6:	f804 8003 	strb.w	r8, [r4, r3]
 80017da:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 80017de:	f000 82ec 	beq.w	8001dba <d_print_comp_inner+0x1446>
 80017e2:	29ff      	cmp	r1, #255	; 0xff
 80017e4:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 80017e8:	d1f0      	bne.n	80017cc <d_print_comp_inner+0xe58>
 80017ea:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80017ee:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80017f2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80017f6:	4620      	mov	r0, r4
 80017f8:	4798      	blx	r3
 80017fa:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80017fe:	3301      	adds	r3, #1
 8001800:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8001804:	2101      	movs	r1, #1
 8001806:	2300      	movs	r3, #0
 8001808:	e7e2      	b.n	80017d0 <d_print_comp_inner+0xe5c>
 800180a:	f011 0704 	ands.w	r7, r1, #4
 800180e:	f040 8539 	bne.w	8002284 <d_print_comp_inner+0x1910>
 8001812:	686a      	ldr	r2, [r5, #4]
 8001814:	6853      	ldr	r3, [r2, #4]
 8001816:	6815      	ldr	r5, [r2, #0]
 8001818:	2b00      	cmp	r3, #0
 800181a:	f43f a96d 	beq.w	8000af8 <d_print_comp_inner+0x184>
 800181e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8001822:	eb05 0803 	add.w	r8, r5, r3
 8001826:	e009      	b.n	800183c <d_print_comp_inner+0xec8>
 8001828:	460b      	mov	r3, r1
 800182a:	3101      	adds	r1, #1
 800182c:	4545      	cmp	r5, r8
 800182e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8001832:	54e6      	strb	r6, [r4, r3]
 8001834:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8001838:	f43f a95e 	beq.w	8000af8 <d_print_comp_inner+0x184>
 800183c:	29ff      	cmp	r1, #255	; 0xff
 800183e:	f815 6b01 	ldrb.w	r6, [r5], #1
 8001842:	d1f1      	bne.n	8001828 <d_print_comp_inner+0xeb4>
 8001844:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8001848:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 800184c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8001850:	4620      	mov	r0, r4
 8001852:	4798      	blx	r3
 8001854:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8001858:	3301      	adds	r3, #1
 800185a:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 800185e:	2101      	movs	r1, #1
 8001860:	2300      	movs	r3, #0
 8001862:	e7e3      	b.n	800182c <d_print_comp_inner+0xeb8>
 8001864:	08011153 	.word	0x08011153
 8001868:	0801113f 	.word	0x0801113f
 800186c:	0801120b 	.word	0x0801120b
 8001870:	080111f3 	.word	0x080111f3
 8001874:	080111d7 	.word	0x080111d7
 8001878:	080111bf 	.word	0x080111bf
 800187c:	080111ab 	.word	0x080111ab
 8001880:	0801119b 	.word	0x0801119b
 8001884:	0801117f 	.word	0x0801117f
 8001888:	6868      	ldr	r0, [r5, #4]
 800188a:	7803      	ldrb	r3, [r0, #0]
 800188c:	2b05      	cmp	r3, #5
 800188e:	f000 8699 	beq.w	80025c4 <d_print_comp_inner+0x1c50>
 8001892:	f04f 0800 	mov.w	r8, #0
 8001896:	2b23      	cmp	r3, #35	; 0x23
 8001898:	f000 8596 	beq.w	80023c8 <d_print_comp_inner+0x1a54>
 800189c:	782a      	ldrb	r2, [r5, #0]
 800189e:	429a      	cmp	r2, r3
 80018a0:	f000 8592 	beq.w	80023c8 <d_print_comp_inner+0x1a54>
 80018a4:	2b24      	cmp	r3, #36	; 0x24
 80018a6:	f001 808d 	beq.w	80029c4 <d_print_comp_inner+0x2050>
 80018aa:	f8d4 0114 	ldr.w	r0, [r4, #276]	; 0x114
 80018ae:	f8d4 2110 	ldr.w	r2, [r4, #272]	; 0x110
 80018b2:	9505      	str	r5, [sp, #20]
 80018b4:	ab14      	add	r3, sp, #80	; 0x50
 80018b6:	2100      	movs	r1, #0
 80018b8:	f843 0d40 	str.w	r0, [r3, #-64]!
 80018bc:	9106      	str	r1, [sp, #24]
 80018be:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 80018c2:	9207      	str	r2, [sp, #28]
 80018c4:	686a      	ldr	r2, [r5, #4]
 80018c6:	4639      	mov	r1, r7
 80018c8:	4620      	mov	r0, r4
 80018ca:	f001 fc6d 	bl	80031a8 <d_print_comp>
 80018ce:	9b06      	ldr	r3, [sp, #24]
 80018d0:	2b00      	cmp	r3, #0
 80018d2:	f000 848d 	beq.w	80021f0 <d_print_comp_inner+0x187c>
 80018d6:	9b04      	ldr	r3, [sp, #16]
 80018d8:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 80018dc:	f1b8 0f00 	cmp.w	r8, #0
 80018e0:	f43f a90a 	beq.w	8000af8 <d_print_comp_inner+0x184>
 80018e4:	f8c4 6110 	str.w	r6, [r4, #272]	; 0x110
 80018e8:	f7ff b906 	b.w	8000af8 <d_print_comp_inner+0x184>
 80018ec:	f8d0 0114 	ldr.w	r0, [r0, #276]	; 0x114
 80018f0:	f04f 0800 	mov.w	r8, #0
 80018f4:	e7db      	b.n	80018ae <d_print_comp_inner+0xf3a>
 80018f6:	f8d0 c114 	ldr.w	ip, [r0, #276]	; 0x114
 80018fa:	f1bc 0f00 	cmp.w	ip, #0
 80018fe:	f001 8321 	beq.w	8002f44 <d_print_comp_inner+0x25d0>
 8001902:	4662      	mov	r2, ip
 8001904:	6891      	ldr	r1, [r2, #8]
 8001906:	b951      	cbnz	r1, 800191e <d_print_comp_inner+0xfaa>
 8001908:	6850      	ldr	r0, [r2, #4]
 800190a:	7800      	ldrb	r0, [r0, #0]
 800190c:	f1a0 0e19 	sub.w	lr, r0, #25
 8001910:	f1be 0f02 	cmp.w	lr, #2
 8001914:	f200 8705 	bhi.w	8002722 <d_print_comp_inner+0x1dae>
 8001918:	4283      	cmp	r3, r0
 800191a:	f000 8706 	beq.w	800272a <d_print_comp_inner+0x1db6>
 800191e:	6812      	ldr	r2, [r2, #0]
 8001920:	2a00      	cmp	r2, #0
 8001922:	d1ef      	bne.n	8001904 <d_print_comp_inner+0xf90>
 8001924:	4660      	mov	r0, ip
 8001926:	4690      	mov	r8, r2
 8001928:	e7c1      	b.n	80018ae <d_print_comp_inner+0xf3a>
 800192a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 800192e:	29ff      	cmp	r1, #255	; 0xff
 8001930:	f000 876b 	beq.w	800280a <d_print_comp_inner+0x1e96>
 8001934:	1c4a      	adds	r2, r1, #1
 8001936:	237e      	movs	r3, #126	; 0x7e
 8001938:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800193c:	5463      	strb	r3, [r4, r1]
 800193e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8001942:	4639      	mov	r1, r7
 8001944:	68aa      	ldr	r2, [r5, #8]
 8001946:	4620      	mov	r0, r4
 8001948:	f001 fc2e 	bl	80031a8 <d_print_comp>
 800194c:	f7ff b8d4 	b.w	8000af8 <d_print_comp_inner+0x184>
 8001950:	686a      	ldr	r2, [r5, #4]
 8001952:	f001 fc29 	bl	80031a8 <d_print_comp>
 8001956:	f7ff b8cf 	b.w	8000af8 <d_print_comp_inner+0x184>
 800195a:	4edd      	ldr	r6, [pc, #884]	; (8001cd0 <d_print_comp_inner+0x135c>)
 800195c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8001960:	f106 0a0d 	add.w	sl, r6, #13
 8001964:	f04f 0900 	mov.w	r9, #0
 8001968:	e00a      	b.n	8001980 <d_print_comp_inner+0x100c>
 800196a:	460b      	mov	r3, r1
 800196c:	3101      	adds	r1, #1
 800196e:	45b2      	cmp	sl, r6
 8001970:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8001974:	f804 8003 	strb.w	r8, [r4, r3]
 8001978:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 800197c:	f000 83e8 	beq.w	8002150 <d_print_comp_inner+0x17dc>
 8001980:	29ff      	cmp	r1, #255	; 0xff
 8001982:	f816 8b01 	ldrb.w	r8, [r6], #1
 8001986:	d1f0      	bne.n	800196a <d_print_comp_inner+0xff6>
 8001988:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800198c:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8001990:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8001994:	4620      	mov	r0, r4
 8001996:	4798      	blx	r3
 8001998:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800199c:	3301      	adds	r3, #1
 800199e:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 80019a2:	2101      	movs	r1, #1
 80019a4:	2300      	movs	r3, #0
 80019a6:	e7e2      	b.n	800196e <d_print_comp_inner+0xffa>
 80019a8:	4eca      	ldr	r6, [pc, #808]	; (8001cd4 <d_print_comp_inner+0x1360>)
 80019aa:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80019ae:	f106 0a18 	add.w	sl, r6, #24
 80019b2:	f04f 0900 	mov.w	r9, #0
 80019b6:	e00a      	b.n	80019ce <d_print_comp_inner+0x105a>
 80019b8:	460b      	mov	r3, r1
 80019ba:	3101      	adds	r1, #1
 80019bc:	45b2      	cmp	sl, r6
 80019be:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80019c2:	f804 8003 	strb.w	r8, [r4, r3]
 80019c6:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 80019ca:	f000 83c8 	beq.w	800215e <d_print_comp_inner+0x17ea>
 80019ce:	29ff      	cmp	r1, #255	; 0xff
 80019d0:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 80019d4:	d1f0      	bne.n	80019b8 <d_print_comp_inner+0x1044>
 80019d6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80019da:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80019de:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80019e2:	4620      	mov	r0, r4
 80019e4:	4798      	blx	r3
 80019e6:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80019ea:	3301      	adds	r3, #1
 80019ec:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 80019f0:	2101      	movs	r1, #1
 80019f2:	2300      	movs	r3, #0
 80019f4:	e7e2      	b.n	80019bc <d_print_comp_inner+0x1048>
 80019f6:	4eb8      	ldr	r6, [pc, #736]	; (8001cd8 <d_print_comp_inner+0x1364>)
 80019f8:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80019fc:	f106 0a08 	add.w	sl, r6, #8
 8001a00:	f04f 0900 	mov.w	r9, #0
 8001a04:	e00a      	b.n	8001a1c <d_print_comp_inner+0x10a8>
 8001a06:	460b      	mov	r3, r1
 8001a08:	3101      	adds	r1, #1
 8001a0a:	45b2      	cmp	sl, r6
 8001a0c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8001a10:	f804 8003 	strb.w	r8, [r4, r3]
 8001a14:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8001a18:	f000 833e 	beq.w	8002098 <d_print_comp_inner+0x1724>
 8001a1c:	29ff      	cmp	r1, #255	; 0xff
 8001a1e:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 8001a22:	d1f0      	bne.n	8001a06 <d_print_comp_inner+0x1092>
 8001a24:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8001a28:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8001a2c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8001a30:	4620      	mov	r0, r4
 8001a32:	4798      	blx	r3
 8001a34:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8001a38:	3301      	adds	r3, #1
 8001a3a:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8001a3e:	2101      	movs	r1, #1
 8001a40:	2300      	movs	r3, #0
 8001a42:	e7e2      	b.n	8001a0a <d_print_comp_inner+0x1096>
 8001a44:	4ea5      	ldr	r6, [pc, #660]	; (8001cdc <d_print_comp_inner+0x1368>)
 8001a46:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8001a4a:	f106 0a0b 	add.w	sl, r6, #11
 8001a4e:	f04f 0900 	mov.w	r9, #0
 8001a52:	e00a      	b.n	8001a6a <d_print_comp_inner+0x10f6>
 8001a54:	460b      	mov	r3, r1
 8001a56:	3101      	adds	r1, #1
 8001a58:	45b2      	cmp	sl, r6
 8001a5a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8001a5e:	f804 8003 	strb.w	r8, [r4, r3]
 8001a62:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8001a66:	f000 819a 	beq.w	8001d9e <d_print_comp_inner+0x142a>
 8001a6a:	29ff      	cmp	r1, #255	; 0xff
 8001a6c:	f816 8b01 	ldrb.w	r8, [r6], #1
 8001a70:	d1f0      	bne.n	8001a54 <d_print_comp_inner+0x10e0>
 8001a72:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8001a76:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8001a7a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8001a7e:	4620      	mov	r0, r4
 8001a80:	4798      	blx	r3
 8001a82:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8001a86:	3301      	adds	r3, #1
 8001a88:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8001a8c:	2101      	movs	r1, #1
 8001a8e:	2300      	movs	r3, #0
 8001a90:	e7e2      	b.n	8001a58 <d_print_comp_inner+0x10e4>
 8001a92:	2300      	movs	r3, #0
 8001a94:	f8d0 9114 	ldr.w	r9, [r0, #276]	; 0x114
 8001a98:	f8d0 8140 	ldr.w	r8, [r0, #320]	; 0x140
 8001a9c:	f8c0 3114 	str.w	r3, [r0, #276]	; 0x114
 8001aa0:	f8c0 5140 	str.w	r5, [r0, #320]	; 0x140
 8001aa4:	074a      	lsls	r2, r1, #29
 8001aa6:	686e      	ldr	r6, [r5, #4]
 8001aa8:	d505      	bpl.n	8001ab6 <d_print_comp_inner+0x1142>
 8001aaa:	7833      	ldrb	r3, [r6, #0]
 8001aac:	b91b      	cbnz	r3, 8001ab6 <d_print_comp_inner+0x1142>
 8001aae:	68b2      	ldr	r2, [r6, #8]
 8001ab0:	2a06      	cmp	r2, #6
 8001ab2:	f001 808d 	beq.w	8002bd0 <d_print_comp_inner+0x225c>
 8001ab6:	4632      	mov	r2, r6
 8001ab8:	4639      	mov	r1, r7
 8001aba:	4620      	mov	r0, r4
 8001abc:	f001 fb74 	bl	80031a8 <d_print_comp>
 8001ac0:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8001ac4:	2b3c      	cmp	r3, #60	; 0x3c
 8001ac6:	f000 85ea 	beq.w	800269e <d_print_comp_inner+0x1d2a>
 8001aca:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8001ace:	2bff      	cmp	r3, #255	; 0xff
 8001ad0:	f000 879e 	beq.w	8002a10 <d_print_comp_inner+0x209c>
 8001ad4:	1c59      	adds	r1, r3, #1
 8001ad6:	223c      	movs	r2, #60	; 0x3c
 8001ad8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8001adc:	54e2      	strb	r2, [r4, r3]
 8001ade:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8001ae2:	4639      	mov	r1, r7
 8001ae4:	68aa      	ldr	r2, [r5, #8]
 8001ae6:	4620      	mov	r0, r4
 8001ae8:	f001 fb5e 	bl	80031a8 <d_print_comp>
 8001aec:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8001af0:	2b3e      	cmp	r3, #62	; 0x3e
 8001af2:	f000 85c6 	beq.w	8002682 <d_print_comp_inner+0x1d0e>
 8001af6:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8001afa:	2bff      	cmp	r3, #255	; 0xff
 8001afc:	f000 8775 	beq.w	80029ea <d_print_comp_inner+0x2076>
 8001b00:	1c59      	adds	r1, r3, #1
 8001b02:	223e      	movs	r2, #62	; 0x3e
 8001b04:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8001b08:	54e2      	strb	r2, [r4, r3]
 8001b0a:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8001b0e:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
 8001b12:	f8c4 8140 	str.w	r8, [r4, #320]	; 0x140
 8001b16:	f7fe bfef 	b.w	8000af8 <d_print_comp_inner+0x184>
 8001b1a:	2200      	movs	r2, #0
 8001b1c:	f8d0 3114 	ldr.w	r3, [r0, #276]	; 0x114
 8001b20:	f8c0 2114 	str.w	r2, [r0, #276]	; 0x114
 8001b24:	686e      	ldr	r6, [r5, #4]
 8001b26:	9300      	str	r3, [sp, #0]
 8001b28:	2e00      	cmp	r6, #0
 8001b2a:	f000 8133 	beq.w	8001d94 <d_print_comp_inner+0x1420>
 8001b2e:	f10d 0910 	add.w	r9, sp, #16
 8001b32:	f8d0 c110 	ldr.w	ip, [r0, #272]	; 0x110
 8001b36:	4696      	mov	lr, r2
 8001b38:	4610      	mov	r0, r2
 8001b3a:	464b      	mov	r3, r9
 8001b3c:	7831      	ldrb	r1, [r6, #0]
 8001b3e:	601a      	str	r2, [r3, #0]
 8001b40:	f1a1 0a1c 	sub.w	sl, r1, #28
 8001b44:	f1ba 0f04 	cmp.w	sl, #4
 8001b48:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8001b4c:	605e      	str	r6, [r3, #4]
 8001b4e:	6098      	str	r0, [r3, #8]
 8001b50:	f8c3 c00c 	str.w	ip, [r3, #12]
 8001b54:	461a      	mov	r2, r3
 8001b56:	f10e 0801 	add.w	r8, lr, #1
 8001b5a:	f103 0310 	add.w	r3, r3, #16
 8001b5e:	f240 8112 	bls.w	8001d86 <d_print_comp_inner+0x1412>
 8001b62:	2904      	cmp	r1, #4
 8001b64:	f001 8195 	beq.w	8002e92 <d_print_comp_inner+0x251e>
 8001b68:	2902      	cmp	r1, #2
 8001b6a:	d137      	bne.n	8001bdc <d_print_comp_inner+0x1268>
 8001b6c:	f8d6 b008 	ldr.w	fp, [r6, #8]
 8001b70:	f89b 3000 	ldrb.w	r3, [fp]
 8001b74:	2b45      	cmp	r3, #69	; 0x45
 8001b76:	bf08      	it	eq
 8001b78:	f8db b004 	ldreq.w	fp, [fp, #4]
 8001b7c:	f89b 3000 	ldrb.w	r3, [fp]
 8001b80:	3b1c      	subs	r3, #28
 8001b82:	2b04      	cmp	r3, #4
 8001b84:	d82a      	bhi.n	8001bdc <d_print_comp_inner+0x1268>
 8001b86:	f1b8 0f04 	cmp.w	r8, #4
 8001b8a:	f000 8103 	beq.w	8001d94 <d_print_comp_inner+0x1420>
 8001b8e:	462b      	mov	r3, r5
 8001b90:	eb09 1e0e 	add.w	lr, r9, lr, lsl #4
 8001b94:	46b2      	mov	sl, r6
 8001b96:	465d      	mov	r5, fp
 8001b98:	4666      	mov	r6, ip
 8001b9a:	469b      	mov	fp, r3
 8001b9c:	46a4      	mov	ip, r4
 8001b9e:	4674      	mov	r4, lr
 8001ba0:	e003      	b.n	8001baa <d_print_comp_inner+0x1236>
 8001ba2:	f1b8 0f04 	cmp.w	r8, #4
 8001ba6:	f001 81b9 	beq.w	8002f1c <d_print_comp_inner+0x25a8>
 8001baa:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8001bae:	f104 0e10 	add.w	lr, r4, #16
 8001bb2:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
 8001bb6:	4623      	mov	r3, r4
 8001bb8:	2200      	movs	r2, #0
 8001bba:	611c      	str	r4, [r3, #16]
 8001bbc:	605d      	str	r5, [r3, #4]
 8001bbe:	609a      	str	r2, [r3, #8]
 8001bc0:	60de      	str	r6, [r3, #12]
 8001bc2:	f8cc e114 	str.w	lr, [ip, #276]	; 0x114
 8001bc6:	686d      	ldr	r5, [r5, #4]
 8001bc8:	782b      	ldrb	r3, [r5, #0]
 8001bca:	3b1c      	subs	r3, #28
 8001bcc:	2b04      	cmp	r3, #4
 8001bce:	4674      	mov	r4, lr
 8001bd0:	f108 0801 	add.w	r8, r8, #1
 8001bd4:	d9e5      	bls.n	8001ba2 <d_print_comp_inner+0x122e>
 8001bd6:	4656      	mov	r6, sl
 8001bd8:	4664      	mov	r4, ip
 8001bda:	465d      	mov	r5, fp
 8001bdc:	68aa      	ldr	r2, [r5, #8]
 8001bde:	4639      	mov	r1, r7
 8001be0:	4620      	mov	r0, r4
 8001be2:	f001 fae1 	bl	80031a8 <d_print_comp>
 8001be6:	7833      	ldrb	r3, [r6, #0]
 8001be8:	2b04      	cmp	r3, #4
 8001bea:	f001 8192 	beq.w	8002f12 <d_print_comp_inner+0x259e>
 8001bee:	eb09 1908 	add.w	r9, r9, r8, lsl #4
 8001bf2:	4646      	mov	r6, r8
 8001bf4:	2520      	movs	r5, #32
 8001bf6:	46b8      	mov	r8, r7
 8001bf8:	f859 7c08 	ldr.w	r7, [r9, #-8]
 8001bfc:	3e01      	subs	r6, #1
 8001bfe:	b987      	cbnz	r7, 8001c22 <d_print_comp_inner+0x12ae>
 8001c00:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8001c04:	29ff      	cmp	r1, #255	; 0xff
 8001c06:	f001 8174 	beq.w	8002ef2 <d_print_comp_inner+0x257e>
 8001c0a:	1c4b      	adds	r3, r1, #1
 8001c0c:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8001c10:	f859 2c0c 	ldr.w	r2, [r9, #-12]
 8001c14:	5465      	strb	r5, [r4, r1]
 8001c16:	4620      	mov	r0, r4
 8001c18:	4641      	mov	r1, r8
 8001c1a:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8001c1e:	f001 fad3 	bl	80031c8 <d_print_mod>
 8001c22:	f1a9 0910 	sub.w	r9, r9, #16
 8001c26:	2e00      	cmp	r6, #0
 8001c28:	d1e6      	bne.n	8001bf8 <d_print_comp_inner+0x1284>
 8001c2a:	9b00      	ldr	r3, [sp, #0]
 8001c2c:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8001c30:	f7fe bf62 	b.w	8000af8 <d_print_comp_inner+0x184>
 8001c34:	686a      	ldr	r2, [r5, #4]
 8001c36:	f001 fab7 	bl	80031a8 <d_print_comp>
 8001c3a:	f017 0904 	ands.w	r9, r7, #4
 8001c3e:	f000 8477 	beq.w	8002530 <d_print_comp_inner+0x1bbc>
 8001c42:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8001c46:	29ff      	cmp	r1, #255	; 0xff
 8001c48:	f000 87d5 	beq.w	8002bf6 <d_print_comp_inner+0x2282>
 8001c4c:	1c4a      	adds	r2, r1, #1
 8001c4e:	232e      	movs	r3, #46	; 0x2e
 8001c50:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8001c54:	5463      	strb	r3, [r4, r1]
 8001c56:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8001c5a:	f8d5 8008 	ldr.w	r8, [r5, #8]
 8001c5e:	f898 3000 	ldrb.w	r3, [r8]
 8001c62:	2b45      	cmp	r3, #69	; 0x45
 8001c64:	f000 862e 	beq.w	80028c4 <d_print_comp_inner+0x1f50>
 8001c68:	4642      	mov	r2, r8
 8001c6a:	4639      	mov	r1, r7
 8001c6c:	4620      	mov	r0, r4
 8001c6e:	f001 fa9b 	bl	80031a8 <d_print_comp>
 8001c72:	f7fe bf41 	b.w	8000af8 <d_print_comp_inner+0x184>
 8001c76:	f011 0704 	ands.w	r7, r1, #4
 8001c7a:	f040 832d 	bne.w	80022d8 <d_print_comp_inner+0x1964>
 8001c7e:	68ab      	ldr	r3, [r5, #8]
 8001c80:	686d      	ldr	r5, [r5, #4]
 8001c82:	2b00      	cmp	r3, #0
 8001c84:	f43e af38 	beq.w	8000af8 <d_print_comp_inner+0x184>
 8001c88:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8001c8c:	eb05 0803 	add.w	r8, r5, r3
 8001c90:	e009      	b.n	8001ca6 <d_print_comp_inner+0x1332>
 8001c92:	460b      	mov	r3, r1
 8001c94:	3101      	adds	r1, #1
 8001c96:	45a8      	cmp	r8, r5
 8001c98:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8001c9c:	54e6      	strb	r6, [r4, r3]
 8001c9e:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8001ca2:	f43e af29 	beq.w	8000af8 <d_print_comp_inner+0x184>
 8001ca6:	29ff      	cmp	r1, #255	; 0xff
 8001ca8:	f815 6b01 	ldrb.w	r6, [r5], #1
 8001cac:	d1f1      	bne.n	8001c92 <d_print_comp_inner+0x131e>
 8001cae:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8001cb2:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8001cb6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8001cba:	4620      	mov	r0, r4
 8001cbc:	4798      	blx	r3
 8001cbe:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8001cc2:	3301      	adds	r3, #1
 8001cc4:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8001cc8:	2101      	movs	r1, #1
 8001cca:	2300      	movs	r3, #0
 8001ccc:	e7e3      	b.n	8001c96 <d_print_comp_inner+0x1322>
 8001cce:	bf00      	nop
 8001cd0:	08011130 	.word	0x08011130
 8001cd4:	0801110b 	.word	0x0801110b
 8001cd8:	080110ff 	.word	0x080110ff
 8001cdc:	080110f4 	.word	0x080110f4
 8001ce0:	686f      	ldr	r7, [r5, #4]
 8001ce2:	2f00      	cmp	r7, #0
 8001ce4:	f000 8375 	beq.w	80023d2 <d_print_comp_inner+0x1a5e>
 8001ce8:	4ddb      	ldr	r5, [pc, #876]	; (8002058 <d_print_comp_inner+0x16e4>)
 8001cea:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8001cee:	f105 0906 	add.w	r9, r5, #6
 8001cf2:	f04f 0800 	mov.w	r8, #0
 8001cf6:	e009      	b.n	8001d0c <d_print_comp_inner+0x1398>
 8001cf8:	460b      	mov	r3, r1
 8001cfa:	3101      	adds	r1, #1
 8001cfc:	454d      	cmp	r5, r9
 8001cfe:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8001d02:	54e6      	strb	r6, [r4, r3]
 8001d04:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8001d08:	f000 8281 	beq.w	800220e <d_print_comp_inner+0x189a>
 8001d0c:	29ff      	cmp	r1, #255	; 0xff
 8001d0e:	f815 6b01 	ldrb.w	r6, [r5], #1
 8001d12:	d1f1      	bne.n	8001cf8 <d_print_comp_inner+0x1384>
 8001d14:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8001d18:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8001d1c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8001d20:	4620      	mov	r0, r4
 8001d22:	4798      	blx	r3
 8001d24:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8001d28:	3301      	adds	r3, #1
 8001d2a:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8001d2e:	2101      	movs	r1, #1
 8001d30:	2300      	movs	r3, #0
 8001d32:	e7e3      	b.n	8001cfc <d_print_comp_inner+0x1388>
 8001d34:	1d29      	adds	r1, r5, #4
 8001d36:	f7fe fd77 	bl	8000828 <d_lookup_template_argument.isra.6>
 8001d3a:	2800      	cmp	r0, #0
 8001d3c:	f43e aee4 	beq.w	8000b08 <d_print_comp_inner+0x194>
 8001d40:	7803      	ldrb	r3, [r0, #0]
 8001d42:	2b2f      	cmp	r3, #47	; 0x2f
 8001d44:	f000 84fd 	beq.w	8002742 <d_print_comp_inner+0x1dce>
 8001d48:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
 8001d4c:	682b      	ldr	r3, [r5, #0]
 8001d4e:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8001d52:	4602      	mov	r2, r0
 8001d54:	4639      	mov	r1, r7
 8001d56:	4620      	mov	r0, r4
 8001d58:	f001 fa26 	bl	80031a8 <d_print_comp>
 8001d5c:	f8c4 5110 	str.w	r5, [r4, #272]	; 0x110
 8001d60:	f7fe beca 	b.w	8000af8 <d_print_comp_inner+0x184>
 8001d64:	68aa      	ldr	r2, [r5, #8]
 8001d66:	f001 fa1f 	bl	80031a8 <d_print_comp>
 8001d6a:	f7fe bec5 	b.w	8000af8 <d_print_comp_inner+0x184>
 8001d6e:	2301      	movs	r3, #1
 8001d70:	f8c0 3118 	str.w	r3, [r0, #280]	; 0x118
 8001d74:	f7fe bec0 	b.w	8000af8 <d_print_comp_inner+0x184>
 8001d78:	f10b 0b01 	add.w	fp, fp, #1
 8001d7c:	45cb      	cmp	fp, r9
 8001d7e:	f47e af3a 	bne.w	8000bf6 <d_print_comp_inner+0x282>
 8001d82:	f7fe beb9 	b.w	8000af8 <d_print_comp_inner+0x184>
 8001d86:	6876      	ldr	r6, [r6, #4]
 8001d88:	46c6      	mov	lr, r8
 8001d8a:	b11e      	cbz	r6, 8001d94 <d_print_comp_inner+0x1420>
 8001d8c:	f1be 0f04 	cmp.w	lr, #4
 8001d90:	f47f aed4 	bne.w	8001b3c <d_print_comp_inner+0x11c8>
 8001d94:	2301      	movs	r3, #1
 8001d96:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8001d9a:	f7fe bead 	b.w	8000af8 <d_print_comp_inner+0x184>
 8001d9e:	686a      	ldr	r2, [r5, #4]
 8001da0:	4639      	mov	r1, r7
 8001da2:	4620      	mov	r0, r4
 8001da4:	f001 fa00 	bl	80031a8 <d_print_comp>
 8001da8:	f7fe bea6 	b.w	8000af8 <d_print_comp_inner+0x184>
 8001dac:	686a      	ldr	r2, [r5, #4]
 8001dae:	4639      	mov	r1, r7
 8001db0:	4620      	mov	r0, r4
 8001db2:	f001 f9f9 	bl	80031a8 <d_print_comp>
 8001db6:	f7fe be9f 	b.w	8000af8 <d_print_comp_inner+0x184>
 8001dba:	686a      	ldr	r2, [r5, #4]
 8001dbc:	4639      	mov	r1, r7
 8001dbe:	4620      	mov	r0, r4
 8001dc0:	f001 f9f2 	bl	80031a8 <d_print_comp>
 8001dc4:	f7fe be98 	b.w	8000af8 <d_print_comp_inner+0x184>
 8001dc8:	686a      	ldr	r2, [r5, #4]
 8001dca:	4639      	mov	r1, r7
 8001dcc:	4620      	mov	r0, r4
 8001dce:	f001 f9eb 	bl	80031a8 <d_print_comp>
 8001dd2:	f7fe be91 	b.w	8000af8 <d_print_comp_inner+0x184>
 8001dd6:	686a      	ldr	r2, [r5, #4]
 8001dd8:	4639      	mov	r1, r7
 8001dda:	4620      	mov	r0, r4
 8001ddc:	f001 f9e4 	bl	80031a8 <d_print_comp>
 8001de0:	f7fe be8a 	b.w	8000af8 <d_print_comp_inner+0x184>
 8001de4:	686a      	ldr	r2, [r5, #4]
 8001de6:	4639      	mov	r1, r7
 8001de8:	4620      	mov	r0, r4
 8001dea:	f001 f9dd 	bl	80031a8 <d_print_comp>
 8001dee:	f7fe be83 	b.w	8000af8 <d_print_comp_inner+0x184>
 8001df2:	4639      	mov	r1, r7
 8001df4:	686a      	ldr	r2, [r5, #4]
 8001df6:	4620      	mov	r0, r4
 8001df8:	f001 f9d6 	bl	80031a8 <d_print_comp>
 8001dfc:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8001e00:	29ff      	cmp	r1, #255	; 0xff
 8001e02:	f000 84d2 	beq.w	80027aa <d_print_comp_inner+0x1e36>
 8001e06:	1c4a      	adds	r2, r1, #1
 8001e08:	2329      	movs	r3, #41	; 0x29
 8001e0a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8001e0e:	5463      	strb	r3, [r4, r1]
 8001e10:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8001e14:	f7fe be70 	b.w	8000af8 <d_print_comp_inner+0x184>
 8001e18:	686a      	ldr	r2, [r5, #4]
 8001e1a:	4639      	mov	r1, r7
 8001e1c:	4620      	mov	r0, r4
 8001e1e:	f001 f9c3 	bl	80031a8 <d_print_comp>
 8001e22:	f7fe be69 	b.w	8000af8 <d_print_comp_inner+0x184>
 8001e26:	686a      	ldr	r2, [r5, #4]
 8001e28:	498c      	ldr	r1, [pc, #560]	; (800205c <d_print_comp_inner+0x16e8>)
 8001e2a:	3201      	adds	r2, #1
 8001e2c:	a804      	add	r0, sp, #16
 8001e2e:	f00b fd71 	bl	800d914 <sprintf>
 8001e32:	a804      	add	r0, sp, #16
 8001e34:	f006 fb5e 	bl	80084f4 <strlen>
 8001e38:	b318      	cbz	r0, 8001e82 <d_print_comp_inner+0x150e>
 8001e3a:	ad04      	add	r5, sp, #16
 8001e3c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8001e40:	182f      	adds	r7, r5, r0
 8001e42:	f04f 0800 	mov.w	r8, #0
 8001e46:	e008      	b.n	8001e5a <d_print_comp_inner+0x14e6>
 8001e48:	460b      	mov	r3, r1
 8001e4a:	3101      	adds	r1, #1
 8001e4c:	42af      	cmp	r7, r5
 8001e4e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8001e52:	54e6      	strb	r6, [r4, r3]
 8001e54:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8001e58:	d015      	beq.n	8001e86 <d_print_comp_inner+0x1512>
 8001e5a:	29ff      	cmp	r1, #255	; 0xff
 8001e5c:	f815 6b01 	ldrb.w	r6, [r5], #1
 8001e60:	d1f2      	bne.n	8001e48 <d_print_comp_inner+0x14d4>
 8001e62:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8001e66:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8001e6a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8001e6e:	4620      	mov	r0, r4
 8001e70:	4798      	blx	r3
 8001e72:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8001e76:	3301      	adds	r3, #1
 8001e78:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8001e7c:	2101      	movs	r1, #1
 8001e7e:	2300      	movs	r3, #0
 8001e80:	e7e4      	b.n	8001e4c <d_print_comp_inner+0x14d8>
 8001e82:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8001e86:	29ff      	cmp	r1, #255	; 0xff
 8001e88:	f000 84d0 	beq.w	800282c <d_print_comp_inner+0x1eb8>
 8001e8c:	1c4a      	adds	r2, r1, #1
 8001e8e:	237d      	movs	r3, #125	; 0x7d
 8001e90:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8001e94:	5463      	strb	r3, [r4, r1]
 8001e96:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8001e9a:	f7fe be2d 	b.w	8000af8 <d_print_comp_inner+0x184>
 8001e9e:	4e70      	ldr	r6, [pc, #448]	; (8002060 <d_print_comp_inner+0x16ec>)
 8001ea0:	686a      	ldr	r2, [r5, #4]
 8001ea2:	4639      	mov	r1, r7
 8001ea4:	4620      	mov	r0, r4
 8001ea6:	f001 f97f 	bl	80031a8 <d_print_comp>
 8001eaa:	f106 0902 	add.w	r9, r6, #2
 8001eae:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8001eb2:	f04f 0800 	mov.w	r8, #0
 8001eb6:	e008      	b.n	8001eca <d_print_comp_inner+0x1556>
 8001eb8:	460b      	mov	r3, r1
 8001eba:	3101      	adds	r1, #1
 8001ebc:	45b1      	cmp	r9, r6
 8001ebe:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8001ec2:	54e7      	strb	r7, [r4, r3]
 8001ec4:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8001ec8:	d068      	beq.n	8001f9c <d_print_comp_inner+0x1628>
 8001eca:	29ff      	cmp	r1, #255	; 0xff
 8001ecc:	f816 7b01 	ldrb.w	r7, [r6], #1
 8001ed0:	d1f2      	bne.n	8001eb8 <d_print_comp_inner+0x1544>
 8001ed2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8001ed6:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8001eda:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8001ede:	4620      	mov	r0, r4
 8001ee0:	4798      	blx	r3
 8001ee2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8001ee6:	3301      	adds	r3, #1
 8001ee8:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8001eec:	2101      	movs	r1, #1
 8001eee:	2300      	movs	r3, #0
 8001ef0:	e7e4      	b.n	8001ebc <d_print_comp_inner+0x1548>
 8001ef2:	686a      	ldr	r2, [r5, #4]
 8001ef4:	4639      	mov	r1, r7
 8001ef6:	4620      	mov	r0, r4
 8001ef8:	f001 f956 	bl	80031a8 <d_print_comp>
 8001efc:	f7fe bdfc 	b.w	8000af8 <d_print_comp_inner+0x184>
 8001f00:	f8da 5004 	ldr.w	r5, [sl, #4]
 8001f04:	782b      	ldrb	r3, [r5, #0]
 8001f06:	3b61      	subs	r3, #97	; 0x61
 8001f08:	2b19      	cmp	r3, #25
 8001f0a:	d80b      	bhi.n	8001f24 <d_print_comp_inner+0x15b0>
 8001f0c:	29ff      	cmp	r1, #255	; 0xff
 8001f0e:	f000 8729 	beq.w	8002d64 <d_print_comp_inner+0x23f0>
 8001f12:	2320      	movs	r3, #32
 8001f14:	1c4a      	adds	r2, r1, #1
 8001f16:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8001f1a:	5463      	strb	r3, [r4, r1]
 8001f1c:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8001f20:	f8da 5004 	ldr.w	r5, [sl, #4]
 8001f24:	19eb      	adds	r3, r5, r7
 8001f26:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8001f2a:	2b20      	cmp	r3, #32
 8001f2c:	bf08      	it	eq
 8001f2e:	f107 37ff 	addeq.w	r7, r7, #4294967295
 8001f32:	2f00      	cmp	r7, #0
 8001f34:	f43e ade0 	beq.w	8000af8 <d_print_comp_inner+0x184>
 8001f38:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8001f3c:	442f      	add	r7, r5
 8001f3e:	f04f 0800 	mov.w	r8, #0
 8001f42:	e009      	b.n	8001f58 <d_print_comp_inner+0x15e4>
 8001f44:	460b      	mov	r3, r1
 8001f46:	3101      	adds	r1, #1
 8001f48:	42af      	cmp	r7, r5
 8001f4a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8001f4e:	54e6      	strb	r6, [r4, r3]
 8001f50:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8001f54:	f43e add0 	beq.w	8000af8 <d_print_comp_inner+0x184>
 8001f58:	29ff      	cmp	r1, #255	; 0xff
 8001f5a:	f815 6b01 	ldrb.w	r6, [r5], #1
 8001f5e:	d1f1      	bne.n	8001f44 <d_print_comp_inner+0x15d0>
 8001f60:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8001f64:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8001f68:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8001f6c:	4620      	mov	r0, r4
 8001f6e:	4798      	blx	r3
 8001f70:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8001f74:	3301      	adds	r3, #1
 8001f76:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8001f7a:	2101      	movs	r1, #1
 8001f7c:	2300      	movs	r3, #0
 8001f7e:	e7e3      	b.n	8001f48 <d_print_comp_inner+0x15d4>
 8001f80:	686a      	ldr	r2, [r5, #4]
 8001f82:	4639      	mov	r1, r7
 8001f84:	4620      	mov	r0, r4
 8001f86:	f001 f90f 	bl	80031a8 <d_print_comp>
 8001f8a:	f7fe bdb5 	b.w	8000af8 <d_print_comp_inner+0x184>
 8001f8e:	686a      	ldr	r2, [r5, #4]
 8001f90:	4639      	mov	r1, r7
 8001f92:	4620      	mov	r0, r4
 8001f94:	f001 f908 	bl	80031a8 <d_print_comp>
 8001f98:	f7fe bdae 	b.w	8000af8 <d_print_comp_inner+0x184>
 8001f9c:	68aa      	ldr	r2, [r5, #8]
 8001f9e:	492f      	ldr	r1, [pc, #188]	; (800205c <d_print_comp_inner+0x16e8>)
 8001fa0:	3201      	adds	r2, #1
 8001fa2:	a804      	add	r0, sp, #16
 8001fa4:	f00b fcb6 	bl	800d914 <sprintf>
 8001fa8:	a804      	add	r0, sp, #16
 8001faa:	f006 faa3 	bl	80084f4 <strlen>
 8001fae:	b318      	cbz	r0, 8001ff8 <d_print_comp_inner+0x1684>
 8001fb0:	ad04      	add	r5, sp, #16
 8001fb2:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8001fb6:	182f      	adds	r7, r5, r0
 8001fb8:	f04f 0800 	mov.w	r8, #0
 8001fbc:	e008      	b.n	8001fd0 <d_print_comp_inner+0x165c>
 8001fbe:	460b      	mov	r3, r1
 8001fc0:	3101      	adds	r1, #1
 8001fc2:	42af      	cmp	r7, r5
 8001fc4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8001fc8:	54e6      	strb	r6, [r4, r3]
 8001fca:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8001fce:	d015      	beq.n	8001ffc <d_print_comp_inner+0x1688>
 8001fd0:	29ff      	cmp	r1, #255	; 0xff
 8001fd2:	f815 6b01 	ldrb.w	r6, [r5], #1
 8001fd6:	d1f2      	bne.n	8001fbe <d_print_comp_inner+0x164a>
 8001fd8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8001fdc:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8001fe0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8001fe4:	4620      	mov	r0, r4
 8001fe6:	4798      	blx	r3
 8001fe8:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8001fec:	3301      	adds	r3, #1
 8001fee:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8001ff2:	2101      	movs	r1, #1
 8001ff4:	2300      	movs	r3, #0
 8001ff6:	e7e4      	b.n	8001fc2 <d_print_comp_inner+0x164e>
 8001ff8:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8001ffc:	29ff      	cmp	r1, #255	; 0xff
 8001ffe:	f000 844a 	beq.w	8002896 <d_print_comp_inner+0x1f22>
 8002002:	1c4a      	adds	r2, r1, #1
 8002004:	237d      	movs	r3, #125	; 0x7d
 8002006:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800200a:	5463      	strb	r3, [r4, r1]
 800200c:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8002010:	f7fe bd72 	b.w	8000af8 <d_print_comp_inner+0x184>
 8002014:	1d2a      	adds	r2, r5, #4
 8002016:	4639      	mov	r1, r7
 8002018:	4620      	mov	r0, r4
 800201a:	f001 fe5f 	bl	8003cdc <d_print_cast.isra.12>
 800201e:	f7fe bd6b 	b.w	8000af8 <d_print_comp_inner+0x184>
 8002022:	4639      	mov	r1, r7
 8002024:	68aa      	ldr	r2, [r5, #8]
 8002026:	4620      	mov	r0, r4
 8002028:	f001 f8be 	bl	80031a8 <d_print_comp>
 800202c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002030:	29ff      	cmp	r1, #255	; 0xff
 8002032:	f000 841e 	beq.w	8002872 <d_print_comp_inner+0x1efe>
 8002036:	1c4a      	adds	r2, r1, #1
 8002038:	235d      	movs	r3, #93	; 0x5d
 800203a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800203e:	5463      	strb	r3, [r4, r1]
 8002040:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8002044:	f7fe bd58 	b.w	8000af8 <d_print_comp_inner+0x184>
 8002048:	686a      	ldr	r2, [r5, #4]
 800204a:	4639      	mov	r1, r7
 800204c:	4620      	mov	r0, r4
 800204e:	f001 f8ab 	bl	80031a8 <d_print_comp>
 8002052:	f7fe bd51 	b.w	8000af8 <d_print_comp_inner+0x184>
 8002056:	bf00      	nop
 8002058:	080112d8 	.word	0x080112d8
 800205c:	080110e0 	.word	0x080110e0
 8002060:	0801132c 	.word	0x0801132c
 8002064:	68aa      	ldr	r2, [r5, #8]
 8002066:	4639      	mov	r1, r7
 8002068:	4620      	mov	r0, r4
 800206a:	f001 f89d 	bl	80031a8 <d_print_comp>
 800206e:	f7fe bd43 	b.w	8000af8 <d_print_comp_inner+0x184>
 8002072:	4639      	mov	r1, r7
 8002074:	68aa      	ldr	r2, [r5, #8]
 8002076:	4620      	mov	r0, r4
 8002078:	f001 f896 	bl	80031a8 <d_print_comp>
 800207c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002080:	29ff      	cmp	r1, #255	; 0xff
 8002082:	f000 83e5 	beq.w	8002850 <d_print_comp_inner+0x1edc>
 8002086:	1c4a      	adds	r2, r1, #1
 8002088:	235d      	movs	r3, #93	; 0x5d
 800208a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800208e:	5463      	strb	r3, [r4, r1]
 8002090:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8002094:	f7fe bd30 	b.w	8000af8 <d_print_comp_inner+0x184>
 8002098:	686a      	ldr	r2, [r5, #4]
 800209a:	4639      	mov	r1, r7
 800209c:	4620      	mov	r0, r4
 800209e:	f001 f883 	bl	80031a8 <d_print_comp>
 80020a2:	f7fe bd29 	b.w	8000af8 <d_print_comp_inner+0x184>
 80020a6:	686a      	ldr	r2, [r5, #4]
 80020a8:	4639      	mov	r1, r7
 80020aa:	4620      	mov	r0, r4
 80020ac:	f001 f87c 	bl	80031a8 <d_print_comp>
 80020b0:	f7fe bd22 	b.w	8000af8 <d_print_comp_inner+0x184>
 80020b4:	686a      	ldr	r2, [r5, #4]
 80020b6:	4639      	mov	r1, r7
 80020b8:	4620      	mov	r0, r4
 80020ba:	f001 f875 	bl	80031a8 <d_print_comp>
 80020be:	f7fe bd1b 	b.w	8000af8 <d_print_comp_inner+0x184>
 80020c2:	4ed6      	ldr	r6, [pc, #856]	; (800241c <d_print_comp_inner+0x1aa8>)
 80020c4:	68aa      	ldr	r2, [r5, #8]
 80020c6:	4639      	mov	r1, r7
 80020c8:	4620      	mov	r0, r4
 80020ca:	f001 f86d 	bl	80031a8 <d_print_comp>
 80020ce:	f106 0a05 	add.w	sl, r6, #5
 80020d2:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80020d6:	f04f 0900 	mov.w	r9, #0
 80020da:	e009      	b.n	80020f0 <d_print_comp_inner+0x177c>
 80020dc:	460b      	mov	r3, r1
 80020de:	3101      	adds	r1, #1
 80020e0:	45b2      	cmp	sl, r6
 80020e2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80020e6:	f804 8003 	strb.w	r8, [r4, r3]
 80020ea:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 80020ee:	d028      	beq.n	8002142 <d_print_comp_inner+0x17ce>
 80020f0:	29ff      	cmp	r1, #255	; 0xff
 80020f2:	f816 8b01 	ldrb.w	r8, [r6], #1
 80020f6:	d1f1      	bne.n	80020dc <d_print_comp_inner+0x1768>
 80020f8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80020fc:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002100:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002104:	4620      	mov	r0, r4
 8002106:	4798      	blx	r3
 8002108:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800210c:	3301      	adds	r3, #1
 800210e:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8002112:	2101      	movs	r1, #1
 8002114:	2300      	movs	r3, #0
 8002116:	e7e3      	b.n	80020e0 <d_print_comp_inner+0x176c>
 8002118:	686a      	ldr	r2, [r5, #4]
 800211a:	4639      	mov	r1, r7
 800211c:	4620      	mov	r0, r4
 800211e:	f001 f843 	bl	80031a8 <d_print_comp>
 8002122:	f7fe bce9 	b.w	8000af8 <d_print_comp_inner+0x184>
 8002126:	686a      	ldr	r2, [r5, #4]
 8002128:	4639      	mov	r1, r7
 800212a:	4620      	mov	r0, r4
 800212c:	f001 f83c 	bl	80031a8 <d_print_comp>
 8002130:	f7fe bce2 	b.w	8000af8 <d_print_comp_inner+0x184>
 8002134:	686a      	ldr	r2, [r5, #4]
 8002136:	4639      	mov	r1, r7
 8002138:	4620      	mov	r0, r4
 800213a:	f001 f835 	bl	80031a8 <d_print_comp>
 800213e:	f7fe bcdb 	b.w	8000af8 <d_print_comp_inner+0x184>
 8002142:	686a      	ldr	r2, [r5, #4]
 8002144:	4639      	mov	r1, r7
 8002146:	4620      	mov	r0, r4
 8002148:	f001 f82e 	bl	80031a8 <d_print_comp>
 800214c:	f7fe bcd4 	b.w	8000af8 <d_print_comp_inner+0x184>
 8002150:	686a      	ldr	r2, [r5, #4]
 8002152:	4639      	mov	r1, r7
 8002154:	4620      	mov	r0, r4
 8002156:	f001 f827 	bl	80031a8 <d_print_comp>
 800215a:	f7fe bccd 	b.w	8000af8 <d_print_comp_inner+0x184>
 800215e:	4eb0      	ldr	r6, [pc, #704]	; (8002420 <d_print_comp_inner+0x1aac>)
 8002160:	686a      	ldr	r2, [r5, #4]
 8002162:	4639      	mov	r1, r7
 8002164:	4620      	mov	r0, r4
 8002166:	f001 f81f 	bl	80031a8 <d_print_comp>
 800216a:	f106 0a04 	add.w	sl, r6, #4
 800216e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002172:	f04f 0900 	mov.w	r9, #0
 8002176:	e009      	b.n	800218c <d_print_comp_inner+0x1818>
 8002178:	460b      	mov	r3, r1
 800217a:	3101      	adds	r1, #1
 800217c:	4556      	cmp	r6, sl
 800217e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002182:	f804 8003 	strb.w	r8, [r4, r3]
 8002186:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 800218a:	d013      	beq.n	80021b4 <d_print_comp_inner+0x1840>
 800218c:	29ff      	cmp	r1, #255	; 0xff
 800218e:	f816 8b01 	ldrb.w	r8, [r6], #1
 8002192:	d1f1      	bne.n	8002178 <d_print_comp_inner+0x1804>
 8002194:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002198:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800219c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80021a0:	4620      	mov	r0, r4
 80021a2:	4798      	blx	r3
 80021a4:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80021a8:	3301      	adds	r3, #1
 80021aa:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 80021ae:	2101      	movs	r1, #1
 80021b0:	2300      	movs	r3, #0
 80021b2:	e7e3      	b.n	800217c <d_print_comp_inner+0x1808>
 80021b4:	68aa      	ldr	r2, [r5, #8]
 80021b6:	4639      	mov	r1, r7
 80021b8:	4620      	mov	r0, r4
 80021ba:	f000 fff5 	bl	80031a8 <d_print_comp>
 80021be:	f7fe bc9b 	b.w	8000af8 <d_print_comp_inner+0x184>
 80021c2:	68aa      	ldr	r2, [r5, #8]
 80021c4:	f8d4 5120 	ldr.w	r5, [r4, #288]	; 0x120
 80021c8:	460e      	mov	r6, r1
 80021ca:	4620      	mov	r0, r4
 80021cc:	4639      	mov	r1, r7
 80021ce:	f000 ffeb 	bl	80031a8 <d_print_comp>
 80021d2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80021d6:	429d      	cmp	r5, r3
 80021d8:	f47e ac8e 	bne.w	8000af8 <d_print_comp_inner+0x184>
 80021dc:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80021e0:	42b3      	cmp	r3, r6
 80021e2:	f47e ac89 	bne.w	8000af8 <d_print_comp_inner+0x184>
 80021e6:	3e02      	subs	r6, #2
 80021e8:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 80021ec:	f7fe bc84 	b.w	8000af8 <d_print_comp_inner+0x184>
 80021f0:	462a      	mov	r2, r5
 80021f2:	4639      	mov	r1, r7
 80021f4:	4620      	mov	r0, r4
 80021f6:	f000 ffe7 	bl	80031c8 <d_print_mod>
 80021fa:	f7ff bb6c 	b.w	80018d6 <d_print_comp_inner+0xf62>
 80021fe:	686b      	ldr	r3, [r5, #4]
 8002200:	9300      	str	r3, [sp, #0]
 8002202:	f1b9 0f00 	cmp.w	r9, #0
 8002206:	f47e acf0 	bne.w	8000bea <d_print_comp_inner+0x276>
 800220a:	f7fe bc75 	b.w	8000af8 <d_print_comp_inner+0x184>
 800220e:	463a      	mov	r2, r7
 8002210:	a804      	add	r0, sp, #16
 8002212:	4984      	ldr	r1, [pc, #528]	; (8002424 <d_print_comp_inner+0x1ab0>)
 8002214:	f00b fb7e 	bl	800d914 <sprintf>
 8002218:	a804      	add	r0, sp, #16
 800221a:	f006 f96b 	bl	80084f4 <strlen>
 800221e:	b318      	cbz	r0, 8002268 <d_print_comp_inner+0x18f4>
 8002220:	ad04      	add	r5, sp, #16
 8002222:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002226:	182f      	adds	r7, r5, r0
 8002228:	f04f 0800 	mov.w	r8, #0
 800222c:	e008      	b.n	8002240 <d_print_comp_inner+0x18cc>
 800222e:	460b      	mov	r3, r1
 8002230:	3101      	adds	r1, #1
 8002232:	42bd      	cmp	r5, r7
 8002234:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002238:	54e6      	strb	r6, [r4, r3]
 800223a:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 800223e:	d015      	beq.n	800226c <d_print_comp_inner+0x18f8>
 8002240:	29ff      	cmp	r1, #255	; 0xff
 8002242:	f815 6b01 	ldrb.w	r6, [r5], #1
 8002246:	d1f2      	bne.n	800222e <d_print_comp_inner+0x18ba>
 8002248:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800224c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8002250:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002254:	4620      	mov	r0, r4
 8002256:	4798      	blx	r3
 8002258:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800225c:	3301      	adds	r3, #1
 800225e:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8002262:	2101      	movs	r1, #1
 8002264:	2300      	movs	r3, #0
 8002266:	e7e4      	b.n	8002232 <d_print_comp_inner+0x18be>
 8002268:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800226c:	29ff      	cmp	r1, #255	; 0xff
 800226e:	f000 841f 	beq.w	8002ab0 <d_print_comp_inner+0x213c>
 8002272:	1c4a      	adds	r2, r1, #1
 8002274:	237d      	movs	r3, #125	; 0x7d
 8002276:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800227a:	5463      	strb	r3, [r4, r1]
 800227c:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8002280:	f7fe bc3a 	b.w	8000af8 <d_print_comp_inner+0x184>
 8002284:	686b      	ldr	r3, [r5, #4]
 8002286:	68df      	ldr	r7, [r3, #12]
 8002288:	689d      	ldr	r5, [r3, #8]
 800228a:	2f00      	cmp	r7, #0
 800228c:	f43e ac34 	beq.w	8000af8 <d_print_comp_inner+0x184>
 8002290:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8002294:	442f      	add	r7, r5
 8002296:	f04f 0800 	mov.w	r8, #0
 800229a:	e009      	b.n	80022b0 <d_print_comp_inner+0x193c>
 800229c:	460b      	mov	r3, r1
 800229e:	3101      	adds	r1, #1
 80022a0:	42af      	cmp	r7, r5
 80022a2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80022a6:	54e6      	strb	r6, [r4, r3]
 80022a8:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80022ac:	f43e ac24 	beq.w	8000af8 <d_print_comp_inner+0x184>
 80022b0:	29ff      	cmp	r1, #255	; 0xff
 80022b2:	f815 6b01 	ldrb.w	r6, [r5], #1
 80022b6:	d1f1      	bne.n	800229c <d_print_comp_inner+0x1928>
 80022b8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80022bc:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80022c0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80022c4:	4620      	mov	r0, r4
 80022c6:	4798      	blx	r3
 80022c8:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80022cc:	3301      	adds	r3, #1
 80022ce:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 80022d2:	2101      	movs	r1, #1
 80022d4:	2300      	movs	r3, #0
 80022d6:	e7e3      	b.n	80022a0 <d_print_comp_inner+0x192c>
 80022d8:	686e      	ldr	r6, [r5, #4]
 80022da:	68af      	ldr	r7, [r5, #8]
 80022dc:	4437      	add	r7, r6
 80022de:	42be      	cmp	r6, r7
 80022e0:	f4be ac0a 	bcs.w	8000af8 <d_print_comp_inner+0x184>
 80022e4:	f04f 0800 	mov.w	r8, #0
 80022e8:	e00d      	b.n	8002306 <d_print_comp_inner+0x1992>
 80022ea:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80022ee:	29ff      	cmp	r1, #255	; 0xff
 80022f0:	d038      	beq.n	8002364 <d_print_comp_inner+0x19f0>
 80022f2:	1c4b      	adds	r3, r1, #1
 80022f4:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80022f8:	5465      	strb	r5, [r4, r1]
 80022fa:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 80022fe:	3601      	adds	r6, #1
 8002300:	42b7      	cmp	r7, r6
 8002302:	f67e abf9 	bls.w	8000af8 <d_print_comp_inner+0x184>
 8002306:	1bbb      	subs	r3, r7, r6
 8002308:	2b03      	cmp	r3, #3
 800230a:	7835      	ldrb	r5, [r6, #0]
 800230c:	dded      	ble.n	80022ea <d_print_comp_inner+0x1976>
 800230e:	2d5f      	cmp	r5, #95	; 0x5f
 8002310:	d1eb      	bne.n	80022ea <d_print_comp_inner+0x1976>
 8002312:	7872      	ldrb	r2, [r6, #1]
 8002314:	2a5f      	cmp	r2, #95	; 0x5f
 8002316:	d1e8      	bne.n	80022ea <d_print_comp_inner+0x1976>
 8002318:	78b3      	ldrb	r3, [r6, #2]
 800231a:	2b55      	cmp	r3, #85	; 0x55
 800231c:	d001      	beq.n	8002322 <d_print_comp_inner+0x19ae>
 800231e:	4615      	mov	r5, r2
 8002320:	e7e3      	b.n	80022ea <d_print_comp_inner+0x1976>
 8002322:	1cf3      	adds	r3, r6, #3
 8002324:	429f      	cmp	r7, r3
 8002326:	d9fa      	bls.n	800231e <d_print_comp_inner+0x19aa>
 8002328:	2000      	movs	r0, #0
 800232a:	e006      	b.n	800233a <d_print_comp_inner+0x19c6>
 800232c:	f1a5 0237 	sub.w	r2, r5, #55	; 0x37
 8002330:	42bb      	cmp	r3, r7
 8002332:	eb02 1000 	add.w	r0, r2, r0, lsl #4
 8002336:	f000 855a 	beq.w	8002dee <d_print_comp_inner+0x247a>
 800233a:	4699      	mov	r9, r3
 800233c:	f813 5b01 	ldrb.w	r5, [r3], #1
 8002340:	f1a5 0230 	sub.w	r2, r5, #48	; 0x30
 8002344:	b2d1      	uxtb	r1, r2
 8002346:	2909      	cmp	r1, #9
 8002348:	f1a5 0e41 	sub.w	lr, r5, #65	; 0x41
 800234c:	d9f0      	bls.n	8002330 <d_print_comp_inner+0x19bc>
 800234e:	f1be 0f05 	cmp.w	lr, #5
 8002352:	f1a5 0261 	sub.w	r2, r5, #97	; 0x61
 8002356:	d9e9      	bls.n	800232c <d_print_comp_inner+0x19b8>
 8002358:	2a05      	cmp	r2, #5
 800235a:	f200 869c 	bhi.w	8003096 <d_print_comp_inner+0x2722>
 800235e:	f1a5 0257 	sub.w	r2, r5, #87	; 0x57
 8002362:	e7e5      	b.n	8002330 <d_print_comp_inner+0x19bc>
 8002364:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002368:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800236c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002370:	4620      	mov	r0, r4
 8002372:	4798      	blx	r3
 8002374:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002378:	3301      	adds	r3, #1
 800237a:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 800237e:	2100      	movs	r1, #0
 8002380:	2301      	movs	r3, #1
 8002382:	e7b7      	b.n	80022f4 <d_print_comp_inner+0x1980>
 8002384:	4d28      	ldr	r5, [pc, #160]	; (8002428 <d_print_comp_inner+0x1ab4>)
 8002386:	4698      	mov	r8, r3
 8002388:	1daf      	adds	r7, r5, #6
 800238a:	e009      	b.n	80023a0 <d_print_comp_inner+0x1a2c>
 800238c:	460b      	mov	r3, r1
 800238e:	3101      	adds	r1, #1
 8002390:	42af      	cmp	r7, r5
 8002392:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002396:	54e6      	strb	r6, [r4, r3]
 8002398:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 800239c:	f43e abac 	beq.w	8000af8 <d_print_comp_inner+0x184>
 80023a0:	29ff      	cmp	r1, #255	; 0xff
 80023a2:	f815 6b01 	ldrb.w	r6, [r5], #1
 80023a6:	d1f1      	bne.n	800238c <d_print_comp_inner+0x1a18>
 80023a8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80023ac:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80023b0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80023b4:	4620      	mov	r0, r4
 80023b6:	4798      	blx	r3
 80023b8:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80023bc:	3301      	adds	r3, #1
 80023be:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 80023c2:	2101      	movs	r1, #1
 80023c4:	2300      	movs	r3, #0
 80023c6:	e7e3      	b.n	8002390 <d_print_comp_inner+0x1a1c>
 80023c8:	4605      	mov	r5, r0
 80023ca:	f8d4 0114 	ldr.w	r0, [r4, #276]	; 0x114
 80023ce:	f7ff ba6e 	b.w	80018ae <d_print_comp_inner+0xf3a>
 80023d2:	4d16      	ldr	r5, [pc, #88]	; (800242c <d_print_comp_inner+0x1ab8>)
 80023d4:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80023d8:	f105 0804 	add.w	r8, r5, #4
 80023dc:	e009      	b.n	80023f2 <d_print_comp_inner+0x1a7e>
 80023de:	460b      	mov	r3, r1
 80023e0:	3101      	adds	r1, #1
 80023e2:	4545      	cmp	r5, r8
 80023e4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80023e8:	54e6      	strb	r6, [r4, r3]
 80023ea:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80023ee:	f43e ab83 	beq.w	8000af8 <d_print_comp_inner+0x184>
 80023f2:	29ff      	cmp	r1, #255	; 0xff
 80023f4:	f815 6b01 	ldrb.w	r6, [r5], #1
 80023f8:	d1f1      	bne.n	80023de <d_print_comp_inner+0x1a6a>
 80023fa:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80023fe:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8002402:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002406:	4620      	mov	r0, r4
 8002408:	4798      	blx	r3
 800240a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800240e:	3301      	adds	r3, #1
 8002410:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8002414:	2101      	movs	r1, #1
 8002416:	2300      	movs	r3, #0
 8002418:	e7e3      	b.n	80023e2 <d_print_comp_inner+0x1a6e>
 800241a:	bf00      	nop
 800241c:	080111ec 	.word	0x080111ec
 8002420:	08011128 	.word	0x08011128
 8002424:	080110e0 	.word	0x080110e0
 8002428:	0801124c 	.word	0x0801124c
 800242c:	080112d0 	.word	0x080112d0
 8002430:	f021 0760 	bic.w	r7, r1, #96	; 0x60
 8002434:	f105 0208 	add.w	r2, r5, #8
 8002438:	4639      	mov	r1, r7
 800243a:	f8d0 3114 	ldr.w	r3, [r0, #276]	; 0x114
 800243e:	f001 fb59 	bl	8003af4 <d_print_function_type.isra.11>
 8002442:	686a      	ldr	r2, [r5, #4]
 8002444:	2a00      	cmp	r2, #0
 8002446:	f43e ab57 	beq.w	8000af8 <d_print_comp_inner+0x184>
 800244a:	4639      	mov	r1, r7
 800244c:	4620      	mov	r0, r4
 800244e:	f000 feab 	bl	80031a8 <d_print_comp>
 8002452:	f7fe bb51 	b.w	8000af8 <d_print_comp_inner+0x184>
 8002456:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800245a:	f7fe be8e 	b.w	800117a <d_print_comp_inner+0x806>
 800245e:	4edc      	ldr	r6, [pc, #880]	; (80027d0 <d_print_comp_inner+0x1e5c>)
 8002460:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8002464:	f106 0a05 	add.w	sl, r6, #5
 8002468:	f04f 0900 	mov.w	r9, #0
 800246c:	e00a      	b.n	8002484 <d_print_comp_inner+0x1b10>
 800246e:	460b      	mov	r3, r1
 8002470:	3101      	adds	r1, #1
 8002472:	4556      	cmp	r6, sl
 8002474:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002478:	f804 8003 	strb.w	r8, [r4, r3]
 800247c:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8002480:	f43e ae65 	beq.w	800114e <d_print_comp_inner+0x7da>
 8002484:	29ff      	cmp	r1, #255	; 0xff
 8002486:	f816 8b01 	ldrb.w	r8, [r6], #1
 800248a:	d1f0      	bne.n	800246e <d_print_comp_inner+0x1afa>
 800248c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002490:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002494:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002498:	4620      	mov	r0, r4
 800249a:	4798      	blx	r3
 800249c:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80024a0:	3301      	adds	r3, #1
 80024a2:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 80024a6:	2101      	movs	r1, #1
 80024a8:	2300      	movs	r3, #0
 80024aa:	e7e2      	b.n	8002472 <d_print_comp_inner+0x1afe>
 80024ac:	6873      	ldr	r3, [r6, #4]
 80024ae:	49c9      	ldr	r1, [pc, #804]	; (80027d4 <d_print_comp_inner+0x1e60>)
 80024b0:	f8d3 8000 	ldr.w	r8, [r3]
 80024b4:	4640      	mov	r0, r8
 80024b6:	f006 f813 	bl	80084e0 <strcmp>
 80024ba:	782b      	ldrb	r3, [r5, #0]
 80024bc:	b910      	cbnz	r0, 80024c4 <d_print_comp_inner+0x1b50>
 80024be:	2b03      	cmp	r3, #3
 80024c0:	f000 84db 	beq.w	8002e7a <d_print_comp_inner+0x2506>
 80024c4:	2b37      	cmp	r3, #55	; 0x37
 80024c6:	f000 8585 	beq.w	8002fd4 <d_print_comp_inner+0x2660>
 80024ca:	4639      	mov	r1, r7
 80024cc:	4620      	mov	r0, r4
 80024ce:	4632      	mov	r2, r6
 80024d0:	f001 fcd8 	bl	8003e84 <d_print_expr_op>
 80024d4:	49c0      	ldr	r1, [pc, #768]	; (80027d8 <d_print_comp_inner+0x1e64>)
 80024d6:	4640      	mov	r0, r8
 80024d8:	f006 f802 	bl	80084e0 <strcmp>
 80024dc:	2800      	cmp	r0, #0
 80024de:	f000 8257 	beq.w	8002990 <d_print_comp_inner+0x201c>
 80024e2:	4640      	mov	r0, r8
 80024e4:	49bd      	ldr	r1, [pc, #756]	; (80027dc <d_print_comp_inner+0x1e68>)
 80024e6:	f005 fffb 	bl	80084e0 <strcmp>
 80024ea:	4606      	mov	r6, r0
 80024ec:	2800      	cmp	r0, #0
 80024ee:	f47e ad44 	bne.w	8000f7a <d_print_comp_inner+0x606>
 80024f2:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80024f6:	2bff      	cmp	r3, #255	; 0xff
 80024f8:	f000 8468 	beq.w	8002dcc <d_print_comp_inner+0x2458>
 80024fc:	1c58      	adds	r0, r3, #1
 80024fe:	2628      	movs	r6, #40	; 0x28
 8002500:	f8c4 0100 	str.w	r0, [r4, #256]	; 0x100
 8002504:	4639      	mov	r1, r7
 8002506:	54e6      	strb	r6, [r4, r3]
 8002508:	462a      	mov	r2, r5
 800250a:	4620      	mov	r0, r4
 800250c:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8002510:	f000 fe4a 	bl	80031a8 <d_print_comp>
 8002514:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002518:	29ff      	cmp	r1, #255	; 0xff
 800251a:	f000 83d6 	beq.w	8002cca <d_print_comp_inner+0x2356>
 800251e:	1c4a      	adds	r2, r1, #1
 8002520:	2329      	movs	r3, #41	; 0x29
 8002522:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8002526:	5463      	strb	r3, [r4, r1]
 8002528:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800252c:	f7fe bae4 	b.w	8000af8 <d_print_comp_inner+0x184>
 8002530:	4eab      	ldr	r6, [pc, #684]	; (80027e0 <d_print_comp_inner+0x1e6c>)
 8002532:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002536:	f106 0a02 	add.w	sl, r6, #2
 800253a:	e00a      	b.n	8002552 <d_print_comp_inner+0x1bde>
 800253c:	460b      	mov	r3, r1
 800253e:	3101      	adds	r1, #1
 8002540:	4556      	cmp	r6, sl
 8002542:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002546:	f804 8003 	strb.w	r8, [r4, r3]
 800254a:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 800254e:	f43f ab84 	beq.w	8001c5a <d_print_comp_inner+0x12e6>
 8002552:	29ff      	cmp	r1, #255	; 0xff
 8002554:	f816 8b01 	ldrb.w	r8, [r6], #1
 8002558:	d1f0      	bne.n	800253c <d_print_comp_inner+0x1bc8>
 800255a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800255e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002562:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002566:	4620      	mov	r0, r4
 8002568:	4798      	blx	r3
 800256a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800256e:	3301      	adds	r3, #1
 8002570:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8002574:	2101      	movs	r1, #1
 8002576:	2300      	movs	r3, #0
 8002578:	e7e2      	b.n	8002540 <d_print_comp_inner+0x1bcc>
 800257a:	6852      	ldr	r2, [r2, #4]
 800257c:	7c16      	ldrb	r6, [r2, #16]
 800257e:	2e00      	cmp	r6, #0
 8002580:	f43e ae54 	beq.w	800122c <d_print_comp_inner+0x8b8>
 8002584:	2e06      	cmp	r6, #6
 8002586:	f240 8357 	bls.w	8002c38 <d_print_comp_inner+0x22c4>
 800258a:	2e07      	cmp	r6, #7
 800258c:	f47e ae4e 	bne.w	800122c <d_print_comp_inner+0x8b8>
 8002590:	68aa      	ldr	r2, [r5, #8]
 8002592:	7811      	ldrb	r1, [r2, #0]
 8002594:	2900      	cmp	r1, #0
 8002596:	f47e ae49 	bne.w	800122c <d_print_comp_inner+0x8b8>
 800259a:	6891      	ldr	r1, [r2, #8]
 800259c:	2901      	cmp	r1, #1
 800259e:	f47e ae45 	bne.w	800122c <d_print_comp_inner+0x8b8>
 80025a2:	2b3b      	cmp	r3, #59	; 0x3b
 80025a4:	f47e ae42 	bne.w	800122c <d_print_comp_inner+0x8b8>
 80025a8:	6853      	ldr	r3, [r2, #4]
 80025aa:	781b      	ldrb	r3, [r3, #0]
 80025ac:	2b30      	cmp	r3, #48	; 0x30
 80025ae:	f000 85bb 	beq.w	8003128 <d_print_comp_inner+0x27b4>
 80025b2:	2b31      	cmp	r3, #49	; 0x31
 80025b4:	f47e ae3a 	bne.w	800122c <d_print_comp_inner+0x8b8>
 80025b8:	2204      	movs	r2, #4
 80025ba:	498a      	ldr	r1, [pc, #552]	; (80027e4 <d_print_comp_inner+0x1e70>)
 80025bc:	f7fd ff1c 	bl	80003f8 <d_append_buffer>
 80025c0:	f7fe ba9a 	b.w	8000af8 <d_print_comp_inner+0x184>
 80025c4:	f8d4 c12c 	ldr.w	ip, [r4, #300]	; 0x12c
 80025c8:	f8d4 1128 	ldr.w	r1, [r4, #296]	; 0x128
 80025cc:	f1bc 0f00 	cmp.w	ip, #0
 80025d0:	dd14      	ble.n	80025fc <d_print_comp_inner+0x1c88>
 80025d2:	680b      	ldr	r3, [r1, #0]
 80025d4:	4298      	cmp	r0, r3
 80025d6:	f000 855c 	beq.w	8003092 <d_print_comp_inner+0x271e>
 80025da:	f101 0208 	add.w	r2, r1, #8
 80025de:	2300      	movs	r3, #0
 80025e0:	46a6      	mov	lr, r4
 80025e2:	e004      	b.n	80025ee <d_print_comp_inner+0x1c7a>
 80025e4:	f851 4033 	ldr.w	r4, [r1, r3, lsl #3]
 80025e8:	42a0      	cmp	r0, r4
 80025ea:	f000 8273 	beq.w	8002ad4 <d_print_comp_inner+0x2160>
 80025ee:	3301      	adds	r3, #1
 80025f0:	459c      	cmp	ip, r3
 80025f2:	4690      	mov	r8, r2
 80025f4:	f102 0208 	add.w	r2, r2, #8
 80025f8:	d1f4      	bne.n	80025e4 <d_print_comp_inner+0x1c70>
 80025fa:	4674      	mov	r4, lr
 80025fc:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 8002600:	459c      	cmp	ip, r3
 8002602:	f280 84f5 	bge.w	8002ff0 <d_print_comp_inner+0x267c>
 8002606:	f10c 0301 	add.w	r3, ip, #1
 800260a:	f8d4 8110 	ldr.w	r8, [r4, #272]	; 0x110
 800260e:	f8c4 312c 	str.w	r3, [r4, #300]	; 0x12c
 8002612:	eb01 03cc 	add.w	r3, r1, ip, lsl #3
 8002616:	f841 003c 	str.w	r0, [r1, ip, lsl #3]
 800261a:	f103 0e04 	add.w	lr, r3, #4
 800261e:	f1b8 0f00 	cmp.w	r8, #0
 8002622:	d021      	beq.n	8002668 <d_print_comp_inner+0x1cf4>
 8002624:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 8002628:	f8d4 113c 	ldr.w	r1, [r4, #316]	; 0x13c
 800262c:	4299      	cmp	r1, r3
 800262e:	f340 84df 	ble.w	8002ff0 <d_print_comp_inner+0x267c>
 8002632:	ea4f 0cc3 	mov.w	ip, r3, lsl #3
 8002636:	4681      	mov	r9, r0
 8002638:	e002      	b.n	8002640 <d_print_comp_inner+0x1ccc>
 800263a:	4299      	cmp	r1, r3
 800263c:	f000 84d6 	beq.w	8002fec <d_print_comp_inner+0x2678>
 8002640:	f8d4 2134 	ldr.w	r2, [r4, #308]	; 0x134
 8002644:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8002648:	4462      	add	r2, ip
 800264a:	3301      	adds	r3, #1
 800264c:	6050      	str	r0, [r2, #4]
 800264e:	f8ce 2000 	str.w	r2, [lr]
 8002652:	f8d8 8000 	ldr.w	r8, [r8]
 8002656:	f10c 0c08 	add.w	ip, ip, #8
 800265a:	4696      	mov	lr, r2
 800265c:	f1b8 0f00 	cmp.w	r8, #0
 8002660:	d1eb      	bne.n	800263a <d_print_comp_inner+0x1cc6>
 8002662:	4648      	mov	r0, r9
 8002664:	f8c4 3138 	str.w	r3, [r4, #312]	; 0x138
 8002668:	f04f 0800 	mov.w	r8, #0
 800266c:	1d01      	adds	r1, r0, #4
 800266e:	f8ce 8000 	str.w	r8, [lr]
 8002672:	4620      	mov	r0, r4
 8002674:	f7fe f8d8 	bl	8000828 <d_lookup_template_argument.isra.6>
 8002678:	2800      	cmp	r0, #0
 800267a:	f040 8246 	bne.w	8002b0a <d_print_comp_inner+0x2196>
 800267e:	f7fe ba43 	b.w	8000b08 <d_print_comp_inner+0x194>
 8002682:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002686:	29ff      	cmp	r1, #255	; 0xff
 8002688:	f000 8411 	beq.w	8002eae <d_print_comp_inner+0x253a>
 800268c:	2220      	movs	r2, #32
 800268e:	1c4b      	adds	r3, r1, #1
 8002690:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8002694:	5462      	strb	r2, [r4, r1]
 8002696:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 800269a:	f7ff ba2e 	b.w	8001afa <d_print_comp_inner+0x1186>
 800269e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80026a2:	29ff      	cmp	r1, #255	; 0xff
 80026a4:	f000 843d 	beq.w	8002f22 <d_print_comp_inner+0x25ae>
 80026a8:	2220      	movs	r2, #32
 80026aa:	1c4b      	adds	r3, r1, #1
 80026ac:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80026b0:	5462      	strb	r2, [r4, r1]
 80026b2:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80026b6:	f7ff ba0a 	b.w	8001ace <d_print_comp_inner+0x115a>
 80026ba:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80026be:	29ff      	cmp	r1, #255	; 0xff
 80026c0:	f000 8444 	beq.w	8002f4c <d_print_comp_inner+0x25d8>
 80026c4:	1c4a      	adds	r2, r1, #1
 80026c6:	235b      	movs	r3, #91	; 0x5b
 80026c8:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80026cc:	5463      	strb	r3, [r4, r1]
 80026ce:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80026d2:	4639      	mov	r1, r7
 80026d4:	68aa      	ldr	r2, [r5, #8]
 80026d6:	4620      	mov	r0, r4
 80026d8:	f000 fd66 	bl	80031a8 <d_print_comp>
 80026dc:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80026e0:	29ff      	cmp	r1, #255	; 0xff
 80026e2:	f000 832f 	beq.w	8002d44 <d_print_comp_inner+0x23d0>
 80026e6:	235d      	movs	r3, #93	; 0x5d
 80026e8:	1c4a      	adds	r2, r1, #1
 80026ea:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80026ee:	5463      	strb	r3, [r4, r1]
 80026f0:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80026f4:	f7fe ba00 	b.w	8000af8 <d_print_comp_inner+0x184>
 80026f8:	f04f 0800 	mov.w	r8, #0
 80026fc:	f804 8006 	strb.w	r8, [r4, r6]
 8002700:	4631      	mov	r1, r6
 8002702:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002706:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800270a:	4620      	mov	r0, r4
 800270c:	4798      	blx	r3
 800270e:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002712:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 8002716:	3301      	adds	r3, #1
 8002718:	4646      	mov	r6, r8
 800271a:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 800271e:	f7fe bcde 	b.w	80010de <d_print_comp_inner+0x76a>
 8002722:	4660      	mov	r0, ip
 8002724:	4688      	mov	r8, r1
 8002726:	f7ff b8c2 	b.w	80018ae <d_print_comp_inner+0xf3a>
 800272a:	686a      	ldr	r2, [r5, #4]
 800272c:	4639      	mov	r1, r7
 800272e:	4620      	mov	r0, r4
 8002730:	f000 fd3a 	bl	80031a8 <d_print_comp>
 8002734:	f7fe b9e0 	b.w	8000af8 <d_print_comp_inner+0x184>
 8002738:	4632      	mov	r2, r6
 800273a:	f001 fba3 	bl	8003e84 <d_print_expr_op>
 800273e:	f7fe bc1c 	b.w	8000f7a <d_print_comp_inner+0x606>
 8002742:	f8d4 311c 	ldr.w	r3, [r4, #284]	; 0x11c
 8002746:	e008      	b.n	800275a <d_print_comp_inner+0x1de6>
 8002748:	6880      	ldr	r0, [r0, #8]
 800274a:	3b01      	subs	r3, #1
 800274c:	2800      	cmp	r0, #0
 800274e:	f43e a9db 	beq.w	8000b08 <d_print_comp_inner+0x194>
 8002752:	7802      	ldrb	r2, [r0, #0]
 8002754:	2a2f      	cmp	r2, #47	; 0x2f
 8002756:	f47e a9d7 	bne.w	8000b08 <d_print_comp_inner+0x194>
 800275a:	2b00      	cmp	r3, #0
 800275c:	dcf4      	bgt.n	8002748 <d_print_comp_inner+0x1dd4>
 800275e:	f47e a9d3 	bne.w	8000b08 <d_print_comp_inner+0x194>
 8002762:	6840      	ldr	r0, [r0, #4]
 8002764:	2800      	cmp	r0, #0
 8002766:	f47f aaef 	bne.w	8001d48 <d_print_comp_inner+0x13d4>
 800276a:	f7fe b9cd 	b.w	8000b08 <d_print_comp_inner+0x194>
 800276e:	29ff      	cmp	r1, #255	; 0xff
 8002770:	f000 83ae 	beq.w	8002ed0 <d_print_comp_inner+0x255c>
 8002774:	232d      	movs	r3, #45	; 0x2d
 8002776:	1c4a      	adds	r2, r1, #1
 8002778:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800277c:	5463      	strb	r3, [r4, r1]
 800277e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8002782:	f7fe bd74 	b.w	800126e <d_print_comp_inner+0x8fa>
 8002786:	2500      	movs	r5, #0
 8002788:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800278c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002790:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8002794:	4620      	mov	r0, r4
 8002796:	4798      	blx	r3
 8002798:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800279c:	3301      	adds	r3, #1
 800279e:	4629      	mov	r1, r5
 80027a0:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 80027a4:	2201      	movs	r2, #1
 80027a6:	f7fe bc86 	b.w	80010b6 <d_print_comp_inner+0x742>
 80027aa:	2500      	movs	r5, #0
 80027ac:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80027b0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80027b4:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 80027b8:	4620      	mov	r0, r4
 80027ba:	4798      	blx	r3
 80027bc:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80027c0:	3301      	adds	r3, #1
 80027c2:	4629      	mov	r1, r5
 80027c4:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 80027c8:	2201      	movs	r2, #1
 80027ca:	f7ff bb1d 	b.w	8001e08 <d_print_comp_inner+0x1494>
 80027ce:	bf00      	nop
 80027d0:	0801123c 	.word	0x0801123c
 80027d4:	08011270 	.word	0x08011270
 80027d8:	08011274 	.word	0x08011274
 80027dc:	0801158c 	.word	0x0801158c
 80027e0:	080110cc 	.word	0x080110cc
 80027e4:	080112a8 	.word	0x080112a8
 80027e8:	2600      	movs	r6, #0
 80027ea:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 80027ee:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
 80027f2:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 80027f6:	4798      	blx	r3
 80027f8:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80027fc:	3301      	adds	r3, #1
 80027fe:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8002802:	4631      	mov	r1, r6
 8002804:	2301      	movs	r3, #1
 8002806:	f7fe bb81 	b.w	8000f0c <d_print_comp_inner+0x598>
 800280a:	2600      	movs	r6, #0
 800280c:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 8002810:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8002814:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
 8002818:	4798      	blx	r3
 800281a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800281e:	3301      	adds	r3, #1
 8002820:	4631      	mov	r1, r6
 8002822:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8002826:	2201      	movs	r2, #1
 8002828:	f7ff b885 	b.w	8001936 <d_print_comp_inner+0xfc2>
 800282c:	2500      	movs	r5, #0
 800282e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002832:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002836:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 800283a:	4620      	mov	r0, r4
 800283c:	4798      	blx	r3
 800283e:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002842:	3301      	adds	r3, #1
 8002844:	4629      	mov	r1, r5
 8002846:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 800284a:	2201      	movs	r2, #1
 800284c:	f7ff bb1f 	b.w	8001e8e <d_print_comp_inner+0x151a>
 8002850:	2500      	movs	r5, #0
 8002852:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002856:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800285a:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 800285e:	4620      	mov	r0, r4
 8002860:	4798      	blx	r3
 8002862:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002866:	3301      	adds	r3, #1
 8002868:	4629      	mov	r1, r5
 800286a:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 800286e:	2201      	movs	r2, #1
 8002870:	e40a      	b.n	8002088 <d_print_comp_inner+0x1714>
 8002872:	2500      	movs	r5, #0
 8002874:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002878:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800287c:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8002880:	4620      	mov	r0, r4
 8002882:	4798      	blx	r3
 8002884:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002888:	3301      	adds	r3, #1
 800288a:	4629      	mov	r1, r5
 800288c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8002890:	2201      	movs	r2, #1
 8002892:	f7ff bbd1 	b.w	8002038 <d_print_comp_inner+0x16c4>
 8002896:	2500      	movs	r5, #0
 8002898:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800289c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80028a0:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 80028a4:	4620      	mov	r0, r4
 80028a6:	4798      	blx	r3
 80028a8:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80028ac:	3301      	adds	r3, #1
 80028ae:	4629      	mov	r1, r5
 80028b0:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 80028b4:	2201      	movs	r2, #1
 80028b6:	f7ff bba5 	b.w	8002004 <d_print_comp_inner+0x1690>
 80028ba:	2301      	movs	r3, #1
 80028bc:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 80028c0:	f7fe b91a 	b.w	8000af8 <d_print_comp_inner+0x184>
 80028c4:	220d      	movs	r2, #13
 80028c6:	49d5      	ldr	r1, [pc, #852]	; (8002c1c <d_print_comp_inner+0x22a8>)
 80028c8:	4620      	mov	r0, r4
 80028ca:	f7fd fd95 	bl	80003f8 <d_append_buffer>
 80028ce:	f8d8 2008 	ldr.w	r2, [r8, #8]
 80028d2:	49d3      	ldr	r1, [pc, #844]	; (8002c20 <d_print_comp_inner+0x22ac>)
 80028d4:	3201      	adds	r2, #1
 80028d6:	a804      	add	r0, sp, #16
 80028d8:	f00b f81c 	bl	800d914 <sprintf>
 80028dc:	a804      	add	r0, sp, #16
 80028de:	f005 fe09 	bl	80084f4 <strlen>
 80028e2:	b320      	cbz	r0, 800292e <d_print_comp_inner+0x1fba>
 80028e4:	ad04      	add	r5, sp, #16
 80028e6:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80028ea:	eb05 0a00 	add.w	sl, r5, r0
 80028ee:	f04f 0900 	mov.w	r9, #0
 80028f2:	e008      	b.n	8002906 <d_print_comp_inner+0x1f92>
 80028f4:	460b      	mov	r3, r1
 80028f6:	3101      	adds	r1, #1
 80028f8:	45aa      	cmp	sl, r5
 80028fa:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80028fe:	54e6      	strb	r6, [r4, r3]
 8002900:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8002904:	d013      	beq.n	800292e <d_print_comp_inner+0x1fba>
 8002906:	29ff      	cmp	r1, #255	; 0xff
 8002908:	f815 6b01 	ldrb.w	r6, [r5], #1
 800290c:	d1f2      	bne.n	80028f4 <d_print_comp_inner+0x1f80>
 800290e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002912:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002916:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800291a:	4620      	mov	r0, r4
 800291c:	4798      	blx	r3
 800291e:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002922:	3301      	adds	r3, #1
 8002924:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8002928:	2101      	movs	r1, #1
 800292a:	2300      	movs	r3, #0
 800292c:	e7e4      	b.n	80028f8 <d_print_comp_inner+0x1f84>
 800292e:	2203      	movs	r2, #3
 8002930:	49bc      	ldr	r1, [pc, #752]	; (8002c24 <d_print_comp_inner+0x22b0>)
 8002932:	4620      	mov	r0, r4
 8002934:	f7fd fd60 	bl	80003f8 <d_append_buffer>
 8002938:	f8d8 8004 	ldr.w	r8, [r8, #4]
 800293c:	f7ff b994 	b.w	8001c68 <d_print_comp_inner+0x12f4>
 8002940:	aa14      	add	r2, sp, #80	; 0x50
 8002942:	f8d4 1114 	ldr.w	r1, [r4, #276]	; 0x114
 8002946:	f842 1d40 	str.w	r1, [r2, #-64]!
 800294a:	f027 0760 	bic.w	r7, r7, #96	; 0x60
 800294e:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
 8002952:	f8d4 6110 	ldr.w	r6, [r4, #272]	; 0x110
 8002956:	686a      	ldr	r2, [r5, #4]
 8002958:	9306      	str	r3, [sp, #24]
 800295a:	4639      	mov	r1, r7
 800295c:	4620      	mov	r0, r4
 800295e:	9607      	str	r6, [sp, #28]
 8002960:	9505      	str	r5, [sp, #20]
 8002962:	f000 fc21 	bl	80031a8 <d_print_comp>
 8002966:	9e06      	ldr	r6, [sp, #24]
 8002968:	9b04      	ldr	r3, [sp, #16]
 800296a:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 800296e:	2e00      	cmp	r6, #0
 8002970:	f47e a8c2 	bne.w	8000af8 <d_print_comp_inner+0x184>
 8002974:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002978:	29ff      	cmp	r1, #255	; 0xff
 800297a:	f000 8349 	beq.w	8003010 <d_print_comp_inner+0x269c>
 800297e:	2320      	movs	r3, #32
 8002980:	1c4a      	adds	r2, r1, #1
 8002982:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8002986:	5463      	strb	r3, [r4, r1]
 8002988:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800298c:	f7fe bd0e 	b.w	80013ac <d_print_comp_inner+0xa38>
 8002990:	462a      	mov	r2, r5
 8002992:	4639      	mov	r1, r7
 8002994:	4620      	mov	r0, r4
 8002996:	f000 fc07 	bl	80031a8 <d_print_comp>
 800299a:	f7fe b8ad 	b.w	8000af8 <d_print_comp_inner+0x184>
 800299e:	2500      	movs	r5, #0
 80029a0:	4619      	mov	r1, r3
 80029a2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80029a6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80029aa:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 80029ae:	4620      	mov	r0, r4
 80029b0:	4798      	blx	r3
 80029b2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80029b6:	1c5a      	adds	r2, r3, #1
 80029b8:	f8c4 2120 	str.w	r2, [r4, #288]	; 0x120
 80029bc:	462b      	mov	r3, r5
 80029be:	2201      	movs	r2, #1
 80029c0:	f7fe bb68 	b.w	8001094 <d_print_comp_inner+0x720>
 80029c4:	ab14      	add	r3, sp, #80	; 0x50
 80029c6:	f8d4 1114 	ldr.w	r1, [r4, #276]	; 0x114
 80029ca:	6842      	ldr	r2, [r0, #4]
 80029cc:	f843 1d40 	str.w	r1, [r3, #-64]!
 80029d0:	2000      	movs	r0, #0
 80029d2:	f8d4 1110 	ldr.w	r1, [r4, #272]	; 0x110
 80029d6:	9505      	str	r5, [sp, #20]
 80029d8:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 80029dc:	9006      	str	r0, [sp, #24]
 80029de:	9107      	str	r1, [sp, #28]
 80029e0:	2a00      	cmp	r2, #0
 80029e2:	f47e af70 	bne.w	80018c6 <d_print_comp_inner+0xf52>
 80029e6:	f7fe bf6d 	b.w	80018c4 <d_print_comp_inner+0xf50>
 80029ea:	2500      	movs	r5, #0
 80029ec:	4619      	mov	r1, r3
 80029ee:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80029f2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80029f6:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 80029fa:	4620      	mov	r0, r4
 80029fc:	4798      	blx	r3
 80029fe:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002a02:	1c5a      	adds	r2, r3, #1
 8002a04:	f8c4 2120 	str.w	r2, [r4, #288]	; 0x120
 8002a08:	462b      	mov	r3, r5
 8002a0a:	2101      	movs	r1, #1
 8002a0c:	f7ff b879 	b.w	8001b02 <d_print_comp_inner+0x118e>
 8002a10:	2600      	movs	r6, #0
 8002a12:	4619      	mov	r1, r3
 8002a14:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002a18:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002a1c:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8002a20:	4620      	mov	r0, r4
 8002a22:	4798      	blx	r3
 8002a24:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002a28:	1c5a      	adds	r2, r3, #1
 8002a2a:	f8c4 2120 	str.w	r2, [r4, #288]	; 0x120
 8002a2e:	4633      	mov	r3, r6
 8002a30:	2101      	movs	r1, #1
 8002a32:	f7ff b850 	b.w	8001ad6 <d_print_comp_inner+0x1162>
 8002a36:	2200      	movs	r2, #0
 8002a38:	4619      	mov	r1, r3
 8002a3a:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
 8002a3e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002a42:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002a46:	4620      	mov	r0, r4
 8002a48:	4798      	blx	r3
 8002a4a:	2329      	movs	r3, #41	; 0x29
 8002a4c:	7023      	strb	r3, [r4, #0]
 8002a4e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8002a52:	782a      	ldrb	r2, [r5, #0]
 8002a54:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002a58:	2101      	movs	r1, #1
 8002a5a:	3301      	adds	r3, #1
 8002a5c:	2a3c      	cmp	r2, #60	; 0x3c
 8002a5e:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8002a62:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002a66:	f47e ac02 	bne.w	800126e <d_print_comp_inner+0x8fa>
 8002a6a:	e683      	b.n	8002774 <d_print_comp_inner+0x1e00>
 8002a6c:	4648      	mov	r0, r9
 8002a6e:	496e      	ldr	r1, [pc, #440]	; (8002c28 <d_print_comp_inner+0x22b4>)
 8002a70:	f005 fd36 	bl	80084e0 <strcmp>
 8002a74:	2800      	cmp	r0, #0
 8002a76:	f040 8214 	bne.w	8002ea2 <d_print_comp_inner+0x252e>
 8002a7a:	68ab      	ldr	r3, [r5, #8]
 8002a7c:	4639      	mov	r1, r7
 8002a7e:	689a      	ldr	r2, [r3, #8]
 8002a80:	4620      	mov	r0, r4
 8002a82:	f001 fa3d 	bl	8003f00 <d_print_subexpr>
 8002a86:	f7fe b81f 	b.w	8000ac8 <d_print_comp_inner+0x154>
 8002a8a:	f04f 0800 	mov.w	r8, #0
 8002a8e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002a92:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002a96:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8002a9a:	4620      	mov	r0, r4
 8002a9c:	4798      	blx	r3
 8002a9e:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002aa2:	3301      	adds	r3, #1
 8002aa4:	4641      	mov	r1, r8
 8002aa6:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8002aaa:	2201      	movs	r2, #1
 8002aac:	f7fe bbc4 	b.w	8001238 <d_print_comp_inner+0x8c4>
 8002ab0:	2500      	movs	r5, #0
 8002ab2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002ab6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002aba:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8002abe:	4620      	mov	r0, r4
 8002ac0:	4798      	blx	r3
 8002ac2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002ac6:	3301      	adds	r3, #1
 8002ac8:	4629      	mov	r1, r5
 8002aca:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8002ace:	2201      	movs	r2, #1
 8002ad0:	f7ff bbd0 	b.w	8002274 <d_print_comp_inner+0x1900>
 8002ad4:	4674      	mov	r4, lr
 8002ad6:	f8d4 1124 	ldr.w	r1, [r4, #292]	; 0x124
 8002ada:	b389      	cbz	r1, 8002b40 <d_print_comp_inner+0x21cc>
 8002adc:	680a      	ldr	r2, [r1, #0]
 8002ade:	4290      	cmp	r0, r2
 8002ae0:	d00a      	beq.n	8002af8 <d_print_comp_inner+0x2184>
 8002ae2:	460b      	mov	r3, r1
 8002ae4:	e004      	b.n	8002af0 <d_print_comp_inner+0x217c>
 8002ae6:	685b      	ldr	r3, [r3, #4]
 8002ae8:	b353      	cbz	r3, 8002b40 <d_print_comp_inner+0x21cc>
 8002aea:	681a      	ldr	r2, [r3, #0]
 8002aec:	4290      	cmp	r0, r2
 8002aee:	d003      	beq.n	8002af8 <d_print_comp_inner+0x2184>
 8002af0:	4295      	cmp	r5, r2
 8002af2:	d1f8      	bne.n	8002ae6 <d_print_comp_inner+0x2172>
 8002af4:	4299      	cmp	r1, r3
 8002af6:	d0f6      	beq.n	8002ae6 <d_print_comp_inner+0x2172>
 8002af8:	1d01      	adds	r1, r0, #4
 8002afa:	4620      	mov	r0, r4
 8002afc:	f7fd fe94 	bl	8000828 <d_lookup_template_argument.isra.6>
 8002b00:	f04f 0800 	mov.w	r8, #0
 8002b04:	2800      	cmp	r0, #0
 8002b06:	f43d afff 	beq.w	8000b08 <d_print_comp_inner+0x194>
 8002b0a:	7803      	ldrb	r3, [r0, #0]
 8002b0c:	2b2f      	cmp	r3, #47	; 0x2f
 8002b0e:	f47e aec2 	bne.w	8001896 <d_print_comp_inner+0xf22>
 8002b12:	f8d4 311c 	ldr.w	r3, [r4, #284]	; 0x11c
 8002b16:	e008      	b.n	8002b2a <d_print_comp_inner+0x21b6>
 8002b18:	6880      	ldr	r0, [r0, #8]
 8002b1a:	3b01      	subs	r3, #1
 8002b1c:	2800      	cmp	r0, #0
 8002b1e:	f43d afee 	beq.w	8000afe <d_print_comp_inner+0x18a>
 8002b22:	7802      	ldrb	r2, [r0, #0]
 8002b24:	2a2f      	cmp	r2, #47	; 0x2f
 8002b26:	f47d afea 	bne.w	8000afe <d_print_comp_inner+0x18a>
 8002b2a:	2b00      	cmp	r3, #0
 8002b2c:	dcf4      	bgt.n	8002b18 <d_print_comp_inner+0x21a4>
 8002b2e:	f47d afe6 	bne.w	8000afe <d_print_comp_inner+0x18a>
 8002b32:	6840      	ldr	r0, [r0, #4]
 8002b34:	2800      	cmp	r0, #0
 8002b36:	f43d afe2 	beq.w	8000afe <d_print_comp_inner+0x18a>
 8002b3a:	7803      	ldrb	r3, [r0, #0]
 8002b3c:	f7fe beab 	b.w	8001896 <d_print_comp_inner+0xf22>
 8002b40:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8002b44:	f8d4 6110 	ldr.w	r6, [r4, #272]	; 0x110
 8002b48:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8002b4c:	1d01      	adds	r1, r0, #4
 8002b4e:	4620      	mov	r0, r4
 8002b50:	f7fd fe6a 	bl	8000828 <d_lookup_template_argument.isra.6>
 8002b54:	2800      	cmp	r0, #0
 8002b56:	f43d afd5 	beq.w	8000b04 <d_print_comp_inner+0x190>
 8002b5a:	f04f 0801 	mov.w	r8, #1
 8002b5e:	e7d4      	b.n	8002b0a <d_print_comp_inner+0x2196>
 8002b60:	7809      	ldrb	r1, [r1, #0]
 8002b62:	f1a1 0063 	sub.w	r0, r1, #99	; 0x63
 8002b66:	2801      	cmp	r0, #1
 8002b68:	d903      	bls.n	8002b72 <d_print_comp_inner+0x21fe>
 8002b6a:	3972      	subs	r1, #114	; 0x72
 8002b6c:	2901      	cmp	r1, #1
 8002b6e:	f63d af6c 	bhi.w	8000a4a <d_print_comp_inner+0xd6>
 8002b72:	4639      	mov	r1, r7
 8002b74:	4620      	mov	r0, r4
 8002b76:	f001 f985 	bl	8003e84 <d_print_expr_op>
 8002b7a:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002b7e:	29ff      	cmp	r1, #255	; 0xff
 8002b80:	f000 8263 	beq.w	800304a <d_print_comp_inner+0x26d6>
 8002b84:	1c4a      	adds	r2, r1, #1
 8002b86:	233c      	movs	r3, #60	; 0x3c
 8002b88:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8002b8c:	5463      	strb	r3, [r4, r1]
 8002b8e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8002b92:	68ab      	ldr	r3, [r5, #8]
 8002b94:	4639      	mov	r1, r7
 8002b96:	685a      	ldr	r2, [r3, #4]
 8002b98:	4620      	mov	r0, r4
 8002b9a:	f000 fb05 	bl	80031a8 <d_print_comp>
 8002b9e:	2202      	movs	r2, #2
 8002ba0:	4922      	ldr	r1, [pc, #136]	; (8002c2c <d_print_comp_inner+0x22b8>)
 8002ba2:	4620      	mov	r0, r4
 8002ba4:	f7fd fc28 	bl	80003f8 <d_append_buffer>
 8002ba8:	68ab      	ldr	r3, [r5, #8]
 8002baa:	4639      	mov	r1, r7
 8002bac:	689a      	ldr	r2, [r3, #8]
 8002bae:	4620      	mov	r0, r4
 8002bb0:	f000 fafa 	bl	80031a8 <d_print_comp>
 8002bb4:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002bb8:	29ff      	cmp	r1, #255	; 0xff
 8002bba:	f000 81d8 	beq.w	8002f6e <d_print_comp_inner+0x25fa>
 8002bbe:	2329      	movs	r3, #41	; 0x29
 8002bc0:	1c4a      	adds	r2, r1, #1
 8002bc2:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8002bc6:	5463      	strb	r3, [r4, r1]
 8002bc8:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8002bcc:	f7fd bf94 	b.w	8000af8 <d_print_comp_inner+0x184>
 8002bd0:	4917      	ldr	r1, [pc, #92]	; (8002c30 <d_print_comp_inner+0x22bc>)
 8002bd2:	6870      	ldr	r0, [r6, #4]
 8002bd4:	f00a fec2 	bl	800d95c <strncmp>
 8002bd8:	2800      	cmp	r0, #0
 8002bda:	f47e af6c 	bne.w	8001ab6 <d_print_comp_inner+0x1142>
 8002bde:	68aa      	ldr	r2, [r5, #8]
 8002be0:	4639      	mov	r1, r7
 8002be2:	4620      	mov	r0, r4
 8002be4:	f000 fae0 	bl	80031a8 <d_print_comp>
 8002be8:	2202      	movs	r2, #2
 8002bea:	4912      	ldr	r1, [pc, #72]	; (8002c34 <d_print_comp_inner+0x22c0>)
 8002bec:	4620      	mov	r0, r4
 8002bee:	f7fd fc03 	bl	80003f8 <d_append_buffer>
 8002bf2:	f7fe bf8c 	b.w	8001b0e <d_print_comp_inner+0x119a>
 8002bf6:	2600      	movs	r6, #0
 8002bf8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002bfc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002c00:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8002c04:	4620      	mov	r0, r4
 8002c06:	4798      	blx	r3
 8002c08:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002c0c:	3301      	adds	r3, #1
 8002c0e:	4631      	mov	r1, r6
 8002c10:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8002c14:	2201      	movs	r2, #1
 8002c16:	f7ff b81a 	b.w	8001c4e <d_print_comp_inner+0x12da>
 8002c1a:	bf00      	nop
 8002c1c:	080110d0 	.word	0x080110d0
 8002c20:	080110e0 	.word	0x080110e0
 8002c24:	080110e4 	.word	0x080110e4
 8002c28:	0801127c 	.word	0x0801127c
 8002c2c:	08011278 	.word	0x08011278
 8002c30:	080110e8 	.word	0x080110e8
 8002c34:	080110f0 	.word	0x080110f0
 8002c38:	68aa      	ldr	r2, [r5, #8]
 8002c3a:	f892 8000 	ldrb.w	r8, [r2]
 8002c3e:	f1b8 0f00 	cmp.w	r8, #0
 8002c42:	f47e aaf3 	bne.w	800122c <d_print_comp_inner+0x8b8>
 8002c46:	2b3c      	cmp	r3, #60	; 0x3c
 8002c48:	f000 81f3 	beq.w	8003032 <d_print_comp_inner+0x26be>
 8002c4c:	68aa      	ldr	r2, [r5, #8]
 8002c4e:	4639      	mov	r1, r7
 8002c50:	4620      	mov	r0, r4
 8002c52:	3e02      	subs	r6, #2
 8002c54:	f000 faa8 	bl	80031a8 <d_print_comp>
 8002c58:	2e04      	cmp	r6, #4
 8002c5a:	f63d af4d 	bhi.w	8000af8 <d_print_comp_inner+0x184>
 8002c5e:	e8df f006 	tbb	[pc, r6]
 8002c62:	1826      	.short	0x1826
 8002c64:	0a11      	.short	0x0a11
 8002c66:	03          	.byte	0x03
 8002c67:	00          	.byte	0x00
 8002c68:	4620      	mov	r0, r4
 8002c6a:	2203      	movs	r2, #3
 8002c6c:	49e3      	ldr	r1, [pc, #908]	; (8002ffc <d_print_comp_inner+0x2688>)
 8002c6e:	f7fd fbc3 	bl	80003f8 <d_append_buffer>
 8002c72:	f7fd bf41 	b.w	8000af8 <d_print_comp_inner+0x184>
 8002c76:	4620      	mov	r0, r4
 8002c78:	2202      	movs	r2, #2
 8002c7a:	49e1      	ldr	r1, [pc, #900]	; (8003000 <d_print_comp_inner+0x268c>)
 8002c7c:	f7fd fbbc 	bl	80003f8 <d_append_buffer>
 8002c80:	f7fd bf3a 	b.w	8000af8 <d_print_comp_inner+0x184>
 8002c84:	4620      	mov	r0, r4
 8002c86:	2202      	movs	r2, #2
 8002c88:	49de      	ldr	r1, [pc, #888]	; (8003004 <d_print_comp_inner+0x2690>)
 8002c8a:	f7fd fbb5 	bl	80003f8 <d_append_buffer>
 8002c8e:	f7fd bf33 	b.w	8000af8 <d_print_comp_inner+0x184>
 8002c92:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002c96:	29ff      	cmp	r1, #255	; 0xff
 8002c98:	f000 825f 	beq.w	800315a <d_print_comp_inner+0x27e6>
 8002c9c:	236c      	movs	r3, #108	; 0x6c
 8002c9e:	1c4a      	adds	r2, r1, #1
 8002ca0:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8002ca4:	5463      	strb	r3, [r4, r1]
 8002ca6:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8002caa:	f7fd bf25 	b.w	8000af8 <d_print_comp_inner+0x184>
 8002cae:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002cb2:	29ff      	cmp	r1, #255	; 0xff
 8002cb4:	f000 8263 	beq.w	800317e <d_print_comp_inner+0x280a>
 8002cb8:	2375      	movs	r3, #117	; 0x75
 8002cba:	1c4a      	adds	r2, r1, #1
 8002cbc:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8002cc0:	5463      	strb	r3, [r4, r1]
 8002cc2:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8002cc6:	f7fd bf17 	b.w	8000af8 <d_print_comp_inner+0x184>
 8002cca:	2500      	movs	r5, #0
 8002ccc:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002cd0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002cd4:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8002cd8:	4620      	mov	r0, r4
 8002cda:	4798      	blx	r3
 8002cdc:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002ce0:	3301      	adds	r3, #1
 8002ce2:	4629      	mov	r1, r5
 8002ce4:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8002ce8:	2201      	movs	r2, #1
 8002cea:	e419      	b.n	8002520 <d_print_comp_inner+0x1bac>
 8002cec:	2600      	movs	r6, #0
 8002cee:	4619      	mov	r1, r3
 8002cf0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002cf4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002cf8:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8002cfc:	4620      	mov	r0, r4
 8002cfe:	4798      	blx	r3
 8002d00:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002d04:	1c5a      	adds	r2, r3, #1
 8002d06:	f8c4 2120 	str.w	r2, [r4, #288]	; 0x120
 8002d0a:	4633      	mov	r3, r6
 8002d0c:	2101      	movs	r1, #1
 8002d0e:	f7fe ba2e 	b.w	800116e <d_print_comp_inner+0x7fa>
 8002d12:	6899      	ldr	r1, [r3, #8]
 8002d14:	2901      	cmp	r1, #1
 8002d16:	f47d ae9c 	bne.w	8000a52 <d_print_comp_inner+0xde>
 8002d1a:	685b      	ldr	r3, [r3, #4]
 8002d1c:	781b      	ldrb	r3, [r3, #0]
 8002d1e:	2b3e      	cmp	r3, #62	; 0x3e
 8002d20:	f47d ae97 	bne.w	8000a52 <d_print_comp_inner+0xde>
 8002d24:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002d28:	29ff      	cmp	r1, #255	; 0xff
 8002d2a:	f000 81eb 	beq.w	8003104 <d_print_comp_inner+0x2790>
 8002d2e:	1c4a      	adds	r2, r1, #1
 8002d30:	2328      	movs	r3, #40	; 0x28
 8002d32:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8002d36:	5463      	strb	r3, [r4, r1]
 8002d38:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8002d3c:	686a      	ldr	r2, [r5, #4]
 8002d3e:	68ae      	ldr	r6, [r5, #8]
 8002d40:	f7fd be87 	b.w	8000a52 <d_print_comp_inner+0xde>
 8002d44:	2500      	movs	r5, #0
 8002d46:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002d4a:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8002d4e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002d52:	4620      	mov	r0, r4
 8002d54:	4798      	blx	r3
 8002d56:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002d5a:	3301      	adds	r3, #1
 8002d5c:	4629      	mov	r1, r5
 8002d5e:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8002d62:	e4c0      	b.n	80026e6 <d_print_comp_inner+0x1d72>
 8002d64:	2500      	movs	r5, #0
 8002d66:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002d6a:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8002d6e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002d72:	4620      	mov	r0, r4
 8002d74:	4798      	blx	r3
 8002d76:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002d7a:	3301      	adds	r3, #1
 8002d7c:	4629      	mov	r1, r5
 8002d7e:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8002d82:	f7ff b8c6 	b.w	8001f12 <d_print_comp_inner+0x159e>
 8002d86:	2600      	movs	r6, #0
 8002d88:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002d8c:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8002d90:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002d94:	4620      	mov	r0, r4
 8002d96:	4798      	blx	r3
 8002d98:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002d9c:	3301      	adds	r3, #1
 8002d9e:	4631      	mov	r1, r6
 8002da0:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8002da4:	f7fe b8e2 	b.w	8000f6c <d_print_comp_inner+0x5f8>
 8002da8:	f04f 0800 	mov.w	r8, #0
 8002dac:	4619      	mov	r1, r3
 8002dae:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8002db2:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 8002db6:	f880 80ff 	strb.w	r8, [r0, #255]	; 0xff
 8002dba:	4798      	blx	r3
 8002dbc:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002dc0:	1c5a      	adds	r2, r3, #1
 8002dc2:	f8c4 2120 	str.w	r2, [r4, #288]	; 0x120
 8002dc6:	4643      	mov	r3, r8
 8002dc8:	f7fe b8bd 	b.w	8000f46 <d_print_comp_inner+0x5d2>
 8002dcc:	f884 00ff 	strb.w	r0, [r4, #255]	; 0xff
 8002dd0:	4619      	mov	r1, r3
 8002dd2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002dd6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002dda:	4620      	mov	r0, r4
 8002ddc:	4798      	blx	r3
 8002dde:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002de2:	1c5a      	adds	r2, r3, #1
 8002de4:	f8c4 2120 	str.w	r2, [r4, #288]	; 0x120
 8002de8:	4633      	mov	r3, r6
 8002dea:	f7ff bb87 	b.w	80024fc <d_print_comp_inner+0x1b88>
 8002dee:	255f      	movs	r5, #95	; 0x5f
 8002df0:	f7ff ba7b 	b.w	80022ea <d_print_comp_inner+0x1976>
 8002df4:	68aa      	ldr	r2, [r5, #8]
 8002df6:	4639      	mov	r1, r7
 8002df8:	4620      	mov	r0, r4
 8002dfa:	f000 f9d5 	bl	80031a8 <d_print_comp>
 8002dfe:	9b06      	ldr	r3, [sp, #24]
 8002e00:	9a00      	ldr	r2, [sp, #0]
 8002e02:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
 8002e06:	2b00      	cmp	r3, #0
 8002e08:	f43e aabc 	beq.w	8001384 <d_print_comp_inner+0xa10>
 8002e0c:	f7fd be74 	b.w	8000af8 <d_print_comp_inner+0x184>
 8002e10:	4642      	mov	r2, r8
 8002e12:	4639      	mov	r1, r7
 8002e14:	4620      	mov	r0, r4
 8002e16:	f001 f873 	bl	8003f00 <d_print_subexpr>
 8002e1a:	464a      	mov	r2, r9
 8002e1c:	4639      	mov	r1, r7
 8002e1e:	4620      	mov	r0, r4
 8002e20:	f001 f830 	bl	8003e84 <d_print_expr_op>
 8002e24:	4632      	mov	r2, r6
 8002e26:	4639      	mov	r1, r7
 8002e28:	4620      	mov	r0, r4
 8002e2a:	f001 f869 	bl	8003f00 <d_print_subexpr>
 8002e2e:	4620      	mov	r0, r4
 8002e30:	2203      	movs	r2, #3
 8002e32:	4975      	ldr	r1, [pc, #468]	; (8003008 <d_print_comp_inner+0x2694>)
 8002e34:	f7fd fae0 	bl	80003f8 <d_append_buffer>
 8002e38:	462a      	mov	r2, r5
 8002e3a:	4639      	mov	r1, r7
 8002e3c:	4620      	mov	r0, r4
 8002e3e:	f001 f85f 	bl	8003f00 <d_print_subexpr>
 8002e42:	f7fd be59 	b.w	8000af8 <d_print_comp_inner+0x184>
 8002e46:	6893      	ldr	r3, [r2, #8]
 8002e48:	781b      	ldrb	r3, [r3, #0]
 8002e4a:	2b29      	cmp	r3, #41	; 0x29
 8002e4c:	bf1c      	itt	ne
 8002e4e:	2301      	movne	r3, #1
 8002e50:	f8c4 3118 	strne.w	r3, [r4, #280]	; 0x118
 8002e54:	6852      	ldr	r2, [r2, #4]
 8002e56:	4639      	mov	r1, r7
 8002e58:	4620      	mov	r0, r4
 8002e5a:	f001 f851 	bl	8003f00 <d_print_subexpr>
 8002e5e:	f7fd be07 	b.w	8000a70 <d_print_comp_inner+0xfc>
 8002e62:	686a      	ldr	r2, [r5, #4]
 8002e64:	4639      	mov	r1, r7
 8002e66:	4620      	mov	r0, r4
 8002e68:	f001 f84a 	bl	8003f00 <d_print_subexpr>
 8002e6c:	4620      	mov	r0, r4
 8002e6e:	2203      	movs	r2, #3
 8002e70:	4966      	ldr	r1, [pc, #408]	; (800300c <d_print_comp_inner+0x2698>)
 8002e72:	f7fd fac1 	bl	80003f8 <d_append_buffer>
 8002e76:	f7fd be3f 	b.w	8000af8 <d_print_comp_inner+0x184>
 8002e7a:	686b      	ldr	r3, [r5, #4]
 8002e7c:	781a      	ldrb	r2, [r3, #0]
 8002e7e:	2a01      	cmp	r2, #1
 8002e80:	f47f ab23 	bne.w	80024ca <d_print_comp_inner+0x1b56>
 8002e84:	68aa      	ldr	r2, [r5, #8]
 8002e86:	7812      	ldrb	r2, [r2, #0]
 8002e88:	2a29      	cmp	r2, #41	; 0x29
 8002e8a:	bf08      	it	eq
 8002e8c:	461d      	moveq	r5, r3
 8002e8e:	f7ff bb1c 	b.w	80024ca <d_print_comp_inner+0x1b56>
 8002e92:	ab14      	add	r3, sp, #80	; 0x50
 8002e94:	9603      	str	r6, [sp, #12]
 8002e96:	f843 cd48 	str.w	ip, [r3, #-72]!
 8002e9a:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8002e9e:	f7fe be9d 	b.w	8001bdc <d_print_comp_inner+0x1268>
 8002ea2:	4642      	mov	r2, r8
 8002ea4:	4639      	mov	r1, r7
 8002ea6:	4620      	mov	r0, r4
 8002ea8:	f000 ffec 	bl	8003e84 <d_print_expr_op>
 8002eac:	e5e5      	b.n	8002a7a <d_print_comp_inner+0x2106>
 8002eae:	2500      	movs	r5, #0
 8002eb0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002eb4:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8002eb8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002ebc:	4620      	mov	r0, r4
 8002ebe:	4798      	blx	r3
 8002ec0:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002ec4:	3301      	adds	r3, #1
 8002ec6:	4629      	mov	r1, r5
 8002ec8:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8002ecc:	f7ff bbde 	b.w	800268c <d_print_comp_inner+0x1d18>
 8002ed0:	f04f 0800 	mov.w	r8, #0
 8002ed4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002ed8:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8002edc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002ee0:	4620      	mov	r0, r4
 8002ee2:	4798      	blx	r3
 8002ee4:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002ee8:	3301      	adds	r3, #1
 8002eea:	4641      	mov	r1, r8
 8002eec:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8002ef0:	e440      	b.n	8002774 <d_print_comp_inner+0x1e00>
 8002ef2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002ef6:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8002efa:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002efe:	4620      	mov	r0, r4
 8002f00:	4798      	blx	r3
 8002f02:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002f06:	3301      	adds	r3, #1
 8002f08:	4639      	mov	r1, r7
 8002f0a:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8002f0e:	f7fe be7c 	b.w	8001c0a <d_print_comp_inner+0x1296>
 8002f12:	9b02      	ldr	r3, [sp, #8]
 8002f14:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8002f18:	f7fe be69 	b.w	8001bee <d_print_comp_inner+0x127a>
 8002f1c:	4664      	mov	r4, ip
 8002f1e:	f7fe bf39 	b.w	8001d94 <d_print_comp_inner+0x1420>
 8002f22:	2600      	movs	r6, #0
 8002f24:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002f28:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8002f2c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002f30:	4620      	mov	r0, r4
 8002f32:	4798      	blx	r3
 8002f34:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002f38:	3301      	adds	r3, #1
 8002f3a:	4631      	mov	r1, r6
 8002f3c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8002f40:	f7ff bbb2 	b.w	80026a8 <d_print_comp_inner+0x1d34>
 8002f44:	4660      	mov	r0, ip
 8002f46:	46e0      	mov	r8, ip
 8002f48:	f7fe bcb1 	b.w	80018ae <d_print_comp_inner+0xf3a>
 8002f4c:	2600      	movs	r6, #0
 8002f4e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002f52:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8002f56:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002f5a:	4620      	mov	r0, r4
 8002f5c:	4798      	blx	r3
 8002f5e:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002f62:	3301      	adds	r3, #1
 8002f64:	4631      	mov	r1, r6
 8002f66:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8002f6a:	f7ff bbab 	b.w	80026c4 <d_print_comp_inner+0x1d50>
 8002f6e:	2500      	movs	r5, #0
 8002f70:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002f74:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8002f78:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002f7c:	4620      	mov	r0, r4
 8002f7e:	4798      	blx	r3
 8002f80:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002f84:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 8002f88:	3301      	adds	r3, #1
 8002f8a:	4629      	mov	r1, r5
 8002f8c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8002f90:	e615      	b.n	8002bbe <d_print_comp_inner+0x224a>
 8002f92:	f884 00ff 	strb.w	r0, [r4, #255]	; 0xff
 8002f96:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002f9a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002f9e:	4620      	mov	r0, r4
 8002fa0:	4798      	blx	r3
 8002fa2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002fa6:	3301      	adds	r3, #1
 8002fa8:	4631      	mov	r1, r6
 8002faa:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8002fae:	f7fd bd72 	b.w	8000a96 <d_print_comp_inner+0x122>
 8002fb2:	2600      	movs	r6, #0
 8002fb4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002fb8:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8002fbc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002fc0:	4620      	mov	r0, r4
 8002fc2:	4798      	blx	r3
 8002fc4:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002fc8:	3301      	adds	r3, #1
 8002fca:	4631      	mov	r1, r6
 8002fcc:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8002fd0:	f7fd bd73 	b.w	8000aba <d_print_comp_inner+0x146>
 8002fd4:	686a      	ldr	r2, [r5, #4]
 8002fd6:	4639      	mov	r1, r7
 8002fd8:	4620      	mov	r0, r4
 8002fda:	f000 ff91 	bl	8003f00 <d_print_subexpr>
 8002fde:	4632      	mov	r2, r6
 8002fe0:	4639      	mov	r1, r7
 8002fe2:	4620      	mov	r0, r4
 8002fe4:	f000 ff4e 	bl	8003e84 <d_print_expr_op>
 8002fe8:	f7fd bd86 	b.w	8000af8 <d_print_comp_inner+0x184>
 8002fec:	f8c4 1138 	str.w	r1, [r4, #312]	; 0x138
 8002ff0:	2301      	movs	r3, #1
 8002ff2:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8002ff6:	f7fd bd7f 	b.w	8000af8 <d_print_comp_inner+0x184>
 8002ffa:	bf00      	nop
 8002ffc:	0801129c 	.word	0x0801129c
 8003000:	08011298 	.word	0x08011298
 8003004:	08011294 	.word	0x08011294
 8003008:	08011288 	.word	0x08011288
 800300c:	080112cc 	.word	0x080112cc
 8003010:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003014:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8003018:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800301c:	4620      	mov	r0, r4
 800301e:	4798      	blx	r3
 8003020:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003024:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8003028:	3301      	adds	r3, #1
 800302a:	4631      	mov	r1, r6
 800302c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8003030:	e4a5      	b.n	800297e <d_print_comp_inner+0x200a>
 8003032:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003036:	29ff      	cmp	r1, #255	; 0xff
 8003038:	d054      	beq.n	80030e4 <d_print_comp_inner+0x2770>
 800303a:	232d      	movs	r3, #45	; 0x2d
 800303c:	1c4a      	adds	r2, r1, #1
 800303e:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003042:	5463      	strb	r3, [r4, r1]
 8003044:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003048:	e600      	b.n	8002c4c <d_print_comp_inner+0x22d8>
 800304a:	2600      	movs	r6, #0
 800304c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003050:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8003054:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003058:	4620      	mov	r0, r4
 800305a:	4798      	blx	r3
 800305c:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003060:	3301      	adds	r3, #1
 8003062:	4631      	mov	r1, r6
 8003064:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8003068:	e58c      	b.n	8002b84 <d_print_comp_inner+0x2210>
 800306a:	f04f 0800 	mov.w	r8, #0
 800306e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003072:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003076:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800307a:	4620      	mov	r0, r4
 800307c:	4798      	blx	r3
 800307e:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003082:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 8003086:	3301      	adds	r3, #1
 8003088:	4641      	mov	r1, r8
 800308a:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 800308e:	f7fe b9c2 	b.w	8001416 <d_print_comp_inner+0xaa2>
 8003092:	4688      	mov	r8, r1
 8003094:	e51f      	b.n	8002ad6 <d_print_comp_inner+0x2162>
 8003096:	454f      	cmp	r7, r9
 8003098:	f67f aea9 	bls.w	8002dee <d_print_comp_inner+0x247a>
 800309c:	2d5f      	cmp	r5, #95	; 0x5f
 800309e:	f47f aea6 	bne.w	8002dee <d_print_comp_inner+0x247a>
 80030a2:	28ff      	cmp	r0, #255	; 0xff
 80030a4:	f63f a921 	bhi.w	80022ea <d_print_comp_inner+0x1976>
 80030a8:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80030ac:	29ff      	cmp	r1, #255	; 0xff
 80030ae:	b2c5      	uxtb	r5, r0
 80030b0:	d10f      	bne.n	80030d2 <d_print_comp_inner+0x275e>
 80030b2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80030b6:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80030ba:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80030be:	4620      	mov	r0, r4
 80030c0:	4798      	blx	r3
 80030c2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80030c6:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 80030ca:	3301      	adds	r3, #1
 80030cc:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 80030d0:	2100      	movs	r1, #0
 80030d2:	1c4b      	adds	r3, r1, #1
 80030d4:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80030d8:	464e      	mov	r6, r9
 80030da:	5465      	strb	r5, [r4, r1]
 80030dc:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 80030e0:	f7ff b90d 	b.w	80022fe <d_print_comp_inner+0x198a>
 80030e4:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 80030e8:	f880 80ff 	strb.w	r8, [r0, #255]	; 0xff
 80030ec:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 80030f0:	4798      	blx	r3
 80030f2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80030f6:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 80030fa:	3301      	adds	r3, #1
 80030fc:	4641      	mov	r1, r8
 80030fe:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8003102:	e79a      	b.n	800303a <d_print_comp_inner+0x26c6>
 8003104:	2600      	movs	r6, #0
 8003106:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800310a:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800310e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003112:	4620      	mov	r0, r4
 8003114:	4798      	blx	r3
 8003116:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800311a:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 800311e:	3301      	adds	r3, #1
 8003120:	4631      	mov	r1, r6
 8003122:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8003126:	e602      	b.n	8002d2e <d_print_comp_inner+0x23ba>
 8003128:	2205      	movs	r2, #5
 800312a:	491e      	ldr	r1, [pc, #120]	; (80031a4 <d_print_comp_inner+0x2830>)
 800312c:	f7fd f964 	bl	80003f8 <d_append_buffer>
 8003130:	f7fd bce2 	b.w	8000af8 <d_print_comp_inner+0x184>
 8003134:	2500      	movs	r5, #0
 8003136:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800313a:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 800313e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003142:	4620      	mov	r0, r4
 8003144:	4798      	blx	r3
 8003146:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800314a:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 800314e:	3301      	adds	r3, #1
 8003150:	4629      	mov	r1, r5
 8003152:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8003156:	f7fd bcc8 	b.w	8000aea <d_print_comp_inner+0x176>
 800315a:	2500      	movs	r5, #0
 800315c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003160:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8003164:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003168:	4620      	mov	r0, r4
 800316a:	4798      	blx	r3
 800316c:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003170:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 8003174:	3301      	adds	r3, #1
 8003176:	4629      	mov	r1, r5
 8003178:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 800317c:	e58e      	b.n	8002c9c <d_print_comp_inner+0x2328>
 800317e:	2500      	movs	r5, #0
 8003180:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003184:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8003188:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800318c:	4620      	mov	r0, r4
 800318e:	4798      	blx	r3
 8003190:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003194:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 8003198:	3301      	adds	r3, #1
 800319a:	4629      	mov	r1, r5
 800319c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 80031a0:	e58a      	b.n	8002cb8 <d_print_comp_inner+0x2344>
 80031a2:	bf00      	nop
 80031a4:	080112a0 	.word	0x080112a0

080031a8 <d_print_comp>:
 80031a8:	b510      	push	{r4, lr}
 80031aa:	f8d0 3124 	ldr.w	r3, [r0, #292]	; 0x124
 80031ae:	b082      	sub	sp, #8
 80031b0:	f8c0 d124 	str.w	sp, [r0, #292]	; 0x124
 80031b4:	4604      	mov	r4, r0
 80031b6:	e88d 000c 	stmia.w	sp, {r2, r3}
 80031ba:	f7fd fbdb 	bl	8000974 <d_print_comp_inner>
 80031be:	9b01      	ldr	r3, [sp, #4]
 80031c0:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80031c4:	b002      	add	sp, #8
 80031c6:	bd10      	pop	{r4, pc}

080031c8 <d_print_mod>:
 80031c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80031cc:	7813      	ldrb	r3, [r2, #0]
 80031ce:	3b03      	subs	r3, #3
 80031d0:	b082      	sub	sp, #8
 80031d2:	4615      	mov	r5, r2
 80031d4:	4604      	mov	r4, r0
 80031d6:	4688      	mov	r8, r1
 80031d8:	2b2a      	cmp	r3, #42	; 0x2a
 80031da:	f200 81cd 	bhi.w	8003578 <d_print_mod+0x3b0>
 80031de:	e8df f013 	tbh	[pc, r3, lsl #1]
 80031e2:	0051      	.short	0x0051
 80031e4:	01cb01cb 	.word	0x01cb01cb
 80031e8:	01cb01cb 	.word	0x01cb01cb
 80031ec:	01cb01cb 	.word	0x01cb01cb
 80031f0:	01cb01cb 	.word	0x01cb01cb
 80031f4:	01cb01cb 	.word	0x01cb01cb
 80031f8:	01cb01cb 	.word	0x01cb01cb
 80031fc:	01cb01cb 	.word	0x01cb01cb
 8003200:	01cb01cb 	.word	0x01cb01cb
 8003204:	01cb01cb 	.word	0x01cb01cb
 8003208:	01cb01cb 	.word	0x01cb01cb
 800320c:	006201cb 	.word	0x006201cb
 8003210:	00ac0087 	.word	0x00ac0087
 8003214:	00870062 	.word	0x00870062
 8003218:	00d000ac 	.word	0x00d000ac
 800321c:	011800e9 	.word	0x011800e9
 8003220:	01370126 	.word	0x01370126
 8003224:	013d013a 	.word	0x013d013a
 8003228:	01cb0163 	.word	0x01cb0163
 800322c:	01cb01cb 	.word	0x01cb01cb
 8003230:	018901cb 	.word	0x018901cb
 8003234:	002b01cb 	.word	0x002b01cb
 8003238:	4ed6      	ldr	r6, [pc, #856]	; (8003594 <d_print_mod+0x3cc>)
 800323a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 800323e:	f106 0a0a 	add.w	sl, r6, #10
 8003242:	f04f 0900 	mov.w	r9, #0
 8003246:	e009      	b.n	800325c <d_print_mod+0x94>
 8003248:	460b      	mov	r3, r1
 800324a:	3101      	adds	r1, #1
 800324c:	45b2      	cmp	sl, r6
 800324e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003252:	54e7      	strb	r7, [r4, r3]
 8003254:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003258:	f000 81ac 	beq.w	80035b4 <d_print_mod+0x3ec>
 800325c:	29ff      	cmp	r1, #255	; 0xff
 800325e:	f816 7b01 	ldrb.w	r7, [r6], #1
 8003262:	d1f1      	bne.n	8003248 <d_print_mod+0x80>
 8003264:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003268:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800326c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003270:	4620      	mov	r0, r4
 8003272:	4798      	blx	r3
 8003274:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003278:	3301      	adds	r3, #1
 800327a:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 800327e:	2101      	movs	r1, #1
 8003280:	2300      	movs	r3, #0
 8003282:	e7e3      	b.n	800324c <d_print_mod+0x84>
 8003284:	686a      	ldr	r2, [r5, #4]
 8003286:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800328a:	9200      	str	r2, [sp, #0]
 800328c:	4641      	mov	r1, r8
 800328e:	f8c4 d124 	str.w	sp, [r4, #292]	; 0x124
 8003292:	4620      	mov	r0, r4
 8003294:	9301      	str	r3, [sp, #4]
 8003296:	f7fd fb6d 	bl	8000974 <d_print_comp_inner>
 800329a:	9b01      	ldr	r3, [sp, #4]
 800329c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80032a0:	b002      	add	sp, #8
 80032a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80032a6:	4dbc      	ldr	r5, [pc, #752]	; (8003598 <d_print_mod+0x3d0>)
 80032a8:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80032ac:	f105 0709 	add.w	r7, r5, #9
 80032b0:	f04f 0800 	mov.w	r8, #0
 80032b4:	e008      	b.n	80032c8 <d_print_mod+0x100>
 80032b6:	460b      	mov	r3, r1
 80032b8:	3101      	adds	r1, #1
 80032ba:	42af      	cmp	r7, r5
 80032bc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80032c0:	54e6      	strb	r6, [r4, r3]
 80032c2:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80032c6:	d0eb      	beq.n	80032a0 <d_print_mod+0xd8>
 80032c8:	29ff      	cmp	r1, #255	; 0xff
 80032ca:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 80032ce:	d1f2      	bne.n	80032b6 <d_print_mod+0xee>
 80032d0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80032d4:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80032d8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80032dc:	4620      	mov	r0, r4
 80032de:	4798      	blx	r3
 80032e0:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80032e4:	3301      	adds	r3, #1
 80032e6:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 80032ea:	2101      	movs	r1, #1
 80032ec:	2300      	movs	r3, #0
 80032ee:	e7e4      	b.n	80032ba <d_print_mod+0xf2>
 80032f0:	4daa      	ldr	r5, [pc, #680]	; (800359c <d_print_mod+0x3d4>)
 80032f2:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80032f6:	f105 0709 	add.w	r7, r5, #9
 80032fa:	f04f 0800 	mov.w	r8, #0
 80032fe:	e008      	b.n	8003312 <d_print_mod+0x14a>
 8003300:	460b      	mov	r3, r1
 8003302:	3101      	adds	r1, #1
 8003304:	42af      	cmp	r7, r5
 8003306:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800330a:	54e6      	strb	r6, [r4, r3]
 800330c:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8003310:	d0c6      	beq.n	80032a0 <d_print_mod+0xd8>
 8003312:	29ff      	cmp	r1, #255	; 0xff
 8003314:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 8003318:	d1f2      	bne.n	8003300 <d_print_mod+0x138>
 800331a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800331e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003322:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003326:	4620      	mov	r0, r4
 8003328:	4798      	blx	r3
 800332a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800332e:	3301      	adds	r3, #1
 8003330:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8003334:	2101      	movs	r1, #1
 8003336:	2300      	movs	r3, #0
 8003338:	e7e4      	b.n	8003304 <d_print_mod+0x13c>
 800333a:	4d99      	ldr	r5, [pc, #612]	; (80035a0 <d_print_mod+0x3d8>)
 800333c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003340:	1daf      	adds	r7, r5, #6
 8003342:	f04f 0800 	mov.w	r8, #0
 8003346:	e008      	b.n	800335a <d_print_mod+0x192>
 8003348:	460b      	mov	r3, r1
 800334a:	3101      	adds	r1, #1
 800334c:	42af      	cmp	r7, r5
 800334e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003352:	54e6      	strb	r6, [r4, r3]
 8003354:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8003358:	d0a2      	beq.n	80032a0 <d_print_mod+0xd8>
 800335a:	29ff      	cmp	r1, #255	; 0xff
 800335c:	f815 6b01 	ldrb.w	r6, [r5], #1
 8003360:	d1f2      	bne.n	8003348 <d_print_mod+0x180>
 8003362:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003366:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800336a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800336e:	4620      	mov	r0, r4
 8003370:	4798      	blx	r3
 8003372:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003376:	3301      	adds	r3, #1
 8003378:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 800337c:	2101      	movs	r1, #1
 800337e:	2300      	movs	r3, #0
 8003380:	e7e4      	b.n	800334c <d_print_mod+0x184>
 8003382:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8003386:	2bff      	cmp	r3, #255	; 0xff
 8003388:	f000 8170 	beq.w	800366c <d_print_mod+0x4a4>
 800338c:	1c59      	adds	r1, r3, #1
 800338e:	2220      	movs	r2, #32
 8003390:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003394:	54e2      	strb	r2, [r4, r3]
 8003396:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 800339a:	29ff      	cmp	r1, #255	; 0xff
 800339c:	f000 8134 	beq.w	8003608 <d_print_mod+0x440>
 80033a0:	1c4a      	adds	r2, r1, #1
 80033a2:	2326      	movs	r3, #38	; 0x26
 80033a4:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80033a8:	5463      	strb	r3, [r4, r1]
 80033aa:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80033ae:	b002      	add	sp, #8
 80033b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80033b4:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 80033b8:	2bff      	cmp	r3, #255	; 0xff
 80033ba:	f000 8168 	beq.w	800368e <d_print_mod+0x4c6>
 80033be:	1c59      	adds	r1, r3, #1
 80033c0:	2220      	movs	r2, #32
 80033c2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80033c6:	54e2      	strb	r2, [r4, r3]
 80033c8:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80033cc:	4d75      	ldr	r5, [pc, #468]	; (80035a4 <d_print_mod+0x3dc>)
 80033ce:	f04f 0800 	mov.w	r8, #0
 80033d2:	1caf      	adds	r7, r5, #2
 80033d4:	e009      	b.n	80033ea <d_print_mod+0x222>
 80033d6:	460b      	mov	r3, r1
 80033d8:	3101      	adds	r1, #1
 80033da:	42af      	cmp	r7, r5
 80033dc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80033e0:	54e6      	strb	r6, [r4, r3]
 80033e2:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80033e6:	f43f af5b 	beq.w	80032a0 <d_print_mod+0xd8>
 80033ea:	29ff      	cmp	r1, #255	; 0xff
 80033ec:	f815 6b01 	ldrb.w	r6, [r5], #1
 80033f0:	d1f1      	bne.n	80033d6 <d_print_mod+0x20e>
 80033f2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80033f6:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80033fa:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80033fe:	4620      	mov	r0, r4
 8003400:	4798      	blx	r3
 8003402:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003406:	3301      	adds	r3, #1
 8003408:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 800340c:	2101      	movs	r1, #1
 800340e:	2300      	movs	r3, #0
 8003410:	e7e3      	b.n	80033da <d_print_mod+0x212>
 8003412:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003416:	29ff      	cmp	r1, #255	; 0xff
 8003418:	f000 8107 	beq.w	800362a <d_print_mod+0x462>
 800341c:	1c4a      	adds	r2, r1, #1
 800341e:	2320      	movs	r3, #32
 8003420:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003424:	5463      	strb	r3, [r4, r1]
 8003426:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800342a:	68aa      	ldr	r2, [r5, #8]
 800342c:	e72b      	b.n	8003286 <d_print_mod+0xbe>
 800342e:	f011 0804 	ands.w	r8, r1, #4
 8003432:	f47f af35 	bne.w	80032a0 <d_print_mod+0xd8>
 8003436:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 800343a:	29ff      	cmp	r1, #255	; 0xff
 800343c:	f000 8138 	beq.w	80036b0 <d_print_mod+0x4e8>
 8003440:	1c4a      	adds	r2, r1, #1
 8003442:	232a      	movs	r3, #42	; 0x2a
 8003444:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003448:	5463      	strb	r3, [r4, r1]
 800344a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800344e:	e727      	b.n	80032a0 <d_print_mod+0xd8>
 8003450:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003454:	e7a1      	b.n	800339a <d_print_mod+0x1d2>
 8003456:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 800345a:	e7b7      	b.n	80033cc <d_print_mod+0x204>
 800345c:	4d52      	ldr	r5, [pc, #328]	; (80035a8 <d_print_mod+0x3e0>)
 800345e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003462:	f105 0708 	add.w	r7, r5, #8
 8003466:	f04f 0800 	mov.w	r8, #0
 800346a:	e009      	b.n	8003480 <d_print_mod+0x2b8>
 800346c:	460b      	mov	r3, r1
 800346e:	3101      	adds	r1, #1
 8003470:	42af      	cmp	r7, r5
 8003472:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003476:	54e6      	strb	r6, [r4, r3]
 8003478:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 800347c:	f43f af10 	beq.w	80032a0 <d_print_mod+0xd8>
 8003480:	29ff      	cmp	r1, #255	; 0xff
 8003482:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 8003486:	d1f1      	bne.n	800346c <d_print_mod+0x2a4>
 8003488:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800348c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003490:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003494:	4620      	mov	r0, r4
 8003496:	4798      	blx	r3
 8003498:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800349c:	3301      	adds	r3, #1
 800349e:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 80034a2:	2101      	movs	r1, #1
 80034a4:	2300      	movs	r3, #0
 80034a6:	e7e3      	b.n	8003470 <d_print_mod+0x2a8>
 80034a8:	4d40      	ldr	r5, [pc, #256]	; (80035ac <d_print_mod+0x3e4>)
 80034aa:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80034ae:	f105 070a 	add.w	r7, r5, #10
 80034b2:	f04f 0800 	mov.w	r8, #0
 80034b6:	e009      	b.n	80034cc <d_print_mod+0x304>
 80034b8:	460b      	mov	r3, r1
 80034ba:	3101      	adds	r1, #1
 80034bc:	42af      	cmp	r7, r5
 80034be:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80034c2:	54e6      	strb	r6, [r4, r3]
 80034c4:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80034c8:	f43f aeea 	beq.w	80032a0 <d_print_mod+0xd8>
 80034cc:	29ff      	cmp	r1, #255	; 0xff
 80034ce:	f815 6b01 	ldrb.w	r6, [r5], #1
 80034d2:	d1f1      	bne.n	80034b8 <d_print_mod+0x2f0>
 80034d4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80034d8:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80034dc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80034e0:	4620      	mov	r0, r4
 80034e2:	4798      	blx	r3
 80034e4:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80034e8:	3301      	adds	r3, #1
 80034ea:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 80034ee:	2101      	movs	r1, #1
 80034f0:	2300      	movs	r3, #0
 80034f2:	e7e3      	b.n	80034bc <d_print_mod+0x2f4>
 80034f4:	f890 3104 	ldrb.w	r3, [r0, #260]	; 0x104
 80034f8:	2b28      	cmp	r3, #40	; 0x28
 80034fa:	d00a      	beq.n	8003512 <d_print_mod+0x34a>
 80034fc:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003500:	29ff      	cmp	r1, #255	; 0xff
 8003502:	d071      	beq.n	80035e8 <d_print_mod+0x420>
 8003504:	1c4a      	adds	r2, r1, #1
 8003506:	2320      	movs	r3, #32
 8003508:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800350c:	5463      	strb	r3, [r4, r1]
 800350e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003512:	686a      	ldr	r2, [r5, #4]
 8003514:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003518:	4d25      	ldr	r5, [pc, #148]	; (80035b0 <d_print_mod+0x3e8>)
 800351a:	f8c4 d124 	str.w	sp, [r4, #292]	; 0x124
 800351e:	4641      	mov	r1, r8
 8003520:	4620      	mov	r0, r4
 8003522:	9301      	str	r3, [sp, #4]
 8003524:	9200      	str	r2, [sp, #0]
 8003526:	f7fd fa25 	bl	8000974 <d_print_comp_inner>
 800352a:	9b01      	ldr	r3, [sp, #4]
 800352c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003530:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003534:	1cef      	adds	r7, r5, #3
 8003536:	f04f 0800 	mov.w	r8, #0
 800353a:	e009      	b.n	8003550 <d_print_mod+0x388>
 800353c:	460b      	mov	r3, r1
 800353e:	3101      	adds	r1, #1
 8003540:	42af      	cmp	r7, r5
 8003542:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003546:	54e6      	strb	r6, [r4, r3]
 8003548:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 800354c:	f43f aea8 	beq.w	80032a0 <d_print_mod+0xd8>
 8003550:	29ff      	cmp	r1, #255	; 0xff
 8003552:	f815 6b01 	ldrb.w	r6, [r5], #1
 8003556:	d1f1      	bne.n	800353c <d_print_mod+0x374>
 8003558:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800355c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003560:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003564:	4620      	mov	r0, r4
 8003566:	4798      	blx	r3
 8003568:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800356c:	3301      	adds	r3, #1
 800356e:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8003572:	2101      	movs	r1, #1
 8003574:	2300      	movs	r3, #0
 8003576:	e7e3      	b.n	8003540 <d_print_mod+0x378>
 8003578:	f8d0 3124 	ldr.w	r3, [r0, #292]	; 0x124
 800357c:	f8c0 d124 	str.w	sp, [r0, #292]	; 0x124
 8003580:	462a      	mov	r2, r5
 8003582:	9301      	str	r3, [sp, #4]
 8003584:	9500      	str	r5, [sp, #0]
 8003586:	f7fd f9f5 	bl	8000974 <d_print_comp_inner>
 800358a:	9b01      	ldr	r3, [sp, #4]
 800358c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003590:	e686      	b.n	80032a0 <d_print_mod+0xd8>
 8003592:	bf00      	nop
 8003594:	0801138c 	.word	0x0801138c
 8003598:	0801134b 	.word	0x0801134b
 800359c:	08011357 	.word	0x08011357
 80035a0:	08011364 	.word	0x08011364
 80035a4:	0801136c 	.word	0x0801136c
 80035a8:	0801136f 	.word	0x0801136f
 80035ac:	0801137c 	.word	0x0801137c
 80035b0:	08011388 	.word	0x08011388
 80035b4:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80035b8:	686a      	ldr	r2, [r5, #4]
 80035ba:	f8c4 d124 	str.w	sp, [r4, #292]	; 0x124
 80035be:	4641      	mov	r1, r8
 80035c0:	4620      	mov	r0, r4
 80035c2:	9301      	str	r3, [sp, #4]
 80035c4:	9200      	str	r2, [sp, #0]
 80035c6:	f7fd f9d5 	bl	8000974 <d_print_comp_inner>
 80035ca:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80035ce:	9b01      	ldr	r3, [sp, #4]
 80035d0:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80035d4:	29ff      	cmp	r1, #255	; 0xff
 80035d6:	d038      	beq.n	800364a <d_print_mod+0x482>
 80035d8:	1c4a      	adds	r2, r1, #1
 80035da:	2329      	movs	r3, #41	; 0x29
 80035dc:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80035e0:	5463      	strb	r3, [r4, r1]
 80035e2:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80035e6:	e65b      	b.n	80032a0 <d_print_mod+0xd8>
 80035e8:	2600      	movs	r6, #0
 80035ea:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 80035ee:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 80035f2:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
 80035f6:	4798      	blx	r3
 80035f8:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80035fc:	3301      	adds	r3, #1
 80035fe:	4631      	mov	r1, r6
 8003600:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8003604:	2201      	movs	r2, #1
 8003606:	e77e      	b.n	8003506 <d_print_mod+0x33e>
 8003608:	2500      	movs	r5, #0
 800360a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800360e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003612:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8003616:	4620      	mov	r0, r4
 8003618:	4798      	blx	r3
 800361a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800361e:	3301      	adds	r3, #1
 8003620:	4629      	mov	r1, r5
 8003622:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8003626:	2201      	movs	r2, #1
 8003628:	e6bb      	b.n	80033a2 <d_print_mod+0x1da>
 800362a:	2600      	movs	r6, #0
 800362c:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 8003630:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8003634:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
 8003638:	4798      	blx	r3
 800363a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800363e:	3301      	adds	r3, #1
 8003640:	4631      	mov	r1, r6
 8003642:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8003646:	2201      	movs	r2, #1
 8003648:	e6e9      	b.n	800341e <d_print_mod+0x256>
 800364a:	2500      	movs	r5, #0
 800364c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003650:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003654:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8003658:	4620      	mov	r0, r4
 800365a:	4798      	blx	r3
 800365c:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003660:	3301      	adds	r3, #1
 8003662:	4629      	mov	r1, r5
 8003664:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8003668:	2201      	movs	r2, #1
 800366a:	e7b6      	b.n	80035da <d_print_mod+0x412>
 800366c:	2500      	movs	r5, #0
 800366e:	4619      	mov	r1, r3
 8003670:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8003674:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 8003678:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
 800367c:	4798      	blx	r3
 800367e:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003682:	1c5a      	adds	r2, r3, #1
 8003684:	f8c4 2120 	str.w	r2, [r4, #288]	; 0x120
 8003688:	462b      	mov	r3, r5
 800368a:	2101      	movs	r1, #1
 800368c:	e67f      	b.n	800338e <d_print_mod+0x1c6>
 800368e:	2500      	movs	r5, #0
 8003690:	4619      	mov	r1, r3
 8003692:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8003696:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 800369a:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
 800369e:	4798      	blx	r3
 80036a0:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80036a4:	1c5a      	adds	r2, r3, #1
 80036a6:	f8c4 2120 	str.w	r2, [r4, #288]	; 0x120
 80036aa:	462b      	mov	r3, r5
 80036ac:	2101      	movs	r1, #1
 80036ae:	e687      	b.n	80033c0 <d_print_mod+0x1f8>
 80036b0:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 80036b4:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 80036b8:	f880 80ff 	strb.w	r8, [r0, #255]	; 0xff
 80036bc:	4798      	blx	r3
 80036be:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80036c2:	3301      	adds	r3, #1
 80036c4:	4641      	mov	r1, r8
 80036c6:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 80036ca:	2201      	movs	r2, #1
 80036cc:	e6b9      	b.n	8003442 <d_print_mod+0x27a>
 80036ce:	bf00      	nop

080036d0 <d_print_mod_list>:
 80036d0:	2a00      	cmp	r2, #0
 80036d2:	f000 809c 	beq.w	800380e <d_print_mod_list+0x13e>
 80036d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80036da:	461e      	mov	r6, r3
 80036dc:	f8d0 3118 	ldr.w	r3, [r0, #280]	; 0x118
 80036e0:	b089      	sub	sp, #36	; 0x24
 80036e2:	4605      	mov	r5, r0
 80036e4:	bb33      	cbnz	r3, 8003734 <d_print_mod_list+0x64>
 80036e6:	460f      	mov	r7, r1
 80036e8:	4614      	mov	r4, r2
 80036ea:	f04f 0801 	mov.w	r8, #1
 80036ee:	e002      	b.n	80036f6 <d_print_mod_list+0x26>
 80036f0:	f8d5 3118 	ldr.w	r3, [r5, #280]	; 0x118
 80036f4:	b9f3      	cbnz	r3, 8003734 <d_print_mod_list+0x64>
 80036f6:	68a3      	ldr	r3, [r4, #8]
 80036f8:	b9cb      	cbnz	r3, 800372e <d_print_mod_list+0x5e>
 80036fa:	6862      	ldr	r2, [r4, #4]
 80036fc:	7813      	ldrb	r3, [r2, #0]
 80036fe:	b91e      	cbnz	r6, 8003708 <d_print_mod_list+0x38>
 8003700:	f1a3 011c 	sub.w	r1, r3, #28
 8003704:	2904      	cmp	r1, #4
 8003706:	d912      	bls.n	800372e <d_print_mod_list+0x5e>
 8003708:	68e1      	ldr	r1, [r4, #12]
 800370a:	f8c4 8008 	str.w	r8, [r4, #8]
 800370e:	2b29      	cmp	r3, #41	; 0x29
 8003710:	f8d5 9110 	ldr.w	r9, [r5, #272]	; 0x110
 8003714:	f8c5 1110 	str.w	r1, [r5, #272]	; 0x110
 8003718:	d00f      	beq.n	800373a <d_print_mod_list+0x6a>
 800371a:	2b2a      	cmp	r3, #42	; 0x2a
 800371c:	d018      	beq.n	8003750 <d_print_mod_list+0x80>
 800371e:	2b02      	cmp	r3, #2
 8003720:	d021      	beq.n	8003766 <d_print_mod_list+0x96>
 8003722:	4639      	mov	r1, r7
 8003724:	4628      	mov	r0, r5
 8003726:	f7ff fd4f 	bl	80031c8 <d_print_mod>
 800372a:	f8c5 9110 	str.w	r9, [r5, #272]	; 0x110
 800372e:	6824      	ldr	r4, [r4, #0]
 8003730:	2c00      	cmp	r4, #0
 8003732:	d1dd      	bne.n	80036f0 <d_print_mod_list+0x20>
 8003734:	b009      	add	sp, #36	; 0x24
 8003736:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800373a:	6823      	ldr	r3, [r4, #0]
 800373c:	3208      	adds	r2, #8
 800373e:	4639      	mov	r1, r7
 8003740:	4628      	mov	r0, r5
 8003742:	f000 f9d7 	bl	8003af4 <d_print_function_type.isra.11>
 8003746:	f8c5 9110 	str.w	r9, [r5, #272]	; 0x110
 800374a:	b009      	add	sp, #36	; 0x24
 800374c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003750:	6823      	ldr	r3, [r4, #0]
 8003752:	3204      	adds	r2, #4
 8003754:	4639      	mov	r1, r7
 8003756:	4628      	mov	r0, r5
 8003758:	f000 f8f0 	bl	800393c <d_print_array_type.isra.10>
 800375c:	f8c5 9110 	str.w	r9, [r5, #272]	; 0x110
 8003760:	b009      	add	sp, #36	; 0x24
 8003762:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003766:	2600      	movs	r6, #0
 8003768:	f8d5 8114 	ldr.w	r8, [r5, #276]	; 0x114
 800376c:	f8c5 6114 	str.w	r6, [r5, #276]	; 0x114
 8003770:	6852      	ldr	r2, [r2, #4]
 8003772:	4639      	mov	r1, r7
 8003774:	4628      	mov	r0, r5
 8003776:	f7ff fd17 	bl	80031a8 <d_print_comp>
 800377a:	f017 0b04 	ands.w	fp, r7, #4
 800377e:	f8c5 8114 	str.w	r8, [r5, #276]	; 0x114
 8003782:	d020      	beq.n	80037c6 <d_print_mod_list+0xf6>
 8003784:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
 8003788:	29ff      	cmp	r1, #255	; 0xff
 800378a:	f000 80be 	beq.w	800390a <d_print_mod_list+0x23a>
 800378e:	1c4a      	adds	r2, r1, #1
 8003790:	232e      	movs	r3, #46	; 0x2e
 8003792:	f8c5 2100 	str.w	r2, [r5, #256]	; 0x100
 8003796:	546b      	strb	r3, [r5, r1]
 8003798:	f885 3104 	strb.w	r3, [r5, #260]	; 0x104
 800379c:	6863      	ldr	r3, [r4, #4]
 800379e:	689c      	ldr	r4, [r3, #8]
 80037a0:	7823      	ldrb	r3, [r4, #0]
 80037a2:	2b45      	cmp	r3, #69	; 0x45
 80037a4:	d102      	bne.n	80037ac <d_print_mod_list+0xdc>
 80037a6:	e033      	b.n	8003810 <d_print_mod_list+0x140>
 80037a8:	6864      	ldr	r4, [r4, #4]
 80037aa:	7823      	ldrb	r3, [r4, #0]
 80037ac:	3b1c      	subs	r3, #28
 80037ae:	2b04      	cmp	r3, #4
 80037b0:	d9fa      	bls.n	80037a8 <d_print_mod_list+0xd8>
 80037b2:	4622      	mov	r2, r4
 80037b4:	4639      	mov	r1, r7
 80037b6:	4628      	mov	r0, r5
 80037b8:	f7ff fcf6 	bl	80031a8 <d_print_comp>
 80037bc:	f8c5 9110 	str.w	r9, [r5, #272]	; 0x110
 80037c0:	b009      	add	sp, #36	; 0x24
 80037c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80037c6:	4e59      	ldr	r6, [pc, #356]	; (800392c <d_print_mod_list+0x25c>)
 80037c8:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
 80037cc:	f106 0a02 	add.w	sl, r6, #2
 80037d0:	e009      	b.n	80037e6 <d_print_mod_list+0x116>
 80037d2:	460b      	mov	r3, r1
 80037d4:	3101      	adds	r1, #1
 80037d6:	45b2      	cmp	sl, r6
 80037d8:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
 80037dc:	f805 8003 	strb.w	r8, [r5, r3]
 80037e0:	f885 8104 	strb.w	r8, [r5, #260]	; 0x104
 80037e4:	d0da      	beq.n	800379c <d_print_mod_list+0xcc>
 80037e6:	29ff      	cmp	r1, #255	; 0xff
 80037e8:	f816 8b01 	ldrb.w	r8, [r6], #1
 80037ec:	d1f1      	bne.n	80037d2 <d_print_mod_list+0x102>
 80037ee:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
 80037f2:	f885 b0ff 	strb.w	fp, [r5, #255]	; 0xff
 80037f6:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
 80037fa:	4628      	mov	r0, r5
 80037fc:	4798      	blx	r3
 80037fe:	f8d5 3120 	ldr.w	r3, [r5, #288]	; 0x120
 8003802:	3301      	adds	r3, #1
 8003804:	f8c5 3120 	str.w	r3, [r5, #288]	; 0x120
 8003808:	2101      	movs	r1, #1
 800380a:	2300      	movs	r3, #0
 800380c:	e7e3      	b.n	80037d6 <d_print_mod_list+0x106>
 800380e:	4770      	bx	lr
 8003810:	4e47      	ldr	r6, [pc, #284]	; (8003930 <d_print_mod_list+0x260>)
 8003812:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
 8003816:	f106 0a0d 	add.w	sl, r6, #13
 800381a:	f04f 0b00 	mov.w	fp, #0
 800381e:	e009      	b.n	8003834 <d_print_mod_list+0x164>
 8003820:	460b      	mov	r3, r1
 8003822:	3101      	adds	r1, #1
 8003824:	45b2      	cmp	sl, r6
 8003826:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
 800382a:	f805 8003 	strb.w	r8, [r5, r3]
 800382e:	f885 8104 	strb.w	r8, [r5, #260]	; 0x104
 8003832:	d013      	beq.n	800385c <d_print_mod_list+0x18c>
 8003834:	29ff      	cmp	r1, #255	; 0xff
 8003836:	f816 8b01 	ldrb.w	r8, [r6], #1
 800383a:	d1f1      	bne.n	8003820 <d_print_mod_list+0x150>
 800383c:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
 8003840:	f885 b0ff 	strb.w	fp, [r5, #255]	; 0xff
 8003844:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
 8003848:	4628      	mov	r0, r5
 800384a:	4798      	blx	r3
 800384c:	f8d5 3120 	ldr.w	r3, [r5, #288]	; 0x120
 8003850:	3301      	adds	r3, #1
 8003852:	f8c5 3120 	str.w	r3, [r5, #288]	; 0x120
 8003856:	2101      	movs	r1, #1
 8003858:	2300      	movs	r3, #0
 800385a:	e7e3      	b.n	8003824 <d_print_mod_list+0x154>
 800385c:	68a2      	ldr	r2, [r4, #8]
 800385e:	4935      	ldr	r1, [pc, #212]	; (8003934 <d_print_mod_list+0x264>)
 8003860:	3201      	adds	r2, #1
 8003862:	a801      	add	r0, sp, #4
 8003864:	f00a f856 	bl	800d914 <sprintf>
 8003868:	a801      	add	r0, sp, #4
 800386a:	f004 fe43 	bl	80084f4 <strlen>
 800386e:	b328      	cbz	r0, 80038bc <d_print_mod_list+0x1ec>
 8003870:	ae01      	add	r6, sp, #4
 8003872:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
 8003876:	eb06 0a00 	add.w	sl, r6, r0
 800387a:	f04f 0b00 	mov.w	fp, #0
 800387e:	e009      	b.n	8003894 <d_print_mod_list+0x1c4>
 8003880:	460b      	mov	r3, r1
 8003882:	3101      	adds	r1, #1
 8003884:	45b2      	cmp	sl, r6
 8003886:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
 800388a:	f805 8003 	strb.w	r8, [r5, r3]
 800388e:	f885 8104 	strb.w	r8, [r5, #260]	; 0x104
 8003892:	d015      	beq.n	80038c0 <d_print_mod_list+0x1f0>
 8003894:	29ff      	cmp	r1, #255	; 0xff
 8003896:	f816 8b01 	ldrb.w	r8, [r6], #1
 800389a:	d1f1      	bne.n	8003880 <d_print_mod_list+0x1b0>
 800389c:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
 80038a0:	f885 b0ff 	strb.w	fp, [r5, #255]	; 0xff
 80038a4:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
 80038a8:	4628      	mov	r0, r5
 80038aa:	4798      	blx	r3
 80038ac:	f8d5 3120 	ldr.w	r3, [r5, #288]	; 0x120
 80038b0:	3301      	adds	r3, #1
 80038b2:	f8c5 3120 	str.w	r3, [r5, #288]	; 0x120
 80038b6:	2101      	movs	r1, #1
 80038b8:	2300      	movs	r3, #0
 80038ba:	e7e3      	b.n	8003884 <d_print_mod_list+0x1b4>
 80038bc:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
 80038c0:	4e1d      	ldr	r6, [pc, #116]	; (8003938 <d_print_mod_list+0x268>)
 80038c2:	f04f 0b00 	mov.w	fp, #0
 80038c6:	f106 0a03 	add.w	sl, r6, #3
 80038ca:	e00a      	b.n	80038e2 <d_print_mod_list+0x212>
 80038cc:	460b      	mov	r3, r1
 80038ce:	3101      	adds	r1, #1
 80038d0:	4556      	cmp	r6, sl
 80038d2:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
 80038d6:	f805 8003 	strb.w	r8, [r5, r3]
 80038da:	f885 8104 	strb.w	r8, [r5, #260]	; 0x104
 80038de:	f43f af63 	beq.w	80037a8 <d_print_mod_list+0xd8>
 80038e2:	29ff      	cmp	r1, #255	; 0xff
 80038e4:	f816 8b01 	ldrb.w	r8, [r6], #1
 80038e8:	d1f0      	bne.n	80038cc <d_print_mod_list+0x1fc>
 80038ea:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
 80038ee:	f885 b0ff 	strb.w	fp, [r5, #255]	; 0xff
 80038f2:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
 80038f6:	4628      	mov	r0, r5
 80038f8:	4798      	blx	r3
 80038fa:	f8d5 3120 	ldr.w	r3, [r5, #288]	; 0x120
 80038fe:	3301      	adds	r3, #1
 8003900:	f8c5 3120 	str.w	r3, [r5, #288]	; 0x120
 8003904:	2101      	movs	r1, #1
 8003906:	2300      	movs	r3, #0
 8003908:	e7e2      	b.n	80038d0 <d_print_mod_list+0x200>
 800390a:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
 800390e:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
 8003912:	f885 60ff 	strb.w	r6, [r5, #255]	; 0xff
 8003916:	4628      	mov	r0, r5
 8003918:	4798      	blx	r3
 800391a:	f8d5 3120 	ldr.w	r3, [r5, #288]	; 0x120
 800391e:	3301      	adds	r3, #1
 8003920:	4631      	mov	r1, r6
 8003922:	f8c5 3120 	str.w	r3, [r5, #288]	; 0x120
 8003926:	2201      	movs	r2, #1
 8003928:	e732      	b.n	8003790 <d_print_mod_list+0xc0>
 800392a:	bf00      	nop
 800392c:	080110cc 	.word	0x080110cc
 8003930:	080110d0 	.word	0x080110d0
 8003934:	080110e0 	.word	0x080110e0
 8003938:	080110e4 	.word	0x080110e4

0800393c <d_print_array_type.isra.10>:
 800393c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003940:	4604      	mov	r4, r0
 8003942:	460f      	mov	r7, r1
 8003944:	4690      	mov	r8, r2
 8003946:	b163      	cbz	r3, 8003962 <d_print_array_type.isra.10+0x26>
 8003948:	461e      	mov	r6, r3
 800394a:	461a      	mov	r2, r3
 800394c:	6893      	ldr	r3, [r2, #8]
 800394e:	b393      	cbz	r3, 80039b6 <d_print_array_type.isra.10+0x7a>
 8003950:	6812      	ldr	r2, [r2, #0]
 8003952:	2a00      	cmp	r2, #0
 8003954:	d1fa      	bne.n	800394c <d_print_array_type.isra.10+0x10>
 8003956:	4613      	mov	r3, r2
 8003958:	4639      	mov	r1, r7
 800395a:	4632      	mov	r2, r6
 800395c:	4620      	mov	r0, r4
 800395e:	f7ff feb7 	bl	80036d0 <d_print_mod_list>
 8003962:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003966:	29ff      	cmp	r1, #255	; 0xff
 8003968:	f000 808d 	beq.w	8003a86 <d_print_array_type.isra.10+0x14a>
 800396c:	1c4b      	adds	r3, r1, #1
 800396e:	2220      	movs	r2, #32
 8003970:	2bff      	cmp	r3, #255	; 0xff
 8003972:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003976:	5462      	strb	r2, [r4, r1]
 8003978:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 800397c:	d068      	beq.n	8003a50 <d_print_array_type.isra.10+0x114>
 800397e:	225b      	movs	r2, #91	; 0x5b
 8003980:	1c59      	adds	r1, r3, #1
 8003982:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003986:	54e2      	strb	r2, [r4, r3]
 8003988:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 800398c:	f8d8 2000 	ldr.w	r2, [r8]
 8003990:	b12a      	cbz	r2, 800399e <d_print_array_type.isra.10+0x62>
 8003992:	4639      	mov	r1, r7
 8003994:	4620      	mov	r0, r4
 8003996:	f7ff fc07 	bl	80031a8 <d_print_comp>
 800399a:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800399e:	29ff      	cmp	r1, #255	; 0xff
 80039a0:	f000 8082 	beq.w	8003aa8 <d_print_array_type.isra.10+0x16c>
 80039a4:	1c4a      	adds	r2, r1, #1
 80039a6:	235d      	movs	r3, #93	; 0x5d
 80039a8:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80039ac:	5463      	strb	r3, [r4, r1]
 80039ae:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80039b2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80039b6:	6852      	ldr	r2, [r2, #4]
 80039b8:	7812      	ldrb	r2, [r2, #0]
 80039ba:	2a2a      	cmp	r2, #42	; 0x2a
 80039bc:	d03f      	beq.n	8003a3e <d_print_array_type.isra.10+0x102>
 80039be:	f8df 9130 	ldr.w	r9, [pc, #304]	; 8003af0 <d_print_array_type.isra.10+0x1b4>
 80039c2:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80039c6:	461d      	mov	r5, r3
 80039c8:	f109 0b02 	add.w	fp, r9, #2
 80039cc:	e00a      	b.n	80039e4 <d_print_array_type.isra.10+0xa8>
 80039ce:	460b      	mov	r3, r1
 80039d0:	45cb      	cmp	fp, r9
 80039d2:	f101 0101 	add.w	r1, r1, #1
 80039d6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80039da:	f804 a003 	strb.w	sl, [r4, r3]
 80039de:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 80039e2:	d01a      	beq.n	8003a1a <d_print_array_type.isra.10+0xde>
 80039e4:	29ff      	cmp	r1, #255	; 0xff
 80039e6:	f819 ab01 	ldrb.w	sl, [r9], #1
 80039ea:	d1f0      	bne.n	80039ce <d_print_array_type.isra.10+0x92>
 80039ec:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80039f0:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 80039f4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80039f8:	4620      	mov	r0, r4
 80039fa:	4798      	blx	r3
 80039fc:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003a00:	3301      	adds	r3, #1
 8003a02:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8003a06:	2300      	movs	r3, #0
 8003a08:	2101      	movs	r1, #1
 8003a0a:	45cb      	cmp	fp, r9
 8003a0c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003a10:	f804 a003 	strb.w	sl, [r4, r3]
 8003a14:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003a18:	d1e4      	bne.n	80039e4 <d_print_array_type.isra.10+0xa8>
 8003a1a:	2300      	movs	r3, #0
 8003a1c:	4632      	mov	r2, r6
 8003a1e:	4639      	mov	r1, r7
 8003a20:	4620      	mov	r0, r4
 8003a22:	f7ff fe55 	bl	80036d0 <d_print_mod_list>
 8003a26:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003a2a:	2bff      	cmp	r3, #255	; 0xff
 8003a2c:	d04d      	beq.n	8003aca <d_print_array_type.isra.10+0x18e>
 8003a2e:	1c59      	adds	r1, r3, #1
 8003a30:	2229      	movs	r2, #41	; 0x29
 8003a32:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003a36:	54e2      	strb	r2, [r4, r3]
 8003a38:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8003a3c:	e793      	b.n	8003966 <d_print_array_type.isra.10+0x2a>
 8003a3e:	4632      	mov	r2, r6
 8003a40:	4639      	mov	r1, r7
 8003a42:	4620      	mov	r0, r4
 8003a44:	f7ff fe44 	bl	80036d0 <d_print_mod_list>
 8003a48:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003a4c:	2bff      	cmp	r3, #255	; 0xff
 8003a4e:	d196      	bne.n	800397e <d_print_array_type.isra.10+0x42>
 8003a50:	2200      	movs	r2, #0
 8003a52:	4619      	mov	r1, r3
 8003a54:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
 8003a58:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003a5c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003a60:	4620      	mov	r0, r4
 8003a62:	4798      	blx	r3
 8003a64:	235b      	movs	r3, #91	; 0x5b
 8003a66:	7023      	strb	r3, [r4, #0]
 8003a68:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003a6c:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003a70:	f8d8 2000 	ldr.w	r2, [r8]
 8003a74:	3301      	adds	r3, #1
 8003a76:	2101      	movs	r1, #1
 8003a78:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8003a7c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003a80:	2a00      	cmp	r2, #0
 8003a82:	d186      	bne.n	8003992 <d_print_array_type.isra.10+0x56>
 8003a84:	e78e      	b.n	80039a4 <d_print_array_type.isra.10+0x68>
 8003a86:	2500      	movs	r5, #0
 8003a88:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003a8c:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8003a90:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003a94:	4620      	mov	r0, r4
 8003a96:	4798      	blx	r3
 8003a98:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003a9c:	3301      	adds	r3, #1
 8003a9e:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8003aa2:	4629      	mov	r1, r5
 8003aa4:	2301      	movs	r3, #1
 8003aa6:	e762      	b.n	800396e <d_print_array_type.isra.10+0x32>
 8003aa8:	2500      	movs	r5, #0
 8003aaa:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003aae:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003ab2:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8003ab6:	4620      	mov	r0, r4
 8003ab8:	4798      	blx	r3
 8003aba:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003abe:	3301      	adds	r3, #1
 8003ac0:	4629      	mov	r1, r5
 8003ac2:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8003ac6:	2201      	movs	r2, #1
 8003ac8:	e76d      	b.n	80039a6 <d_print_array_type.isra.10+0x6a>
 8003aca:	2500      	movs	r5, #0
 8003acc:	4619      	mov	r1, r3
 8003ace:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003ad2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003ad6:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8003ada:	4620      	mov	r0, r4
 8003adc:	4798      	blx	r3
 8003ade:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003ae2:	1c5a      	adds	r2, r3, #1
 8003ae4:	f8c4 2120 	str.w	r2, [r4, #288]	; 0x120
 8003ae8:	462b      	mov	r3, r5
 8003aea:	2101      	movs	r1, #1
 8003aec:	e7a0      	b.n	8003a30 <d_print_array_type.isra.10+0xf4>
 8003aee:	bf00      	nop
 8003af0:	080112c8 	.word	0x080112c8

08003af4 <d_print_function_type.isra.11>:
 8003af4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003af8:	4604      	mov	r4, r0
 8003afa:	b083      	sub	sp, #12
 8003afc:	460e      	mov	r6, r1
 8003afe:	4617      	mov	r7, r2
 8003b00:	461d      	mov	r5, r3
 8003b02:	b353      	cbz	r3, 8003b5a <d_print_function_type.isra.11+0x66>
 8003b04:	689b      	ldr	r3, [r3, #8]
 8003b06:	bb43      	cbnz	r3, 8003b5a <d_print_function_type.isra.11+0x66>
 8003b08:	462a      	mov	r2, r5
 8003b0a:	f04f 0e01 	mov.w	lr, #1
 8003b0e:	e006      	b.n	8003b1e <d_print_function_type.isra.11+0x2a>
 8003b10:	f410 6f60 	tst.w	r0, #3584	; 0xe00
 8003b14:	d15c      	bne.n	8003bd0 <d_print_function_type.isra.11+0xdc>
 8003b16:	6812      	ldr	r2, [r2, #0]
 8003b18:	b1fa      	cbz	r2, 8003b5a <d_print_function_type.isra.11+0x66>
 8003b1a:	6893      	ldr	r3, [r2, #8]
 8003b1c:	b9eb      	cbnz	r3, 8003b5a <d_print_function_type.isra.11+0x66>
 8003b1e:	6853      	ldr	r3, [r2, #4]
 8003b20:	496d      	ldr	r1, [pc, #436]	; (8003cd8 <d_print_function_type.isra.11+0x1e4>)
 8003b22:	781b      	ldrb	r3, [r3, #0]
 8003b24:	3b19      	subs	r3, #25
 8003b26:	b2db      	uxtb	r3, r3
 8003b28:	fa0e f003 	lsl.w	r0, lr, r3
 8003b2c:	2b12      	cmp	r3, #18
 8003b2e:	ea01 0100 	and.w	r1, r1, r0
 8003b32:	d8f0      	bhi.n	8003b16 <d_print_function_type.isra.11+0x22>
 8003b34:	2900      	cmp	r1, #0
 8003b36:	d0eb      	beq.n	8003b10 <d_print_function_type.isra.11+0x1c>
 8003b38:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8003b3c:	2b20      	cmp	r3, #32
 8003b3e:	d04d      	beq.n	8003bdc <d_print_function_type.isra.11+0xe8>
 8003b40:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003b44:	2bff      	cmp	r3, #255	; 0xff
 8003b46:	f000 80b4 	beq.w	8003cb2 <d_print_function_type.isra.11+0x1be>
 8003b4a:	1c59      	adds	r1, r3, #1
 8003b4c:	2220      	movs	r2, #32
 8003b4e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003b52:	54e2      	strb	r2, [r4, r3]
 8003b54:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8003b58:	e042      	b.n	8003be0 <d_print_function_type.isra.11+0xec>
 8003b5a:	2300      	movs	r3, #0
 8003b5c:	f8d4 8114 	ldr.w	r8, [r4, #276]	; 0x114
 8003b60:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8003b64:	4631      	mov	r1, r6
 8003b66:	462a      	mov	r2, r5
 8003b68:	4620      	mov	r0, r4
 8003b6a:	f7ff fdb1 	bl	80036d0 <d_print_mod_list>
 8003b6e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003b72:	29ff      	cmp	r1, #255	; 0xff
 8003b74:	d056      	beq.n	8003c24 <d_print_function_type.isra.11+0x130>
 8003b76:	1c4b      	adds	r3, r1, #1
 8003b78:	2228      	movs	r2, #40	; 0x28
 8003b7a:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003b7e:	5462      	strb	r2, [r4, r1]
 8003b80:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8003b84:	6838      	ldr	r0, [r7, #0]
 8003b86:	b178      	cbz	r0, 8003ba8 <d_print_function_type.isra.11+0xb4>
 8003b88:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003b8c:	9000      	str	r0, [sp, #0]
 8003b8e:	4602      	mov	r2, r0
 8003b90:	f8c4 d124 	str.w	sp, [r4, #292]	; 0x124
 8003b94:	4631      	mov	r1, r6
 8003b96:	4620      	mov	r0, r4
 8003b98:	9301      	str	r3, [sp, #4]
 8003b9a:	f7fc feeb 	bl	8000974 <d_print_comp_inner>
 8003b9e:	9a01      	ldr	r2, [sp, #4]
 8003ba0:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003ba4:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8003ba8:	2bff      	cmp	r3, #255	; 0xff
 8003baa:	d04d      	beq.n	8003c48 <d_print_function_type.isra.11+0x154>
 8003bac:	1c5a      	adds	r2, r3, #1
 8003bae:	2029      	movs	r0, #41	; 0x29
 8003bb0:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003bb4:	4631      	mov	r1, r6
 8003bb6:	54e0      	strb	r0, [r4, r3]
 8003bb8:	462a      	mov	r2, r5
 8003bba:	f884 0104 	strb.w	r0, [r4, #260]	; 0x104
 8003bbe:	2301      	movs	r3, #1
 8003bc0:	4620      	mov	r0, r4
 8003bc2:	f7ff fd85 	bl	80036d0 <d_print_mod_list>
 8003bc6:	f8c4 8114 	str.w	r8, [r4, #276]	; 0x114
 8003bca:	b003      	add	sp, #12
 8003bcc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003bd0:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8003bd4:	f003 02fd 	and.w	r2, r3, #253	; 0xfd
 8003bd8:	2a28      	cmp	r2, #40	; 0x28
 8003bda:	d1af      	bne.n	8003b3c <d_print_function_type.isra.11+0x48>
 8003bdc:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003be0:	29ff      	cmp	r1, #255	; 0xff
 8003be2:	d054      	beq.n	8003c8e <d_print_function_type.isra.11+0x19a>
 8003be4:	1c4a      	adds	r2, r1, #1
 8003be6:	2328      	movs	r3, #40	; 0x28
 8003be8:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003bec:	5463      	strb	r3, [r4, r1]
 8003bee:	f04f 0900 	mov.w	r9, #0
 8003bf2:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003bf6:	f8d4 8114 	ldr.w	r8, [r4, #276]	; 0x114
 8003bfa:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
 8003bfe:	464b      	mov	r3, r9
 8003c00:	462a      	mov	r2, r5
 8003c02:	4631      	mov	r1, r6
 8003c04:	4620      	mov	r0, r4
 8003c06:	f7ff fd63 	bl	80036d0 <d_print_mod_list>
 8003c0a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003c0e:	2bff      	cmp	r3, #255	; 0xff
 8003c10:	d02c      	beq.n	8003c6c <d_print_function_type.isra.11+0x178>
 8003c12:	1c59      	adds	r1, r3, #1
 8003c14:	2229      	movs	r2, #41	; 0x29
 8003c16:	29ff      	cmp	r1, #255	; 0xff
 8003c18:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003c1c:	54e2      	strb	r2, [r4, r3]
 8003c1e:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8003c22:	d1a8      	bne.n	8003b76 <d_print_function_type.isra.11+0x82>
 8003c24:	f04f 0900 	mov.w	r9, #0
 8003c28:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003c2c:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003c30:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003c34:	4620      	mov	r0, r4
 8003c36:	4798      	blx	r3
 8003c38:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003c3c:	3301      	adds	r3, #1
 8003c3e:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8003c42:	4649      	mov	r1, r9
 8003c44:	2301      	movs	r3, #1
 8003c46:	e797      	b.n	8003b78 <d_print_function_type.isra.11+0x84>
 8003c48:	2700      	movs	r7, #0
 8003c4a:	4619      	mov	r1, r3
 8003c4c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003c50:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003c54:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8003c58:	4620      	mov	r0, r4
 8003c5a:	4798      	blx	r3
 8003c5c:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003c60:	1c5a      	adds	r2, r3, #1
 8003c62:	f8c4 2120 	str.w	r2, [r4, #288]	; 0x120
 8003c66:	463b      	mov	r3, r7
 8003c68:	2201      	movs	r2, #1
 8003c6a:	e7a0      	b.n	8003bae <d_print_function_type.isra.11+0xba>
 8003c6c:	4619      	mov	r1, r3
 8003c6e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003c72:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003c76:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003c7a:	4620      	mov	r0, r4
 8003c7c:	4798      	blx	r3
 8003c7e:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003c82:	1c5a      	adds	r2, r3, #1
 8003c84:	f8c4 2120 	str.w	r2, [r4, #288]	; 0x120
 8003c88:	464b      	mov	r3, r9
 8003c8a:	2101      	movs	r1, #1
 8003c8c:	e7c2      	b.n	8003c14 <d_print_function_type.isra.11+0x120>
 8003c8e:	f04f 0800 	mov.w	r8, #0
 8003c92:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003c96:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003c9a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003c9e:	4620      	mov	r0, r4
 8003ca0:	4798      	blx	r3
 8003ca2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003ca6:	3301      	adds	r3, #1
 8003ca8:	4641      	mov	r1, r8
 8003caa:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8003cae:	2201      	movs	r2, #1
 8003cb0:	e799      	b.n	8003be6 <d_print_function_type.isra.11+0xf2>
 8003cb2:	f04f 0800 	mov.w	r8, #0
 8003cb6:	4619      	mov	r1, r3
 8003cb8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003cbc:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003cc0:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003cc4:	4620      	mov	r0, r4
 8003cc6:	4798      	blx	r3
 8003cc8:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003ccc:	1c5a      	adds	r2, r3, #1
 8003cce:	f8c4 2120 	str.w	r2, [r4, #288]	; 0x120
 8003cd2:	4643      	mov	r3, r8
 8003cd4:	2101      	movs	r1, #1
 8003cd6:	e739      	b.n	8003b4c <d_print_function_type.isra.11+0x58>
 8003cd8:	00043107 	.word	0x00043107

08003cdc <d_print_cast.isra.12>:
 8003cdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003ce0:	460e      	mov	r6, r1
 8003ce2:	f8d0 1140 	ldr.w	r1, [r0, #320]	; 0x140
 8003ce6:	b084      	sub	sp, #16
 8003ce8:	4604      	mov	r4, r0
 8003cea:	4615      	mov	r5, r2
 8003cec:	b139      	cbz	r1, 8003cfe <d_print_cast.isra.12+0x22>
 8003cee:	ab04      	add	r3, sp, #16
 8003cf0:	f8d0 2110 	ldr.w	r2, [r0, #272]	; 0x110
 8003cf4:	f843 2d10 	str.w	r2, [r3, #-16]!
 8003cf8:	9101      	str	r1, [sp, #4]
 8003cfa:	f8c0 3110 	str.w	r3, [r0, #272]	; 0x110
 8003cfe:	682b      	ldr	r3, [r5, #0]
 8003d00:	781a      	ldrb	r2, [r3, #0]
 8003d02:	2a04      	cmp	r2, #4
 8003d04:	d017      	beq.n	8003d36 <d_print_cast.isra.12+0x5a>
 8003d06:	a802      	add	r0, sp, #8
 8003d08:	461a      	mov	r2, r3
 8003d0a:	f8d4 5124 	ldr.w	r5, [r4, #292]	; 0x124
 8003d0e:	f8c4 0124 	str.w	r0, [r4, #292]	; 0x124
 8003d12:	4631      	mov	r1, r6
 8003d14:	4620      	mov	r0, r4
 8003d16:	9302      	str	r3, [sp, #8]
 8003d18:	9503      	str	r5, [sp, #12]
 8003d1a:	f7fc fe2b 	bl	8000974 <d_print_comp_inner>
 8003d1e:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8003d22:	9a03      	ldr	r2, [sp, #12]
 8003d24:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8003d28:	b113      	cbz	r3, 8003d30 <d_print_cast.isra.12+0x54>
 8003d2a:	9b00      	ldr	r3, [sp, #0]
 8003d2c:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8003d30:	b004      	add	sp, #16
 8003d32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003d36:	af02      	add	r7, sp, #8
 8003d38:	685a      	ldr	r2, [r3, #4]
 8003d3a:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003d3e:	f8c4 7124 	str.w	r7, [r4, #292]	; 0x124
 8003d42:	4631      	mov	r1, r6
 8003d44:	4620      	mov	r0, r4
 8003d46:	9202      	str	r2, [sp, #8]
 8003d48:	9303      	str	r3, [sp, #12]
 8003d4a:	f7fc fe13 	bl	8000974 <d_print_comp_inner>
 8003d4e:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8003d52:	9a03      	ldr	r2, [sp, #12]
 8003d54:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8003d58:	b113      	cbz	r3, 8003d60 <d_print_cast.isra.12+0x84>
 8003d5a:	9b00      	ldr	r3, [sp, #0]
 8003d5c:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8003d60:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8003d64:	2b3c      	cmp	r3, #60	; 0x3c
 8003d66:	d02c      	beq.n	8003dc2 <d_print_cast.isra.12+0xe6>
 8003d68:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003d6c:	29ff      	cmp	r1, #255	; 0xff
 8003d6e:	d051      	beq.n	8003e14 <d_print_cast.isra.12+0x138>
 8003d70:	1c4a      	adds	r2, r1, #1
 8003d72:	233c      	movs	r3, #60	; 0x3c
 8003d74:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003d78:	5463      	strb	r3, [r4, r1]
 8003d7a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003d7e:	682b      	ldr	r3, [r5, #0]
 8003d80:	f8d4 5124 	ldr.w	r5, [r4, #292]	; 0x124
 8003d84:	689b      	ldr	r3, [r3, #8]
 8003d86:	f8c4 7124 	str.w	r7, [r4, #292]	; 0x124
 8003d8a:	461a      	mov	r2, r3
 8003d8c:	4631      	mov	r1, r6
 8003d8e:	4620      	mov	r0, r4
 8003d90:	9302      	str	r3, [sp, #8]
 8003d92:	9503      	str	r5, [sp, #12]
 8003d94:	f7fc fdee 	bl	8000974 <d_print_comp_inner>
 8003d98:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8003d9c:	9a03      	ldr	r2, [sp, #12]
 8003d9e:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8003da2:	2b3e      	cmp	r3, #62	; 0x3e
 8003da4:	d019      	beq.n	8003dda <d_print_cast.isra.12+0xfe>
 8003da6:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003daa:	29ff      	cmp	r1, #255	; 0xff
 8003dac:	d021      	beq.n	8003df2 <d_print_cast.isra.12+0x116>
 8003dae:	1c4a      	adds	r2, r1, #1
 8003db0:	233e      	movs	r3, #62	; 0x3e
 8003db2:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003db6:	5463      	strb	r3, [r4, r1]
 8003db8:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003dbc:	b004      	add	sp, #16
 8003dbe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003dc2:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003dc6:	2bff      	cmp	r3, #255	; 0xff
 8003dc8:	d048      	beq.n	8003e5c <d_print_cast.isra.12+0x180>
 8003dca:	1c59      	adds	r1, r3, #1
 8003dcc:	2220      	movs	r2, #32
 8003dce:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003dd2:	54e2      	strb	r2, [r4, r3]
 8003dd4:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8003dd8:	e7c8      	b.n	8003d6c <d_print_cast.isra.12+0x90>
 8003dda:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003dde:	2bff      	cmp	r3, #255	; 0xff
 8003de0:	d02a      	beq.n	8003e38 <d_print_cast.isra.12+0x15c>
 8003de2:	1c59      	adds	r1, r3, #1
 8003de4:	2220      	movs	r2, #32
 8003de6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003dea:	54e2      	strb	r2, [r4, r3]
 8003dec:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8003df0:	e7db      	b.n	8003daa <d_print_cast.isra.12+0xce>
 8003df2:	2500      	movs	r5, #0
 8003df4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003df8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003dfc:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8003e00:	4620      	mov	r0, r4
 8003e02:	4798      	blx	r3
 8003e04:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003e08:	3301      	adds	r3, #1
 8003e0a:	4629      	mov	r1, r5
 8003e0c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8003e10:	2201      	movs	r2, #1
 8003e12:	e7cd      	b.n	8003db0 <d_print_cast.isra.12+0xd4>
 8003e14:	f04f 0800 	mov.w	r8, #0
 8003e18:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003e1c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003e20:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003e24:	4620      	mov	r0, r4
 8003e26:	4798      	blx	r3
 8003e28:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003e2c:	3301      	adds	r3, #1
 8003e2e:	4641      	mov	r1, r8
 8003e30:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8003e34:	2201      	movs	r2, #1
 8003e36:	e79c      	b.n	8003d72 <d_print_cast.isra.12+0x96>
 8003e38:	2500      	movs	r5, #0
 8003e3a:	4619      	mov	r1, r3
 8003e3c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003e40:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003e44:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8003e48:	4620      	mov	r0, r4
 8003e4a:	4798      	blx	r3
 8003e4c:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003e50:	1c5a      	adds	r2, r3, #1
 8003e52:	f8c4 2120 	str.w	r2, [r4, #288]	; 0x120
 8003e56:	462b      	mov	r3, r5
 8003e58:	2101      	movs	r1, #1
 8003e5a:	e7c3      	b.n	8003de4 <d_print_cast.isra.12+0x108>
 8003e5c:	f04f 0800 	mov.w	r8, #0
 8003e60:	4619      	mov	r1, r3
 8003e62:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003e66:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003e6a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003e6e:	4620      	mov	r0, r4
 8003e70:	4798      	blx	r3
 8003e72:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003e76:	1c5a      	adds	r2, r3, #1
 8003e78:	f8c4 2120 	str.w	r2, [r4, #288]	; 0x120
 8003e7c:	4643      	mov	r3, r8
 8003e7e:	2101      	movs	r1, #1
 8003e80:	e7a4      	b.n	8003dcc <d_print_cast.isra.12+0xf0>
 8003e82:	bf00      	nop

08003e84 <d_print_expr_op>:
 8003e84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003e88:	7815      	ldrb	r5, [r2, #0]
 8003e8a:	2d31      	cmp	r5, #49	; 0x31
 8003e8c:	b082      	sub	sp, #8
 8003e8e:	4613      	mov	r3, r2
 8003e90:	4604      	mov	r4, r0
 8003e92:	d00d      	beq.n	8003eb0 <d_print_expr_op+0x2c>
 8003e94:	f8d0 5124 	ldr.w	r5, [r0, #292]	; 0x124
 8003e98:	f8c0 d124 	str.w	sp, [r0, #292]	; 0x124
 8003e9c:	e88d 0028 	stmia.w	sp, {r3, r5}
 8003ea0:	f7fc fd68 	bl	8000974 <d_print_comp_inner>
 8003ea4:	9b01      	ldr	r3, [sp, #4]
 8003ea6:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003eaa:	b002      	add	sp, #8
 8003eac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003eb0:	6853      	ldr	r3, [r2, #4]
 8003eb2:	689f      	ldr	r7, [r3, #8]
 8003eb4:	685d      	ldr	r5, [r3, #4]
 8003eb6:	2f00      	cmp	r7, #0
 8003eb8:	d0f7      	beq.n	8003eaa <d_print_expr_op+0x26>
 8003eba:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003ebe:	442f      	add	r7, r5
 8003ec0:	f04f 0800 	mov.w	r8, #0
 8003ec4:	e008      	b.n	8003ed8 <d_print_expr_op+0x54>
 8003ec6:	460b      	mov	r3, r1
 8003ec8:	3101      	adds	r1, #1
 8003eca:	42bd      	cmp	r5, r7
 8003ecc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003ed0:	54e6      	strb	r6, [r4, r3]
 8003ed2:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8003ed6:	d0e8      	beq.n	8003eaa <d_print_expr_op+0x26>
 8003ed8:	29ff      	cmp	r1, #255	; 0xff
 8003eda:	f815 6b01 	ldrb.w	r6, [r5], #1
 8003ede:	d1f2      	bne.n	8003ec6 <d_print_expr_op+0x42>
 8003ee0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003ee4:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003ee8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003eec:	4620      	mov	r0, r4
 8003eee:	4798      	blx	r3
 8003ef0:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003ef4:	3301      	adds	r3, #1
 8003ef6:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8003efa:	2101      	movs	r1, #1
 8003efc:	2300      	movs	r3, #0
 8003efe:	e7e4      	b.n	8003eca <d_print_expr_op+0x46>

08003f00 <d_print_subexpr>:
 8003f00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003f02:	7813      	ldrb	r3, [r2, #0]
 8003f04:	2b01      	cmp	r3, #1
 8003f06:	b083      	sub	sp, #12
 8003f08:	4615      	mov	r5, r2
 8003f0a:	460e      	mov	r6, r1
 8003f0c:	4604      	mov	r4, r0
 8003f0e:	d929      	bls.n	8003f64 <d_print_subexpr+0x64>
 8003f10:	2b30      	cmp	r3, #48	; 0x30
 8003f12:	d027      	beq.n	8003f64 <d_print_subexpr+0x64>
 8003f14:	2b06      	cmp	r3, #6
 8003f16:	d025      	beq.n	8003f64 <d_print_subexpr+0x64>
 8003f18:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003f1c:	29ff      	cmp	r1, #255	; 0xff
 8003f1e:	d031      	beq.n	8003f84 <d_print_subexpr+0x84>
 8003f20:	1c4a      	adds	r2, r1, #1
 8003f22:	2328      	movs	r3, #40	; 0x28
 8003f24:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003f28:	5463      	strb	r3, [r4, r1]
 8003f2a:	462a      	mov	r2, r5
 8003f2c:	4631      	mov	r1, r6
 8003f2e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003f32:	4620      	mov	r0, r4
 8003f34:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003f38:	f8c4 d124 	str.w	sp, [r4, #292]	; 0x124
 8003f3c:	9301      	str	r3, [sp, #4]
 8003f3e:	9500      	str	r5, [sp, #0]
 8003f40:	f7fc fd18 	bl	8000974 <d_print_comp_inner>
 8003f44:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003f48:	9b01      	ldr	r3, [sp, #4]
 8003f4a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003f4e:	29ff      	cmp	r1, #255	; 0xff
 8003f50:	d028      	beq.n	8003fa4 <d_print_subexpr+0xa4>
 8003f52:	1c4a      	adds	r2, r1, #1
 8003f54:	2329      	movs	r3, #41	; 0x29
 8003f56:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003f5a:	5463      	strb	r3, [r4, r1]
 8003f5c:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003f60:	b003      	add	sp, #12
 8003f62:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003f64:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003f68:	f8c4 d124 	str.w	sp, [r4, #292]	; 0x124
 8003f6c:	4631      	mov	r1, r6
 8003f6e:	462a      	mov	r2, r5
 8003f70:	4620      	mov	r0, r4
 8003f72:	9301      	str	r3, [sp, #4]
 8003f74:	9500      	str	r5, [sp, #0]
 8003f76:	f7fc fcfd 	bl	8000974 <d_print_comp_inner>
 8003f7a:	9b01      	ldr	r3, [sp, #4]
 8003f7c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003f80:	b003      	add	sp, #12
 8003f82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003f84:	2700      	movs	r7, #0
 8003f86:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003f8a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003f8e:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8003f92:	4798      	blx	r3
 8003f94:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003f98:	3301      	adds	r3, #1
 8003f9a:	4639      	mov	r1, r7
 8003f9c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8003fa0:	2201      	movs	r2, #1
 8003fa2:	e7be      	b.n	8003f22 <d_print_subexpr+0x22>
 8003fa4:	2500      	movs	r5, #0
 8003fa6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003faa:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003fae:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8003fb2:	4620      	mov	r0, r4
 8003fb4:	4798      	blx	r3
 8003fb6:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003fba:	3301      	adds	r3, #1
 8003fbc:	4629      	mov	r1, r5
 8003fbe:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8003fc2:	2201      	movs	r2, #1
 8003fc4:	e7c6      	b.n	8003f54 <d_print_subexpr+0x54>
 8003fc6:	bf00      	nop

08003fc8 <d_template_args>:
 8003fc8:	68c1      	ldr	r1, [r0, #12]
 8003fca:	780b      	ldrb	r3, [r1, #0]
 8003fcc:	3b49      	subs	r3, #73	; 0x49
 8003fce:	2b01      	cmp	r3, #1
 8003fd0:	f200 80ac 	bhi.w	800412c <d_template_args+0x164>
 8003fd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003fd8:	1c4a      	adds	r2, r1, #1
 8003fda:	60c2      	str	r2, [r0, #12]
 8003fdc:	784b      	ldrb	r3, [r1, #1]
 8003fde:	f8d0 802c 	ldr.w	r8, [r0, #44]	; 0x2c
 8003fe2:	2b45      	cmp	r3, #69	; 0x45
 8003fe4:	b085      	sub	sp, #20
 8003fe6:	4604      	mov	r4, r0
 8003fe8:	f000 8166 	beq.w	80042b8 <d_template_args+0x2f0>
 8003fec:	ae04      	add	r6, sp, #16
 8003fee:	2100      	movs	r1, #0
 8003ff0:	f846 1d04 	str.w	r1, [r6, #-4]!
 8003ff4:	3b49      	subs	r3, #73	; 0x49
 8003ff6:	2b0f      	cmp	r3, #15
 8003ff8:	d854      	bhi.n	80040a4 <d_template_args+0xdc>
 8003ffa:	e8df f003 	tbb	[pc, r3]
 8003ffe:	4e4e      	.short	0x4e4e
 8004000:	53533253 	.word	0x53533253
 8004004:	53535353 	.word	0x53535353
 8004008:	53535353 	.word	0x53535353
 800400c:	0853      	.short	0x0853
 800400e:	1c53      	adds	r3, r2, #1
 8004010:	2501      	movs	r5, #1
 8004012:	60e3      	str	r3, [r4, #12]
 8004014:	6b67      	ldr	r7, [r4, #52]	; 0x34
 8004016:	6365      	str	r5, [r4, #52]	; 0x34
 8004018:	7853      	ldrb	r3, [r2, #1]
 800401a:	2b4c      	cmp	r3, #76	; 0x4c
 800401c:	f000 8088 	beq.w	8004130 <d_template_args+0x168>
 8004020:	2b54      	cmp	r3, #84	; 0x54
 8004022:	f000 808b 	beq.w	800413c <d_template_args+0x174>
 8004026:	2b73      	cmp	r3, #115	; 0x73
 8004028:	d044      	beq.n	80040b4 <d_template_args+0xec>
 800402a:	2b66      	cmp	r3, #102	; 0x66
 800402c:	d060      	beq.n	80040f0 <d_template_args+0x128>
 800402e:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8004032:	2909      	cmp	r1, #9
 8004034:	f200 81b1 	bhi.w	800439a <d_template_args+0x3d2>
 8004038:	4620      	mov	r0, r4
 800403a:	f003 f91f 	bl	800727c <d_unqualified_name>
 800403e:	4605      	mov	r5, r0
 8004040:	2800      	cmp	r0, #0
 8004042:	f000 8229 	beq.w	8004498 <d_template_args+0x4d0>
 8004046:	68e3      	ldr	r3, [r4, #12]
 8004048:	781a      	ldrb	r2, [r3, #0]
 800404a:	2a49      	cmp	r2, #73	; 0x49
 800404c:	f000 8128 	beq.w	80042a0 <d_template_args+0x2d8>
 8004050:	4602      	mov	r2, r0
 8004052:	6367      	str	r7, [r4, #52]	; 0x34
 8004054:	7819      	ldrb	r1, [r3, #0]
 8004056:	2945      	cmp	r1, #69	; 0x45
 8004058:	d029      	beq.n	80040ae <d_template_args+0xe6>
 800405a:	2000      	movs	r0, #0
 800405c:	b005      	add	sp, #20
 800405e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004062:	4620      	mov	r0, r4
 8004064:	f003 ff76 	bl	8007f54 <d_expr_primary>
 8004068:	4602      	mov	r2, r0
 800406a:	2a00      	cmp	r2, #0
 800406c:	d0f5      	beq.n	800405a <d_template_args+0x92>
 800406e:	2300      	movs	r3, #0
 8004070:	212f      	movs	r1, #47	; 0x2f
 8004072:	4620      	mov	r0, r4
 8004074:	f7fc f8ac 	bl	80001d0 <d_make_comp>
 8004078:	6030      	str	r0, [r6, #0]
 800407a:	2800      	cmp	r0, #0
 800407c:	d0ed      	beq.n	800405a <d_template_args+0x92>
 800407e:	68e2      	ldr	r2, [r4, #12]
 8004080:	7813      	ldrb	r3, [r2, #0]
 8004082:	2b45      	cmp	r3, #69	; 0x45
 8004084:	f100 0608 	add.w	r6, r0, #8
 8004088:	d1b4      	bne.n	8003ff4 <d_template_args+0x2c>
 800408a:	9803      	ldr	r0, [sp, #12]
 800408c:	f8c4 802c 	str.w	r8, [r4, #44]	; 0x2c
 8004090:	3201      	adds	r2, #1
 8004092:	60e2      	str	r2, [r4, #12]
 8004094:	b005      	add	sp, #20
 8004096:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800409a:	4620      	mov	r0, r4
 800409c:	f7ff ff94 	bl	8003fc8 <d_template_args>
 80040a0:	4602      	mov	r2, r0
 80040a2:	e7e2      	b.n	800406a <d_template_args+0xa2>
 80040a4:	4620      	mov	r0, r4
 80040a6:	f002 fc6b 	bl	8006980 <d_type>
 80040aa:	4602      	mov	r2, r0
 80040ac:	e7dd      	b.n	800406a <d_template_args+0xa2>
 80040ae:	3301      	adds	r3, #1
 80040b0:	60e3      	str	r3, [r4, #12]
 80040b2:	e7da      	b.n	800406a <d_template_args+0xa2>
 80040b4:	7893      	ldrb	r3, [r2, #2]
 80040b6:	2b72      	cmp	r3, #114	; 0x72
 80040b8:	f000 8149 	beq.w	800434e <d_template_args+0x386>
 80040bc:	2b70      	cmp	r3, #112	; 0x70
 80040be:	f000 81aa 	beq.w	8004416 <d_template_args+0x44e>
 80040c2:	4620      	mov	r0, r4
 80040c4:	f003 f81a 	bl	80070fc <d_operator_name>
 80040c8:	4605      	mov	r5, r0
 80040ca:	2800      	cmp	r0, #0
 80040cc:	f000 81e4 	beq.w	8004498 <d_template_args+0x4d0>
 80040d0:	f890 9000 	ldrb.w	r9, [r0]
 80040d4:	f1b9 0f31 	cmp.w	r9, #49	; 0x31
 80040d8:	d036      	beq.n	8004148 <d_template_args+0x180>
 80040da:	f1b9 0f32 	cmp.w	r9, #50	; 0x32
 80040de:	f000 80cf 	beq.w	8004280 <d_template_args+0x2b8>
 80040e2:	f1b9 0f33 	cmp.w	r9, #51	; 0x33
 80040e6:	f000 8172 	beq.w	80043ce <d_template_args+0x406>
 80040ea:	68e3      	ldr	r3, [r4, #12]
 80040ec:	2200      	movs	r2, #0
 80040ee:	e7b0      	b.n	8004052 <d_template_args+0x8a>
 80040f0:	7893      	ldrb	r3, [r2, #2]
 80040f2:	2b70      	cmp	r3, #112	; 0x70
 80040f4:	d1e5      	bne.n	80040c2 <d_template_args+0xfa>
 80040f6:	1cd3      	adds	r3, r2, #3
 80040f8:	60e3      	str	r3, [r4, #12]
 80040fa:	78d3      	ldrb	r3, [r2, #3]
 80040fc:	2b54      	cmp	r3, #84	; 0x54
 80040fe:	f040 813c 	bne.w	800437a <d_template_args+0x3b2>
 8004102:	3204      	adds	r2, #4
 8004104:	60e2      	str	r2, [r4, #12]
 8004106:	2000      	movs	r0, #0
 8004108:	6963      	ldr	r3, [r4, #20]
 800410a:	69a1      	ldr	r1, [r4, #24]
 800410c:	428b      	cmp	r3, r1
 800410e:	daec      	bge.n	80040ea <d_template_args+0x122>
 8004110:	6921      	ldr	r1, [r4, #16]
 8004112:	1c5a      	adds	r2, r3, #1
 8004114:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8004118:	6162      	str	r2, [r4, #20]
 800411a:	eb11 0283 	adds.w	r2, r1, r3, lsl #2
 800411e:	d06d      	beq.n	80041fc <d_template_args+0x234>
 8004120:	2506      	movs	r5, #6
 8004122:	f801 5023 	strb.w	r5, [r1, r3, lsl #2]
 8004126:	6050      	str	r0, [r2, #4]
 8004128:	68e3      	ldr	r3, [r4, #12]
 800412a:	e792      	b.n	8004052 <d_template_args+0x8a>
 800412c:	2000      	movs	r0, #0
 800412e:	4770      	bx	lr
 8004130:	4620      	mov	r0, r4
 8004132:	f003 ff0f 	bl	8007f54 <d_expr_primary>
 8004136:	68e3      	ldr	r3, [r4, #12]
 8004138:	4602      	mov	r2, r0
 800413a:	e78a      	b.n	8004052 <d_template_args+0x8a>
 800413c:	4620      	mov	r0, r4
 800413e:	f7fc f9eb 	bl	8000518 <d_template_param>
 8004142:	68e3      	ldr	r3, [r4, #12]
 8004144:	4602      	mov	r2, r0
 8004146:	e784      	b.n	8004052 <d_template_args+0x8a>
 8004148:	f8d0 b004 	ldr.w	fp, [r0, #4]
 800414c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800414e:	f8db 3008 	ldr.w	r3, [fp, #8]
 8004152:	f8db a000 	ldr.w	sl, [fp]
 8004156:	49cb      	ldr	r1, [pc, #812]	; (8004484 <d_template_args+0x4bc>)
 8004158:	3b02      	subs	r3, #2
 800415a:	441a      	add	r2, r3
 800415c:	6322      	str	r2, [r4, #48]	; 0x30
 800415e:	4650      	mov	r0, sl
 8004160:	f004 f9be 	bl	80084e0 <strcmp>
 8004164:	2800      	cmp	r0, #0
 8004166:	f000 8188 	beq.w	800447a <d_template_args+0x4b2>
 800416a:	f8db 300c 	ldr.w	r3, [fp, #12]
 800416e:	2b03      	cmp	r3, #3
 8004170:	d8bb      	bhi.n	80040ea <d_template_args+0x122>
 8004172:	e8df f003 	tbb	[pc, r3]
 8004176:	ab7c      	.short	0xab7c
 8004178:	0447      	.short	0x0447
 800417a:	f04f 0a00 	mov.w	sl, #0
 800417e:	49c2      	ldr	r1, [pc, #776]	; (8004488 <d_template_args+0x4c0>)
 8004180:	4650      	mov	r0, sl
 8004182:	f004 f9ad 	bl	80084e0 <strcmp>
 8004186:	2800      	cmp	r0, #0
 8004188:	f000 819d 	beq.w	80044c6 <d_template_args+0x4fe>
 800418c:	f89a 3000 	ldrb.w	r3, [sl]
 8004190:	2b6e      	cmp	r3, #110	; 0x6e
 8004192:	d1aa      	bne.n	80040ea <d_template_args+0x122>
 8004194:	f89a 3001 	ldrb.w	r3, [sl, #1]
 8004198:	2b77      	cmp	r3, #119	; 0x77
 800419a:	d001      	beq.n	80041a0 <d_template_args+0x1d8>
 800419c:	2b61      	cmp	r3, #97	; 0x61
 800419e:	d1a4      	bne.n	80040ea <d_template_args+0x122>
 80041a0:	215f      	movs	r1, #95	; 0x5f
 80041a2:	4620      	mov	r0, r4
 80041a4:	f000 fd82 	bl	8004cac <d_exprlist>
 80041a8:	4681      	mov	r9, r0
 80041aa:	4620      	mov	r0, r4
 80041ac:	f002 fbe8 	bl	8006980 <d_type>
 80041b0:	68e3      	ldr	r3, [r4, #12]
 80041b2:	7819      	ldrb	r1, [r3, #0]
 80041b4:	2945      	cmp	r1, #69	; 0x45
 80041b6:	4682      	mov	sl, r0
 80041b8:	f000 825d 	beq.w	8004676 <d_template_args+0x6ae>
 80041bc:	2970      	cmp	r1, #112	; 0x70
 80041be:	f000 8342 	beq.w	8004846 <d_template_args+0x87e>
 80041c2:	2969      	cmp	r1, #105	; 0x69
 80041c4:	f040 824d 	bne.w	8004662 <d_template_args+0x69a>
 80041c8:	785a      	ldrb	r2, [r3, #1]
 80041ca:	2a6c      	cmp	r2, #108	; 0x6c
 80041cc:	f040 8249 	bne.w	8004662 <d_template_args+0x69a>
 80041d0:	4620      	mov	r0, r4
 80041d2:	f002 fa03 	bl	80065dc <d_expression_1>
 80041d6:	4603      	mov	r3, r0
 80041d8:	4652      	mov	r2, sl
 80041da:	213a      	movs	r1, #58	; 0x3a
 80041dc:	4620      	mov	r0, r4
 80041de:	f7fb fff7 	bl	80001d0 <d_make_comp>
 80041e2:	464a      	mov	r2, r9
 80041e4:	4603      	mov	r3, r0
 80041e6:	2139      	movs	r1, #57	; 0x39
 80041e8:	4620      	mov	r0, r4
 80041ea:	f7fb fff1 	bl	80001d0 <d_make_comp>
 80041ee:	462a      	mov	r2, r5
 80041f0:	4603      	mov	r3, r0
 80041f2:	2138      	movs	r1, #56	; 0x38
 80041f4:	4620      	mov	r0, r4
 80041f6:	f7fb ffeb 	bl	80001d0 <d_make_comp>
 80041fa:	4602      	mov	r2, r0
 80041fc:	68e3      	ldr	r3, [r4, #12]
 80041fe:	e728      	b.n	8004052 <d_template_args+0x8a>
 8004200:	f04f 0a00 	mov.w	sl, #0
 8004204:	686b      	ldr	r3, [r5, #4]
 8004206:	681b      	ldr	r3, [r3, #0]
 8004208:	785a      	ldrb	r2, [r3, #1]
 800420a:	2a63      	cmp	r2, #99	; 0x63
 800420c:	f000 814d 	beq.w	80044aa <d_template_args+0x4e2>
 8004210:	4620      	mov	r0, r4
 8004212:	f002 f9e3 	bl	80065dc <d_expression_1>
 8004216:	4681      	mov	r9, r0
 8004218:	499c      	ldr	r1, [pc, #624]	; (800448c <d_template_args+0x4c4>)
 800421a:	4650      	mov	r0, sl
 800421c:	f004 f960 	bl	80084e0 <strcmp>
 8004220:	2800      	cmp	r0, #0
 8004222:	f000 813c 	beq.w	800449e <d_template_args+0x4d6>
 8004226:	499a      	ldr	r1, [pc, #616]	; (8004490 <d_template_args+0x4c8>)
 8004228:	4650      	mov	r0, sl
 800422a:	f004 f959 	bl	80084e0 <strcmp>
 800422e:	b130      	cbz	r0, 800423e <d_template_args+0x276>
 8004230:	4650      	mov	r0, sl
 8004232:	4998      	ldr	r1, [pc, #608]	; (8004494 <d_template_args+0x4cc>)
 8004234:	f004 f954 	bl	80084e0 <strcmp>
 8004238:	2800      	cmp	r0, #0
 800423a:	f040 8214 	bne.w	8004666 <d_template_args+0x69e>
 800423e:	4620      	mov	r0, r4
 8004240:	f003 f81c 	bl	800727c <d_unqualified_name>
 8004244:	68e3      	ldr	r3, [r4, #12]
 8004246:	781b      	ldrb	r3, [r3, #0]
 8004248:	2b49      	cmp	r3, #73	; 0x49
 800424a:	4682      	mov	sl, r0
 800424c:	f000 82d2 	beq.w	80047f4 <d_template_args+0x82c>
 8004250:	4653      	mov	r3, sl
 8004252:	464a      	mov	r2, r9
 8004254:	2137      	movs	r1, #55	; 0x37
 8004256:	4620      	mov	r0, r4
 8004258:	f7fb ffba 	bl	80001d0 <d_make_comp>
 800425c:	462a      	mov	r2, r5
 800425e:	4603      	mov	r3, r0
 8004260:	2136      	movs	r1, #54	; 0x36
 8004262:	4620      	mov	r0, r4
 8004264:	f7fb ffb4 	bl	80001d0 <d_make_comp>
 8004268:	68e3      	ldr	r3, [r4, #12]
 800426a:	4602      	mov	r2, r0
 800426c:	e6f1      	b.n	8004052 <d_template_args+0x8a>
 800426e:	462a      	mov	r2, r5
 8004270:	2300      	movs	r3, #0
 8004272:	2134      	movs	r1, #52	; 0x34
 8004274:	4620      	mov	r0, r4
 8004276:	f7fb ffab 	bl	80001d0 <d_make_comp>
 800427a:	68e3      	ldr	r3, [r4, #12]
 800427c:	4602      	mov	r2, r0
 800427e:	e6e8      	b.n	8004052 <d_template_args+0x8a>
 8004280:	686b      	ldr	r3, [r5, #4]
 8004282:	2b03      	cmp	r3, #3
 8004284:	f63f af31 	bhi.w	80040ea <d_template_args+0x122>
 8004288:	a201      	add	r2, pc, #4	; (adr r2, 8004290 <d_template_args+0x2c8>)
 800428a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800428e:	bf00      	nop
 8004290:	0800426f 	.word	0x0800426f
 8004294:	0800438b 	.word	0x0800438b
 8004298:	08004201 	.word	0x08004201
 800429c:	0800417b 	.word	0x0800417b
 80042a0:	4620      	mov	r0, r4
 80042a2:	f7ff fe91 	bl	8003fc8 <d_template_args>
 80042a6:	462a      	mov	r2, r5
 80042a8:	4603      	mov	r3, r0
 80042aa:	2104      	movs	r1, #4
 80042ac:	4620      	mov	r0, r4
 80042ae:	f7fb ff8f 	bl	80001d0 <d_make_comp>
 80042b2:	68e3      	ldr	r3, [r4, #12]
 80042b4:	4602      	mov	r2, r0
 80042b6:	e6cc      	b.n	8004052 <d_template_args+0x8a>
 80042b8:	3102      	adds	r1, #2
 80042ba:	2300      	movs	r3, #0
 80042bc:	60c1      	str	r1, [r0, #12]
 80042be:	461a      	mov	r2, r3
 80042c0:	212f      	movs	r1, #47	; 0x2f
 80042c2:	b005      	add	sp, #20
 80042c4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80042c8:	f7fb bf82 	b.w	80001d0 <d_make_comp>
 80042cc:	f1ba 0f00 	cmp.w	sl, #0
 80042d0:	d05b      	beq.n	800438a <d_template_args+0x3c2>
 80042d2:	f89a 3000 	ldrb.w	r3, [sl]
 80042d6:	2b70      	cmp	r3, #112	; 0x70
 80042d8:	d001      	beq.n	80042de <d_template_args+0x316>
 80042da:	2b6d      	cmp	r3, #109	; 0x6d
 80042dc:	d155      	bne.n	800438a <d_template_args+0x3c2>
 80042de:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80042e2:	429a      	cmp	r2, r3
 80042e4:	d151      	bne.n	800438a <d_template_args+0x3c2>
 80042e6:	68e2      	ldr	r2, [r4, #12]
 80042e8:	7813      	ldrb	r3, [r2, #0]
 80042ea:	2b5f      	cmp	r3, #95	; 0x5f
 80042ec:	f000 8334 	beq.w	8004958 <d_template_args+0x990>
 80042f0:	f04f 0a01 	mov.w	sl, #1
 80042f4:	2b4c      	cmp	r3, #76	; 0x4c
 80042f6:	f000 82bf 	beq.w	8004878 <d_template_args+0x8b0>
 80042fa:	2b54      	cmp	r3, #84	; 0x54
 80042fc:	f000 82af 	beq.w	800485e <d_template_args+0x896>
 8004300:	2b73      	cmp	r3, #115	; 0x73
 8004302:	f000 80ed 	beq.w	80044e0 <d_template_args+0x518>
 8004306:	2b66      	cmp	r3, #102	; 0x66
 8004308:	f000 818b 	beq.w	8004622 <d_template_args+0x65a>
 800430c:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8004310:	2909      	cmp	r1, #9
 8004312:	f200 8400 	bhi.w	8004b16 <d_template_args+0xb4e>
 8004316:	4620      	mov	r0, r4
 8004318:	f002 ffb0 	bl	800727c <d_unqualified_name>
 800431c:	4681      	mov	r9, r0
 800431e:	b118      	cbz	r0, 8004328 <d_template_args+0x360>
 8004320:	68e3      	ldr	r3, [r4, #12]
 8004322:	781b      	ldrb	r3, [r3, #0]
 8004324:	2b49      	cmp	r3, #73	; 0x49
 8004326:	d064      	beq.n	80043f2 <d_template_args+0x42a>
 8004328:	f1ba 0f00 	cmp.w	sl, #0
 800432c:	f000 80a3 	beq.w	8004476 <d_template_args+0x4ae>
 8004330:	464b      	mov	r3, r9
 8004332:	464a      	mov	r2, r9
 8004334:	2137      	movs	r1, #55	; 0x37
 8004336:	4620      	mov	r0, r4
 8004338:	f7fb ff4a 	bl	80001d0 <d_make_comp>
 800433c:	4603      	mov	r3, r0
 800433e:	462a      	mov	r2, r5
 8004340:	2135      	movs	r1, #53	; 0x35
 8004342:	4620      	mov	r0, r4
 8004344:	f7fb ff44 	bl	80001d0 <d_make_comp>
 8004348:	68e3      	ldr	r3, [r4, #12]
 800434a:	4602      	mov	r2, r0
 800434c:	e681      	b.n	8004052 <d_template_args+0x8a>
 800434e:	3203      	adds	r2, #3
 8004350:	60e2      	str	r2, [r4, #12]
 8004352:	4620      	mov	r0, r4
 8004354:	f002 fb14 	bl	8006980 <d_type>
 8004358:	4681      	mov	r9, r0
 800435a:	4620      	mov	r0, r4
 800435c:	f002 ff8e 	bl	800727c <d_unqualified_name>
 8004360:	68e3      	ldr	r3, [r4, #12]
 8004362:	781b      	ldrb	r3, [r3, #0]
 8004364:	2b49      	cmp	r3, #73	; 0x49
 8004366:	4682      	mov	sl, r0
 8004368:	d038      	beq.n	80043dc <d_template_args+0x414>
 800436a:	4603      	mov	r3, r0
 800436c:	464a      	mov	r2, r9
 800436e:	4629      	mov	r1, r5
 8004370:	4620      	mov	r0, r4
 8004372:	f7fb ff2d 	bl	80001d0 <d_make_comp>
 8004376:	4602      	mov	r2, r0
 8004378:	e740      	b.n	80041fc <d_template_args+0x234>
 800437a:	4620      	mov	r0, r4
 800437c:	f7fc f8b4 	bl	80004e8 <d_compact_number>
 8004380:	3001      	adds	r0, #1
 8004382:	f47f aec1 	bne.w	8004108 <d_template_args+0x140>
 8004386:	4602      	mov	r2, r0
 8004388:	e738      	b.n	80041fc <d_template_args+0x234>
 800438a:	f1b9 0f33 	cmp.w	r9, #51	; 0x33
 800438e:	68e2      	ldr	r2, [r4, #12]
 8004390:	d01e      	beq.n	80043d0 <d_template_args+0x408>
 8004392:	7813      	ldrb	r3, [r2, #0]
 8004394:	f04f 0a00 	mov.w	sl, #0
 8004398:	e7ac      	b.n	80042f4 <d_template_args+0x32c>
 800439a:	2b6f      	cmp	r3, #111	; 0x6f
 800439c:	d034      	beq.n	8004408 <d_template_args+0x440>
 800439e:	2b69      	cmp	r3, #105	; 0x69
 80043a0:	f040 8421 	bne.w	8004be6 <d_template_args+0xc1e>
 80043a4:	7893      	ldrb	r3, [r2, #2]
 80043a6:	2b6c      	cmp	r3, #108	; 0x6c
 80043a8:	f47f ae8b 	bne.w	80040c2 <d_template_args+0xfa>
 80043ac:	2500      	movs	r5, #0
 80043ae:	68e3      	ldr	r3, [r4, #12]
 80043b0:	3302      	adds	r3, #2
 80043b2:	60e3      	str	r3, [r4, #12]
 80043b4:	2145      	movs	r1, #69	; 0x45
 80043b6:	4620      	mov	r0, r4
 80043b8:	f000 fc78 	bl	8004cac <d_exprlist>
 80043bc:	462a      	mov	r2, r5
 80043be:	4603      	mov	r3, r0
 80043c0:	2130      	movs	r1, #48	; 0x30
 80043c2:	4620      	mov	r0, r4
 80043c4:	f7fb ff04 	bl	80001d0 <d_make_comp>
 80043c8:	68e3      	ldr	r3, [r4, #12]
 80043ca:	4602      	mov	r2, r0
 80043cc:	e641      	b.n	8004052 <d_template_args+0x8a>
 80043ce:	68e2      	ldr	r2, [r4, #12]
 80043d0:	7813      	ldrb	r3, [r2, #0]
 80043d2:	2b5f      	cmp	r3, #95	; 0x5f
 80043d4:	d048      	beq.n	8004468 <d_template_args+0x4a0>
 80043d6:	f04f 0a00 	mov.w	sl, #0
 80043da:	e78b      	b.n	80042f4 <d_template_args+0x32c>
 80043dc:	4620      	mov	r0, r4
 80043de:	f7ff fdf3 	bl	8003fc8 <d_template_args>
 80043e2:	4652      	mov	r2, sl
 80043e4:	4603      	mov	r3, r0
 80043e6:	2104      	movs	r1, #4
 80043e8:	4620      	mov	r0, r4
 80043ea:	f7fb fef1 	bl	80001d0 <d_make_comp>
 80043ee:	4603      	mov	r3, r0
 80043f0:	e7bc      	b.n	800436c <d_template_args+0x3a4>
 80043f2:	4620      	mov	r0, r4
 80043f4:	f7ff fde8 	bl	8003fc8 <d_template_args>
 80043f8:	464a      	mov	r2, r9
 80043fa:	4603      	mov	r3, r0
 80043fc:	2104      	movs	r1, #4
 80043fe:	4620      	mov	r0, r4
 8004400:	f7fb fee6 	bl	80001d0 <d_make_comp>
 8004404:	4681      	mov	r9, r0
 8004406:	e78f      	b.n	8004328 <d_template_args+0x360>
 8004408:	7893      	ldrb	r3, [r2, #2]
 800440a:	2b6e      	cmp	r3, #110	; 0x6e
 800440c:	f47f ae59 	bne.w	80040c2 <d_template_args+0xfa>
 8004410:	3203      	adds	r2, #3
 8004412:	60e2      	str	r2, [r4, #12]
 8004414:	e610      	b.n	8004038 <d_template_args+0x70>
 8004416:	1cd3      	adds	r3, r2, #3
 8004418:	60e3      	str	r3, [r4, #12]
 800441a:	78d3      	ldrb	r3, [r2, #3]
 800441c:	2b4c      	cmp	r3, #76	; 0x4c
 800441e:	f000 8259 	beq.w	80048d4 <d_template_args+0x90c>
 8004422:	2b54      	cmp	r3, #84	; 0x54
 8004424:	f000 8273 	beq.w	800490e <d_template_args+0x946>
 8004428:	2b73      	cmp	r3, #115	; 0x73
 800442a:	f000 8128 	beq.w	800467e <d_template_args+0x6b6>
 800442e:	2b66      	cmp	r3, #102	; 0x66
 8004430:	f000 81c1 	beq.w	80047b6 <d_template_args+0x7ee>
 8004434:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8004438:	2909      	cmp	r1, #9
 800443a:	f200 83e1 	bhi.w	8004c00 <d_template_args+0xc38>
 800443e:	4620      	mov	r0, r4
 8004440:	f002 ff1c 	bl	800727c <d_unqualified_name>
 8004444:	4605      	mov	r5, r0
 8004446:	2800      	cmp	r0, #0
 8004448:	f000 8242 	beq.w	80048d0 <d_template_args+0x908>
 800444c:	68e3      	ldr	r3, [r4, #12]
 800444e:	781b      	ldrb	r3, [r3, #0]
 8004450:	2b49      	cmp	r3, #73	; 0x49
 8004452:	f000 8284 	beq.w	800495e <d_template_args+0x996>
 8004456:	4602      	mov	r2, r0
 8004458:	2300      	movs	r3, #0
 800445a:	2149      	movs	r1, #73	; 0x49
 800445c:	4620      	mov	r0, r4
 800445e:	f7fb feb7 	bl	80001d0 <d_make_comp>
 8004462:	68e3      	ldr	r3, [r4, #12]
 8004464:	4602      	mov	r2, r0
 8004466:	e5f4      	b.n	8004052 <d_template_args+0x8a>
 8004468:	3201      	adds	r2, #1
 800446a:	60e2      	str	r2, [r4, #12]
 800446c:	2145      	movs	r1, #69	; 0x45
 800446e:	4620      	mov	r0, r4
 8004470:	f000 fc1c 	bl	8004cac <d_exprlist>
 8004474:	4681      	mov	r9, r0
 8004476:	464b      	mov	r3, r9
 8004478:	e761      	b.n	800433e <d_template_args+0x376>
 800447a:	4620      	mov	r0, r4
 800447c:	f002 fa80 	bl	8006980 <d_type>
 8004480:	4603      	mov	r3, r0
 8004482:	e75c      	b.n	800433e <d_template_args+0x376>
 8004484:	0801158c 	.word	0x0801158c
 8004488:	08011284 	.word	0x08011284
 800448c:	0801127c 	.word	0x0801127c
 8004490:	08011398 	.word	0x08011398
 8004494:	0801139c 	.word	0x0801139c
 8004498:	462a      	mov	r2, r5
 800449a:	68e3      	ldr	r3, [r4, #12]
 800449c:	e5d9      	b.n	8004052 <d_template_args+0x8a>
 800449e:	2145      	movs	r1, #69	; 0x45
 80044a0:	4620      	mov	r0, r4
 80044a2:	f000 fc03 	bl	8004cac <d_exprlist>
 80044a6:	4682      	mov	sl, r0
 80044a8:	e6d2      	b.n	8004250 <d_template_args+0x288>
 80044aa:	781b      	ldrb	r3, [r3, #0]
 80044ac:	f1a3 0263 	sub.w	r2, r3, #99	; 0x63
 80044b0:	2a01      	cmp	r2, #1
 80044b2:	d903      	bls.n	80044bc <d_template_args+0x4f4>
 80044b4:	3b72      	subs	r3, #114	; 0x72
 80044b6:	2b01      	cmp	r3, #1
 80044b8:	f63f aeaa 	bhi.w	8004210 <d_template_args+0x248>
 80044bc:	4620      	mov	r0, r4
 80044be:	f002 fa5f 	bl	8006980 <d_type>
 80044c2:	4681      	mov	r9, r0
 80044c4:	e6a8      	b.n	8004218 <d_template_args+0x250>
 80044c6:	4620      	mov	r0, r4
 80044c8:	f002 f888 	bl	80065dc <d_expression_1>
 80044cc:	4681      	mov	r9, r0
 80044ce:	4620      	mov	r0, r4
 80044d0:	f002 f884 	bl	80065dc <d_expression_1>
 80044d4:	4682      	mov	sl, r0
 80044d6:	4620      	mov	r0, r4
 80044d8:	f002 f880 	bl	80065dc <d_expression_1>
 80044dc:	4603      	mov	r3, r0
 80044de:	e67b      	b.n	80041d8 <d_template_args+0x210>
 80044e0:	7853      	ldrb	r3, [r2, #1]
 80044e2:	2b72      	cmp	r3, #114	; 0x72
 80044e4:	f000 8265 	beq.w	80049b2 <d_template_args+0x9ea>
 80044e8:	2b70      	cmp	r3, #112	; 0x70
 80044ea:	f000 82a2 	beq.w	8004a32 <d_template_args+0xa6a>
 80044ee:	4620      	mov	r0, r4
 80044f0:	f002 fe04 	bl	80070fc <d_operator_name>
 80044f4:	4681      	mov	r9, r0
 80044f6:	2800      	cmp	r0, #0
 80044f8:	f43f af16 	beq.w	8004328 <d_template_args+0x360>
 80044fc:	7803      	ldrb	r3, [r0, #0]
 80044fe:	2b31      	cmp	r3, #49	; 0x31
 8004500:	f000 81bf 	beq.w	8004882 <d_template_args+0x8ba>
 8004504:	2b32      	cmp	r3, #50	; 0x32
 8004506:	f040 8180 	bne.w	800480a <d_template_args+0x842>
 800450a:	f8d9 3004 	ldr.w	r3, [r9, #4]
 800450e:	2b03      	cmp	r3, #3
 8004510:	f200 80ae 	bhi.w	8004670 <d_template_args+0x6a8>
 8004514:	e8df f013 	tbh	[pc, r3, lsl #1]
 8004518:	01810004 	.word	0x01810004
 800451c:	000c004e 	.word	0x000c004e
 8004520:	464a      	mov	r2, r9
 8004522:	2300      	movs	r3, #0
 8004524:	2134      	movs	r1, #52	; 0x34
 8004526:	4620      	mov	r0, r4
 8004528:	f7fb fe52 	bl	80001d0 <d_make_comp>
 800452c:	4681      	mov	r9, r0
 800452e:	e6fb      	b.n	8004328 <d_template_args+0x360>
 8004530:	f04f 0b00 	mov.w	fp, #0
 8004534:	49cc      	ldr	r1, [pc, #816]	; (8004868 <d_template_args+0x8a0>)
 8004536:	4658      	mov	r0, fp
 8004538:	f003 ffd2 	bl	80084e0 <strcmp>
 800453c:	2800      	cmp	r0, #0
 800453e:	f000 82a2 	beq.w	8004a86 <d_template_args+0xabe>
 8004542:	f89b 3000 	ldrb.w	r3, [fp]
 8004546:	2b6e      	cmp	r3, #110	; 0x6e
 8004548:	f040 8092 	bne.w	8004670 <d_template_args+0x6a8>
 800454c:	f89b 3001 	ldrb.w	r3, [fp, #1]
 8004550:	2b77      	cmp	r3, #119	; 0x77
 8004552:	d002      	beq.n	800455a <d_template_args+0x592>
 8004554:	2b61      	cmp	r3, #97	; 0x61
 8004556:	f040 808b 	bne.w	8004670 <d_template_args+0x6a8>
 800455a:	215f      	movs	r1, #95	; 0x5f
 800455c:	4620      	mov	r0, r4
 800455e:	f000 fba5 	bl	8004cac <d_exprlist>
 8004562:	9001      	str	r0, [sp, #4]
 8004564:	4620      	mov	r0, r4
 8004566:	f002 fa0b 	bl	8006980 <d_type>
 800456a:	68e3      	ldr	r3, [r4, #12]
 800456c:	781a      	ldrb	r2, [r3, #0]
 800456e:	2a45      	cmp	r2, #69	; 0x45
 8004570:	4683      	mov	fp, r0
 8004572:	f000 8316 	beq.w	8004ba2 <d_template_args+0xbda>
 8004576:	2a70      	cmp	r2, #112	; 0x70
 8004578:	f000 8308 	beq.w	8004b8c <d_template_args+0xbc4>
 800457c:	2a69      	cmp	r2, #105	; 0x69
 800457e:	d177      	bne.n	8004670 <d_template_args+0x6a8>
 8004580:	785b      	ldrb	r3, [r3, #1]
 8004582:	2b6c      	cmp	r3, #108	; 0x6c
 8004584:	d174      	bne.n	8004670 <d_template_args+0x6a8>
 8004586:	4620      	mov	r0, r4
 8004588:	f002 f828 	bl	80065dc <d_expression_1>
 800458c:	4603      	mov	r3, r0
 800458e:	465a      	mov	r2, fp
 8004590:	213a      	movs	r1, #58	; 0x3a
 8004592:	4620      	mov	r0, r4
 8004594:	f7fb fe1c 	bl	80001d0 <d_make_comp>
 8004598:	9a01      	ldr	r2, [sp, #4]
 800459a:	4603      	mov	r3, r0
 800459c:	2139      	movs	r1, #57	; 0x39
 800459e:	4620      	mov	r0, r4
 80045a0:	f7fb fe16 	bl	80001d0 <d_make_comp>
 80045a4:	464a      	mov	r2, r9
 80045a6:	4603      	mov	r3, r0
 80045a8:	2138      	movs	r1, #56	; 0x38
 80045aa:	4620      	mov	r0, r4
 80045ac:	f7fb fe10 	bl	80001d0 <d_make_comp>
 80045b0:	4681      	mov	r9, r0
 80045b2:	e6b9      	b.n	8004328 <d_template_args+0x360>
 80045b4:	f04f 0b00 	mov.w	fp, #0
 80045b8:	f8d9 3004 	ldr.w	r3, [r9, #4]
 80045bc:	681b      	ldr	r3, [r3, #0]
 80045be:	785a      	ldrb	r2, [r3, #1]
 80045c0:	2a63      	cmp	r2, #99	; 0x63
 80045c2:	f000 8295 	beq.w	8004af0 <d_template_args+0xb28>
 80045c6:	4620      	mov	r0, r4
 80045c8:	f002 f808 	bl	80065dc <d_expression_1>
 80045cc:	9001      	str	r0, [sp, #4]
 80045ce:	49a7      	ldr	r1, [pc, #668]	; (800486c <d_template_args+0x8a4>)
 80045d0:	4658      	mov	r0, fp
 80045d2:	f003 ff85 	bl	80084e0 <strcmp>
 80045d6:	2800      	cmp	r0, #0
 80045d8:	f000 8243 	beq.w	8004a62 <d_template_args+0xa9a>
 80045dc:	49a4      	ldr	r1, [pc, #656]	; (8004870 <d_template_args+0x8a8>)
 80045de:	4658      	mov	r0, fp
 80045e0:	f003 ff7e 	bl	80084e0 <strcmp>
 80045e4:	b130      	cbz	r0, 80045f4 <d_template_args+0x62c>
 80045e6:	4658      	mov	r0, fp
 80045e8:	49a2      	ldr	r1, [pc, #648]	; (8004874 <d_template_args+0x8ac>)
 80045ea:	f003 ff79 	bl	80084e0 <strcmp>
 80045ee:	2800      	cmp	r0, #0
 80045f0:	f040 828c 	bne.w	8004b0c <d_template_args+0xb44>
 80045f4:	4620      	mov	r0, r4
 80045f6:	f002 fe41 	bl	800727c <d_unqualified_name>
 80045fa:	68e3      	ldr	r3, [r4, #12]
 80045fc:	781b      	ldrb	r3, [r3, #0]
 80045fe:	2b49      	cmp	r3, #73	; 0x49
 8004600:	4683      	mov	fp, r0
 8004602:	f000 833c 	beq.w	8004c7e <d_template_args+0xcb6>
 8004606:	465b      	mov	r3, fp
 8004608:	9a01      	ldr	r2, [sp, #4]
 800460a:	2137      	movs	r1, #55	; 0x37
 800460c:	4620      	mov	r0, r4
 800460e:	f7fb fddf 	bl	80001d0 <d_make_comp>
 8004612:	464a      	mov	r2, r9
 8004614:	4603      	mov	r3, r0
 8004616:	2136      	movs	r1, #54	; 0x36
 8004618:	4620      	mov	r0, r4
 800461a:	f7fb fdd9 	bl	80001d0 <d_make_comp>
 800461e:	4681      	mov	r9, r0
 8004620:	e682      	b.n	8004328 <d_template_args+0x360>
 8004622:	7853      	ldrb	r3, [r2, #1]
 8004624:	2b70      	cmp	r3, #112	; 0x70
 8004626:	f47f af62 	bne.w	80044ee <d_template_args+0x526>
 800462a:	1c93      	adds	r3, r2, #2
 800462c:	60e3      	str	r3, [r4, #12]
 800462e:	7893      	ldrb	r3, [r2, #2]
 8004630:	2b54      	cmp	r3, #84	; 0x54
 8004632:	f040 81b6 	bne.w	80049a2 <d_template_args+0x9da>
 8004636:	3203      	adds	r2, #3
 8004638:	60e2      	str	r2, [r4, #12]
 800463a:	2000      	movs	r0, #0
 800463c:	6963      	ldr	r3, [r4, #20]
 800463e:	69a2      	ldr	r2, [r4, #24]
 8004640:	4293      	cmp	r3, r2
 8004642:	da15      	bge.n	8004670 <d_template_args+0x6a8>
 8004644:	6922      	ldr	r2, [r4, #16]
 8004646:	1c59      	adds	r1, r3, #1
 8004648:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800464c:	eb12 0983 	adds.w	r9, r2, r3, lsl #2
 8004650:	6161      	str	r1, [r4, #20]
 8004652:	f43f ae69 	beq.w	8004328 <d_template_args+0x360>
 8004656:	2106      	movs	r1, #6
 8004658:	f802 1023 	strb.w	r1, [r2, r3, lsl #2]
 800465c:	f8c9 0004 	str.w	r0, [r9, #4]
 8004660:	e662      	b.n	8004328 <d_template_args+0x360>
 8004662:	2200      	movs	r2, #0
 8004664:	e4f5      	b.n	8004052 <d_template_args+0x8a>
 8004666:	4620      	mov	r0, r4
 8004668:	f001 ffb8 	bl	80065dc <d_expression_1>
 800466c:	4682      	mov	sl, r0
 800466e:	e5ef      	b.n	8004250 <d_template_args+0x288>
 8004670:	f04f 0900 	mov.w	r9, #0
 8004674:	e658      	b.n	8004328 <d_template_args+0x360>
 8004676:	3301      	adds	r3, #1
 8004678:	60e3      	str	r3, [r4, #12]
 800467a:	2300      	movs	r3, #0
 800467c:	e5ac      	b.n	80041d8 <d_template_args+0x210>
 800467e:	7913      	ldrb	r3, [r2, #4]
 8004680:	2b72      	cmp	r3, #114	; 0x72
 8004682:	f000 81ac 	beq.w	80049de <d_template_args+0xa16>
 8004686:	2b70      	cmp	r3, #112	; 0x70
 8004688:	f000 8222 	beq.w	8004ad0 <d_template_args+0xb08>
 800468c:	4620      	mov	r0, r4
 800468e:	f002 fd35 	bl	80070fc <d_operator_name>
 8004692:	4681      	mov	r9, r0
 8004694:	2800      	cmp	r0, #0
 8004696:	f000 811b 	beq.w	80048d0 <d_template_args+0x908>
 800469a:	7803      	ldrb	r3, [r0, #0]
 800469c:	2b31      	cmp	r3, #49	; 0x31
 800469e:	f000 813a 	beq.w	8004916 <d_template_args+0x94e>
 80046a2:	2b32      	cmp	r3, #50	; 0x32
 80046a4:	f040 811a 	bne.w	80048dc <d_template_args+0x914>
 80046a8:	f8d9 3004 	ldr.w	r3, [r9, #4]
 80046ac:	2b03      	cmp	r3, #3
 80046ae:	f200 810f 	bhi.w	80048d0 <d_template_args+0x908>
 80046b2:	e8df f013 	tbh	[pc, r3, lsl #1]
 80046b6:	0004      	.short	0x0004
 80046b8:	004b011a 	.word	0x004b011a
 80046bc:	000b      	.short	0x000b
 80046be:	464a      	mov	r2, r9
 80046c0:	2300      	movs	r3, #0
 80046c2:	2134      	movs	r1, #52	; 0x34
 80046c4:	4620      	mov	r0, r4
 80046c6:	f7fb fd83 	bl	80001d0 <d_make_comp>
 80046ca:	e6c4      	b.n	8004456 <d_template_args+0x48e>
 80046cc:	2500      	movs	r5, #0
 80046ce:	4966      	ldr	r1, [pc, #408]	; (8004868 <d_template_args+0x8a0>)
 80046d0:	4628      	mov	r0, r5
 80046d2:	f003 ff05 	bl	80084e0 <strcmp>
 80046d6:	2800      	cmp	r0, #0
 80046d8:	f000 81c9 	beq.w	8004a6e <d_template_args+0xaa6>
 80046dc:	782b      	ldrb	r3, [r5, #0]
 80046de:	2b6e      	cmp	r3, #110	; 0x6e
 80046e0:	f040 80f6 	bne.w	80048d0 <d_template_args+0x908>
 80046e4:	786b      	ldrb	r3, [r5, #1]
 80046e6:	2b77      	cmp	r3, #119	; 0x77
 80046e8:	d002      	beq.n	80046f0 <d_template_args+0x728>
 80046ea:	2b61      	cmp	r3, #97	; 0x61
 80046ec:	f040 80f0 	bne.w	80048d0 <d_template_args+0x908>
 80046f0:	215f      	movs	r1, #95	; 0x5f
 80046f2:	4620      	mov	r0, r4
 80046f4:	f000 fada 	bl	8004cac <d_exprlist>
 80046f8:	4605      	mov	r5, r0
 80046fa:	4620      	mov	r0, r4
 80046fc:	f002 f940 	bl	8006980 <d_type>
 8004700:	68e3      	ldr	r3, [r4, #12]
 8004702:	781a      	ldrb	r2, [r3, #0]
 8004704:	2a45      	cmp	r2, #69	; 0x45
 8004706:	4682      	mov	sl, r0
 8004708:	f000 82b5 	beq.w	8004c76 <d_template_args+0xcae>
 800470c:	2a70      	cmp	r2, #112	; 0x70
 800470e:	f000 82a7 	beq.w	8004c60 <d_template_args+0xc98>
 8004712:	2a69      	cmp	r2, #105	; 0x69
 8004714:	f040 80dc 	bne.w	80048d0 <d_template_args+0x908>
 8004718:	785b      	ldrb	r3, [r3, #1]
 800471a:	2b6c      	cmp	r3, #108	; 0x6c
 800471c:	f040 80d8 	bne.w	80048d0 <d_template_args+0x908>
 8004720:	4620      	mov	r0, r4
 8004722:	f001 ff5b 	bl	80065dc <d_expression_1>
 8004726:	4603      	mov	r3, r0
 8004728:	4652      	mov	r2, sl
 800472a:	213a      	movs	r1, #58	; 0x3a
 800472c:	4620      	mov	r0, r4
 800472e:	f7fb fd4f 	bl	80001d0 <d_make_comp>
 8004732:	462a      	mov	r2, r5
 8004734:	4603      	mov	r3, r0
 8004736:	2139      	movs	r1, #57	; 0x39
 8004738:	4620      	mov	r0, r4
 800473a:	f7fb fd49 	bl	80001d0 <d_make_comp>
 800473e:	464a      	mov	r2, r9
 8004740:	4603      	mov	r3, r0
 8004742:	2138      	movs	r1, #56	; 0x38
 8004744:	4620      	mov	r0, r4
 8004746:	f7fb fd43 	bl	80001d0 <d_make_comp>
 800474a:	e684      	b.n	8004456 <d_template_args+0x48e>
 800474c:	2500      	movs	r5, #0
 800474e:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8004752:	681b      	ldr	r3, [r3, #0]
 8004754:	785a      	ldrb	r2, [r3, #1]
 8004756:	2a63      	cmp	r2, #99	; 0x63
 8004758:	f000 81a7 	beq.w	8004aaa <d_template_args+0xae2>
 800475c:	4620      	mov	r0, r4
 800475e:	f001 ff3d 	bl	80065dc <d_expression_1>
 8004762:	4682      	mov	sl, r0
 8004764:	4941      	ldr	r1, [pc, #260]	; (800486c <d_template_args+0x8a4>)
 8004766:	4628      	mov	r0, r5
 8004768:	f003 feba 	bl	80084e0 <strcmp>
 800476c:	2800      	cmp	r0, #0
 800476e:	f000 8196 	beq.w	8004a9e <d_template_args+0xad6>
 8004772:	493f      	ldr	r1, [pc, #252]	; (8004870 <d_template_args+0x8a8>)
 8004774:	4628      	mov	r0, r5
 8004776:	f003 feb3 	bl	80084e0 <strcmp>
 800477a:	b130      	cbz	r0, 800478a <d_template_args+0x7c2>
 800477c:	4628      	mov	r0, r5
 800477e:	493d      	ldr	r1, [pc, #244]	; (8004874 <d_template_args+0x8ac>)
 8004780:	f003 feae 	bl	80084e0 <strcmp>
 8004784:	2800      	cmp	r0, #0
 8004786:	f040 8229 	bne.w	8004bdc <d_template_args+0xc14>
 800478a:	4620      	mov	r0, r4
 800478c:	f002 fd76 	bl	800727c <d_unqualified_name>
 8004790:	68e3      	ldr	r3, [r4, #12]
 8004792:	781b      	ldrb	r3, [r3, #0]
 8004794:	2b49      	cmp	r3, #73	; 0x49
 8004796:	4605      	mov	r5, r0
 8004798:	f000 820a 	beq.w	8004bb0 <d_template_args+0xbe8>
 800479c:	462b      	mov	r3, r5
 800479e:	4652      	mov	r2, sl
 80047a0:	2137      	movs	r1, #55	; 0x37
 80047a2:	4620      	mov	r0, r4
 80047a4:	f7fb fd14 	bl	80001d0 <d_make_comp>
 80047a8:	464a      	mov	r2, r9
 80047aa:	4603      	mov	r3, r0
 80047ac:	2136      	movs	r1, #54	; 0x36
 80047ae:	4620      	mov	r0, r4
 80047b0:	f7fb fd0e 	bl	80001d0 <d_make_comp>
 80047b4:	e64f      	b.n	8004456 <d_template_args+0x48e>
 80047b6:	7913      	ldrb	r3, [r2, #4]
 80047b8:	2b70      	cmp	r3, #112	; 0x70
 80047ba:	f47f af67 	bne.w	800468c <d_template_args+0x6c4>
 80047be:	1d53      	adds	r3, r2, #5
 80047c0:	60e3      	str	r3, [r4, #12]
 80047c2:	7953      	ldrb	r3, [r2, #5]
 80047c4:	2b54      	cmp	r3, #84	; 0x54
 80047c6:	d17d      	bne.n	80048c4 <d_template_args+0x8fc>
 80047c8:	3206      	adds	r2, #6
 80047ca:	60e2      	str	r2, [r4, #12]
 80047cc:	2500      	movs	r5, #0
 80047ce:	6963      	ldr	r3, [r4, #20]
 80047d0:	69a2      	ldr	r2, [r4, #24]
 80047d2:	4293      	cmp	r3, r2
 80047d4:	da7c      	bge.n	80048d0 <d_template_args+0x908>
 80047d6:	6921      	ldr	r1, [r4, #16]
 80047d8:	1c5a      	adds	r2, r3, #1
 80047da:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80047de:	6162      	str	r2, [r4, #20]
 80047e0:	eb11 0283 	adds.w	r2, r1, r3, lsl #2
 80047e4:	f000 8236 	beq.w	8004c54 <d_template_args+0xc8c>
 80047e8:	2006      	movs	r0, #6
 80047ea:	f801 0023 	strb.w	r0, [r1, r3, lsl #2]
 80047ee:	4610      	mov	r0, r2
 80047f0:	6055      	str	r5, [r2, #4]
 80047f2:	e630      	b.n	8004456 <d_template_args+0x48e>
 80047f4:	4620      	mov	r0, r4
 80047f6:	f7ff fbe7 	bl	8003fc8 <d_template_args>
 80047fa:	4652      	mov	r2, sl
 80047fc:	4603      	mov	r3, r0
 80047fe:	2104      	movs	r1, #4
 8004800:	4620      	mov	r0, r4
 8004802:	f7fb fce5 	bl	80001d0 <d_make_comp>
 8004806:	4682      	mov	sl, r0
 8004808:	e522      	b.n	8004250 <d_template_args+0x288>
 800480a:	2b33      	cmp	r3, #51	; 0x33
 800480c:	f47f af30 	bne.w	8004670 <d_template_args+0x6a8>
 8004810:	68e3      	ldr	r3, [r4, #12]
 8004812:	781a      	ldrb	r2, [r3, #0]
 8004814:	2a5f      	cmp	r2, #95	; 0x5f
 8004816:	f000 81a1 	beq.w	8004b5c <d_template_args+0xb94>
 800481a:	f04f 0b00 	mov.w	fp, #0
 800481e:	4620      	mov	r0, r4
 8004820:	f001 fedc 	bl	80065dc <d_expression_1>
 8004824:	4603      	mov	r3, r0
 8004826:	f1bb 0f00 	cmp.w	fp, #0
 800482a:	d005      	beq.n	8004838 <d_template_args+0x870>
 800482c:	4602      	mov	r2, r0
 800482e:	2137      	movs	r1, #55	; 0x37
 8004830:	4620      	mov	r0, r4
 8004832:	f7fb fccd 	bl	80001d0 <d_make_comp>
 8004836:	4603      	mov	r3, r0
 8004838:	464a      	mov	r2, r9
 800483a:	2135      	movs	r1, #53	; 0x35
 800483c:	4620      	mov	r0, r4
 800483e:	f7fb fcc7 	bl	80001d0 <d_make_comp>
 8004842:	4681      	mov	r9, r0
 8004844:	e570      	b.n	8004328 <d_template_args+0x360>
 8004846:	785a      	ldrb	r2, [r3, #1]
 8004848:	2a69      	cmp	r2, #105	; 0x69
 800484a:	f47f af0a 	bne.w	8004662 <d_template_args+0x69a>
 800484e:	3302      	adds	r3, #2
 8004850:	60e3      	str	r3, [r4, #12]
 8004852:	2145      	movs	r1, #69	; 0x45
 8004854:	4620      	mov	r0, r4
 8004856:	f000 fa29 	bl	8004cac <d_exprlist>
 800485a:	4603      	mov	r3, r0
 800485c:	e4bc      	b.n	80041d8 <d_template_args+0x210>
 800485e:	4620      	mov	r0, r4
 8004860:	f7fb fe5a 	bl	8000518 <d_template_param>
 8004864:	4681      	mov	r9, r0
 8004866:	e55f      	b.n	8004328 <d_template_args+0x360>
 8004868:	08011284 	.word	0x08011284
 800486c:	0801127c 	.word	0x0801127c
 8004870:	08011398 	.word	0x08011398
 8004874:	0801139c 	.word	0x0801139c
 8004878:	4620      	mov	r0, r4
 800487a:	f003 fb6b 	bl	8007f54 <d_expr_primary>
 800487e:	4681      	mov	r9, r0
 8004880:	e552      	b.n	8004328 <d_template_args+0x360>
 8004882:	6843      	ldr	r3, [r0, #4]
 8004884:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8004886:	689a      	ldr	r2, [r3, #8]
 8004888:	f8d3 b000 	ldr.w	fp, [r3]
 800488c:	49ce      	ldr	r1, [pc, #824]	; (8004bc8 <d_template_args+0xc00>)
 800488e:	9301      	str	r3, [sp, #4]
 8004890:	3a02      	subs	r2, #2
 8004892:	4402      	add	r2, r0
 8004894:	6322      	str	r2, [r4, #48]	; 0x30
 8004896:	4658      	mov	r0, fp
 8004898:	f003 fe22 	bl	80084e0 <strcmp>
 800489c:	9b01      	ldr	r3, [sp, #4]
 800489e:	2800      	cmp	r0, #0
 80048a0:	f000 8111 	beq.w	8004ac6 <d_template_args+0xafe>
 80048a4:	68db      	ldr	r3, [r3, #12]
 80048a6:	2b03      	cmp	r3, #3
 80048a8:	f63f aee2 	bhi.w	8004670 <d_template_args+0x6a8>
 80048ac:	a201      	add	r2, pc, #4	; (adr r2, 80048b4 <d_template_args+0x8ec>)
 80048ae:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80048b2:	bf00      	nop
 80048b4:	08004521 	.word	0x08004521
 80048b8:	08004973 	.word	0x08004973
 80048bc:	080045b9 	.word	0x080045b9
 80048c0:	08004535 	.word	0x08004535
 80048c4:	4620      	mov	r0, r4
 80048c6:	f7fb fe0f 	bl	80004e8 <d_compact_number>
 80048ca:	1c45      	adds	r5, r0, #1
 80048cc:	f47f af7f 	bne.w	80047ce <d_template_args+0x806>
 80048d0:	2000      	movs	r0, #0
 80048d2:	e5c0      	b.n	8004456 <d_template_args+0x48e>
 80048d4:	4620      	mov	r0, r4
 80048d6:	f003 fb3d 	bl	8007f54 <d_expr_primary>
 80048da:	e5bc      	b.n	8004456 <d_template_args+0x48e>
 80048dc:	2b33      	cmp	r3, #51	; 0x33
 80048de:	d1f7      	bne.n	80048d0 <d_template_args+0x908>
 80048e0:	68e3      	ldr	r3, [r4, #12]
 80048e2:	781a      	ldrb	r2, [r3, #0]
 80048e4:	2a5f      	cmp	r2, #95	; 0x5f
 80048e6:	f000 8171 	beq.w	8004bcc <d_template_args+0xc04>
 80048ea:	2500      	movs	r5, #0
 80048ec:	4620      	mov	r0, r4
 80048ee:	f001 fe75 	bl	80065dc <d_expression_1>
 80048f2:	4603      	mov	r3, r0
 80048f4:	b12d      	cbz	r5, 8004902 <d_template_args+0x93a>
 80048f6:	4602      	mov	r2, r0
 80048f8:	2137      	movs	r1, #55	; 0x37
 80048fa:	4620      	mov	r0, r4
 80048fc:	f7fb fc68 	bl	80001d0 <d_make_comp>
 8004900:	4603      	mov	r3, r0
 8004902:	464a      	mov	r2, r9
 8004904:	2135      	movs	r1, #53	; 0x35
 8004906:	4620      	mov	r0, r4
 8004908:	f7fb fc62 	bl	80001d0 <d_make_comp>
 800490c:	e5a3      	b.n	8004456 <d_template_args+0x48e>
 800490e:	4620      	mov	r0, r4
 8004910:	f7fb fe02 	bl	8000518 <d_template_param>
 8004914:	e59f      	b.n	8004456 <d_template_args+0x48e>
 8004916:	f8d0 a004 	ldr.w	sl, [r0, #4]
 800491a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800491c:	f8da 3008 	ldr.w	r3, [sl, #8]
 8004920:	f8da 5000 	ldr.w	r5, [sl]
 8004924:	49a8      	ldr	r1, [pc, #672]	; (8004bc8 <d_template_args+0xc00>)
 8004926:	3b02      	subs	r3, #2
 8004928:	4413      	add	r3, r2
 800492a:	6323      	str	r3, [r4, #48]	; 0x30
 800492c:	4628      	mov	r0, r5
 800492e:	f003 fdd7 	bl	80084e0 <strcmp>
 8004932:	2800      	cmp	r0, #0
 8004934:	f000 80d8 	beq.w	8004ae8 <d_template_args+0xb20>
 8004938:	f8da 300c 	ldr.w	r3, [sl, #12]
 800493c:	2b03      	cmp	r3, #3
 800493e:	d8c7      	bhi.n	80048d0 <d_template_args+0x908>
 8004940:	a201      	add	r2, pc, #4	; (adr r2, 8004948 <d_template_args+0x980>)
 8004942:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004946:	bf00      	nop
 8004948:	080046bf 	.word	0x080046bf
 800494c:	08004a0b 	.word	0x08004a0b
 8004950:	0800474f 	.word	0x0800474f
 8004954:	080046cf 	.word	0x080046cf
 8004958:	3201      	adds	r2, #1
 800495a:	60e2      	str	r2, [r4, #12]
 800495c:	e519      	b.n	8004392 <d_template_args+0x3ca>
 800495e:	4620      	mov	r0, r4
 8004960:	f7ff fb32 	bl	8003fc8 <d_template_args>
 8004964:	462a      	mov	r2, r5
 8004966:	4603      	mov	r3, r0
 8004968:	2104      	movs	r1, #4
 800496a:	4620      	mov	r0, r4
 800496c:	f7fb fc30 	bl	80001d0 <d_make_comp>
 8004970:	e571      	b.n	8004456 <d_template_args+0x48e>
 8004972:	f1bb 0f00 	cmp.w	fp, #0
 8004976:	f43f af50 	beq.w	800481a <d_template_args+0x852>
 800497a:	f89b 3000 	ldrb.w	r3, [fp]
 800497e:	2b70      	cmp	r3, #112	; 0x70
 8004980:	d002      	beq.n	8004988 <d_template_args+0x9c0>
 8004982:	2b6d      	cmp	r3, #109	; 0x6d
 8004984:	f47f af49 	bne.w	800481a <d_template_args+0x852>
 8004988:	f89b 2001 	ldrb.w	r2, [fp, #1]
 800498c:	429a      	cmp	r2, r3
 800498e:	f47f af44 	bne.w	800481a <d_template_args+0x852>
 8004992:	68e3      	ldr	r3, [r4, #12]
 8004994:	781a      	ldrb	r2, [r3, #0]
 8004996:	2a5f      	cmp	r2, #95	; 0x5f
 8004998:	f000 8107 	beq.w	8004baa <d_template_args+0xbe2>
 800499c:	f04f 0b01 	mov.w	fp, #1
 80049a0:	e73d      	b.n	800481e <d_template_args+0x856>
 80049a2:	4620      	mov	r0, r4
 80049a4:	f7fb fda0 	bl	80004e8 <d_compact_number>
 80049a8:	3001      	adds	r0, #1
 80049aa:	f47f ae47 	bne.w	800463c <d_template_args+0x674>
 80049ae:	4681      	mov	r9, r0
 80049b0:	e4ba      	b.n	8004328 <d_template_args+0x360>
 80049b2:	3202      	adds	r2, #2
 80049b4:	60e2      	str	r2, [r4, #12]
 80049b6:	4620      	mov	r0, r4
 80049b8:	f001 ffe2 	bl	8006980 <d_type>
 80049bc:	4681      	mov	r9, r0
 80049be:	4620      	mov	r0, r4
 80049c0:	f002 fc5c 	bl	800727c <d_unqualified_name>
 80049c4:	68e3      	ldr	r3, [r4, #12]
 80049c6:	781b      	ldrb	r3, [r3, #0]
 80049c8:	2b49      	cmp	r3, #73	; 0x49
 80049ca:	4683      	mov	fp, r0
 80049cc:	d03e      	beq.n	8004a4c <d_template_args+0xa84>
 80049ce:	4603      	mov	r3, r0
 80049d0:	464a      	mov	r2, r9
 80049d2:	2101      	movs	r1, #1
 80049d4:	4620      	mov	r0, r4
 80049d6:	f7fb fbfb 	bl	80001d0 <d_make_comp>
 80049da:	4681      	mov	r9, r0
 80049dc:	e4a4      	b.n	8004328 <d_template_args+0x360>
 80049de:	3205      	adds	r2, #5
 80049e0:	60e2      	str	r2, [r4, #12]
 80049e2:	4620      	mov	r0, r4
 80049e4:	f001 ffcc 	bl	8006980 <d_type>
 80049e8:	4605      	mov	r5, r0
 80049ea:	4620      	mov	r0, r4
 80049ec:	f002 fc46 	bl	800727c <d_unqualified_name>
 80049f0:	68e3      	ldr	r3, [r4, #12]
 80049f2:	781b      	ldrb	r3, [r3, #0]
 80049f4:	2b49      	cmp	r3, #73	; 0x49
 80049f6:	4681      	mov	r9, r0
 80049f8:	f000 80b8 	beq.w	8004b6c <d_template_args+0xba4>
 80049fc:	4603      	mov	r3, r0
 80049fe:	462a      	mov	r2, r5
 8004a00:	2101      	movs	r1, #1
 8004a02:	4620      	mov	r0, r4
 8004a04:	f7fb fbe4 	bl	80001d0 <d_make_comp>
 8004a08:	e525      	b.n	8004456 <d_template_args+0x48e>
 8004a0a:	2d00      	cmp	r5, #0
 8004a0c:	f43f af6d 	beq.w	80048ea <d_template_args+0x922>
 8004a10:	782b      	ldrb	r3, [r5, #0]
 8004a12:	2b70      	cmp	r3, #112	; 0x70
 8004a14:	d002      	beq.n	8004a1c <d_template_args+0xa54>
 8004a16:	2b6d      	cmp	r3, #109	; 0x6d
 8004a18:	f47f af67 	bne.w	80048ea <d_template_args+0x922>
 8004a1c:	786a      	ldrb	r2, [r5, #1]
 8004a1e:	429a      	cmp	r2, r3
 8004a20:	f47f af63 	bne.w	80048ea <d_template_args+0x922>
 8004a24:	68e3      	ldr	r3, [r4, #12]
 8004a26:	781a      	ldrb	r2, [r3, #0]
 8004a28:	2a5f      	cmp	r2, #95	; 0x5f
 8004a2a:	f000 8116 	beq.w	8004c5a <d_template_args+0xc92>
 8004a2e:	2501      	movs	r5, #1
 8004a30:	e75c      	b.n	80048ec <d_template_args+0x924>
 8004a32:	3202      	adds	r2, #2
 8004a34:	60e2      	str	r2, [r4, #12]
 8004a36:	4620      	mov	r0, r4
 8004a38:	f001 fdd0 	bl	80065dc <d_expression_1>
 8004a3c:	2300      	movs	r3, #0
 8004a3e:	4602      	mov	r2, r0
 8004a40:	2149      	movs	r1, #73	; 0x49
 8004a42:	4620      	mov	r0, r4
 8004a44:	f7fb fbc4 	bl	80001d0 <d_make_comp>
 8004a48:	4681      	mov	r9, r0
 8004a4a:	e46d      	b.n	8004328 <d_template_args+0x360>
 8004a4c:	4620      	mov	r0, r4
 8004a4e:	f7ff fabb 	bl	8003fc8 <d_template_args>
 8004a52:	465a      	mov	r2, fp
 8004a54:	4603      	mov	r3, r0
 8004a56:	2104      	movs	r1, #4
 8004a58:	4620      	mov	r0, r4
 8004a5a:	f7fb fbb9 	bl	80001d0 <d_make_comp>
 8004a5e:	4603      	mov	r3, r0
 8004a60:	e7b6      	b.n	80049d0 <d_template_args+0xa08>
 8004a62:	2145      	movs	r1, #69	; 0x45
 8004a64:	4620      	mov	r0, r4
 8004a66:	f000 f921 	bl	8004cac <d_exprlist>
 8004a6a:	4683      	mov	fp, r0
 8004a6c:	e5cb      	b.n	8004606 <d_template_args+0x63e>
 8004a6e:	4620      	mov	r0, r4
 8004a70:	f001 fdb4 	bl	80065dc <d_expression_1>
 8004a74:	4605      	mov	r5, r0
 8004a76:	4620      	mov	r0, r4
 8004a78:	f001 fdb0 	bl	80065dc <d_expression_1>
 8004a7c:	4682      	mov	sl, r0
 8004a7e:	4620      	mov	r0, r4
 8004a80:	f001 fdac 	bl	80065dc <d_expression_1>
 8004a84:	e64f      	b.n	8004726 <d_template_args+0x75e>
 8004a86:	4620      	mov	r0, r4
 8004a88:	f001 fda8 	bl	80065dc <d_expression_1>
 8004a8c:	9001      	str	r0, [sp, #4]
 8004a8e:	4620      	mov	r0, r4
 8004a90:	f001 fda4 	bl	80065dc <d_expression_1>
 8004a94:	4683      	mov	fp, r0
 8004a96:	4620      	mov	r0, r4
 8004a98:	f001 fda0 	bl	80065dc <d_expression_1>
 8004a9c:	e576      	b.n	800458c <d_template_args+0x5c4>
 8004a9e:	2145      	movs	r1, #69	; 0x45
 8004aa0:	4620      	mov	r0, r4
 8004aa2:	f000 f903 	bl	8004cac <d_exprlist>
 8004aa6:	4605      	mov	r5, r0
 8004aa8:	e678      	b.n	800479c <d_template_args+0x7d4>
 8004aaa:	781b      	ldrb	r3, [r3, #0]
 8004aac:	f1a3 0263 	sub.w	r2, r3, #99	; 0x63
 8004ab0:	2a01      	cmp	r2, #1
 8004ab2:	d903      	bls.n	8004abc <d_template_args+0xaf4>
 8004ab4:	3b72      	subs	r3, #114	; 0x72
 8004ab6:	2b01      	cmp	r3, #1
 8004ab8:	f63f ae50 	bhi.w	800475c <d_template_args+0x794>
 8004abc:	4620      	mov	r0, r4
 8004abe:	f001 ff5f 	bl	8006980 <d_type>
 8004ac2:	4682      	mov	sl, r0
 8004ac4:	e64e      	b.n	8004764 <d_template_args+0x79c>
 8004ac6:	4620      	mov	r0, r4
 8004ac8:	f001 ff5a 	bl	8006980 <d_type>
 8004acc:	4603      	mov	r3, r0
 8004ace:	e6b3      	b.n	8004838 <d_template_args+0x870>
 8004ad0:	3205      	adds	r2, #5
 8004ad2:	60e2      	str	r2, [r4, #12]
 8004ad4:	4620      	mov	r0, r4
 8004ad6:	f001 fd81 	bl	80065dc <d_expression_1>
 8004ada:	2300      	movs	r3, #0
 8004adc:	4602      	mov	r2, r0
 8004ade:	2149      	movs	r1, #73	; 0x49
 8004ae0:	4620      	mov	r0, r4
 8004ae2:	f7fb fb75 	bl	80001d0 <d_make_comp>
 8004ae6:	e4b6      	b.n	8004456 <d_template_args+0x48e>
 8004ae8:	4620      	mov	r0, r4
 8004aea:	f001 ff49 	bl	8006980 <d_type>
 8004aee:	e707      	b.n	8004900 <d_template_args+0x938>
 8004af0:	781b      	ldrb	r3, [r3, #0]
 8004af2:	f1a3 0263 	sub.w	r2, r3, #99	; 0x63
 8004af6:	2a01      	cmp	r2, #1
 8004af8:	d903      	bls.n	8004b02 <d_template_args+0xb3a>
 8004afa:	3b72      	subs	r3, #114	; 0x72
 8004afc:	2b01      	cmp	r3, #1
 8004afe:	f63f ad62 	bhi.w	80045c6 <d_template_args+0x5fe>
 8004b02:	4620      	mov	r0, r4
 8004b04:	f001 ff3c 	bl	8006980 <d_type>
 8004b08:	9001      	str	r0, [sp, #4]
 8004b0a:	e560      	b.n	80045ce <d_template_args+0x606>
 8004b0c:	4620      	mov	r0, r4
 8004b0e:	f001 fd65 	bl	80065dc <d_expression_1>
 8004b12:	4683      	mov	fp, r0
 8004b14:	e577      	b.n	8004606 <d_template_args+0x63e>
 8004b16:	2b6f      	cmp	r3, #111	; 0x6f
 8004b18:	d018      	beq.n	8004b4c <d_template_args+0xb84>
 8004b1a:	2b69      	cmp	r3, #105	; 0x69
 8004b1c:	f040 80ba 	bne.w	8004c94 <d_template_args+0xccc>
 8004b20:	7853      	ldrb	r3, [r2, #1]
 8004b22:	2b6c      	cmp	r3, #108	; 0x6c
 8004b24:	f47f ace3 	bne.w	80044ee <d_template_args+0x526>
 8004b28:	f04f 0900 	mov.w	r9, #0
 8004b2c:	68e3      	ldr	r3, [r4, #12]
 8004b2e:	3302      	adds	r3, #2
 8004b30:	60e3      	str	r3, [r4, #12]
 8004b32:	2145      	movs	r1, #69	; 0x45
 8004b34:	4620      	mov	r0, r4
 8004b36:	f000 f8b9 	bl	8004cac <d_exprlist>
 8004b3a:	464a      	mov	r2, r9
 8004b3c:	4603      	mov	r3, r0
 8004b3e:	2130      	movs	r1, #48	; 0x30
 8004b40:	4620      	mov	r0, r4
 8004b42:	f7fb fb45 	bl	80001d0 <d_make_comp>
 8004b46:	4681      	mov	r9, r0
 8004b48:	f7ff bbee 	b.w	8004328 <d_template_args+0x360>
 8004b4c:	7853      	ldrb	r3, [r2, #1]
 8004b4e:	2b6e      	cmp	r3, #110	; 0x6e
 8004b50:	f47f accd 	bne.w	80044ee <d_template_args+0x526>
 8004b54:	3202      	adds	r2, #2
 8004b56:	60e2      	str	r2, [r4, #12]
 8004b58:	f7ff bbdd 	b.w	8004316 <d_template_args+0x34e>
 8004b5c:	3301      	adds	r3, #1
 8004b5e:	60e3      	str	r3, [r4, #12]
 8004b60:	2145      	movs	r1, #69	; 0x45
 8004b62:	4620      	mov	r0, r4
 8004b64:	f000 f8a2 	bl	8004cac <d_exprlist>
 8004b68:	4603      	mov	r3, r0
 8004b6a:	e665      	b.n	8004838 <d_template_args+0x870>
 8004b6c:	4620      	mov	r0, r4
 8004b6e:	f7ff fa2b 	bl	8003fc8 <d_template_args>
 8004b72:	464a      	mov	r2, r9
 8004b74:	4603      	mov	r3, r0
 8004b76:	2104      	movs	r1, #4
 8004b78:	4620      	mov	r0, r4
 8004b7a:	f7fb fb29 	bl	80001d0 <d_make_comp>
 8004b7e:	462a      	mov	r2, r5
 8004b80:	4603      	mov	r3, r0
 8004b82:	2101      	movs	r1, #1
 8004b84:	4620      	mov	r0, r4
 8004b86:	f7fb fb23 	bl	80001d0 <d_make_comp>
 8004b8a:	e464      	b.n	8004456 <d_template_args+0x48e>
 8004b8c:	785a      	ldrb	r2, [r3, #1]
 8004b8e:	2a69      	cmp	r2, #105	; 0x69
 8004b90:	f47f ad6e 	bne.w	8004670 <d_template_args+0x6a8>
 8004b94:	3302      	adds	r3, #2
 8004b96:	60e3      	str	r3, [r4, #12]
 8004b98:	2145      	movs	r1, #69	; 0x45
 8004b9a:	4620      	mov	r0, r4
 8004b9c:	f000 f886 	bl	8004cac <d_exprlist>
 8004ba0:	e4f4      	b.n	800458c <d_template_args+0x5c4>
 8004ba2:	3301      	adds	r3, #1
 8004ba4:	60e3      	str	r3, [r4, #12]
 8004ba6:	2000      	movs	r0, #0
 8004ba8:	e4f0      	b.n	800458c <d_template_args+0x5c4>
 8004baa:	3301      	adds	r3, #1
 8004bac:	60e3      	str	r3, [r4, #12]
 8004bae:	e634      	b.n	800481a <d_template_args+0x852>
 8004bb0:	4620      	mov	r0, r4
 8004bb2:	f7ff fa09 	bl	8003fc8 <d_template_args>
 8004bb6:	462a      	mov	r2, r5
 8004bb8:	4603      	mov	r3, r0
 8004bba:	2104      	movs	r1, #4
 8004bbc:	4620      	mov	r0, r4
 8004bbe:	f7fb fb07 	bl	80001d0 <d_make_comp>
 8004bc2:	4605      	mov	r5, r0
 8004bc4:	e5ea      	b.n	800479c <d_template_args+0x7d4>
 8004bc6:	bf00      	nop
 8004bc8:	0801158c 	.word	0x0801158c
 8004bcc:	3301      	adds	r3, #1
 8004bce:	60e3      	str	r3, [r4, #12]
 8004bd0:	2145      	movs	r1, #69	; 0x45
 8004bd2:	4620      	mov	r0, r4
 8004bd4:	f000 f86a 	bl	8004cac <d_exprlist>
 8004bd8:	4603      	mov	r3, r0
 8004bda:	e692      	b.n	8004902 <d_template_args+0x93a>
 8004bdc:	4620      	mov	r0, r4
 8004bde:	f001 fcfd 	bl	80065dc <d_expression_1>
 8004be2:	4605      	mov	r5, r0
 8004be4:	e5da      	b.n	800479c <d_template_args+0x7d4>
 8004be6:	2b74      	cmp	r3, #116	; 0x74
 8004be8:	f47f aa6b 	bne.w	80040c2 <d_template_args+0xfa>
 8004bec:	7893      	ldrb	r3, [r2, #2]
 8004bee:	2b6c      	cmp	r3, #108	; 0x6c
 8004bf0:	f47f aa67 	bne.w	80040c2 <d_template_args+0xfa>
 8004bf4:	4620      	mov	r0, r4
 8004bf6:	f001 fec3 	bl	8006980 <d_type>
 8004bfa:	4605      	mov	r5, r0
 8004bfc:	f7ff bbd7 	b.w	80043ae <d_template_args+0x3e6>
 8004c00:	2b6f      	cmp	r3, #111	; 0x6f
 8004c02:	d014      	beq.n	8004c2e <d_template_args+0xc66>
 8004c04:	2b69      	cmp	r3, #105	; 0x69
 8004c06:	d119      	bne.n	8004c3c <d_template_args+0xc74>
 8004c08:	7913      	ldrb	r3, [r2, #4]
 8004c0a:	2b6c      	cmp	r3, #108	; 0x6c
 8004c0c:	f47f ad3e 	bne.w	800468c <d_template_args+0x6c4>
 8004c10:	2500      	movs	r5, #0
 8004c12:	68e3      	ldr	r3, [r4, #12]
 8004c14:	3302      	adds	r3, #2
 8004c16:	60e3      	str	r3, [r4, #12]
 8004c18:	2145      	movs	r1, #69	; 0x45
 8004c1a:	4620      	mov	r0, r4
 8004c1c:	f000 f846 	bl	8004cac <d_exprlist>
 8004c20:	462a      	mov	r2, r5
 8004c22:	4603      	mov	r3, r0
 8004c24:	2130      	movs	r1, #48	; 0x30
 8004c26:	4620      	mov	r0, r4
 8004c28:	f7fb fad2 	bl	80001d0 <d_make_comp>
 8004c2c:	e413      	b.n	8004456 <d_template_args+0x48e>
 8004c2e:	7913      	ldrb	r3, [r2, #4]
 8004c30:	2b6e      	cmp	r3, #110	; 0x6e
 8004c32:	f47f ad2b 	bne.w	800468c <d_template_args+0x6c4>
 8004c36:	3205      	adds	r2, #5
 8004c38:	60e2      	str	r2, [r4, #12]
 8004c3a:	e400      	b.n	800443e <d_template_args+0x476>
 8004c3c:	2b74      	cmp	r3, #116	; 0x74
 8004c3e:	f47f ad25 	bne.w	800468c <d_template_args+0x6c4>
 8004c42:	7913      	ldrb	r3, [r2, #4]
 8004c44:	2b6c      	cmp	r3, #108	; 0x6c
 8004c46:	f47f ad21 	bne.w	800468c <d_template_args+0x6c4>
 8004c4a:	4620      	mov	r0, r4
 8004c4c:	f001 fe98 	bl	8006980 <d_type>
 8004c50:	4605      	mov	r5, r0
 8004c52:	e7de      	b.n	8004c12 <d_template_args+0xc4a>
 8004c54:	4610      	mov	r0, r2
 8004c56:	f7ff bbfe 	b.w	8004456 <d_template_args+0x48e>
 8004c5a:	3301      	adds	r3, #1
 8004c5c:	60e3      	str	r3, [r4, #12]
 8004c5e:	e644      	b.n	80048ea <d_template_args+0x922>
 8004c60:	785a      	ldrb	r2, [r3, #1]
 8004c62:	2a69      	cmp	r2, #105	; 0x69
 8004c64:	f47f ae34 	bne.w	80048d0 <d_template_args+0x908>
 8004c68:	3302      	adds	r3, #2
 8004c6a:	60e3      	str	r3, [r4, #12]
 8004c6c:	2145      	movs	r1, #69	; 0x45
 8004c6e:	4620      	mov	r0, r4
 8004c70:	f000 f81c 	bl	8004cac <d_exprlist>
 8004c74:	e557      	b.n	8004726 <d_template_args+0x75e>
 8004c76:	3301      	adds	r3, #1
 8004c78:	60e3      	str	r3, [r4, #12]
 8004c7a:	2000      	movs	r0, #0
 8004c7c:	e553      	b.n	8004726 <d_template_args+0x75e>
 8004c7e:	4620      	mov	r0, r4
 8004c80:	f7ff f9a2 	bl	8003fc8 <d_template_args>
 8004c84:	465a      	mov	r2, fp
 8004c86:	4603      	mov	r3, r0
 8004c88:	2104      	movs	r1, #4
 8004c8a:	4620      	mov	r0, r4
 8004c8c:	f7fb faa0 	bl	80001d0 <d_make_comp>
 8004c90:	4683      	mov	fp, r0
 8004c92:	e4b8      	b.n	8004606 <d_template_args+0x63e>
 8004c94:	2b74      	cmp	r3, #116	; 0x74
 8004c96:	f47f ac2a 	bne.w	80044ee <d_template_args+0x526>
 8004c9a:	7853      	ldrb	r3, [r2, #1]
 8004c9c:	2b6c      	cmp	r3, #108	; 0x6c
 8004c9e:	f47f ac26 	bne.w	80044ee <d_template_args+0x526>
 8004ca2:	4620      	mov	r0, r4
 8004ca4:	f001 fe6c 	bl	8006980 <d_type>
 8004ca8:	4681      	mov	r9, r0
 8004caa:	e73f      	b.n	8004b2c <d_template_args+0xb64>

08004cac <d_exprlist>:
 8004cac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004cb0:	68c2      	ldr	r2, [r0, #12]
 8004cb2:	7815      	ldrb	r5, [r2, #0]
 8004cb4:	b085      	sub	sp, #20
 8004cb6:	2300      	movs	r3, #0
 8004cb8:	428d      	cmp	r5, r1
 8004cba:	4604      	mov	r4, r0
 8004cbc:	9303      	str	r3, [sp, #12]
 8004cbe:	f000 8261 	beq.w	8005184 <d_exprlist+0x4d8>
 8004cc2:	460f      	mov	r7, r1
 8004cc4:	ae03      	add	r6, sp, #12
 8004cc6:	e022      	b.n	8004d0e <d_exprlist+0x62>
 8004cc8:	2b66      	cmp	r3, #102	; 0x66
 8004cca:	d04b      	beq.n	8004d64 <d_exprlist+0xb8>
 8004ccc:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8004cd0:	2909      	cmp	r1, #9
 8004cd2:	f201 844e 	bhi.w	8006572 <d_exprlist+0x18c6>
 8004cd6:	4620      	mov	r0, r4
 8004cd8:	f002 fad0 	bl	800727c <d_unqualified_name>
 8004cdc:	4680      	mov	r8, r0
 8004cde:	2800      	cmp	r0, #0
 8004ce0:	d064      	beq.n	8004dac <d_exprlist+0x100>
 8004ce2:	68e3      	ldr	r3, [r4, #12]
 8004ce4:	781b      	ldrb	r3, [r3, #0]
 8004ce6:	2b49      	cmp	r3, #73	; 0x49
 8004ce8:	f000 808b 	beq.w	8004e02 <d_exprlist+0x156>
 8004cec:	4602      	mov	r2, r0
 8004cee:	6365      	str	r5, [r4, #52]	; 0x34
 8004cf0:	2300      	movs	r3, #0
 8004cf2:	212e      	movs	r1, #46	; 0x2e
 8004cf4:	4620      	mov	r0, r4
 8004cf6:	f7fb fa6b 	bl	80001d0 <d_make_comp>
 8004cfa:	6030      	str	r0, [r6, #0]
 8004cfc:	2800      	cmp	r0, #0
 8004cfe:	d056      	beq.n	8004dae <d_exprlist+0x102>
 8004d00:	68e2      	ldr	r2, [r4, #12]
 8004d02:	7813      	ldrb	r3, [r2, #0]
 8004d04:	42bb      	cmp	r3, r7
 8004d06:	f100 0608 	add.w	r6, r0, #8
 8004d0a:	f000 8179 	beq.w	8005000 <d_exprlist+0x354>
 8004d0e:	f04f 0801 	mov.w	r8, #1
 8004d12:	6b65      	ldr	r5, [r4, #52]	; 0x34
 8004d14:	f8c4 8034 	str.w	r8, [r4, #52]	; 0x34
 8004d18:	7813      	ldrb	r3, [r2, #0]
 8004d1a:	2b4c      	cmp	r3, #76	; 0x4c
 8004d1c:	d04b      	beq.n	8004db6 <d_exprlist+0x10a>
 8004d1e:	2b54      	cmp	r3, #84	; 0x54
 8004d20:	d051      	beq.n	8004dc6 <d_exprlist+0x11a>
 8004d22:	2b73      	cmp	r3, #115	; 0x73
 8004d24:	d1d0      	bne.n	8004cc8 <d_exprlist+0x1c>
 8004d26:	7853      	ldrb	r3, [r2, #1]
 8004d28:	2b72      	cmp	r3, #114	; 0x72
 8004d2a:	f000 8152 	beq.w	8004fd2 <d_exprlist+0x326>
 8004d2e:	2b70      	cmp	r3, #112	; 0x70
 8004d30:	f000 816c 	beq.w	800500c <d_exprlist+0x360>
 8004d34:	4620      	mov	r0, r4
 8004d36:	f002 f9e1 	bl	80070fc <d_operator_name>
 8004d3a:	4680      	mov	r8, r0
 8004d3c:	2800      	cmp	r0, #0
 8004d3e:	d035      	beq.n	8004dac <d_exprlist+0x100>
 8004d40:	f890 a000 	ldrb.w	sl, [r0]
 8004d44:	f1ba 0f31 	cmp.w	sl, #49	; 0x31
 8004d48:	d042      	beq.n	8004dd0 <d_exprlist+0x124>
 8004d4a:	f1ba 0f32 	cmp.w	sl, #50	; 0x32
 8004d4e:	d129      	bne.n	8004da4 <d_exprlist+0xf8>
 8004d50:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8004d54:	2b03      	cmp	r3, #3
 8004d56:	d829      	bhi.n	8004dac <d_exprlist+0x100>
 8004d58:	e8df f013 	tbh	[pc, r3, lsl #1]
 8004d5c:	01080062 	.word	0x01080062
 8004d60:	006a00ac 	.word	0x006a00ac
 8004d64:	7853      	ldrb	r3, [r2, #1]
 8004d66:	2b70      	cmp	r3, #112	; 0x70
 8004d68:	d1e4      	bne.n	8004d34 <d_exprlist+0x88>
 8004d6a:	1c93      	adds	r3, r2, #2
 8004d6c:	60e3      	str	r3, [r4, #12]
 8004d6e:	7893      	ldrb	r3, [r2, #2]
 8004d70:	2b54      	cmp	r3, #84	; 0x54
 8004d72:	d051      	beq.n	8004e18 <d_exprlist+0x16c>
 8004d74:	4620      	mov	r0, r4
 8004d76:	f7fb fbb7 	bl	80004e8 <d_compact_number>
 8004d7a:	3001      	adds	r0, #1
 8004d7c:	d016      	beq.n	8004dac <d_exprlist+0x100>
 8004d7e:	6963      	ldr	r3, [r4, #20]
 8004d80:	69a2      	ldr	r2, [r4, #24]
 8004d82:	4293      	cmp	r3, r2
 8004d84:	da12      	bge.n	8004dac <d_exprlist+0x100>
 8004d86:	6922      	ldr	r2, [r4, #16]
 8004d88:	1c59      	adds	r1, r3, #1
 8004d8a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8004d8e:	6161      	str	r1, [r4, #20]
 8004d90:	eb12 0183 	adds.w	r1, r2, r3, lsl #2
 8004d94:	d00a      	beq.n	8004dac <d_exprlist+0x100>
 8004d96:	f04f 0e06 	mov.w	lr, #6
 8004d9a:	f802 e023 	strb.w	lr, [r2, r3, lsl #2]
 8004d9e:	460a      	mov	r2, r1
 8004da0:	6048      	str	r0, [r1, #4]
 8004da2:	e7a4      	b.n	8004cee <d_exprlist+0x42>
 8004da4:	f1ba 0f33 	cmp.w	sl, #51	; 0x33
 8004da8:	f000 8158 	beq.w	800505c <d_exprlist+0x3b0>
 8004dac:	6365      	str	r5, [r4, #52]	; 0x34
 8004dae:	2000      	movs	r0, #0
 8004db0:	b005      	add	sp, #20
 8004db2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004db6:	4620      	mov	r0, r4
 8004db8:	f003 f8cc 	bl	8007f54 <d_expr_primary>
 8004dbc:	4602      	mov	r2, r0
 8004dbe:	6365      	str	r5, [r4, #52]	; 0x34
 8004dc0:	2a00      	cmp	r2, #0
 8004dc2:	d195      	bne.n	8004cf0 <d_exprlist+0x44>
 8004dc4:	e7f3      	b.n	8004dae <d_exprlist+0x102>
 8004dc6:	4620      	mov	r0, r4
 8004dc8:	f7fb fba6 	bl	8000518 <d_template_param>
 8004dcc:	4602      	mov	r2, r0
 8004dce:	e7f6      	b.n	8004dbe <d_exprlist+0x112>
 8004dd0:	f8d0 b004 	ldr.w	fp, [r0, #4]
 8004dd4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8004dd6:	f8db 3008 	ldr.w	r3, [fp, #8]
 8004dda:	f8db 9000 	ldr.w	r9, [fp]
 8004dde:	49b0      	ldr	r1, [pc, #704]	; (80050a0 <d_exprlist+0x3f4>)
 8004de0:	3b02      	subs	r3, #2
 8004de2:	441a      	add	r2, r3
 8004de4:	6322      	str	r2, [r4, #48]	; 0x30
 8004de6:	4648      	mov	r0, r9
 8004de8:	f003 fb7a 	bl	80084e0 <strcmp>
 8004dec:	2800      	cmp	r0, #0
 8004dee:	f000 8152 	beq.w	8005096 <d_exprlist+0x3ea>
 8004df2:	f8db 300c 	ldr.w	r3, [fp, #12]
 8004df6:	2b03      	cmp	r3, #3
 8004df8:	d8d8      	bhi.n	8004dac <d_exprlist+0x100>
 8004dfa:	e8df f003 	tbb	[pc, r3]
 8004dfe:	ad11      	.short	0xad11
 8004e00:	1b5d      	.short	0x1b5d
 8004e02:	4620      	mov	r0, r4
 8004e04:	f7ff f8e0 	bl	8003fc8 <d_template_args>
 8004e08:	4642      	mov	r2, r8
 8004e0a:	4603      	mov	r3, r0
 8004e0c:	2104      	movs	r1, #4
 8004e0e:	4620      	mov	r0, r4
 8004e10:	f7fb f9de 	bl	80001d0 <d_make_comp>
 8004e14:	4602      	mov	r2, r0
 8004e16:	e7d2      	b.n	8004dbe <d_exprlist+0x112>
 8004e18:	3203      	adds	r2, #3
 8004e1a:	60e2      	str	r2, [r4, #12]
 8004e1c:	2000      	movs	r0, #0
 8004e1e:	e7ae      	b.n	8004d7e <d_exprlist+0xd2>
 8004e20:	4642      	mov	r2, r8
 8004e22:	2300      	movs	r3, #0
 8004e24:	2134      	movs	r1, #52	; 0x34
 8004e26:	4620      	mov	r0, r4
 8004e28:	f7fb f9d2 	bl	80001d0 <d_make_comp>
 8004e2c:	4602      	mov	r2, r0
 8004e2e:	e7c6      	b.n	8004dbe <d_exprlist+0x112>
 8004e30:	f04f 0900 	mov.w	r9, #0
 8004e34:	499b      	ldr	r1, [pc, #620]	; (80050a4 <d_exprlist+0x3f8>)
 8004e36:	4648      	mov	r0, r9
 8004e38:	f003 fb52 	bl	80084e0 <strcmp>
 8004e3c:	4683      	mov	fp, r0
 8004e3e:	2800      	cmp	r0, #0
 8004e40:	f000 8138 	beq.w	80050b4 <d_exprlist+0x408>
 8004e44:	f899 3000 	ldrb.w	r3, [r9]
 8004e48:	2b6e      	cmp	r3, #110	; 0x6e
 8004e4a:	d1af      	bne.n	8004dac <d_exprlist+0x100>
 8004e4c:	f899 3001 	ldrb.w	r3, [r9, #1]
 8004e50:	2b77      	cmp	r3, #119	; 0x77
 8004e52:	d001      	beq.n	8004e58 <d_exprlist+0x1ac>
 8004e54:	2b61      	cmp	r3, #97	; 0x61
 8004e56:	d1a9      	bne.n	8004dac <d_exprlist+0x100>
 8004e58:	215f      	movs	r1, #95	; 0x5f
 8004e5a:	4620      	mov	r0, r4
 8004e5c:	f7ff ff26 	bl	8004cac <d_exprlist>
 8004e60:	4682      	mov	sl, r0
 8004e62:	4620      	mov	r0, r4
 8004e64:	f001 fd8c 	bl	8006980 <d_type>
 8004e68:	68e3      	ldr	r3, [r4, #12]
 8004e6a:	781a      	ldrb	r2, [r3, #0]
 8004e6c:	2a45      	cmp	r2, #69	; 0x45
 8004e6e:	4681      	mov	r9, r0
 8004e70:	f000 81cf 	beq.w	8005212 <d_exprlist+0x566>
 8004e74:	2a70      	cmp	r2, #112	; 0x70
 8004e76:	f000 84c9 	beq.w	800580c <d_exprlist+0xb60>
 8004e7a:	2a69      	cmp	r2, #105	; 0x69
 8004e7c:	d196      	bne.n	8004dac <d_exprlist+0x100>
 8004e7e:	785b      	ldrb	r3, [r3, #1]
 8004e80:	2b6c      	cmp	r3, #108	; 0x6c
 8004e82:	d193      	bne.n	8004dac <d_exprlist+0x100>
 8004e84:	4620      	mov	r0, r4
 8004e86:	f001 fba9 	bl	80065dc <d_expression_1>
 8004e8a:	4683      	mov	fp, r0
 8004e8c:	465b      	mov	r3, fp
 8004e8e:	464a      	mov	r2, r9
 8004e90:	213a      	movs	r1, #58	; 0x3a
 8004e92:	4620      	mov	r0, r4
 8004e94:	f7fb f99c 	bl	80001d0 <d_make_comp>
 8004e98:	4652      	mov	r2, sl
 8004e9a:	4603      	mov	r3, r0
 8004e9c:	2139      	movs	r1, #57	; 0x39
 8004e9e:	4620      	mov	r0, r4
 8004ea0:	f7fb f996 	bl	80001d0 <d_make_comp>
 8004ea4:	4642      	mov	r2, r8
 8004ea6:	4603      	mov	r3, r0
 8004ea8:	2138      	movs	r1, #56	; 0x38
 8004eaa:	4620      	mov	r0, r4
 8004eac:	f7fb f990 	bl	80001d0 <d_make_comp>
 8004eb0:	4602      	mov	r2, r0
 8004eb2:	e784      	b.n	8004dbe <d_exprlist+0x112>
 8004eb4:	f04f 0900 	mov.w	r9, #0
 8004eb8:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8004ebc:	681b      	ldr	r3, [r3, #0]
 8004ebe:	785a      	ldrb	r2, [r3, #1]
 8004ec0:	2a63      	cmp	r2, #99	; 0x63
 8004ec2:	f000 8146 	beq.w	8005152 <d_exprlist+0x4a6>
 8004ec6:	68e1      	ldr	r1, [r4, #12]
 8004ec8:	780b      	ldrb	r3, [r1, #0]
 8004eca:	2b4c      	cmp	r3, #76	; 0x4c
 8004ecc:	f000 8619 	beq.w	8005b02 <d_exprlist+0xe56>
 8004ed0:	2b54      	cmp	r3, #84	; 0x54
 8004ed2:	f000 81fd 	beq.w	80052d0 <d_exprlist+0x624>
 8004ed6:	2b73      	cmp	r3, #115	; 0x73
 8004ed8:	f000 8437 	beq.w	800574a <d_exprlist+0xa9e>
 8004edc:	2b66      	cmp	r3, #102	; 0x66
 8004ede:	f000 8475 	beq.w	80057cc <d_exprlist+0xb20>
 8004ee2:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8004ee6:	2a09      	cmp	r2, #9
 8004ee8:	f200 81bf 	bhi.w	800526a <d_exprlist+0x5be>
 8004eec:	4620      	mov	r0, r4
 8004eee:	f002 f9c5 	bl	800727c <d_unqualified_name>
 8004ef2:	4682      	mov	sl, r0
 8004ef4:	2800      	cmp	r0, #0
 8004ef6:	f000 84a8 	beq.w	800584a <d_exprlist+0xb9e>
 8004efa:	68e3      	ldr	r3, [r4, #12]
 8004efc:	781b      	ldrb	r3, [r3, #0]
 8004efe:	2b49      	cmp	r3, #73	; 0x49
 8004f00:	f000 8708 	beq.w	8005d14 <d_exprlist+0x1068>
 8004f04:	4968      	ldr	r1, [pc, #416]	; (80050a8 <d_exprlist+0x3fc>)
 8004f06:	4648      	mov	r0, r9
 8004f08:	f003 faea 	bl	80084e0 <strcmp>
 8004f0c:	2800      	cmp	r0, #0
 8004f0e:	f000 811a 	beq.w	8005146 <d_exprlist+0x49a>
 8004f12:	4966      	ldr	r1, [pc, #408]	; (80050ac <d_exprlist+0x400>)
 8004f14:	4648      	mov	r0, r9
 8004f16:	f003 fae3 	bl	80084e0 <strcmp>
 8004f1a:	b130      	cbz	r0, 8004f2a <d_exprlist+0x27e>
 8004f1c:	4648      	mov	r0, r9
 8004f1e:	4964      	ldr	r1, [pc, #400]	; (80050b0 <d_exprlist+0x404>)
 8004f20:	f003 fade 	bl	80084e0 <strcmp>
 8004f24:	2800      	cmp	r0, #0
 8004f26:	f040 816f 	bne.w	8005208 <d_exprlist+0x55c>
 8004f2a:	4620      	mov	r0, r4
 8004f2c:	f002 f9a6 	bl	800727c <d_unqualified_name>
 8004f30:	68e3      	ldr	r3, [r4, #12]
 8004f32:	781b      	ldrb	r3, [r3, #0]
 8004f34:	2b49      	cmp	r3, #73	; 0x49
 8004f36:	4681      	mov	r9, r0
 8004f38:	f000 843c 	beq.w	80057b4 <d_exprlist+0xb08>
 8004f3c:	464b      	mov	r3, r9
 8004f3e:	4652      	mov	r2, sl
 8004f40:	2137      	movs	r1, #55	; 0x37
 8004f42:	4620      	mov	r0, r4
 8004f44:	f7fb f944 	bl	80001d0 <d_make_comp>
 8004f48:	4642      	mov	r2, r8
 8004f4a:	4603      	mov	r3, r0
 8004f4c:	2136      	movs	r1, #54	; 0x36
 8004f4e:	4620      	mov	r0, r4
 8004f50:	f7fb f93e 	bl	80001d0 <d_make_comp>
 8004f54:	4602      	mov	r2, r0
 8004f56:	e732      	b.n	8004dbe <d_exprlist+0x112>
 8004f58:	f1b9 0f00 	cmp.w	r9, #0
 8004f5c:	d006      	beq.n	8004f6c <d_exprlist+0x2c0>
 8004f5e:	f899 3000 	ldrb.w	r3, [r9]
 8004f62:	2b70      	cmp	r3, #112	; 0x70
 8004f64:	f000 8081 	beq.w	800506a <d_exprlist+0x3be>
 8004f68:	2b6d      	cmp	r3, #109	; 0x6d
 8004f6a:	d07e      	beq.n	800506a <d_exprlist+0x3be>
 8004f6c:	f1ba 0f33 	cmp.w	sl, #51	; 0x33
 8004f70:	68e1      	ldr	r1, [r4, #12]
 8004f72:	d074      	beq.n	800505e <d_exprlist+0x3b2>
 8004f74:	780b      	ldrb	r3, [r1, #0]
 8004f76:	f04f 0a00 	mov.w	sl, #0
 8004f7a:	2b4c      	cmp	r3, #76	; 0x4c
 8004f7c:	f000 8453 	beq.w	8005826 <d_exprlist+0xb7a>
 8004f80:	2b54      	cmp	r3, #84	; 0x54
 8004f82:	f000 8466 	beq.w	8005852 <d_exprlist+0xba6>
 8004f86:	2b73      	cmp	r3, #115	; 0x73
 8004f88:	f000 8105 	beq.w	8005196 <d_exprlist+0x4ea>
 8004f8c:	2b66      	cmp	r3, #102	; 0x66
 8004f8e:	f000 811c 	beq.w	80051ca <d_exprlist+0x51e>
 8004f92:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8004f96:	2a09      	cmp	r2, #9
 8004f98:	f201 82ac 	bhi.w	80064f4 <d_exprlist+0x1848>
 8004f9c:	4620      	mov	r0, r4
 8004f9e:	f002 f96d 	bl	800727c <d_unqualified_name>
 8004fa2:	4681      	mov	r9, r0
 8004fa4:	b120      	cbz	r0, 8004fb0 <d_exprlist+0x304>
 8004fa6:	68e3      	ldr	r3, [r4, #12]
 8004fa8:	781b      	ldrb	r3, [r3, #0]
 8004faa:	2b49      	cmp	r3, #73	; 0x49
 8004fac:	f000 8185 	beq.w	80052ba <d_exprlist+0x60e>
 8004fb0:	f1ba 0f00 	cmp.w	sl, #0
 8004fb4:	d06d      	beq.n	8005092 <d_exprlist+0x3e6>
 8004fb6:	464b      	mov	r3, r9
 8004fb8:	464a      	mov	r2, r9
 8004fba:	2137      	movs	r1, #55	; 0x37
 8004fbc:	4620      	mov	r0, r4
 8004fbe:	f7fb f907 	bl	80001d0 <d_make_comp>
 8004fc2:	4603      	mov	r3, r0
 8004fc4:	4642      	mov	r2, r8
 8004fc6:	2135      	movs	r1, #53	; 0x35
 8004fc8:	4620      	mov	r0, r4
 8004fca:	f7fb f901 	bl	80001d0 <d_make_comp>
 8004fce:	4602      	mov	r2, r0
 8004fd0:	e6f5      	b.n	8004dbe <d_exprlist+0x112>
 8004fd2:	3202      	adds	r2, #2
 8004fd4:	60e2      	str	r2, [r4, #12]
 8004fd6:	4620      	mov	r0, r4
 8004fd8:	f001 fcd2 	bl	8006980 <d_type>
 8004fdc:	4681      	mov	r9, r0
 8004fde:	4620      	mov	r0, r4
 8004fe0:	f002 f94c 	bl	800727c <d_unqualified_name>
 8004fe4:	68e3      	ldr	r3, [r4, #12]
 8004fe6:	781b      	ldrb	r3, [r3, #0]
 8004fe8:	2b49      	cmp	r3, #73	; 0x49
 8004fea:	4682      	mov	sl, r0
 8004fec:	f000 80bf 	beq.w	800516e <d_exprlist+0x4c2>
 8004ff0:	4603      	mov	r3, r0
 8004ff2:	464a      	mov	r2, r9
 8004ff4:	4641      	mov	r1, r8
 8004ff6:	4620      	mov	r0, r4
 8004ff8:	f7fb f8ea 	bl	80001d0 <d_make_comp>
 8004ffc:	4602      	mov	r2, r0
 8004ffe:	e6de      	b.n	8004dbe <d_exprlist+0x112>
 8005000:	9803      	ldr	r0, [sp, #12]
 8005002:	3201      	adds	r2, #1
 8005004:	60e2      	str	r2, [r4, #12]
 8005006:	b005      	add	sp, #20
 8005008:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800500c:	1c91      	adds	r1, r2, #2
 800500e:	60e1      	str	r1, [r4, #12]
 8005010:	7893      	ldrb	r3, [r2, #2]
 8005012:	2b4c      	cmp	r3, #76	; 0x4c
 8005014:	f000 814c 	beq.w	80052b0 <d_exprlist+0x604>
 8005018:	2b54      	cmp	r3, #84	; 0x54
 800501a:	f000 8578 	beq.w	8005b0e <d_exprlist+0xe62>
 800501e:	2b73      	cmp	r3, #115	; 0x73
 8005020:	f000 82e7 	beq.w	80055f2 <d_exprlist+0x946>
 8005024:	2b66      	cmp	r3, #102	; 0x66
 8005026:	f000 83a5 	beq.w	8005774 <d_exprlist+0xac8>
 800502a:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 800502e:	2809      	cmp	r0, #9
 8005030:	f201 8206 	bhi.w	8006440 <d_exprlist+0x1794>
 8005034:	4620      	mov	r0, r4
 8005036:	f002 f921 	bl	800727c <d_unqualified_name>
 800503a:	4680      	mov	r8, r0
 800503c:	2800      	cmp	r0, #0
 800503e:	f000 83fd 	beq.w	800583c <d_exprlist+0xb90>
 8005042:	68e3      	ldr	r3, [r4, #12]
 8005044:	781b      	ldrb	r3, [r3, #0]
 8005046:	2b49      	cmp	r3, #73	; 0x49
 8005048:	f000 8633 	beq.w	8005cb2 <d_exprlist+0x1006>
 800504c:	4602      	mov	r2, r0
 800504e:	2300      	movs	r3, #0
 8005050:	2149      	movs	r1, #73	; 0x49
 8005052:	4620      	mov	r0, r4
 8005054:	f7fb f8bc 	bl	80001d0 <d_make_comp>
 8005058:	4602      	mov	r2, r0
 800505a:	e6b0      	b.n	8004dbe <d_exprlist+0x112>
 800505c:	68e1      	ldr	r1, [r4, #12]
 800505e:	780b      	ldrb	r3, [r1, #0]
 8005060:	2b5f      	cmp	r3, #95	; 0x5f
 8005062:	d00f      	beq.n	8005084 <d_exprlist+0x3d8>
 8005064:	f04f 0a00 	mov.w	sl, #0
 8005068:	e787      	b.n	8004f7a <d_exprlist+0x2ce>
 800506a:	f899 2001 	ldrb.w	r2, [r9, #1]
 800506e:	429a      	cmp	r2, r3
 8005070:	f47f af7c 	bne.w	8004f6c <d_exprlist+0x2c0>
 8005074:	68e1      	ldr	r1, [r4, #12]
 8005076:	780b      	ldrb	r3, [r1, #0]
 8005078:	2b5f      	cmp	r3, #95	; 0x5f
 800507a:	f000 85b2 	beq.w	8005be2 <d_exprlist+0xf36>
 800507e:	f04f 0a01 	mov.w	sl, #1
 8005082:	e77a      	b.n	8004f7a <d_exprlist+0x2ce>
 8005084:	3101      	adds	r1, #1
 8005086:	60e1      	str	r1, [r4, #12]
 8005088:	4620      	mov	r0, r4
 800508a:	2145      	movs	r1, #69	; 0x45
 800508c:	f7ff fe0e 	bl	8004cac <d_exprlist>
 8005090:	4681      	mov	r9, r0
 8005092:	464b      	mov	r3, r9
 8005094:	e796      	b.n	8004fc4 <d_exprlist+0x318>
 8005096:	4620      	mov	r0, r4
 8005098:	f001 fc72 	bl	8006980 <d_type>
 800509c:	4603      	mov	r3, r0
 800509e:	e791      	b.n	8004fc4 <d_exprlist+0x318>
 80050a0:	0801158c 	.word	0x0801158c
 80050a4:	08011284 	.word	0x08011284
 80050a8:	0801127c 	.word	0x0801127c
 80050ac:	08011398 	.word	0x08011398
 80050b0:	0801139c 	.word	0x0801139c
 80050b4:	4620      	mov	r0, r4
 80050b6:	f001 fa91 	bl	80065dc <d_expression_1>
 80050ba:	4682      	mov	sl, r0
 80050bc:	68e0      	ldr	r0, [r4, #12]
 80050be:	7803      	ldrb	r3, [r0, #0]
 80050c0:	2b4c      	cmp	r3, #76	; 0x4c
 80050c2:	f000 8611 	beq.w	8005ce8 <d_exprlist+0x103c>
 80050c6:	2b54      	cmp	r3, #84	; 0x54
 80050c8:	f000 8630 	beq.w	8005d2c <d_exprlist+0x1080>
 80050cc:	2b73      	cmp	r3, #115	; 0x73
 80050ce:	f000 84a1 	beq.w	8005a14 <d_exprlist+0xd68>
 80050d2:	2b66      	cmp	r3, #102	; 0x66
 80050d4:	f000 80ac 	beq.w	8005230 <d_exprlist+0x584>
 80050d8:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 80050dc:	2909      	cmp	r1, #9
 80050de:	f201 8194 	bhi.w	800640a <d_exprlist+0x175e>
 80050e2:	4620      	mov	r0, r4
 80050e4:	f002 f8ca 	bl	800727c <d_unqualified_name>
 80050e8:	68e2      	ldr	r2, [r4, #12]
 80050ea:	4681      	mov	r9, r0
 80050ec:	7813      	ldrb	r3, [r2, #0]
 80050ee:	b110      	cbz	r0, 80050f6 <d_exprlist+0x44a>
 80050f0:	2b49      	cmp	r3, #73	; 0x49
 80050f2:	f000 86ef 	beq.w	8005ed4 <d_exprlist+0x1228>
 80050f6:	2b4c      	cmp	r3, #76	; 0x4c
 80050f8:	f000 85e7 	beq.w	8005cca <d_exprlist+0x101e>
 80050fc:	2b54      	cmp	r3, #84	; 0x54
 80050fe:	f000 8603 	beq.w	8005d08 <d_exprlist+0x105c>
 8005102:	2b73      	cmp	r3, #115	; 0x73
 8005104:	f000 83cc 	beq.w	80058a0 <d_exprlist+0xbf4>
 8005108:	2b66      	cmp	r3, #102	; 0x66
 800510a:	f000 8493 	beq.w	8005a34 <d_exprlist+0xd88>
 800510e:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8005112:	2909      	cmp	r1, #9
 8005114:	f201 8129 	bhi.w	800636a <d_exprlist+0x16be>
 8005118:	4620      	mov	r0, r4
 800511a:	f002 f8af 	bl	800727c <d_unqualified_name>
 800511e:	4683      	mov	fp, r0
 8005120:	2800      	cmp	r0, #0
 8005122:	f43f aeb3 	beq.w	8004e8c <d_exprlist+0x1e0>
 8005126:	68e3      	ldr	r3, [r4, #12]
 8005128:	781b      	ldrb	r3, [r3, #0]
 800512a:	2b49      	cmp	r3, #73	; 0x49
 800512c:	f47f aeae 	bne.w	8004e8c <d_exprlist+0x1e0>
 8005130:	4620      	mov	r0, r4
 8005132:	f7fe ff49 	bl	8003fc8 <d_template_args>
 8005136:	465a      	mov	r2, fp
 8005138:	4603      	mov	r3, r0
 800513a:	2104      	movs	r1, #4
 800513c:	4620      	mov	r0, r4
 800513e:	f7fb f847 	bl	80001d0 <d_make_comp>
 8005142:	4683      	mov	fp, r0
 8005144:	e6a2      	b.n	8004e8c <d_exprlist+0x1e0>
 8005146:	2145      	movs	r1, #69	; 0x45
 8005148:	4620      	mov	r0, r4
 800514a:	f7ff fdaf 	bl	8004cac <d_exprlist>
 800514e:	4681      	mov	r9, r0
 8005150:	e6f4      	b.n	8004f3c <d_exprlist+0x290>
 8005152:	781b      	ldrb	r3, [r3, #0]
 8005154:	f1a3 0263 	sub.w	r2, r3, #99	; 0x63
 8005158:	2a01      	cmp	r2, #1
 800515a:	d903      	bls.n	8005164 <d_exprlist+0x4b8>
 800515c:	3b72      	subs	r3, #114	; 0x72
 800515e:	2b01      	cmp	r3, #1
 8005160:	f63f aeb1 	bhi.w	8004ec6 <d_exprlist+0x21a>
 8005164:	4620      	mov	r0, r4
 8005166:	f001 fc0b 	bl	8006980 <d_type>
 800516a:	4682      	mov	sl, r0
 800516c:	e6ca      	b.n	8004f04 <d_exprlist+0x258>
 800516e:	4620      	mov	r0, r4
 8005170:	f7fe ff2a 	bl	8003fc8 <d_template_args>
 8005174:	4652      	mov	r2, sl
 8005176:	4603      	mov	r3, r0
 8005178:	2104      	movs	r1, #4
 800517a:	4620      	mov	r0, r4
 800517c:	f7fb f828 	bl	80001d0 <d_make_comp>
 8005180:	4603      	mov	r3, r0
 8005182:	e736      	b.n	8004ff2 <d_exprlist+0x346>
 8005184:	3201      	adds	r2, #1
 8005186:	60c2      	str	r2, [r0, #12]
 8005188:	212e      	movs	r1, #46	; 0x2e
 800518a:	461a      	mov	r2, r3
 800518c:	b005      	add	sp, #20
 800518e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005192:	f7fb b81d 	b.w	80001d0 <d_make_comp>
 8005196:	784b      	ldrb	r3, [r1, #1]
 8005198:	2b72      	cmp	r3, #114	; 0x72
 800519a:	f000 8540 	beq.w	8005c1e <d_exprlist+0xf72>
 800519e:	2b70      	cmp	r3, #112	; 0x70
 80051a0:	f000 860e 	beq.w	8005dc0 <d_exprlist+0x1114>
 80051a4:	4620      	mov	r0, r4
 80051a6:	f001 ffa9 	bl	80070fc <d_operator_name>
 80051aa:	4681      	mov	r9, r0
 80051ac:	2800      	cmp	r0, #0
 80051ae:	f43f aeff 	beq.w	8004fb0 <d_exprlist+0x304>
 80051b2:	7803      	ldrb	r3, [r0, #0]
 80051b4:	2b31      	cmp	r3, #49	; 0x31
 80051b6:	f000 8352 	beq.w	800585e <d_exprlist+0xbb2>
 80051ba:	2b32      	cmp	r3, #50	; 0x32
 80051bc:	d02e      	beq.n	800521c <d_exprlist+0x570>
 80051be:	2b33      	cmp	r3, #51	; 0x33
 80051c0:	f000 8646 	beq.w	8005e50 <d_exprlist+0x11a4>
 80051c4:	f04f 0900 	mov.w	r9, #0
 80051c8:	e6f2      	b.n	8004fb0 <d_exprlist+0x304>
 80051ca:	784b      	ldrb	r3, [r1, #1]
 80051cc:	2b70      	cmp	r3, #112	; 0x70
 80051ce:	d1e9      	bne.n	80051a4 <d_exprlist+0x4f8>
 80051d0:	1c8b      	adds	r3, r1, #2
 80051d2:	60e3      	str	r3, [r4, #12]
 80051d4:	788b      	ldrb	r3, [r1, #2]
 80051d6:	2b54      	cmp	r3, #84	; 0x54
 80051d8:	f040 857d 	bne.w	8005cd6 <d_exprlist+0x102a>
 80051dc:	3103      	adds	r1, #3
 80051de:	60e1      	str	r1, [r4, #12]
 80051e0:	2000      	movs	r0, #0
 80051e2:	6963      	ldr	r3, [r4, #20]
 80051e4:	69a2      	ldr	r2, [r4, #24]
 80051e6:	4293      	cmp	r3, r2
 80051e8:	daec      	bge.n	80051c4 <d_exprlist+0x518>
 80051ea:	6922      	ldr	r2, [r4, #16]
 80051ec:	1c59      	adds	r1, r3, #1
 80051ee:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80051f2:	eb12 0983 	adds.w	r9, r2, r3, lsl #2
 80051f6:	6161      	str	r1, [r4, #20]
 80051f8:	f43f aeda 	beq.w	8004fb0 <d_exprlist+0x304>
 80051fc:	2106      	movs	r1, #6
 80051fe:	f802 1023 	strb.w	r1, [r2, r3, lsl #2]
 8005202:	f8c9 0004 	str.w	r0, [r9, #4]
 8005206:	e6d3      	b.n	8004fb0 <d_exprlist+0x304>
 8005208:	4620      	mov	r0, r4
 800520a:	f001 f9e7 	bl	80065dc <d_expression_1>
 800520e:	4681      	mov	r9, r0
 8005210:	e694      	b.n	8004f3c <d_exprlist+0x290>
 8005212:	3301      	adds	r3, #1
 8005214:	60e3      	str	r3, [r4, #12]
 8005216:	f04f 0b00 	mov.w	fp, #0
 800521a:	e637      	b.n	8004e8c <d_exprlist+0x1e0>
 800521c:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8005220:	2b03      	cmp	r3, #3
 8005222:	d8cf      	bhi.n	80051c4 <d_exprlist+0x518>
 8005224:	e8df f013 	tbh	[pc, r3, lsl #1]
 8005228:	04c60059 	.word	0x04c60059
 800522c:	006100a5 	.word	0x006100a5
 8005230:	7843      	ldrb	r3, [r0, #1]
 8005232:	2b70      	cmp	r3, #112	; 0x70
 8005234:	f000 85d2 	beq.w	8005ddc <d_exprlist+0x1130>
 8005238:	4620      	mov	r0, r4
 800523a:	f001 ff5f 	bl	80070fc <d_operator_name>
 800523e:	4681      	mov	r9, r0
 8005240:	2800      	cmp	r0, #0
 8005242:	f000 8157 	beq.w	80054f4 <d_exprlist+0x848>
 8005246:	7803      	ldrb	r3, [r0, #0]
 8005248:	2b31      	cmp	r3, #49	; 0x31
 800524a:	f000 8599 	beq.w	8005d80 <d_exprlist+0x10d4>
 800524e:	2b32      	cmp	r3, #50	; 0x32
 8005250:	f040 84cb 	bne.w	8005bea <d_exprlist+0xf3e>
 8005254:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8005258:	2b03      	cmp	r3, #3
 800525a:	f200 8483 	bhi.w	8005b64 <d_exprlist+0xeb8>
 800525e:	e8df f013 	tbh	[pc, r3, lsl #1]
 8005262:	0142      	.short	0x0142
 8005264:	018c04cb 	.word	0x018c04cb
 8005268:	014c      	.short	0x014c
 800526a:	2b6f      	cmp	r3, #111	; 0x6f
 800526c:	f000 8441 	beq.w	8005af2 <d_exprlist+0xe46>
 8005270:	2b69      	cmp	r3, #105	; 0x69
 8005272:	f041 8171 	bne.w	8006558 <d_exprlist+0x18ac>
 8005276:	784b      	ldrb	r3, [r1, #1]
 8005278:	2b6c      	cmp	r3, #108	; 0x6c
 800527a:	f001 80b5 	beq.w	80063e8 <d_exprlist+0x173c>
 800527e:	4620      	mov	r0, r4
 8005280:	f001 ff3c 	bl	80070fc <d_operator_name>
 8005284:	4682      	mov	sl, r0
 8005286:	2800      	cmp	r0, #0
 8005288:	f000 82df 	beq.w	800584a <d_exprlist+0xb9e>
 800528c:	7803      	ldrb	r3, [r0, #0]
 800528e:	2b31      	cmp	r3, #49	; 0x31
 8005290:	f000 846e 	beq.w	8005b70 <d_exprlist+0xec4>
 8005294:	2b32      	cmp	r3, #50	; 0x32
 8005296:	f040 840d 	bne.w	8005ab4 <d_exprlist+0xe08>
 800529a:	f8da 3004 	ldr.w	r3, [sl, #4]
 800529e:	2b03      	cmp	r3, #3
 80052a0:	f200 82d3 	bhi.w	800584a <d_exprlist+0xb9e>
 80052a4:	e8df f013 	tbh	[pc, r3, lsl #1]
 80052a8:	040e009c 	.word	0x040e009c
 80052ac:	00a400e8 	.word	0x00a400e8
 80052b0:	4620      	mov	r0, r4
 80052b2:	f002 fe4f 	bl	8007f54 <d_expr_primary>
 80052b6:	4602      	mov	r2, r0
 80052b8:	e6c9      	b.n	800504e <d_exprlist+0x3a2>
 80052ba:	4620      	mov	r0, r4
 80052bc:	f7fe fe84 	bl	8003fc8 <d_template_args>
 80052c0:	464a      	mov	r2, r9
 80052c2:	4603      	mov	r3, r0
 80052c4:	2104      	movs	r1, #4
 80052c6:	4620      	mov	r0, r4
 80052c8:	f7fa ff82 	bl	80001d0 <d_make_comp>
 80052cc:	4681      	mov	r9, r0
 80052ce:	e66f      	b.n	8004fb0 <d_exprlist+0x304>
 80052d0:	4620      	mov	r0, r4
 80052d2:	f7fb f921 	bl	8000518 <d_template_param>
 80052d6:	4682      	mov	sl, r0
 80052d8:	e614      	b.n	8004f04 <d_exprlist+0x258>
 80052da:	464a      	mov	r2, r9
 80052dc:	2300      	movs	r3, #0
 80052de:	2134      	movs	r1, #52	; 0x34
 80052e0:	4620      	mov	r0, r4
 80052e2:	f7fa ff75 	bl	80001d0 <d_make_comp>
 80052e6:	4681      	mov	r9, r0
 80052e8:	e662      	b.n	8004fb0 <d_exprlist+0x304>
 80052ea:	f04f 0b00 	mov.w	fp, #0
 80052ee:	49d1      	ldr	r1, [pc, #836]	; (8005634 <d_exprlist+0x988>)
 80052f0:	4658      	mov	r0, fp
 80052f2:	f003 f8f5 	bl	80084e0 <strcmp>
 80052f6:	2800      	cmp	r0, #0
 80052f8:	f000 861b 	beq.w	8005f32 <d_exprlist+0x1286>
 80052fc:	f89b 3000 	ldrb.w	r3, [fp]
 8005300:	2b6e      	cmp	r3, #110	; 0x6e
 8005302:	f47f af5f 	bne.w	80051c4 <d_exprlist+0x518>
 8005306:	f89b 3001 	ldrb.w	r3, [fp, #1]
 800530a:	2b77      	cmp	r3, #119	; 0x77
 800530c:	d002      	beq.n	8005314 <d_exprlist+0x668>
 800530e:	2b61      	cmp	r3, #97	; 0x61
 8005310:	f47f af58 	bne.w	80051c4 <d_exprlist+0x518>
 8005314:	215f      	movs	r1, #95	; 0x5f
 8005316:	4620      	mov	r0, r4
 8005318:	f7ff fcc8 	bl	8004cac <d_exprlist>
 800531c:	9000      	str	r0, [sp, #0]
 800531e:	4620      	mov	r0, r4
 8005320:	f001 fb2e 	bl	8006980 <d_type>
 8005324:	68e3      	ldr	r3, [r4, #12]
 8005326:	781a      	ldrb	r2, [r3, #0]
 8005328:	2a45      	cmp	r2, #69	; 0x45
 800532a:	4683      	mov	fp, r0
 800532c:	f000 8740 	beq.w	80061b0 <d_exprlist+0x1504>
 8005330:	2a70      	cmp	r2, #112	; 0x70
 8005332:	f000 8794 	beq.w	800625e <d_exprlist+0x15b2>
 8005336:	2a69      	cmp	r2, #105	; 0x69
 8005338:	f47f af44 	bne.w	80051c4 <d_exprlist+0x518>
 800533c:	785b      	ldrb	r3, [r3, #1]
 800533e:	2b6c      	cmp	r3, #108	; 0x6c
 8005340:	f47f af40 	bne.w	80051c4 <d_exprlist+0x518>
 8005344:	4620      	mov	r0, r4
 8005346:	f001 f949 	bl	80065dc <d_expression_1>
 800534a:	4603      	mov	r3, r0
 800534c:	465a      	mov	r2, fp
 800534e:	213a      	movs	r1, #58	; 0x3a
 8005350:	4620      	mov	r0, r4
 8005352:	f7fa ff3d 	bl	80001d0 <d_make_comp>
 8005356:	9a00      	ldr	r2, [sp, #0]
 8005358:	4603      	mov	r3, r0
 800535a:	2139      	movs	r1, #57	; 0x39
 800535c:	4620      	mov	r0, r4
 800535e:	f7fa ff37 	bl	80001d0 <d_make_comp>
 8005362:	464a      	mov	r2, r9
 8005364:	4603      	mov	r3, r0
 8005366:	2138      	movs	r1, #56	; 0x38
 8005368:	4620      	mov	r0, r4
 800536a:	f7fa ff31 	bl	80001d0 <d_make_comp>
 800536e:	4681      	mov	r9, r0
 8005370:	e61e      	b.n	8004fb0 <d_exprlist+0x304>
 8005372:	f04f 0b00 	mov.w	fp, #0
 8005376:	f8d9 3004 	ldr.w	r3, [r9, #4]
 800537a:	681b      	ldr	r3, [r3, #0]
 800537c:	785a      	ldrb	r2, [r3, #1]
 800537e:	2a63      	cmp	r2, #99	; 0x63
 8005380:	f000 85c8 	beq.w	8005f14 <d_exprlist+0x1268>
 8005384:	4620      	mov	r0, r4
 8005386:	f001 f929 	bl	80065dc <d_expression_1>
 800538a:	9000      	str	r0, [sp, #0]
 800538c:	49aa      	ldr	r1, [pc, #680]	; (8005638 <d_exprlist+0x98c>)
 800538e:	4658      	mov	r0, fp
 8005390:	f003 f8a6 	bl	80084e0 <strcmp>
 8005394:	2800      	cmp	r0, #0
 8005396:	f000 862b 	beq.w	8005ff0 <d_exprlist+0x1344>
 800539a:	49a8      	ldr	r1, [pc, #672]	; (800563c <d_exprlist+0x990>)
 800539c:	4658      	mov	r0, fp
 800539e:	f003 f89f 	bl	80084e0 <strcmp>
 80053a2:	b130      	cbz	r0, 80053b2 <d_exprlist+0x706>
 80053a4:	4658      	mov	r0, fp
 80053a6:	49a6      	ldr	r1, [pc, #664]	; (8005640 <d_exprlist+0x994>)
 80053a8:	f003 f89a 	bl	80084e0 <strcmp>
 80053ac:	2800      	cmp	r0, #0
 80053ae:	f040 86d8 	bne.w	8006162 <d_exprlist+0x14b6>
 80053b2:	4620      	mov	r0, r4
 80053b4:	f001 ff62 	bl	800727c <d_unqualified_name>
 80053b8:	68e3      	ldr	r3, [r4, #12]
 80053ba:	781b      	ldrb	r3, [r3, #0]
 80053bc:	2b49      	cmp	r3, #73	; 0x49
 80053be:	4683      	mov	fp, r0
 80053c0:	f000 86d5 	beq.w	800616e <d_exprlist+0x14c2>
 80053c4:	465b      	mov	r3, fp
 80053c6:	9a00      	ldr	r2, [sp, #0]
 80053c8:	2137      	movs	r1, #55	; 0x37
 80053ca:	4620      	mov	r0, r4
 80053cc:	f7fa ff00 	bl	80001d0 <d_make_comp>
 80053d0:	464a      	mov	r2, r9
 80053d2:	4603      	mov	r3, r0
 80053d4:	2136      	movs	r1, #54	; 0x36
 80053d6:	4620      	mov	r0, r4
 80053d8:	f7fa fefa 	bl	80001d0 <d_make_comp>
 80053dc:	4681      	mov	r9, r0
 80053de:	e5e7      	b.n	8004fb0 <d_exprlist+0x304>
 80053e0:	4652      	mov	r2, sl
 80053e2:	2300      	movs	r3, #0
 80053e4:	2134      	movs	r1, #52	; 0x34
 80053e6:	4620      	mov	r0, r4
 80053e8:	f7fa fef2 	bl	80001d0 <d_make_comp>
 80053ec:	4682      	mov	sl, r0
 80053ee:	e589      	b.n	8004f04 <d_exprlist+0x258>
 80053f0:	f04f 0b00 	mov.w	fp, #0
 80053f4:	498f      	ldr	r1, [pc, #572]	; (8005634 <d_exprlist+0x988>)
 80053f6:	4658      	mov	r0, fp
 80053f8:	f003 f872 	bl	80084e0 <strcmp>
 80053fc:	2800      	cmp	r0, #0
 80053fe:	f000 86c2 	beq.w	8006186 <d_exprlist+0x14da>
 8005402:	f89b 3000 	ldrb.w	r3, [fp]
 8005406:	2b6e      	cmp	r3, #110	; 0x6e
 8005408:	f040 821f 	bne.w	800584a <d_exprlist+0xb9e>
 800540c:	f89b 3001 	ldrb.w	r3, [fp, #1]
 8005410:	2b77      	cmp	r3, #119	; 0x77
 8005412:	d002      	beq.n	800541a <d_exprlist+0x76e>
 8005414:	2b61      	cmp	r3, #97	; 0x61
 8005416:	f040 8218 	bne.w	800584a <d_exprlist+0xb9e>
 800541a:	215f      	movs	r1, #95	; 0x5f
 800541c:	4620      	mov	r0, r4
 800541e:	f7ff fc45 	bl	8004cac <d_exprlist>
 8005422:	9000      	str	r0, [sp, #0]
 8005424:	4620      	mov	r0, r4
 8005426:	f001 faab 	bl	8006980 <d_type>
 800542a:	68e3      	ldr	r3, [r4, #12]
 800542c:	781a      	ldrb	r2, [r3, #0]
 800542e:	2a45      	cmp	r2, #69	; 0x45
 8005430:	4683      	mov	fp, r0
 8005432:	f000 86ce 	beq.w	80061d2 <d_exprlist+0x1526>
 8005436:	2a70      	cmp	r2, #112	; 0x70
 8005438:	f000 86bf 	beq.w	80061ba <d_exprlist+0x150e>
 800543c:	2a69      	cmp	r2, #105	; 0x69
 800543e:	f040 8204 	bne.w	800584a <d_exprlist+0xb9e>
 8005442:	785b      	ldrb	r3, [r3, #1]
 8005444:	2b6c      	cmp	r3, #108	; 0x6c
 8005446:	f040 8200 	bne.w	800584a <d_exprlist+0xb9e>
 800544a:	4620      	mov	r0, r4
 800544c:	f001 f8c6 	bl	80065dc <d_expression_1>
 8005450:	4603      	mov	r3, r0
 8005452:	465a      	mov	r2, fp
 8005454:	213a      	movs	r1, #58	; 0x3a
 8005456:	4620      	mov	r0, r4
 8005458:	f7fa feba 	bl	80001d0 <d_make_comp>
 800545c:	9a00      	ldr	r2, [sp, #0]
 800545e:	4603      	mov	r3, r0
 8005460:	2139      	movs	r1, #57	; 0x39
 8005462:	4620      	mov	r0, r4
 8005464:	f7fa feb4 	bl	80001d0 <d_make_comp>
 8005468:	4652      	mov	r2, sl
 800546a:	4603      	mov	r3, r0
 800546c:	2138      	movs	r1, #56	; 0x38
 800546e:	4620      	mov	r0, r4
 8005470:	f7fa feae 	bl	80001d0 <d_make_comp>
 8005474:	4682      	mov	sl, r0
 8005476:	e545      	b.n	8004f04 <d_exprlist+0x258>
 8005478:	f04f 0b00 	mov.w	fp, #0
 800547c:	f8da 3004 	ldr.w	r3, [sl, #4]
 8005480:	681b      	ldr	r3, [r3, #0]
 8005482:	785a      	ldrb	r2, [r3, #1]
 8005484:	2a63      	cmp	r2, #99	; 0x63
 8005486:	f000 8630 	beq.w	80060ea <d_exprlist+0x143e>
 800548a:	4620      	mov	r0, r4
 800548c:	f001 f8a6 	bl	80065dc <d_expression_1>
 8005490:	9000      	str	r0, [sp, #0]
 8005492:	4969      	ldr	r1, [pc, #420]	; (8005638 <d_exprlist+0x98c>)
 8005494:	4658      	mov	r0, fp
 8005496:	f003 f823 	bl	80084e0 <strcmp>
 800549a:	2800      	cmp	r0, #0
 800549c:	f000 863f 	beq.w	800611e <d_exprlist+0x1472>
 80054a0:	4966      	ldr	r1, [pc, #408]	; (800563c <d_exprlist+0x990>)
 80054a2:	4658      	mov	r0, fp
 80054a4:	f003 f81c 	bl	80084e0 <strcmp>
 80054a8:	b130      	cbz	r0, 80054b8 <d_exprlist+0x80c>
 80054aa:	4658      	mov	r0, fp
 80054ac:	4964      	ldr	r1, [pc, #400]	; (8005640 <d_exprlist+0x994>)
 80054ae:	f003 f817 	bl	80084e0 <strcmp>
 80054b2:	2800      	cmp	r0, #0
 80054b4:	f040 8692 	bne.w	80061dc <d_exprlist+0x1530>
 80054b8:	4620      	mov	r0, r4
 80054ba:	f001 fedf 	bl	800727c <d_unqualified_name>
 80054be:	68e3      	ldr	r3, [r4, #12]
 80054c0:	781b      	ldrb	r3, [r3, #0]
 80054c2:	2b49      	cmp	r3, #73	; 0x49
 80054c4:	4683      	mov	fp, r0
 80054c6:	f000 86d6 	beq.w	8006276 <d_exprlist+0x15ca>
 80054ca:	465b      	mov	r3, fp
 80054cc:	9a00      	ldr	r2, [sp, #0]
 80054ce:	2137      	movs	r1, #55	; 0x37
 80054d0:	4620      	mov	r0, r4
 80054d2:	f7fa fe7d 	bl	80001d0 <d_make_comp>
 80054d6:	4652      	mov	r2, sl
 80054d8:	4603      	mov	r3, r0
 80054da:	2136      	movs	r1, #54	; 0x36
 80054dc:	4620      	mov	r0, r4
 80054de:	f7fa fe77 	bl	80001d0 <d_make_comp>
 80054e2:	4682      	mov	sl, r0
 80054e4:	e50e      	b.n	8004f04 <d_exprlist+0x258>
 80054e6:	464a      	mov	r2, r9
 80054e8:	2300      	movs	r3, #0
 80054ea:	2134      	movs	r1, #52	; 0x34
 80054ec:	4620      	mov	r0, r4
 80054ee:	f7fa fe6f 	bl	80001d0 <d_make_comp>
 80054f2:	4681      	mov	r9, r0
 80054f4:	68e2      	ldr	r2, [r4, #12]
 80054f6:	7813      	ldrb	r3, [r2, #0]
 80054f8:	e5fd      	b.n	80050f6 <d_exprlist+0x44a>
 80054fa:	f04f 0b00 	mov.w	fp, #0
 80054fe:	494d      	ldr	r1, [pc, #308]	; (8005634 <d_exprlist+0x988>)
 8005500:	4658      	mov	r0, fp
 8005502:	f002 ffed 	bl	80084e0 <strcmp>
 8005506:	2800      	cmp	r0, #0
 8005508:	f000 86e3 	beq.w	80062d2 <d_exprlist+0x1626>
 800550c:	f89b 3000 	ldrb.w	r3, [fp]
 8005510:	2b6e      	cmp	r3, #110	; 0x6e
 8005512:	f040 8327 	bne.w	8005b64 <d_exprlist+0xeb8>
 8005516:	f89b 3001 	ldrb.w	r3, [fp, #1]
 800551a:	2b77      	cmp	r3, #119	; 0x77
 800551c:	d002      	beq.n	8005524 <d_exprlist+0x878>
 800551e:	2b61      	cmp	r3, #97	; 0x61
 8005520:	f040 8320 	bne.w	8005b64 <d_exprlist+0xeb8>
 8005524:	215f      	movs	r1, #95	; 0x5f
 8005526:	4620      	mov	r0, r4
 8005528:	f7ff fbc0 	bl	8004cac <d_exprlist>
 800552c:	9000      	str	r0, [sp, #0]
 800552e:	4620      	mov	r0, r4
 8005530:	f001 fa26 	bl	8006980 <d_type>
 8005534:	68e2      	ldr	r2, [r4, #12]
 8005536:	7813      	ldrb	r3, [r2, #0]
 8005538:	2b45      	cmp	r3, #69	; 0x45
 800553a:	4683      	mov	fp, r0
 800553c:	f000 86d6 	beq.w	80062ec <d_exprlist+0x1640>
 8005540:	2b70      	cmp	r3, #112	; 0x70
 8005542:	f000 87bc 	beq.w	80064be <d_exprlist+0x1812>
 8005546:	2b69      	cmp	r3, #105	; 0x69
 8005548:	f041 8044 	bne.w	80065d4 <d_exprlist+0x1928>
 800554c:	7853      	ldrb	r3, [r2, #1]
 800554e:	2b6c      	cmp	r3, #108	; 0x6c
 8005550:	f041 803d 	bne.w	80065ce <d_exprlist+0x1922>
 8005554:	4620      	mov	r0, r4
 8005556:	f001 f841 	bl	80065dc <d_expression_1>
 800555a:	4603      	mov	r3, r0
 800555c:	465a      	mov	r2, fp
 800555e:	213a      	movs	r1, #58	; 0x3a
 8005560:	4620      	mov	r0, r4
 8005562:	f7fa fe35 	bl	80001d0 <d_make_comp>
 8005566:	9a00      	ldr	r2, [sp, #0]
 8005568:	4603      	mov	r3, r0
 800556a:	2139      	movs	r1, #57	; 0x39
 800556c:	4620      	mov	r0, r4
 800556e:	f7fa fe2f 	bl	80001d0 <d_make_comp>
 8005572:	464a      	mov	r2, r9
 8005574:	4603      	mov	r3, r0
 8005576:	2138      	movs	r1, #56	; 0x38
 8005578:	e7b8      	b.n	80054ec <d_exprlist+0x840>
 800557a:	f04f 0b00 	mov.w	fp, #0
 800557e:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8005582:	681b      	ldr	r3, [r3, #0]
 8005584:	785a      	ldrb	r2, [r3, #1]
 8005586:	2a63      	cmp	r2, #99	; 0x63
 8005588:	f000 865a 	beq.w	8006240 <d_exprlist+0x1594>
 800558c:	4620      	mov	r0, r4
 800558e:	f001 f825 	bl	80065dc <d_expression_1>
 8005592:	9000      	str	r0, [sp, #0]
 8005594:	4928      	ldr	r1, [pc, #160]	; (8005638 <d_exprlist+0x98c>)
 8005596:	4658      	mov	r0, fp
 8005598:	f002 ffa2 	bl	80084e0 <strcmp>
 800559c:	2800      	cmp	r0, #0
 800559e:	f000 8648 	beq.w	8006232 <d_exprlist+0x1586>
 80055a2:	4926      	ldr	r1, [pc, #152]	; (800563c <d_exprlist+0x990>)
 80055a4:	4658      	mov	r0, fp
 80055a6:	f002 ff9b 	bl	80084e0 <strcmp>
 80055aa:	b130      	cbz	r0, 80055ba <d_exprlist+0x90e>
 80055ac:	4658      	mov	r0, fp
 80055ae:	4924      	ldr	r1, [pc, #144]	; (8005640 <d_exprlist+0x994>)
 80055b0:	f002 ff96 	bl	80084e0 <strcmp>
 80055b4:	2800      	cmp	r0, #0
 80055b6:	f040 8617 	bne.w	80061e8 <d_exprlist+0x153c>
 80055ba:	4620      	mov	r0, r4
 80055bc:	f001 fe5e 	bl	800727c <d_unqualified_name>
 80055c0:	68e3      	ldr	r3, [r4, #12]
 80055c2:	781b      	ldrb	r3, [r3, #0]
 80055c4:	2b49      	cmp	r3, #73	; 0x49
 80055c6:	4683      	mov	fp, r0
 80055c8:	d109      	bne.n	80055de <d_exprlist+0x932>
 80055ca:	4620      	mov	r0, r4
 80055cc:	f7fe fcfc 	bl	8003fc8 <d_template_args>
 80055d0:	465a      	mov	r2, fp
 80055d2:	4603      	mov	r3, r0
 80055d4:	2104      	movs	r1, #4
 80055d6:	4620      	mov	r0, r4
 80055d8:	f7fa fdfa 	bl	80001d0 <d_make_comp>
 80055dc:	4683      	mov	fp, r0
 80055de:	465b      	mov	r3, fp
 80055e0:	9a00      	ldr	r2, [sp, #0]
 80055e2:	2137      	movs	r1, #55	; 0x37
 80055e4:	4620      	mov	r0, r4
 80055e6:	f7fa fdf3 	bl	80001d0 <d_make_comp>
 80055ea:	464a      	mov	r2, r9
 80055ec:	4603      	mov	r3, r0
 80055ee:	2136      	movs	r1, #54	; 0x36
 80055f0:	e77c      	b.n	80054ec <d_exprlist+0x840>
 80055f2:	78d3      	ldrb	r3, [r2, #3]
 80055f4:	2b72      	cmp	r3, #114	; 0x72
 80055f6:	f000 8450 	beq.w	8005e9a <d_exprlist+0x11ee>
 80055fa:	2b70      	cmp	r3, #112	; 0x70
 80055fc:	f000 84a6 	beq.w	8005f4c <d_exprlist+0x12a0>
 8005600:	4620      	mov	r0, r4
 8005602:	f001 fd7b 	bl	80070fc <d_operator_name>
 8005606:	4680      	mov	r8, r0
 8005608:	2800      	cmp	r0, #0
 800560a:	f000 8117 	beq.w	800583c <d_exprlist+0xb90>
 800560e:	7803      	ldrb	r3, [r0, #0]
 8005610:	2b31      	cmp	r3, #49	; 0x31
 8005612:	f000 8286 	beq.w	8005b22 <d_exprlist+0xe76>
 8005616:	2b32      	cmp	r3, #50	; 0x32
 8005618:	f040 822d 	bne.w	8005a76 <d_exprlist+0xdca>
 800561c:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8005620:	2b03      	cmp	r3, #3
 8005622:	f200 810b 	bhi.w	800583c <d_exprlist+0xb90>
 8005626:	e8df f013 	tbh	[pc, r3, lsl #1]
 800562a:	000d      	.short	0x000d
 800562c:	0059022e 	.word	0x0059022e
 8005630:	0015      	.short	0x0015
 8005632:	bf00      	nop
 8005634:	08011284 	.word	0x08011284
 8005638:	0801127c 	.word	0x0801127c
 800563c:	08011398 	.word	0x08011398
 8005640:	0801139c 	.word	0x0801139c
 8005644:	4642      	mov	r2, r8
 8005646:	2300      	movs	r3, #0
 8005648:	2134      	movs	r1, #52	; 0x34
 800564a:	4620      	mov	r0, r4
 800564c:	f7fa fdc0 	bl	80001d0 <d_make_comp>
 8005650:	4602      	mov	r2, r0
 8005652:	e4fc      	b.n	800504e <d_exprlist+0x3a2>
 8005654:	f04f 0900 	mov.w	r9, #0
 8005658:	49c8      	ldr	r1, [pc, #800]	; (800597c <d_exprlist+0xcd0>)
 800565a:	4648      	mov	r0, r9
 800565c:	f002 ff40 	bl	80084e0 <strcmp>
 8005660:	2800      	cmp	r0, #0
 8005662:	f000 8571 	beq.w	8006148 <d_exprlist+0x149c>
 8005666:	f899 3000 	ldrb.w	r3, [r9]
 800566a:	2b6e      	cmp	r3, #110	; 0x6e
 800566c:	f040 80e6 	bne.w	800583c <d_exprlist+0xb90>
 8005670:	f899 3001 	ldrb.w	r3, [r9, #1]
 8005674:	2b77      	cmp	r3, #119	; 0x77
 8005676:	d002      	beq.n	800567e <d_exprlist+0x9d2>
 8005678:	2b61      	cmp	r3, #97	; 0x61
 800567a:	f040 80df 	bne.w	800583c <d_exprlist+0xb90>
 800567e:	215f      	movs	r1, #95	; 0x5f
 8005680:	4620      	mov	r0, r4
 8005682:	f7ff fb13 	bl	8004cac <d_exprlist>
 8005686:	4681      	mov	r9, r0
 8005688:	4620      	mov	r0, r4
 800568a:	f001 f979 	bl	8006980 <d_type>
 800568e:	68e3      	ldr	r3, [r4, #12]
 8005690:	781a      	ldrb	r2, [r3, #0]
 8005692:	2a45      	cmp	r2, #69	; 0x45
 8005694:	4682      	mov	sl, r0
 8005696:	f000 85c7 	beq.w	8006228 <d_exprlist+0x157c>
 800569a:	2a70      	cmp	r2, #112	; 0x70
 800569c:	f000 85b8 	beq.w	8006210 <d_exprlist+0x1564>
 80056a0:	2a69      	cmp	r2, #105	; 0x69
 80056a2:	f040 80cb 	bne.w	800583c <d_exprlist+0xb90>
 80056a6:	785b      	ldrb	r3, [r3, #1]
 80056a8:	2b6c      	cmp	r3, #108	; 0x6c
 80056aa:	f040 80c7 	bne.w	800583c <d_exprlist+0xb90>
 80056ae:	4620      	mov	r0, r4
 80056b0:	f000 ff94 	bl	80065dc <d_expression_1>
 80056b4:	4603      	mov	r3, r0
 80056b6:	4652      	mov	r2, sl
 80056b8:	213a      	movs	r1, #58	; 0x3a
 80056ba:	4620      	mov	r0, r4
 80056bc:	f7fa fd88 	bl	80001d0 <d_make_comp>
 80056c0:	464a      	mov	r2, r9
 80056c2:	4603      	mov	r3, r0
 80056c4:	2139      	movs	r1, #57	; 0x39
 80056c6:	4620      	mov	r0, r4
 80056c8:	f7fa fd82 	bl	80001d0 <d_make_comp>
 80056cc:	4642      	mov	r2, r8
 80056ce:	4603      	mov	r3, r0
 80056d0:	2138      	movs	r1, #56	; 0x38
 80056d2:	4620      	mov	r0, r4
 80056d4:	f7fa fd7c 	bl	80001d0 <d_make_comp>
 80056d8:	4602      	mov	r2, r0
 80056da:	e4b8      	b.n	800504e <d_exprlist+0x3a2>
 80056dc:	f04f 0900 	mov.w	r9, #0
 80056e0:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80056e4:	681b      	ldr	r3, [r3, #0]
 80056e6:	785a      	ldrb	r2, [r3, #1]
 80056e8:	2a63      	cmp	r2, #99	; 0x63
 80056ea:	f000 84d9 	beq.w	80060a0 <d_exprlist+0x13f4>
 80056ee:	4620      	mov	r0, r4
 80056f0:	f000 ff74 	bl	80065dc <d_expression_1>
 80056f4:	4682      	mov	sl, r0
 80056f6:	49a2      	ldr	r1, [pc, #648]	; (8005980 <d_exprlist+0xcd4>)
 80056f8:	4648      	mov	r0, r9
 80056fa:	f002 fef1 	bl	80084e0 <strcmp>
 80056fe:	2800      	cmp	r0, #0
 8005700:	f000 84c5 	beq.w	800608e <d_exprlist+0x13e2>
 8005704:	499f      	ldr	r1, [pc, #636]	; (8005984 <d_exprlist+0xcd8>)
 8005706:	4648      	mov	r0, r9
 8005708:	f002 feea 	bl	80084e0 <strcmp>
 800570c:	b130      	cbz	r0, 800571c <d_exprlist+0xa70>
 800570e:	4648      	mov	r0, r9
 8005710:	499d      	ldr	r1, [pc, #628]	; (8005988 <d_exprlist+0xcdc>)
 8005712:	f002 fee5 	bl	80084e0 <strcmp>
 8005716:	2800      	cmp	r0, #0
 8005718:	f040 8574 	bne.w	8006204 <d_exprlist+0x1558>
 800571c:	4620      	mov	r0, r4
 800571e:	f001 fdad 	bl	800727c <d_unqualified_name>
 8005722:	68e3      	ldr	r3, [r4, #12]
 8005724:	781b      	ldrb	r3, [r3, #0]
 8005726:	2b49      	cmp	r3, #73	; 0x49
 8005728:	4681      	mov	r9, r0
 800572a:	f000 85c6 	beq.w	80062ba <d_exprlist+0x160e>
 800572e:	464b      	mov	r3, r9
 8005730:	4652      	mov	r2, sl
 8005732:	2137      	movs	r1, #55	; 0x37
 8005734:	4620      	mov	r0, r4
 8005736:	f7fa fd4b 	bl	80001d0 <d_make_comp>
 800573a:	4642      	mov	r2, r8
 800573c:	4603      	mov	r3, r0
 800573e:	2136      	movs	r1, #54	; 0x36
 8005740:	4620      	mov	r0, r4
 8005742:	f7fa fd45 	bl	80001d0 <d_make_comp>
 8005746:	4602      	mov	r2, r0
 8005748:	e481      	b.n	800504e <d_exprlist+0x3a2>
 800574a:	784b      	ldrb	r3, [r1, #1]
 800574c:	2b72      	cmp	r3, #114	; 0x72
 800574e:	f000 83c9 	beq.w	8005ee4 <d_exprlist+0x1238>
 8005752:	2b70      	cmp	r3, #112	; 0x70
 8005754:	f47f ad93 	bne.w	800527e <d_exprlist+0x5d2>
 8005758:	3102      	adds	r1, #2
 800575a:	60e1      	str	r1, [r4, #12]
 800575c:	4620      	mov	r0, r4
 800575e:	f000 ff3d 	bl	80065dc <d_expression_1>
 8005762:	2300      	movs	r3, #0
 8005764:	4602      	mov	r2, r0
 8005766:	2149      	movs	r1, #73	; 0x49
 8005768:	4620      	mov	r0, r4
 800576a:	f7fa fd31 	bl	80001d0 <d_make_comp>
 800576e:	4682      	mov	sl, r0
 8005770:	f7ff bbc8 	b.w	8004f04 <d_exprlist+0x258>
 8005774:	78d3      	ldrb	r3, [r2, #3]
 8005776:	2b70      	cmp	r3, #112	; 0x70
 8005778:	f47f af42 	bne.w	8005600 <d_exprlist+0x954>
 800577c:	1d13      	adds	r3, r2, #4
 800577e:	60e3      	str	r3, [r4, #12]
 8005780:	7913      	ldrb	r3, [r2, #4]
 8005782:	2b54      	cmp	r3, #84	; 0x54
 8005784:	d155      	bne.n	8005832 <d_exprlist+0xb86>
 8005786:	3205      	adds	r2, #5
 8005788:	60e2      	str	r2, [r4, #12]
 800578a:	2000      	movs	r0, #0
 800578c:	6963      	ldr	r3, [r4, #20]
 800578e:	69a2      	ldr	r2, [r4, #24]
 8005790:	4293      	cmp	r3, r2
 8005792:	da53      	bge.n	800583c <d_exprlist+0xb90>
 8005794:	6922      	ldr	r2, [r4, #16]
 8005796:	1c59      	adds	r1, r3, #1
 8005798:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800579c:	6161      	str	r1, [r4, #20]
 800579e:	eb12 0183 	adds.w	r1, r2, r3, lsl #2
 80057a2:	f000 8610 	beq.w	80063c6 <d_exprlist+0x171a>
 80057a6:	f04f 0e06 	mov.w	lr, #6
 80057aa:	f802 e023 	strb.w	lr, [r2, r3, lsl #2]
 80057ae:	460a      	mov	r2, r1
 80057b0:	6048      	str	r0, [r1, #4]
 80057b2:	e44c      	b.n	800504e <d_exprlist+0x3a2>
 80057b4:	4620      	mov	r0, r4
 80057b6:	f7fe fc07 	bl	8003fc8 <d_template_args>
 80057ba:	464a      	mov	r2, r9
 80057bc:	4603      	mov	r3, r0
 80057be:	2104      	movs	r1, #4
 80057c0:	4620      	mov	r0, r4
 80057c2:	f7fa fd05 	bl	80001d0 <d_make_comp>
 80057c6:	4681      	mov	r9, r0
 80057c8:	f7ff bbb8 	b.w	8004f3c <d_exprlist+0x290>
 80057cc:	784b      	ldrb	r3, [r1, #1]
 80057ce:	2b70      	cmp	r3, #112	; 0x70
 80057d0:	f47f ad55 	bne.w	800527e <d_exprlist+0x5d2>
 80057d4:	1c8b      	adds	r3, r1, #2
 80057d6:	60e3      	str	r3, [r4, #12]
 80057d8:	788b      	ldrb	r3, [r1, #2]
 80057da:	2b54      	cmp	r3, #84	; 0x54
 80057dc:	d130      	bne.n	8005840 <d_exprlist+0xb94>
 80057de:	3103      	adds	r1, #3
 80057e0:	60e1      	str	r1, [r4, #12]
 80057e2:	2000      	movs	r0, #0
 80057e4:	6963      	ldr	r3, [r4, #20]
 80057e6:	69a2      	ldr	r2, [r4, #24]
 80057e8:	4293      	cmp	r3, r2
 80057ea:	da2e      	bge.n	800584a <d_exprlist+0xb9e>
 80057ec:	6922      	ldr	r2, [r4, #16]
 80057ee:	1c59      	adds	r1, r3, #1
 80057f0:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80057f4:	eb12 0a83 	adds.w	sl, r2, r3, lsl #2
 80057f8:	6161      	str	r1, [r4, #20]
 80057fa:	f43f ab83 	beq.w	8004f04 <d_exprlist+0x258>
 80057fe:	2106      	movs	r1, #6
 8005800:	f802 1023 	strb.w	r1, [r2, r3, lsl #2]
 8005804:	f8ca 0004 	str.w	r0, [sl, #4]
 8005808:	f7ff bb7c 	b.w	8004f04 <d_exprlist+0x258>
 800580c:	785a      	ldrb	r2, [r3, #1]
 800580e:	2a69      	cmp	r2, #105	; 0x69
 8005810:	f47f aacc 	bne.w	8004dac <d_exprlist+0x100>
 8005814:	3302      	adds	r3, #2
 8005816:	60e3      	str	r3, [r4, #12]
 8005818:	2145      	movs	r1, #69	; 0x45
 800581a:	4620      	mov	r0, r4
 800581c:	f7ff fa46 	bl	8004cac <d_exprlist>
 8005820:	4683      	mov	fp, r0
 8005822:	f7ff bb33 	b.w	8004e8c <d_exprlist+0x1e0>
 8005826:	4620      	mov	r0, r4
 8005828:	f002 fb94 	bl	8007f54 <d_expr_primary>
 800582c:	4681      	mov	r9, r0
 800582e:	f7ff bbbf 	b.w	8004fb0 <d_exprlist+0x304>
 8005832:	4620      	mov	r0, r4
 8005834:	f7fa fe58 	bl	80004e8 <d_compact_number>
 8005838:	3001      	adds	r0, #1
 800583a:	d1a7      	bne.n	800578c <d_exprlist+0xae0>
 800583c:	2200      	movs	r2, #0
 800583e:	e406      	b.n	800504e <d_exprlist+0x3a2>
 8005840:	4620      	mov	r0, r4
 8005842:	f7fa fe51 	bl	80004e8 <d_compact_number>
 8005846:	3001      	adds	r0, #1
 8005848:	d1cc      	bne.n	80057e4 <d_exprlist+0xb38>
 800584a:	f04f 0a00 	mov.w	sl, #0
 800584e:	f7ff bb59 	b.w	8004f04 <d_exprlist+0x258>
 8005852:	4620      	mov	r0, r4
 8005854:	f7fa fe60 	bl	8000518 <d_template_param>
 8005858:	4681      	mov	r9, r0
 800585a:	f7ff bba9 	b.w	8004fb0 <d_exprlist+0x304>
 800585e:	6843      	ldr	r3, [r0, #4]
 8005860:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8005862:	689a      	ldr	r2, [r3, #8]
 8005864:	f8d3 b000 	ldr.w	fp, [r3]
 8005868:	4948      	ldr	r1, [pc, #288]	; (800598c <d_exprlist+0xce0>)
 800586a:	9300      	str	r3, [sp, #0]
 800586c:	3a02      	subs	r2, #2
 800586e:	4402      	add	r2, r0
 8005870:	6322      	str	r2, [r4, #48]	; 0x30
 8005872:	4658      	mov	r0, fp
 8005874:	f002 fe34 	bl	80084e0 <strcmp>
 8005878:	9b00      	ldr	r3, [sp, #0]
 800587a:	2800      	cmp	r0, #0
 800587c:	f000 8325 	beq.w	8005eca <d_exprlist+0x121e>
 8005880:	68db      	ldr	r3, [r3, #12]
 8005882:	2b03      	cmp	r3, #3
 8005884:	f63f ac9e 	bhi.w	80051c4 <d_exprlist+0x518>
 8005888:	a201      	add	r2, pc, #4	; (adr r2, 8005890 <d_exprlist+0xbe4>)
 800588a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800588e:	bf00      	nop
 8005890:	080052db 	.word	0x080052db
 8005894:	08005c8b 	.word	0x08005c8b
 8005898:	08005377 	.word	0x08005377
 800589c:	080052ef 	.word	0x080052ef
 80058a0:	7853      	ldrb	r3, [r2, #1]
 80058a2:	2b72      	cmp	r3, #114	; 0x72
 80058a4:	f000 8384 	beq.w	8005fb0 <d_exprlist+0x1304>
 80058a8:	2b70      	cmp	r3, #112	; 0x70
 80058aa:	f000 843f 	beq.w	800612c <d_exprlist+0x1480>
 80058ae:	4620      	mov	r0, r4
 80058b0:	f001 fc24 	bl	80070fc <d_operator_name>
 80058b4:	4683      	mov	fp, r0
 80058b6:	2800      	cmp	r0, #0
 80058b8:	f43f aae8 	beq.w	8004e8c <d_exprlist+0x1e0>
 80058bc:	7803      	ldrb	r3, [r0, #0]
 80058be:	2b31      	cmp	r3, #49	; 0x31
 80058c0:	f000 823c 	beq.w	8005d3c <d_exprlist+0x1090>
 80058c4:	2b32      	cmp	r3, #50	; 0x32
 80058c6:	f040 81c2 	bne.w	8005c4e <d_exprlist+0xfa2>
 80058ca:	f8db 3004 	ldr.w	r3, [fp, #4]
 80058ce:	2b03      	cmp	r3, #3
 80058d0:	f200 8123 	bhi.w	8005b1a <d_exprlist+0xe6e>
 80058d4:	e8df f013 	tbh	[pc, r3, lsl #1]
 80058d8:	01c30004 	.word	0x01c30004
 80058dc:	000d005c 	.word	0x000d005c
 80058e0:	465a      	mov	r2, fp
 80058e2:	2300      	movs	r3, #0
 80058e4:	2134      	movs	r1, #52	; 0x34
 80058e6:	4620      	mov	r0, r4
 80058e8:	f7fa fc72 	bl	80001d0 <d_make_comp>
 80058ec:	4683      	mov	fp, r0
 80058ee:	f7ff bacd 	b.w	8004e8c <d_exprlist+0x1e0>
 80058f2:	2300      	movs	r3, #0
 80058f4:	9300      	str	r3, [sp, #0]
 80058f6:	4921      	ldr	r1, [pc, #132]	; (800597c <d_exprlist+0xcd0>)
 80058f8:	9800      	ldr	r0, [sp, #0]
 80058fa:	f002 fdf1 	bl	80084e0 <strcmp>
 80058fe:	2800      	cmp	r0, #0
 8005900:	f000 850a 	beq.w	8006318 <d_exprlist+0x166c>
 8005904:	9900      	ldr	r1, [sp, #0]
 8005906:	780a      	ldrb	r2, [r1, #0]
 8005908:	2a6e      	cmp	r2, #110	; 0x6e
 800590a:	f040 8106 	bne.w	8005b1a <d_exprlist+0xe6e>
 800590e:	784b      	ldrb	r3, [r1, #1]
 8005910:	2b77      	cmp	r3, #119	; 0x77
 8005912:	d002      	beq.n	800591a <d_exprlist+0xc6e>
 8005914:	2b61      	cmp	r3, #97	; 0x61
 8005916:	f040 8100 	bne.w	8005b1a <d_exprlist+0xe6e>
 800591a:	215f      	movs	r1, #95	; 0x5f
 800591c:	4620      	mov	r0, r4
 800591e:	f7ff f9c5 	bl	8004cac <d_exprlist>
 8005922:	9000      	str	r0, [sp, #0]
 8005924:	4620      	mov	r0, r4
 8005926:	f001 f82b 	bl	8006980 <d_type>
 800592a:	68e3      	ldr	r3, [r4, #12]
 800592c:	9001      	str	r0, [sp, #4]
 800592e:	781a      	ldrb	r2, [r3, #0]
 8005930:	2a45      	cmp	r2, #69	; 0x45
 8005932:	f000 84e0 	beq.w	80062f6 <d_exprlist+0x164a>
 8005936:	2a70      	cmp	r2, #112	; 0x70
 8005938:	f000 85c8 	beq.w	80064cc <d_exprlist+0x1820>
 800593c:	2a69      	cmp	r2, #105	; 0x69
 800593e:	f040 80ec 	bne.w	8005b1a <d_exprlist+0xe6e>
 8005942:	785b      	ldrb	r3, [r3, #1]
 8005944:	2b6c      	cmp	r3, #108	; 0x6c
 8005946:	f040 80e8 	bne.w	8005b1a <d_exprlist+0xe6e>
 800594a:	4620      	mov	r0, r4
 800594c:	f000 fe46 	bl	80065dc <d_expression_1>
 8005950:	4603      	mov	r3, r0
 8005952:	9a01      	ldr	r2, [sp, #4]
 8005954:	213a      	movs	r1, #58	; 0x3a
 8005956:	4620      	mov	r0, r4
 8005958:	f7fa fc3a 	bl	80001d0 <d_make_comp>
 800595c:	9a00      	ldr	r2, [sp, #0]
 800595e:	4603      	mov	r3, r0
 8005960:	2139      	movs	r1, #57	; 0x39
 8005962:	4620      	mov	r0, r4
 8005964:	f7fa fc34 	bl	80001d0 <d_make_comp>
 8005968:	465a      	mov	r2, fp
 800596a:	4603      	mov	r3, r0
 800596c:	2138      	movs	r1, #56	; 0x38
 800596e:	4620      	mov	r0, r4
 8005970:	f7fa fc2e 	bl	80001d0 <d_make_comp>
 8005974:	4683      	mov	fp, r0
 8005976:	f7ff ba89 	b.w	8004e8c <d_exprlist+0x1e0>
 800597a:	bf00      	nop
 800597c:	08011284 	.word	0x08011284
 8005980:	0801127c 	.word	0x0801127c
 8005984:	08011398 	.word	0x08011398
 8005988:	0801139c 	.word	0x0801139c
 800598c:	0801158c 	.word	0x0801158c
 8005990:	2300      	movs	r3, #0
 8005992:	9300      	str	r3, [sp, #0]
 8005994:	f8db 2004 	ldr.w	r2, [fp, #4]
 8005998:	6812      	ldr	r2, [r2, #0]
 800599a:	7851      	ldrb	r1, [r2, #1]
 800599c:	2963      	cmp	r1, #99	; 0x63
 800599e:	f000 84cf 	beq.w	8006340 <d_exprlist+0x1694>
 80059a2:	4620      	mov	r0, r4
 80059a4:	f000 fe1a 	bl	80065dc <d_expression_1>
 80059a8:	9001      	str	r0, [sp, #4]
 80059aa:	49d3      	ldr	r1, [pc, #844]	; (8005cf8 <d_exprlist+0x104c>)
 80059ac:	9800      	ldr	r0, [sp, #0]
 80059ae:	f002 fd97 	bl	80084e0 <strcmp>
 80059b2:	2800      	cmp	r0, #0
 80059b4:	f000 84bd 	beq.w	8006332 <d_exprlist+0x1686>
 80059b8:	49d0      	ldr	r1, [pc, #832]	; (8005cfc <d_exprlist+0x1050>)
 80059ba:	9800      	ldr	r0, [sp, #0]
 80059bc:	f002 fd90 	bl	80084e0 <strcmp>
 80059c0:	b130      	cbz	r0, 80059d0 <d_exprlist+0xd24>
 80059c2:	9800      	ldr	r0, [sp, #0]
 80059c4:	49ce      	ldr	r1, [pc, #824]	; (8005d00 <d_exprlist+0x1054>)
 80059c6:	f002 fd8b 	bl	80084e0 <strcmp>
 80059ca:	2800      	cmp	r0, #0
 80059cc:	f040 84c7 	bne.w	800635e <d_exprlist+0x16b2>
 80059d0:	4620      	mov	r0, r4
 80059d2:	f001 fc53 	bl	800727c <d_unqualified_name>
 80059d6:	68e3      	ldr	r3, [r4, #12]
 80059d8:	781b      	ldrb	r3, [r3, #0]
 80059da:	2b49      	cmp	r3, #73	; 0x49
 80059dc:	4602      	mov	r2, r0
 80059de:	d10a      	bne.n	80059f6 <d_exprlist+0xd4a>
 80059e0:	9000      	str	r0, [sp, #0]
 80059e2:	4620      	mov	r0, r4
 80059e4:	f7fe faf0 	bl	8003fc8 <d_template_args>
 80059e8:	9a00      	ldr	r2, [sp, #0]
 80059ea:	4603      	mov	r3, r0
 80059ec:	2104      	movs	r1, #4
 80059ee:	4620      	mov	r0, r4
 80059f0:	f7fa fbee 	bl	80001d0 <d_make_comp>
 80059f4:	4602      	mov	r2, r0
 80059f6:	4613      	mov	r3, r2
 80059f8:	2137      	movs	r1, #55	; 0x37
 80059fa:	9a01      	ldr	r2, [sp, #4]
 80059fc:	4620      	mov	r0, r4
 80059fe:	f7fa fbe7 	bl	80001d0 <d_make_comp>
 8005a02:	465a      	mov	r2, fp
 8005a04:	4603      	mov	r3, r0
 8005a06:	2136      	movs	r1, #54	; 0x36
 8005a08:	4620      	mov	r0, r4
 8005a0a:	f7fa fbe1 	bl	80001d0 <d_make_comp>
 8005a0e:	4683      	mov	fp, r0
 8005a10:	f7ff ba3c 	b.w	8004e8c <d_exprlist+0x1e0>
 8005a14:	7843      	ldrb	r3, [r0, #1]
 8005a16:	2b72      	cmp	r3, #114	; 0x72
 8005a18:	f000 82a6 	beq.w	8005f68 <d_exprlist+0x12bc>
 8005a1c:	2b70      	cmp	r3, #112	; 0x70
 8005a1e:	f47f ac0b 	bne.w	8005238 <d_exprlist+0x58c>
 8005a22:	1c82      	adds	r2, r0, #2
 8005a24:	60e2      	str	r2, [r4, #12]
 8005a26:	4620      	mov	r0, r4
 8005a28:	f000 fdd8 	bl	80065dc <d_expression_1>
 8005a2c:	465b      	mov	r3, fp
 8005a2e:	4602      	mov	r2, r0
 8005a30:	2149      	movs	r1, #73	; 0x49
 8005a32:	e55b      	b.n	80054ec <d_exprlist+0x840>
 8005a34:	7853      	ldrb	r3, [r2, #1]
 8005a36:	2b70      	cmp	r3, #112	; 0x70
 8005a38:	f47f af39 	bne.w	80058ae <d_exprlist+0xc02>
 8005a3c:	1c93      	adds	r3, r2, #2
 8005a3e:	60e3      	str	r3, [r4, #12]
 8005a40:	7893      	ldrb	r3, [r2, #2]
 8005a42:	2b54      	cmp	r3, #84	; 0x54
 8005a44:	f040 82cb 	bne.w	8005fde <d_exprlist+0x1332>
 8005a48:	3203      	adds	r2, #3
 8005a4a:	60e2      	str	r2, [r4, #12]
 8005a4c:	2000      	movs	r0, #0
 8005a4e:	6963      	ldr	r3, [r4, #20]
 8005a50:	69a2      	ldr	r2, [r4, #24]
 8005a52:	4293      	cmp	r3, r2
 8005a54:	da61      	bge.n	8005b1a <d_exprlist+0xe6e>
 8005a56:	6922      	ldr	r2, [r4, #16]
 8005a58:	1c59      	adds	r1, r3, #1
 8005a5a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8005a5e:	eb12 0b83 	adds.w	fp, r2, r3, lsl #2
 8005a62:	6161      	str	r1, [r4, #20]
 8005a64:	f43f aa12 	beq.w	8004e8c <d_exprlist+0x1e0>
 8005a68:	2106      	movs	r1, #6
 8005a6a:	f802 1023 	strb.w	r1, [r2, r3, lsl #2]
 8005a6e:	f8cb 0004 	str.w	r0, [fp, #4]
 8005a72:	f7ff ba0b 	b.w	8004e8c <d_exprlist+0x1e0>
 8005a76:	2b33      	cmp	r3, #51	; 0x33
 8005a78:	f47f aee0 	bne.w	800583c <d_exprlist+0xb90>
 8005a7c:	68e3      	ldr	r3, [r4, #12]
 8005a7e:	781a      	ldrb	r2, [r3, #0]
 8005a80:	2a5f      	cmp	r2, #95	; 0x5f
 8005a82:	f000 83b7 	beq.w	80061f4 <d_exprlist+0x1548>
 8005a86:	f04f 0900 	mov.w	r9, #0
 8005a8a:	4620      	mov	r0, r4
 8005a8c:	f000 fda6 	bl	80065dc <d_expression_1>
 8005a90:	4603      	mov	r3, r0
 8005a92:	f1b9 0f00 	cmp.w	r9, #0
 8005a96:	d005      	beq.n	8005aa4 <d_exprlist+0xdf8>
 8005a98:	4602      	mov	r2, r0
 8005a9a:	2137      	movs	r1, #55	; 0x37
 8005a9c:	4620      	mov	r0, r4
 8005a9e:	f7fa fb97 	bl	80001d0 <d_make_comp>
 8005aa2:	4603      	mov	r3, r0
 8005aa4:	4642      	mov	r2, r8
 8005aa6:	2135      	movs	r1, #53	; 0x35
 8005aa8:	4620      	mov	r0, r4
 8005aaa:	f7fa fb91 	bl	80001d0 <d_make_comp>
 8005aae:	4602      	mov	r2, r0
 8005ab0:	f7ff bacd 	b.w	800504e <d_exprlist+0x3a2>
 8005ab4:	2b33      	cmp	r3, #51	; 0x33
 8005ab6:	f47f aec8 	bne.w	800584a <d_exprlist+0xb9e>
 8005aba:	68e3      	ldr	r3, [r4, #12]
 8005abc:	781a      	ldrb	r2, [r3, #0]
 8005abe:	2a5f      	cmp	r2, #95	; 0x5f
 8005ac0:	f000 83e5 	beq.w	800628e <d_exprlist+0x15e2>
 8005ac4:	f04f 0b00 	mov.w	fp, #0
 8005ac8:	4620      	mov	r0, r4
 8005aca:	f000 fd87 	bl	80065dc <d_expression_1>
 8005ace:	4603      	mov	r3, r0
 8005ad0:	f1bb 0f00 	cmp.w	fp, #0
 8005ad4:	d005      	beq.n	8005ae2 <d_exprlist+0xe36>
 8005ad6:	4602      	mov	r2, r0
 8005ad8:	2137      	movs	r1, #55	; 0x37
 8005ada:	4620      	mov	r0, r4
 8005adc:	f7fa fb78 	bl	80001d0 <d_make_comp>
 8005ae0:	4603      	mov	r3, r0
 8005ae2:	4652      	mov	r2, sl
 8005ae4:	2135      	movs	r1, #53	; 0x35
 8005ae6:	4620      	mov	r0, r4
 8005ae8:	f7fa fb72 	bl	80001d0 <d_make_comp>
 8005aec:	4682      	mov	sl, r0
 8005aee:	f7ff ba09 	b.w	8004f04 <d_exprlist+0x258>
 8005af2:	784b      	ldrb	r3, [r1, #1]
 8005af4:	2b6e      	cmp	r3, #110	; 0x6e
 8005af6:	f47f abc2 	bne.w	800527e <d_exprlist+0x5d2>
 8005afa:	3102      	adds	r1, #2
 8005afc:	60e1      	str	r1, [r4, #12]
 8005afe:	f7ff b9f5 	b.w	8004eec <d_exprlist+0x240>
 8005b02:	4620      	mov	r0, r4
 8005b04:	f002 fa26 	bl	8007f54 <d_expr_primary>
 8005b08:	4682      	mov	sl, r0
 8005b0a:	f7ff b9fb 	b.w	8004f04 <d_exprlist+0x258>
 8005b0e:	4620      	mov	r0, r4
 8005b10:	f7fa fd02 	bl	8000518 <d_template_param>
 8005b14:	4602      	mov	r2, r0
 8005b16:	f7ff ba9a 	b.w	800504e <d_exprlist+0x3a2>
 8005b1a:	f04f 0b00 	mov.w	fp, #0
 8005b1e:	f7ff b9b5 	b.w	8004e8c <d_exprlist+0x1e0>
 8005b22:	f8d0 a004 	ldr.w	sl, [r0, #4]
 8005b26:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8005b28:	f8da 3008 	ldr.w	r3, [sl, #8]
 8005b2c:	f8da 9000 	ldr.w	r9, [sl]
 8005b30:	4974      	ldr	r1, [pc, #464]	; (8005d04 <d_exprlist+0x1058>)
 8005b32:	3b02      	subs	r3, #2
 8005b34:	4413      	add	r3, r2
 8005b36:	6323      	str	r3, [r4, #48]	; 0x30
 8005b38:	4648      	mov	r0, r9
 8005b3a:	f002 fcd1 	bl	80084e0 <strcmp>
 8005b3e:	2800      	cmp	r0, #0
 8005b40:	f000 8280 	beq.w	8006044 <d_exprlist+0x1398>
 8005b44:	f8da 300c 	ldr.w	r3, [sl, #12]
 8005b48:	2b03      	cmp	r3, #3
 8005b4a:	f63f ae77 	bhi.w	800583c <d_exprlist+0xb90>
 8005b4e:	a201      	add	r2, pc, #4	; (adr r2, 8005b54 <d_exprlist+0xea8>)
 8005b50:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005b54:	08005645 	.word	0x08005645
 8005b58:	08005e21 	.word	0x08005e21
 8005b5c:	080056e1 	.word	0x080056e1
 8005b60:	08005659 	.word	0x08005659
 8005b64:	68e2      	ldr	r2, [r4, #12]
 8005b66:	f04f 0900 	mov.w	r9, #0
 8005b6a:	7813      	ldrb	r3, [r2, #0]
 8005b6c:	f7ff bac3 	b.w	80050f6 <d_exprlist+0x44a>
 8005b70:	6843      	ldr	r3, [r0, #4]
 8005b72:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8005b74:	689a      	ldr	r2, [r3, #8]
 8005b76:	f8d3 b000 	ldr.w	fp, [r3]
 8005b7a:	4962      	ldr	r1, [pc, #392]	; (8005d04 <d_exprlist+0x1058>)
 8005b7c:	9300      	str	r3, [sp, #0]
 8005b7e:	3a02      	subs	r2, #2
 8005b80:	4402      	add	r2, r0
 8005b82:	6322      	str	r2, [r4, #48]	; 0x30
 8005b84:	4658      	mov	r0, fp
 8005b86:	f002 fcab 	bl	80084e0 <strcmp>
 8005b8a:	9b00      	ldr	r3, [sp, #0]
 8005b8c:	2800      	cmp	r0, #0
 8005b8e:	f000 8274 	beq.w	800607a <d_exprlist+0x13ce>
 8005b92:	68db      	ldr	r3, [r3, #12]
 8005b94:	2b03      	cmp	r3, #3
 8005b96:	f63f ae58 	bhi.w	800584a <d_exprlist+0xb9e>
 8005b9a:	a201      	add	r2, pc, #4	; (adr r2, 8005ba0 <d_exprlist+0xef4>)
 8005b9c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005ba0:	080053e1 	.word	0x080053e1
 8005ba4:	08005e6b 	.word	0x08005e6b
 8005ba8:	0800547d 	.word	0x0800547d
 8005bac:	080053f5 	.word	0x080053f5
 8005bb0:	3301      	adds	r3, #1
 8005bb2:	60e3      	str	r3, [r4, #12]
 8005bb4:	f04f 0b00 	mov.w	fp, #0
 8005bb8:	4620      	mov	r0, r4
 8005bba:	f000 fd0f 	bl	80065dc <d_expression_1>
 8005bbe:	4603      	mov	r3, r0
 8005bc0:	f1bb 0f00 	cmp.w	fp, #0
 8005bc4:	d005      	beq.n	8005bd2 <d_exprlist+0xf26>
 8005bc6:	4602      	mov	r2, r0
 8005bc8:	2137      	movs	r1, #55	; 0x37
 8005bca:	4620      	mov	r0, r4
 8005bcc:	f7fa fb00 	bl	80001d0 <d_make_comp>
 8005bd0:	4603      	mov	r3, r0
 8005bd2:	464a      	mov	r2, r9
 8005bd4:	2135      	movs	r1, #53	; 0x35
 8005bd6:	4620      	mov	r0, r4
 8005bd8:	f7fa fafa 	bl	80001d0 <d_make_comp>
 8005bdc:	4681      	mov	r9, r0
 8005bde:	f7ff b9e7 	b.w	8004fb0 <d_exprlist+0x304>
 8005be2:	3101      	adds	r1, #1
 8005be4:	60e1      	str	r1, [r4, #12]
 8005be6:	f7ff b9c5 	b.w	8004f74 <d_exprlist+0x2c8>
 8005bea:	2b33      	cmp	r3, #51	; 0x33
 8005bec:	d1ba      	bne.n	8005b64 <d_exprlist+0xeb8>
 8005bee:	68e3      	ldr	r3, [r4, #12]
 8005bf0:	781a      	ldrb	r2, [r3, #0]
 8005bf2:	2a5f      	cmp	r2, #95	; 0x5f
 8005bf4:	f000 8288 	beq.w	8006108 <d_exprlist+0x145c>
 8005bf8:	f04f 0b00 	mov.w	fp, #0
 8005bfc:	4620      	mov	r0, r4
 8005bfe:	f000 fced 	bl	80065dc <d_expression_1>
 8005c02:	4603      	mov	r3, r0
 8005c04:	f1bb 0f00 	cmp.w	fp, #0
 8005c08:	f000 8285 	beq.w	8006116 <d_exprlist+0x146a>
 8005c0c:	4602      	mov	r2, r0
 8005c0e:	2137      	movs	r1, #55	; 0x37
 8005c10:	4620      	mov	r0, r4
 8005c12:	f7fa fadd 	bl	80001d0 <d_make_comp>
 8005c16:	464a      	mov	r2, r9
 8005c18:	4603      	mov	r3, r0
 8005c1a:	2135      	movs	r1, #53	; 0x35
 8005c1c:	e466      	b.n	80054ec <d_exprlist+0x840>
 8005c1e:	3102      	adds	r1, #2
 8005c20:	60e1      	str	r1, [r4, #12]
 8005c22:	4620      	mov	r0, r4
 8005c24:	f000 feac 	bl	8006980 <d_type>
 8005c28:	4681      	mov	r9, r0
 8005c2a:	4620      	mov	r0, r4
 8005c2c:	f001 fb26 	bl	800727c <d_unqualified_name>
 8005c30:	68e3      	ldr	r3, [r4, #12]
 8005c32:	781b      	ldrb	r3, [r3, #0]
 8005c34:	2b49      	cmp	r3, #73	; 0x49
 8005c36:	4683      	mov	fp, r0
 8005c38:	f000 81e1 	beq.w	8005ffe <d_exprlist+0x1352>
 8005c3c:	4603      	mov	r3, r0
 8005c3e:	464a      	mov	r2, r9
 8005c40:	2101      	movs	r1, #1
 8005c42:	4620      	mov	r0, r4
 8005c44:	f7fa fac4 	bl	80001d0 <d_make_comp>
 8005c48:	4681      	mov	r9, r0
 8005c4a:	f7ff b9b1 	b.w	8004fb0 <d_exprlist+0x304>
 8005c4e:	2b33      	cmp	r3, #51	; 0x33
 8005c50:	f47f af63 	bne.w	8005b1a <d_exprlist+0xe6e>
 8005c54:	68e3      	ldr	r3, [r4, #12]
 8005c56:	781a      	ldrb	r2, [r3, #0]
 8005c58:	2a5f      	cmp	r2, #95	; 0x5f
 8005c5a:	f000 83b7 	beq.w	80063cc <d_exprlist+0x1720>
 8005c5e:	2200      	movs	r2, #0
 8005c60:	4620      	mov	r0, r4
 8005c62:	9200      	str	r2, [sp, #0]
 8005c64:	f000 fcba 	bl	80065dc <d_expression_1>
 8005c68:	9a00      	ldr	r2, [sp, #0]
 8005c6a:	4603      	mov	r3, r0
 8005c6c:	b12a      	cbz	r2, 8005c7a <d_exprlist+0xfce>
 8005c6e:	4602      	mov	r2, r0
 8005c70:	2137      	movs	r1, #55	; 0x37
 8005c72:	4620      	mov	r0, r4
 8005c74:	f7fa faac 	bl	80001d0 <d_make_comp>
 8005c78:	4603      	mov	r3, r0
 8005c7a:	465a      	mov	r2, fp
 8005c7c:	2135      	movs	r1, #53	; 0x35
 8005c7e:	4620      	mov	r0, r4
 8005c80:	f7fa faa6 	bl	80001d0 <d_make_comp>
 8005c84:	4683      	mov	fp, r0
 8005c86:	f7ff b901 	b.w	8004e8c <d_exprlist+0x1e0>
 8005c8a:	f1bb 0f00 	cmp.w	fp, #0
 8005c8e:	d091      	beq.n	8005bb4 <d_exprlist+0xf08>
 8005c90:	f89b 3000 	ldrb.w	r3, [fp]
 8005c94:	2b70      	cmp	r3, #112	; 0x70
 8005c96:	d001      	beq.n	8005c9c <d_exprlist+0xff0>
 8005c98:	2b6d      	cmp	r3, #109	; 0x6d
 8005c9a:	d18b      	bne.n	8005bb4 <d_exprlist+0xf08>
 8005c9c:	f89b 2001 	ldrb.w	r2, [fp, #1]
 8005ca0:	429a      	cmp	r2, r3
 8005ca2:	d187      	bne.n	8005bb4 <d_exprlist+0xf08>
 8005ca4:	68e3      	ldr	r3, [r4, #12]
 8005ca6:	781a      	ldrb	r2, [r3, #0]
 8005ca8:	2a5f      	cmp	r2, #95	; 0x5f
 8005caa:	d081      	beq.n	8005bb0 <d_exprlist+0xf04>
 8005cac:	f04f 0b01 	mov.w	fp, #1
 8005cb0:	e782      	b.n	8005bb8 <d_exprlist+0xf0c>
 8005cb2:	4620      	mov	r0, r4
 8005cb4:	f7fe f988 	bl	8003fc8 <d_template_args>
 8005cb8:	4642      	mov	r2, r8
 8005cba:	4603      	mov	r3, r0
 8005cbc:	2104      	movs	r1, #4
 8005cbe:	4620      	mov	r0, r4
 8005cc0:	f7fa fa86 	bl	80001d0 <d_make_comp>
 8005cc4:	4602      	mov	r2, r0
 8005cc6:	f7ff b9c2 	b.w	800504e <d_exprlist+0x3a2>
 8005cca:	4620      	mov	r0, r4
 8005ccc:	f002 f942 	bl	8007f54 <d_expr_primary>
 8005cd0:	4683      	mov	fp, r0
 8005cd2:	f7ff b8db 	b.w	8004e8c <d_exprlist+0x1e0>
 8005cd6:	4620      	mov	r0, r4
 8005cd8:	f7fa fc06 	bl	80004e8 <d_compact_number>
 8005cdc:	3001      	adds	r0, #1
 8005cde:	f47f aa80 	bne.w	80051e2 <d_exprlist+0x536>
 8005ce2:	4681      	mov	r9, r0
 8005ce4:	f7ff b964 	b.w	8004fb0 <d_exprlist+0x304>
 8005ce8:	4620      	mov	r0, r4
 8005cea:	f002 f933 	bl	8007f54 <d_expr_primary>
 8005cee:	68e2      	ldr	r2, [r4, #12]
 8005cf0:	4681      	mov	r9, r0
 8005cf2:	7813      	ldrb	r3, [r2, #0]
 8005cf4:	f7ff b9ff 	b.w	80050f6 <d_exprlist+0x44a>
 8005cf8:	0801127c 	.word	0x0801127c
 8005cfc:	08011398 	.word	0x08011398
 8005d00:	0801139c 	.word	0x0801139c
 8005d04:	0801158c 	.word	0x0801158c
 8005d08:	4620      	mov	r0, r4
 8005d0a:	f7fa fc05 	bl	8000518 <d_template_param>
 8005d0e:	4683      	mov	fp, r0
 8005d10:	f7ff b8bc 	b.w	8004e8c <d_exprlist+0x1e0>
 8005d14:	4620      	mov	r0, r4
 8005d16:	f7fe f957 	bl	8003fc8 <d_template_args>
 8005d1a:	4652      	mov	r2, sl
 8005d1c:	4603      	mov	r3, r0
 8005d1e:	2104      	movs	r1, #4
 8005d20:	4620      	mov	r0, r4
 8005d22:	f7fa fa55 	bl	80001d0 <d_make_comp>
 8005d26:	4682      	mov	sl, r0
 8005d28:	f7ff b8ec 	b.w	8004f04 <d_exprlist+0x258>
 8005d2c:	4620      	mov	r0, r4
 8005d2e:	f7fa fbf3 	bl	8000518 <d_template_param>
 8005d32:	68e2      	ldr	r2, [r4, #12]
 8005d34:	4681      	mov	r9, r0
 8005d36:	7813      	ldrb	r3, [r2, #0]
 8005d38:	f7ff b9dd 	b.w	80050f6 <d_exprlist+0x44a>
 8005d3c:	6843      	ldr	r3, [r0, #4]
 8005d3e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8005d40:	689a      	ldr	r2, [r3, #8]
 8005d42:	6819      	ldr	r1, [r3, #0]
 8005d44:	9301      	str	r3, [sp, #4]
 8005d46:	3a02      	subs	r2, #2
 8005d48:	460b      	mov	r3, r1
 8005d4a:	4410      	add	r0, r2
 8005d4c:	9100      	str	r1, [sp, #0]
 8005d4e:	6320      	str	r0, [r4, #48]	; 0x30
 8005d50:	49d2      	ldr	r1, [pc, #840]	; (800609c <d_exprlist+0x13f0>)
 8005d52:	4618      	mov	r0, r3
 8005d54:	f002 fbc4 	bl	80084e0 <strcmp>
 8005d58:	9b01      	ldr	r3, [sp, #4]
 8005d5a:	2800      	cmp	r0, #0
 8005d5c:	f000 8192 	beq.w	8006084 <d_exprlist+0x13d8>
 8005d60:	68da      	ldr	r2, [r3, #12]
 8005d62:	2a03      	cmp	r2, #3
 8005d64:	f63f aed9 	bhi.w	8005b1a <d_exprlist+0xe6e>
 8005d68:	a301      	add	r3, pc, #4	; (adr r3, 8005d70 <d_exprlist+0x10c4>)
 8005d6a:	f853 f022 	ldr.w	pc, [r3, r2, lsl #2]
 8005d6e:	bf00      	nop
 8005d70:	080058e1 	.word	0x080058e1
 8005d74:	0800604f 	.word	0x0800604f
 8005d78:	08005995 	.word	0x08005995
 8005d7c:	080058f7 	.word	0x080058f7
 8005d80:	6843      	ldr	r3, [r0, #4]
 8005d82:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8005d84:	689a      	ldr	r2, [r3, #8]
 8005d86:	f8d3 b000 	ldr.w	fp, [r3]
 8005d8a:	49c4      	ldr	r1, [pc, #784]	; (800609c <d_exprlist+0x13f0>)
 8005d8c:	9300      	str	r3, [sp, #0]
 8005d8e:	3a02      	subs	r2, #2
 8005d90:	4402      	add	r2, r0
 8005d92:	6322      	str	r2, [r4, #48]	; 0x30
 8005d94:	4658      	mov	r0, fp
 8005d96:	f002 fba3 	bl	80084e0 <strcmp>
 8005d9a:	9b00      	ldr	r3, [sp, #0]
 8005d9c:	2800      	cmp	r0, #0
 8005d9e:	f000 81ff 	beq.w	80061a0 <d_exprlist+0x14f4>
 8005da2:	68db      	ldr	r3, [r3, #12]
 8005da4:	2b03      	cmp	r3, #3
 8005da6:	f63f aedd 	bhi.w	8005b64 <d_exprlist+0xeb8>
 8005daa:	a201      	add	r2, pc, #4	; (adr r2, 8005db0 <d_exprlist+0x1104>)
 8005dac:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005db0:	080054e7 	.word	0x080054e7
 8005db4:	08006015 	.word	0x08006015
 8005db8:	0800557f 	.word	0x0800557f
 8005dbc:	080054ff 	.word	0x080054ff
 8005dc0:	3102      	adds	r1, #2
 8005dc2:	60e1      	str	r1, [r4, #12]
 8005dc4:	4620      	mov	r0, r4
 8005dc6:	f000 fc09 	bl	80065dc <d_expression_1>
 8005dca:	2300      	movs	r3, #0
 8005dcc:	4602      	mov	r2, r0
 8005dce:	2149      	movs	r1, #73	; 0x49
 8005dd0:	4620      	mov	r0, r4
 8005dd2:	f7fa f9fd 	bl	80001d0 <d_make_comp>
 8005dd6:	4681      	mov	r9, r0
 8005dd8:	f7ff b8ea 	b.w	8004fb0 <d_exprlist+0x304>
 8005ddc:	1c83      	adds	r3, r0, #2
 8005dde:	60e3      	str	r3, [r4, #12]
 8005de0:	7883      	ldrb	r3, [r0, #2]
 8005de2:	2b54      	cmp	r3, #84	; 0x54
 8005de4:	f040 80d9 	bne.w	8005f9a <d_exprlist+0x12ee>
 8005de8:	1cc2      	adds	r2, r0, #3
 8005dea:	60e2      	str	r2, [r4, #12]
 8005dec:	4658      	mov	r0, fp
 8005dee:	6963      	ldr	r3, [r4, #20]
 8005df0:	69a1      	ldr	r1, [r4, #24]
 8005df2:	428b      	cmp	r3, r1
 8005df4:	f280 80cc 	bge.w	8005f90 <d_exprlist+0x12e4>
 8005df8:	6921      	ldr	r1, [r4, #16]
 8005dfa:	f103 0e01 	add.w	lr, r3, #1
 8005dfe:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8005e02:	eb11 0983 	adds.w	r9, r1, r3, lsl #2
 8005e06:	f8c4 e014 	str.w	lr, [r4, #20]
 8005e0a:	f43f ab74 	beq.w	80054f6 <d_exprlist+0x84a>
 8005e0e:	f04f 0e06 	mov.w	lr, #6
 8005e12:	f801 e023 	strb.w	lr, [r1, r3, lsl #2]
 8005e16:	f8c9 0004 	str.w	r0, [r9, #4]
 8005e1a:	7813      	ldrb	r3, [r2, #0]
 8005e1c:	f7ff b96b 	b.w	80050f6 <d_exprlist+0x44a>
 8005e20:	f1b9 0f00 	cmp.w	r9, #0
 8005e24:	f43f ae2f 	beq.w	8005a86 <d_exprlist+0xdda>
 8005e28:	f899 3000 	ldrb.w	r3, [r9]
 8005e2c:	2b70      	cmp	r3, #112	; 0x70
 8005e2e:	d002      	beq.n	8005e36 <d_exprlist+0x118a>
 8005e30:	2b6d      	cmp	r3, #109	; 0x6d
 8005e32:	f47f ae28 	bne.w	8005a86 <d_exprlist+0xdda>
 8005e36:	f899 2001 	ldrb.w	r2, [r9, #1]
 8005e3a:	429a      	cmp	r2, r3
 8005e3c:	f47f ae23 	bne.w	8005a86 <d_exprlist+0xdda>
 8005e40:	68e3      	ldr	r3, [r4, #12]
 8005e42:	781a      	ldrb	r2, [r3, #0]
 8005e44:	2a5f      	cmp	r2, #95	; 0x5f
 8005e46:	f000 8376 	beq.w	8006536 <d_exprlist+0x188a>
 8005e4a:	f04f 0901 	mov.w	r9, #1
 8005e4e:	e61c      	b.n	8005a8a <d_exprlist+0xdde>
 8005e50:	68e3      	ldr	r3, [r4, #12]
 8005e52:	781a      	ldrb	r2, [r3, #0]
 8005e54:	2a5f      	cmp	r2, #95	; 0x5f
 8005e56:	f47f aead 	bne.w	8005bb4 <d_exprlist+0xf08>
 8005e5a:	3301      	adds	r3, #1
 8005e5c:	60e3      	str	r3, [r4, #12]
 8005e5e:	2145      	movs	r1, #69	; 0x45
 8005e60:	4620      	mov	r0, r4
 8005e62:	f7fe ff23 	bl	8004cac <d_exprlist>
 8005e66:	4603      	mov	r3, r0
 8005e68:	e6b3      	b.n	8005bd2 <d_exprlist+0xf26>
 8005e6a:	f1bb 0f00 	cmp.w	fp, #0
 8005e6e:	f43f ae29 	beq.w	8005ac4 <d_exprlist+0xe18>
 8005e72:	f89b 3000 	ldrb.w	r3, [fp]
 8005e76:	2b70      	cmp	r3, #112	; 0x70
 8005e78:	d002      	beq.n	8005e80 <d_exprlist+0x11d4>
 8005e7a:	2b6d      	cmp	r3, #109	; 0x6d
 8005e7c:	f47f ae22 	bne.w	8005ac4 <d_exprlist+0xe18>
 8005e80:	f89b 2001 	ldrb.w	r2, [fp, #1]
 8005e84:	429a      	cmp	r2, r3
 8005e86:	f47f ae1d 	bne.w	8005ac4 <d_exprlist+0xe18>
 8005e8a:	68e3      	ldr	r3, [r4, #12]
 8005e8c:	781a      	ldrb	r2, [r3, #0]
 8005e8e:	2a5f      	cmp	r2, #95	; 0x5f
 8005e90:	f000 82f7 	beq.w	8006482 <d_exprlist+0x17d6>
 8005e94:	f04f 0b01 	mov.w	fp, #1
 8005e98:	e616      	b.n	8005ac8 <d_exprlist+0xe1c>
 8005e9a:	3204      	adds	r2, #4
 8005e9c:	60e2      	str	r2, [r4, #12]
 8005e9e:	4620      	mov	r0, r4
 8005ea0:	f000 fd6e 	bl	8006980 <d_type>
 8005ea4:	4680      	mov	r8, r0
 8005ea6:	4620      	mov	r0, r4
 8005ea8:	f001 f9e8 	bl	800727c <d_unqualified_name>
 8005eac:	68e3      	ldr	r3, [r4, #12]
 8005eae:	781b      	ldrb	r3, [r3, #0]
 8005eb0:	2b49      	cmp	r3, #73	; 0x49
 8005eb2:	4681      	mov	r9, r0
 8005eb4:	f000 810e 	beq.w	80060d4 <d_exprlist+0x1428>
 8005eb8:	4603      	mov	r3, r0
 8005eba:	4642      	mov	r2, r8
 8005ebc:	2101      	movs	r1, #1
 8005ebe:	4620      	mov	r0, r4
 8005ec0:	f7fa f986 	bl	80001d0 <d_make_comp>
 8005ec4:	4602      	mov	r2, r0
 8005ec6:	f7ff b8c2 	b.w	800504e <d_exprlist+0x3a2>
 8005eca:	4620      	mov	r0, r4
 8005ecc:	f000 fd58 	bl	8006980 <d_type>
 8005ed0:	4603      	mov	r3, r0
 8005ed2:	e67e      	b.n	8005bd2 <d_exprlist+0xf26>
 8005ed4:	4620      	mov	r0, r4
 8005ed6:	f7fe f877 	bl	8003fc8 <d_template_args>
 8005eda:	464a      	mov	r2, r9
 8005edc:	4603      	mov	r3, r0
 8005ede:	2104      	movs	r1, #4
 8005ee0:	f7ff bb04 	b.w	80054ec <d_exprlist+0x840>
 8005ee4:	3102      	adds	r1, #2
 8005ee6:	60e1      	str	r1, [r4, #12]
 8005ee8:	4620      	mov	r0, r4
 8005eea:	f000 fd49 	bl	8006980 <d_type>
 8005eee:	4682      	mov	sl, r0
 8005ef0:	4620      	mov	r0, r4
 8005ef2:	f001 f9c3 	bl	800727c <d_unqualified_name>
 8005ef6:	68e3      	ldr	r3, [r4, #12]
 8005ef8:	781b      	ldrb	r3, [r3, #0]
 8005efa:	2b49      	cmp	r3, #73	; 0x49
 8005efc:	4683      	mov	fp, r0
 8005efe:	f000 80de 	beq.w	80060be <d_exprlist+0x1412>
 8005f02:	4603      	mov	r3, r0
 8005f04:	4652      	mov	r2, sl
 8005f06:	2101      	movs	r1, #1
 8005f08:	4620      	mov	r0, r4
 8005f0a:	f7fa f961 	bl	80001d0 <d_make_comp>
 8005f0e:	4682      	mov	sl, r0
 8005f10:	f7fe bff8 	b.w	8004f04 <d_exprlist+0x258>
 8005f14:	781b      	ldrb	r3, [r3, #0]
 8005f16:	f1a3 0263 	sub.w	r2, r3, #99	; 0x63
 8005f1a:	2a01      	cmp	r2, #1
 8005f1c:	d903      	bls.n	8005f26 <d_exprlist+0x127a>
 8005f1e:	3b72      	subs	r3, #114	; 0x72
 8005f20:	2b01      	cmp	r3, #1
 8005f22:	f63f aa2f 	bhi.w	8005384 <d_exprlist+0x6d8>
 8005f26:	4620      	mov	r0, r4
 8005f28:	f000 fd2a 	bl	8006980 <d_type>
 8005f2c:	9000      	str	r0, [sp, #0]
 8005f2e:	f7ff ba2d 	b.w	800538c <d_exprlist+0x6e0>
 8005f32:	4620      	mov	r0, r4
 8005f34:	f000 fb52 	bl	80065dc <d_expression_1>
 8005f38:	9000      	str	r0, [sp, #0]
 8005f3a:	4620      	mov	r0, r4
 8005f3c:	f000 fb4e 	bl	80065dc <d_expression_1>
 8005f40:	4683      	mov	fp, r0
 8005f42:	4620      	mov	r0, r4
 8005f44:	f000 fb4a 	bl	80065dc <d_expression_1>
 8005f48:	f7ff b9ff 	b.w	800534a <d_exprlist+0x69e>
 8005f4c:	3204      	adds	r2, #4
 8005f4e:	60e2      	str	r2, [r4, #12]
 8005f50:	4620      	mov	r0, r4
 8005f52:	f000 fb43 	bl	80065dc <d_expression_1>
 8005f56:	2300      	movs	r3, #0
 8005f58:	4602      	mov	r2, r0
 8005f5a:	2149      	movs	r1, #73	; 0x49
 8005f5c:	4620      	mov	r0, r4
 8005f5e:	f7fa f937 	bl	80001d0 <d_make_comp>
 8005f62:	4602      	mov	r2, r0
 8005f64:	f7ff b873 	b.w	800504e <d_exprlist+0x3a2>
 8005f68:	1c82      	adds	r2, r0, #2
 8005f6a:	60e2      	str	r2, [r4, #12]
 8005f6c:	4620      	mov	r0, r4
 8005f6e:	f000 fd07 	bl	8006980 <d_type>
 8005f72:	4681      	mov	r9, r0
 8005f74:	4620      	mov	r0, r4
 8005f76:	f001 f981 	bl	800727c <d_unqualified_name>
 8005f7a:	68e3      	ldr	r3, [r4, #12]
 8005f7c:	781b      	ldrb	r3, [r3, #0]
 8005f7e:	2b49      	cmp	r3, #73	; 0x49
 8005f80:	4683      	mov	fp, r0
 8005f82:	f000 818c 	beq.w	800629e <d_exprlist+0x15f2>
 8005f86:	4603      	mov	r3, r0
 8005f88:	464a      	mov	r2, r9
 8005f8a:	2101      	movs	r1, #1
 8005f8c:	f7ff baae 	b.w	80054ec <d_exprlist+0x840>
 8005f90:	7813      	ldrb	r3, [r2, #0]
 8005f92:	f04f 0900 	mov.w	r9, #0
 8005f96:	f7ff b8ae 	b.w	80050f6 <d_exprlist+0x44a>
 8005f9a:	4620      	mov	r0, r4
 8005f9c:	f7fa faa4 	bl	80004e8 <d_compact_number>
 8005fa0:	3001      	adds	r0, #1
 8005fa2:	68e2      	ldr	r2, [r4, #12]
 8005fa4:	f47f af23 	bne.w	8005dee <d_exprlist+0x1142>
 8005fa8:	4681      	mov	r9, r0
 8005faa:	7813      	ldrb	r3, [r2, #0]
 8005fac:	f7ff b8a3 	b.w	80050f6 <d_exprlist+0x44a>
 8005fb0:	3202      	adds	r2, #2
 8005fb2:	60e2      	str	r2, [r4, #12]
 8005fb4:	4620      	mov	r0, r4
 8005fb6:	f000 fce3 	bl	8006980 <d_type>
 8005fba:	4683      	mov	fp, r0
 8005fbc:	4620      	mov	r0, r4
 8005fbe:	f001 f95d 	bl	800727c <d_unqualified_name>
 8005fc2:	68e3      	ldr	r3, [r4, #12]
 8005fc4:	781b      	ldrb	r3, [r3, #0]
 8005fc6:	2b49      	cmp	r3, #73	; 0x49
 8005fc8:	f000 819a 	beq.w	8006300 <d_exprlist+0x1654>
 8005fcc:	4603      	mov	r3, r0
 8005fce:	465a      	mov	r2, fp
 8005fd0:	2101      	movs	r1, #1
 8005fd2:	4620      	mov	r0, r4
 8005fd4:	f7fa f8fc 	bl	80001d0 <d_make_comp>
 8005fd8:	4683      	mov	fp, r0
 8005fda:	f7fe bf57 	b.w	8004e8c <d_exprlist+0x1e0>
 8005fde:	4620      	mov	r0, r4
 8005fe0:	f7fa fa82 	bl	80004e8 <d_compact_number>
 8005fe4:	3001      	adds	r0, #1
 8005fe6:	f47f ad32 	bne.w	8005a4e <d_exprlist+0xda2>
 8005fea:	4683      	mov	fp, r0
 8005fec:	f7fe bf4e 	b.w	8004e8c <d_exprlist+0x1e0>
 8005ff0:	2145      	movs	r1, #69	; 0x45
 8005ff2:	4620      	mov	r0, r4
 8005ff4:	f7fe fe5a 	bl	8004cac <d_exprlist>
 8005ff8:	4683      	mov	fp, r0
 8005ffa:	f7ff b9e3 	b.w	80053c4 <d_exprlist+0x718>
 8005ffe:	4620      	mov	r0, r4
 8006000:	f7fd ffe2 	bl	8003fc8 <d_template_args>
 8006004:	465a      	mov	r2, fp
 8006006:	4603      	mov	r3, r0
 8006008:	2104      	movs	r1, #4
 800600a:	4620      	mov	r0, r4
 800600c:	f7fa f8e0 	bl	80001d0 <d_make_comp>
 8006010:	4603      	mov	r3, r0
 8006012:	e614      	b.n	8005c3e <d_exprlist+0xf92>
 8006014:	f1bb 0f00 	cmp.w	fp, #0
 8006018:	f43f adee 	beq.w	8005bf8 <d_exprlist+0xf4c>
 800601c:	f89b 3000 	ldrb.w	r3, [fp]
 8006020:	2b70      	cmp	r3, #112	; 0x70
 8006022:	d002      	beq.n	800602a <d_exprlist+0x137e>
 8006024:	2b6d      	cmp	r3, #109	; 0x6d
 8006026:	f47f ade7 	bne.w	8005bf8 <d_exprlist+0xf4c>
 800602a:	f89b 2001 	ldrb.w	r2, [fp, #1]
 800602e:	429a      	cmp	r2, r3
 8006030:	f47f ade2 	bne.w	8005bf8 <d_exprlist+0xf4c>
 8006034:	68e3      	ldr	r3, [r4, #12]
 8006036:	781a      	ldrb	r2, [r3, #0]
 8006038:	2a5f      	cmp	r2, #95	; 0x5f
 800603a:	f000 81cf 	beq.w	80063dc <d_exprlist+0x1730>
 800603e:	f04f 0b01 	mov.w	fp, #1
 8006042:	e5db      	b.n	8005bfc <d_exprlist+0xf50>
 8006044:	4620      	mov	r0, r4
 8006046:	f000 fc9b 	bl	8006980 <d_type>
 800604a:	4603      	mov	r3, r0
 800604c:	e52a      	b.n	8005aa4 <d_exprlist+0xdf8>
 800604e:	9b00      	ldr	r3, [sp, #0]
 8006050:	2b00      	cmp	r3, #0
 8006052:	f43f ae04 	beq.w	8005c5e <d_exprlist+0xfb2>
 8006056:	781a      	ldrb	r2, [r3, #0]
 8006058:	2a70      	cmp	r2, #112	; 0x70
 800605a:	d002      	beq.n	8006062 <d_exprlist+0x13b6>
 800605c:	2a6d      	cmp	r2, #109	; 0x6d
 800605e:	f47f adfe 	bne.w	8005c5e <d_exprlist+0xfb2>
 8006062:	9b00      	ldr	r3, [sp, #0]
 8006064:	785b      	ldrb	r3, [r3, #1]
 8006066:	4293      	cmp	r3, r2
 8006068:	f47f adf9 	bne.w	8005c5e <d_exprlist+0xfb2>
 800606c:	68e3      	ldr	r3, [r4, #12]
 800606e:	781a      	ldrb	r2, [r3, #0]
 8006070:	2a5f      	cmp	r2, #95	; 0x5f
 8006072:	f000 81b6 	beq.w	80063e2 <d_exprlist+0x1736>
 8006076:	2201      	movs	r2, #1
 8006078:	e5f2      	b.n	8005c60 <d_exprlist+0xfb4>
 800607a:	4620      	mov	r0, r4
 800607c:	f000 fc80 	bl	8006980 <d_type>
 8006080:	4603      	mov	r3, r0
 8006082:	e52e      	b.n	8005ae2 <d_exprlist+0xe36>
 8006084:	4620      	mov	r0, r4
 8006086:	f000 fc7b 	bl	8006980 <d_type>
 800608a:	4603      	mov	r3, r0
 800608c:	e5f5      	b.n	8005c7a <d_exprlist+0xfce>
 800608e:	2145      	movs	r1, #69	; 0x45
 8006090:	4620      	mov	r0, r4
 8006092:	f7fe fe0b 	bl	8004cac <d_exprlist>
 8006096:	4681      	mov	r9, r0
 8006098:	f7ff bb49 	b.w	800572e <d_exprlist+0xa82>
 800609c:	0801158c 	.word	0x0801158c
 80060a0:	781b      	ldrb	r3, [r3, #0]
 80060a2:	f1a3 0263 	sub.w	r2, r3, #99	; 0x63
 80060a6:	2a01      	cmp	r2, #1
 80060a8:	d903      	bls.n	80060b2 <d_exprlist+0x1406>
 80060aa:	3b72      	subs	r3, #114	; 0x72
 80060ac:	2b01      	cmp	r3, #1
 80060ae:	f63f ab1e 	bhi.w	80056ee <d_exprlist+0xa42>
 80060b2:	4620      	mov	r0, r4
 80060b4:	f000 fc64 	bl	8006980 <d_type>
 80060b8:	4682      	mov	sl, r0
 80060ba:	f7ff bb1c 	b.w	80056f6 <d_exprlist+0xa4a>
 80060be:	4620      	mov	r0, r4
 80060c0:	f7fd ff82 	bl	8003fc8 <d_template_args>
 80060c4:	465a      	mov	r2, fp
 80060c6:	4603      	mov	r3, r0
 80060c8:	2104      	movs	r1, #4
 80060ca:	4620      	mov	r0, r4
 80060cc:	f7fa f880 	bl	80001d0 <d_make_comp>
 80060d0:	4603      	mov	r3, r0
 80060d2:	e717      	b.n	8005f04 <d_exprlist+0x1258>
 80060d4:	4620      	mov	r0, r4
 80060d6:	f7fd ff77 	bl	8003fc8 <d_template_args>
 80060da:	464a      	mov	r2, r9
 80060dc:	4603      	mov	r3, r0
 80060de:	2104      	movs	r1, #4
 80060e0:	4620      	mov	r0, r4
 80060e2:	f7fa f875 	bl	80001d0 <d_make_comp>
 80060e6:	4603      	mov	r3, r0
 80060e8:	e6e7      	b.n	8005eba <d_exprlist+0x120e>
 80060ea:	781b      	ldrb	r3, [r3, #0]
 80060ec:	f1a3 0263 	sub.w	r2, r3, #99	; 0x63
 80060f0:	2a01      	cmp	r2, #1
 80060f2:	d903      	bls.n	80060fc <d_exprlist+0x1450>
 80060f4:	3b72      	subs	r3, #114	; 0x72
 80060f6:	2b01      	cmp	r3, #1
 80060f8:	f63f a9c7 	bhi.w	800548a <d_exprlist+0x7de>
 80060fc:	4620      	mov	r0, r4
 80060fe:	f000 fc3f 	bl	8006980 <d_type>
 8006102:	9000      	str	r0, [sp, #0]
 8006104:	f7ff b9c5 	b.w	8005492 <d_exprlist+0x7e6>
 8006108:	3301      	adds	r3, #1
 800610a:	60e3      	str	r3, [r4, #12]
 800610c:	2145      	movs	r1, #69	; 0x45
 800610e:	4620      	mov	r0, r4
 8006110:	f7fe fdcc 	bl	8004cac <d_exprlist>
 8006114:	4603      	mov	r3, r0
 8006116:	464a      	mov	r2, r9
 8006118:	2135      	movs	r1, #53	; 0x35
 800611a:	f7ff b9e7 	b.w	80054ec <d_exprlist+0x840>
 800611e:	2145      	movs	r1, #69	; 0x45
 8006120:	4620      	mov	r0, r4
 8006122:	f7fe fdc3 	bl	8004cac <d_exprlist>
 8006126:	4683      	mov	fp, r0
 8006128:	f7ff b9cf 	b.w	80054ca <d_exprlist+0x81e>
 800612c:	3202      	adds	r2, #2
 800612e:	60e2      	str	r2, [r4, #12]
 8006130:	4620      	mov	r0, r4
 8006132:	f000 fa53 	bl	80065dc <d_expression_1>
 8006136:	2300      	movs	r3, #0
 8006138:	4602      	mov	r2, r0
 800613a:	2149      	movs	r1, #73	; 0x49
 800613c:	4620      	mov	r0, r4
 800613e:	f7fa f847 	bl	80001d0 <d_make_comp>
 8006142:	4683      	mov	fp, r0
 8006144:	f7fe bea2 	b.w	8004e8c <d_exprlist+0x1e0>
 8006148:	4620      	mov	r0, r4
 800614a:	f000 fa47 	bl	80065dc <d_expression_1>
 800614e:	4681      	mov	r9, r0
 8006150:	4620      	mov	r0, r4
 8006152:	f000 fa43 	bl	80065dc <d_expression_1>
 8006156:	4682      	mov	sl, r0
 8006158:	4620      	mov	r0, r4
 800615a:	f000 fa3f 	bl	80065dc <d_expression_1>
 800615e:	f7ff baa9 	b.w	80056b4 <d_exprlist+0xa08>
 8006162:	4620      	mov	r0, r4
 8006164:	f000 fa3a 	bl	80065dc <d_expression_1>
 8006168:	4683      	mov	fp, r0
 800616a:	f7ff b92b 	b.w	80053c4 <d_exprlist+0x718>
 800616e:	4620      	mov	r0, r4
 8006170:	f7fd ff2a 	bl	8003fc8 <d_template_args>
 8006174:	465a      	mov	r2, fp
 8006176:	4603      	mov	r3, r0
 8006178:	2104      	movs	r1, #4
 800617a:	4620      	mov	r0, r4
 800617c:	f7fa f828 	bl	80001d0 <d_make_comp>
 8006180:	4683      	mov	fp, r0
 8006182:	f7ff b91f 	b.w	80053c4 <d_exprlist+0x718>
 8006186:	4620      	mov	r0, r4
 8006188:	f000 fa28 	bl	80065dc <d_expression_1>
 800618c:	9000      	str	r0, [sp, #0]
 800618e:	4620      	mov	r0, r4
 8006190:	f000 fa24 	bl	80065dc <d_expression_1>
 8006194:	4683      	mov	fp, r0
 8006196:	4620      	mov	r0, r4
 8006198:	f000 fa20 	bl	80065dc <d_expression_1>
 800619c:	f7ff b958 	b.w	8005450 <d_exprlist+0x7a4>
 80061a0:	4620      	mov	r0, r4
 80061a2:	f000 fbed 	bl	8006980 <d_type>
 80061a6:	464a      	mov	r2, r9
 80061a8:	4603      	mov	r3, r0
 80061aa:	2135      	movs	r1, #53	; 0x35
 80061ac:	f7ff b99e 	b.w	80054ec <d_exprlist+0x840>
 80061b0:	3301      	adds	r3, #1
 80061b2:	60e3      	str	r3, [r4, #12]
 80061b4:	2000      	movs	r0, #0
 80061b6:	f7ff b8c8 	b.w	800534a <d_exprlist+0x69e>
 80061ba:	785a      	ldrb	r2, [r3, #1]
 80061bc:	2a69      	cmp	r2, #105	; 0x69
 80061be:	f47f ab44 	bne.w	800584a <d_exprlist+0xb9e>
 80061c2:	3302      	adds	r3, #2
 80061c4:	60e3      	str	r3, [r4, #12]
 80061c6:	2145      	movs	r1, #69	; 0x45
 80061c8:	4620      	mov	r0, r4
 80061ca:	f7fe fd6f 	bl	8004cac <d_exprlist>
 80061ce:	f7ff b93f 	b.w	8005450 <d_exprlist+0x7a4>
 80061d2:	3301      	adds	r3, #1
 80061d4:	60e3      	str	r3, [r4, #12]
 80061d6:	2000      	movs	r0, #0
 80061d8:	f7ff b93a 	b.w	8005450 <d_exprlist+0x7a4>
 80061dc:	4620      	mov	r0, r4
 80061de:	f000 f9fd 	bl	80065dc <d_expression_1>
 80061e2:	4683      	mov	fp, r0
 80061e4:	f7ff b971 	b.w	80054ca <d_exprlist+0x81e>
 80061e8:	4620      	mov	r0, r4
 80061ea:	f000 f9f7 	bl	80065dc <d_expression_1>
 80061ee:	4683      	mov	fp, r0
 80061f0:	f7ff b9f5 	b.w	80055de <d_exprlist+0x932>
 80061f4:	3301      	adds	r3, #1
 80061f6:	60e3      	str	r3, [r4, #12]
 80061f8:	2145      	movs	r1, #69	; 0x45
 80061fa:	4620      	mov	r0, r4
 80061fc:	f7fe fd56 	bl	8004cac <d_exprlist>
 8006200:	4603      	mov	r3, r0
 8006202:	e44f      	b.n	8005aa4 <d_exprlist+0xdf8>
 8006204:	4620      	mov	r0, r4
 8006206:	f000 f9e9 	bl	80065dc <d_expression_1>
 800620a:	4681      	mov	r9, r0
 800620c:	f7ff ba8f 	b.w	800572e <d_exprlist+0xa82>
 8006210:	785a      	ldrb	r2, [r3, #1]
 8006212:	2a69      	cmp	r2, #105	; 0x69
 8006214:	f47f ab12 	bne.w	800583c <d_exprlist+0xb90>
 8006218:	3302      	adds	r3, #2
 800621a:	60e3      	str	r3, [r4, #12]
 800621c:	2145      	movs	r1, #69	; 0x45
 800621e:	4620      	mov	r0, r4
 8006220:	f7fe fd44 	bl	8004cac <d_exprlist>
 8006224:	f7ff ba46 	b.w	80056b4 <d_exprlist+0xa08>
 8006228:	3301      	adds	r3, #1
 800622a:	60e3      	str	r3, [r4, #12]
 800622c:	2000      	movs	r0, #0
 800622e:	f7ff ba41 	b.w	80056b4 <d_exprlist+0xa08>
 8006232:	2145      	movs	r1, #69	; 0x45
 8006234:	4620      	mov	r0, r4
 8006236:	f7fe fd39 	bl	8004cac <d_exprlist>
 800623a:	4683      	mov	fp, r0
 800623c:	f7ff b9cf 	b.w	80055de <d_exprlist+0x932>
 8006240:	781b      	ldrb	r3, [r3, #0]
 8006242:	f1a3 0263 	sub.w	r2, r3, #99	; 0x63
 8006246:	2a01      	cmp	r2, #1
 8006248:	d903      	bls.n	8006252 <d_exprlist+0x15a6>
 800624a:	3b72      	subs	r3, #114	; 0x72
 800624c:	2b01      	cmp	r3, #1
 800624e:	f63f a99d 	bhi.w	800558c <d_exprlist+0x8e0>
 8006252:	4620      	mov	r0, r4
 8006254:	f000 fb94 	bl	8006980 <d_type>
 8006258:	9000      	str	r0, [sp, #0]
 800625a:	f7ff b99b 	b.w	8005594 <d_exprlist+0x8e8>
 800625e:	785a      	ldrb	r2, [r3, #1]
 8006260:	2a69      	cmp	r2, #105	; 0x69
 8006262:	f47e afaf 	bne.w	80051c4 <d_exprlist+0x518>
 8006266:	3302      	adds	r3, #2
 8006268:	60e3      	str	r3, [r4, #12]
 800626a:	2145      	movs	r1, #69	; 0x45
 800626c:	4620      	mov	r0, r4
 800626e:	f7fe fd1d 	bl	8004cac <d_exprlist>
 8006272:	f7ff b86a 	b.w	800534a <d_exprlist+0x69e>
 8006276:	4620      	mov	r0, r4
 8006278:	f7fd fea6 	bl	8003fc8 <d_template_args>
 800627c:	465a      	mov	r2, fp
 800627e:	4603      	mov	r3, r0
 8006280:	2104      	movs	r1, #4
 8006282:	4620      	mov	r0, r4
 8006284:	f7f9 ffa4 	bl	80001d0 <d_make_comp>
 8006288:	4683      	mov	fp, r0
 800628a:	f7ff b91e 	b.w	80054ca <d_exprlist+0x81e>
 800628e:	3301      	adds	r3, #1
 8006290:	60e3      	str	r3, [r4, #12]
 8006292:	2145      	movs	r1, #69	; 0x45
 8006294:	4620      	mov	r0, r4
 8006296:	f7fe fd09 	bl	8004cac <d_exprlist>
 800629a:	4603      	mov	r3, r0
 800629c:	e421      	b.n	8005ae2 <d_exprlist+0xe36>
 800629e:	4620      	mov	r0, r4
 80062a0:	f7fd fe92 	bl	8003fc8 <d_template_args>
 80062a4:	465a      	mov	r2, fp
 80062a6:	4603      	mov	r3, r0
 80062a8:	2104      	movs	r1, #4
 80062aa:	4620      	mov	r0, r4
 80062ac:	f7f9 ff90 	bl	80001d0 <d_make_comp>
 80062b0:	464a      	mov	r2, r9
 80062b2:	4603      	mov	r3, r0
 80062b4:	2101      	movs	r1, #1
 80062b6:	f7ff b919 	b.w	80054ec <d_exprlist+0x840>
 80062ba:	4620      	mov	r0, r4
 80062bc:	f7fd fe84 	bl	8003fc8 <d_template_args>
 80062c0:	464a      	mov	r2, r9
 80062c2:	4603      	mov	r3, r0
 80062c4:	2104      	movs	r1, #4
 80062c6:	4620      	mov	r0, r4
 80062c8:	f7f9 ff82 	bl	80001d0 <d_make_comp>
 80062cc:	4681      	mov	r9, r0
 80062ce:	f7ff ba2e 	b.w	800572e <d_exprlist+0xa82>
 80062d2:	4620      	mov	r0, r4
 80062d4:	f000 f982 	bl	80065dc <d_expression_1>
 80062d8:	9000      	str	r0, [sp, #0]
 80062da:	4620      	mov	r0, r4
 80062dc:	f000 f97e 	bl	80065dc <d_expression_1>
 80062e0:	4683      	mov	fp, r0
 80062e2:	4620      	mov	r0, r4
 80062e4:	f000 f97a 	bl	80065dc <d_expression_1>
 80062e8:	f7ff b937 	b.w	800555a <d_exprlist+0x8ae>
 80062ec:	3201      	adds	r2, #1
 80062ee:	60e2      	str	r2, [r4, #12]
 80062f0:	2000      	movs	r0, #0
 80062f2:	f7ff b932 	b.w	800555a <d_exprlist+0x8ae>
 80062f6:	3301      	adds	r3, #1
 80062f8:	60e3      	str	r3, [r4, #12]
 80062fa:	2000      	movs	r0, #0
 80062fc:	f7ff bb28 	b.w	8005950 <d_exprlist+0xca4>
 8006300:	9000      	str	r0, [sp, #0]
 8006302:	4620      	mov	r0, r4
 8006304:	f7fd fe60 	bl	8003fc8 <d_template_args>
 8006308:	9a00      	ldr	r2, [sp, #0]
 800630a:	4603      	mov	r3, r0
 800630c:	2104      	movs	r1, #4
 800630e:	4620      	mov	r0, r4
 8006310:	f7f9 ff5e 	bl	80001d0 <d_make_comp>
 8006314:	4603      	mov	r3, r0
 8006316:	e65a      	b.n	8005fce <d_exprlist+0x1322>
 8006318:	4620      	mov	r0, r4
 800631a:	f000 f95f 	bl	80065dc <d_expression_1>
 800631e:	9000      	str	r0, [sp, #0]
 8006320:	4620      	mov	r0, r4
 8006322:	f000 f95b 	bl	80065dc <d_expression_1>
 8006326:	9001      	str	r0, [sp, #4]
 8006328:	4620      	mov	r0, r4
 800632a:	f000 f957 	bl	80065dc <d_expression_1>
 800632e:	f7ff bb0f 	b.w	8005950 <d_exprlist+0xca4>
 8006332:	2145      	movs	r1, #69	; 0x45
 8006334:	4620      	mov	r0, r4
 8006336:	f7fe fcb9 	bl	8004cac <d_exprlist>
 800633a:	4602      	mov	r2, r0
 800633c:	f7ff bb5b 	b.w	80059f6 <d_exprlist+0xd4a>
 8006340:	7812      	ldrb	r2, [r2, #0]
 8006342:	f1a2 0163 	sub.w	r1, r2, #99	; 0x63
 8006346:	2901      	cmp	r1, #1
 8006348:	d903      	bls.n	8006352 <d_exprlist+0x16a6>
 800634a:	3a72      	subs	r2, #114	; 0x72
 800634c:	2a01      	cmp	r2, #1
 800634e:	f63f ab28 	bhi.w	80059a2 <d_exprlist+0xcf6>
 8006352:	4620      	mov	r0, r4
 8006354:	f000 fb14 	bl	8006980 <d_type>
 8006358:	9001      	str	r0, [sp, #4]
 800635a:	f7ff bb26 	b.w	80059aa <d_exprlist+0xcfe>
 800635e:	4620      	mov	r0, r4
 8006360:	f000 f93c 	bl	80065dc <d_expression_1>
 8006364:	4602      	mov	r2, r0
 8006366:	f7ff bb46 	b.w	80059f6 <d_exprlist+0xd4a>
 800636a:	2b6f      	cmp	r3, #111	; 0x6f
 800636c:	d017      	beq.n	800639e <d_exprlist+0x16f2>
 800636e:	2b69      	cmp	r3, #105	; 0x69
 8006370:	d11d      	bne.n	80063ae <d_exprlist+0x1702>
 8006372:	7853      	ldrb	r3, [r2, #1]
 8006374:	2b6c      	cmp	r3, #108	; 0x6c
 8006376:	f47f aa9a 	bne.w	80058ae <d_exprlist+0xc02>
 800637a:	f04f 0b00 	mov.w	fp, #0
 800637e:	68e3      	ldr	r3, [r4, #12]
 8006380:	3302      	adds	r3, #2
 8006382:	60e3      	str	r3, [r4, #12]
 8006384:	2145      	movs	r1, #69	; 0x45
 8006386:	4620      	mov	r0, r4
 8006388:	f7fe fc90 	bl	8004cac <d_exprlist>
 800638c:	465a      	mov	r2, fp
 800638e:	4603      	mov	r3, r0
 8006390:	2130      	movs	r1, #48	; 0x30
 8006392:	4620      	mov	r0, r4
 8006394:	f7f9 ff1c 	bl	80001d0 <d_make_comp>
 8006398:	4683      	mov	fp, r0
 800639a:	f7fe bd77 	b.w	8004e8c <d_exprlist+0x1e0>
 800639e:	7853      	ldrb	r3, [r2, #1]
 80063a0:	2b6e      	cmp	r3, #110	; 0x6e
 80063a2:	f47f aa84 	bne.w	80058ae <d_exprlist+0xc02>
 80063a6:	3202      	adds	r2, #2
 80063a8:	60e2      	str	r2, [r4, #12]
 80063aa:	f7fe beb5 	b.w	8005118 <d_exprlist+0x46c>
 80063ae:	2b74      	cmp	r3, #116	; 0x74
 80063b0:	f47f aa7d 	bne.w	80058ae <d_exprlist+0xc02>
 80063b4:	7853      	ldrb	r3, [r2, #1]
 80063b6:	2b6c      	cmp	r3, #108	; 0x6c
 80063b8:	f47f aa79 	bne.w	80058ae <d_exprlist+0xc02>
 80063bc:	4620      	mov	r0, r4
 80063be:	f000 fadf 	bl	8006980 <d_type>
 80063c2:	4683      	mov	fp, r0
 80063c4:	e7db      	b.n	800637e <d_exprlist+0x16d2>
 80063c6:	460a      	mov	r2, r1
 80063c8:	f7fe be41 	b.w	800504e <d_exprlist+0x3a2>
 80063cc:	3301      	adds	r3, #1
 80063ce:	60e3      	str	r3, [r4, #12]
 80063d0:	2145      	movs	r1, #69	; 0x45
 80063d2:	4620      	mov	r0, r4
 80063d4:	f7fe fc6a 	bl	8004cac <d_exprlist>
 80063d8:	4603      	mov	r3, r0
 80063da:	e44e      	b.n	8005c7a <d_exprlist+0xfce>
 80063dc:	3301      	adds	r3, #1
 80063de:	60e3      	str	r3, [r4, #12]
 80063e0:	e40a      	b.n	8005bf8 <d_exprlist+0xf4c>
 80063e2:	3301      	adds	r3, #1
 80063e4:	60e3      	str	r3, [r4, #12]
 80063e6:	e43a      	b.n	8005c5e <d_exprlist+0xfb2>
 80063e8:	f04f 0a00 	mov.w	sl, #0
 80063ec:	3102      	adds	r1, #2
 80063ee:	60e1      	str	r1, [r4, #12]
 80063f0:	4620      	mov	r0, r4
 80063f2:	2145      	movs	r1, #69	; 0x45
 80063f4:	f7fe fc5a 	bl	8004cac <d_exprlist>
 80063f8:	4652      	mov	r2, sl
 80063fa:	4603      	mov	r3, r0
 80063fc:	2130      	movs	r1, #48	; 0x30
 80063fe:	4620      	mov	r0, r4
 8006400:	f7f9 fee6 	bl	80001d0 <d_make_comp>
 8006404:	4682      	mov	sl, r0
 8006406:	f7fe bd7d 	b.w	8004f04 <d_exprlist+0x258>
 800640a:	2b6f      	cmp	r3, #111	; 0x6f
 800640c:	d010      	beq.n	8006430 <d_exprlist+0x1784>
 800640e:	2b69      	cmp	r3, #105	; 0x69
 8006410:	d13b      	bne.n	800648a <d_exprlist+0x17de>
 8006412:	7843      	ldrb	r3, [r0, #1]
 8006414:	2b6c      	cmp	r3, #108	; 0x6c
 8006416:	f47e af0f 	bne.w	8005238 <d_exprlist+0x58c>
 800641a:	1c82      	adds	r2, r0, #2
 800641c:	60e2      	str	r2, [r4, #12]
 800641e:	2145      	movs	r1, #69	; 0x45
 8006420:	4620      	mov	r0, r4
 8006422:	f7fe fc43 	bl	8004cac <d_exprlist>
 8006426:	465a      	mov	r2, fp
 8006428:	4603      	mov	r3, r0
 800642a:	2130      	movs	r1, #48	; 0x30
 800642c:	f7ff b85e 	b.w	80054ec <d_exprlist+0x840>
 8006430:	7843      	ldrb	r3, [r0, #1]
 8006432:	2b6e      	cmp	r3, #110	; 0x6e
 8006434:	f47e af00 	bne.w	8005238 <d_exprlist+0x58c>
 8006438:	1c82      	adds	r2, r0, #2
 800643a:	60e2      	str	r2, [r4, #12]
 800643c:	f7fe be51 	b.w	80050e2 <d_exprlist+0x436>
 8006440:	2b6f      	cmp	r3, #111	; 0x6f
 8006442:	d016      	beq.n	8006472 <d_exprlist+0x17c6>
 8006444:	2b69      	cmp	r3, #105	; 0x69
 8006446:	d12d      	bne.n	80064a4 <d_exprlist+0x17f8>
 8006448:	78d3      	ldrb	r3, [r2, #3]
 800644a:	2b6c      	cmp	r3, #108	; 0x6c
 800644c:	f47f a8d8 	bne.w	8005600 <d_exprlist+0x954>
 8006450:	f04f 0800 	mov.w	r8, #0
 8006454:	3102      	adds	r1, #2
 8006456:	60e1      	str	r1, [r4, #12]
 8006458:	4620      	mov	r0, r4
 800645a:	2145      	movs	r1, #69	; 0x45
 800645c:	f7fe fc26 	bl	8004cac <d_exprlist>
 8006460:	4642      	mov	r2, r8
 8006462:	4603      	mov	r3, r0
 8006464:	2130      	movs	r1, #48	; 0x30
 8006466:	4620      	mov	r0, r4
 8006468:	f7f9 feb2 	bl	80001d0 <d_make_comp>
 800646c:	4602      	mov	r2, r0
 800646e:	f7fe bdee 	b.w	800504e <d_exprlist+0x3a2>
 8006472:	78d3      	ldrb	r3, [r2, #3]
 8006474:	2b6e      	cmp	r3, #110	; 0x6e
 8006476:	f47f a8c3 	bne.w	8005600 <d_exprlist+0x954>
 800647a:	3204      	adds	r2, #4
 800647c:	60e2      	str	r2, [r4, #12]
 800647e:	f7fe bdd9 	b.w	8005034 <d_exprlist+0x388>
 8006482:	3301      	adds	r3, #1
 8006484:	60e3      	str	r3, [r4, #12]
 8006486:	f7ff bb1d 	b.w	8005ac4 <d_exprlist+0xe18>
 800648a:	2b74      	cmp	r3, #116	; 0x74
 800648c:	f47e aed4 	bne.w	8005238 <d_exprlist+0x58c>
 8006490:	7843      	ldrb	r3, [r0, #1]
 8006492:	2b6c      	cmp	r3, #108	; 0x6c
 8006494:	f47e aed0 	bne.w	8005238 <d_exprlist+0x58c>
 8006498:	4620      	mov	r0, r4
 800649a:	f000 fa71 	bl	8006980 <d_type>
 800649e:	4683      	mov	fp, r0
 80064a0:	68e0      	ldr	r0, [r4, #12]
 80064a2:	e7ba      	b.n	800641a <d_exprlist+0x176e>
 80064a4:	2b74      	cmp	r3, #116	; 0x74
 80064a6:	f47f a8ab 	bne.w	8005600 <d_exprlist+0x954>
 80064aa:	78d3      	ldrb	r3, [r2, #3]
 80064ac:	2b6c      	cmp	r3, #108	; 0x6c
 80064ae:	f47f a8a7 	bne.w	8005600 <d_exprlist+0x954>
 80064b2:	4620      	mov	r0, r4
 80064b4:	f000 fa64 	bl	8006980 <d_type>
 80064b8:	68e1      	ldr	r1, [r4, #12]
 80064ba:	4680      	mov	r8, r0
 80064bc:	e7ca      	b.n	8006454 <d_exprlist+0x17a8>
 80064be:	7853      	ldrb	r3, [r2, #1]
 80064c0:	2b69      	cmp	r3, #105	; 0x69
 80064c2:	d00f      	beq.n	80064e4 <d_exprlist+0x1838>
 80064c4:	f04f 0900 	mov.w	r9, #0
 80064c8:	f7ff b9f1 	b.w	80058ae <d_exprlist+0xc02>
 80064cc:	785a      	ldrb	r2, [r3, #1]
 80064ce:	2a69      	cmp	r2, #105	; 0x69
 80064d0:	f47f ab23 	bne.w	8005b1a <d_exprlist+0xe6e>
 80064d4:	3302      	adds	r3, #2
 80064d6:	60e3      	str	r3, [r4, #12]
 80064d8:	2145      	movs	r1, #69	; 0x45
 80064da:	4620      	mov	r0, r4
 80064dc:	f7fe fbe6 	bl	8004cac <d_exprlist>
 80064e0:	f7ff ba36 	b.w	8005950 <d_exprlist+0xca4>
 80064e4:	3202      	adds	r2, #2
 80064e6:	60e2      	str	r2, [r4, #12]
 80064e8:	2145      	movs	r1, #69	; 0x45
 80064ea:	4620      	mov	r0, r4
 80064ec:	f7fe fbde 	bl	8004cac <d_exprlist>
 80064f0:	f7ff b833 	b.w	800555a <d_exprlist+0x8ae>
 80064f4:	2b6f      	cmp	r3, #111	; 0x6f
 80064f6:	d016      	beq.n	8006526 <d_exprlist+0x187a>
 80064f8:	2b69      	cmp	r3, #105	; 0x69
 80064fa:	d120      	bne.n	800653e <d_exprlist+0x1892>
 80064fc:	784b      	ldrb	r3, [r1, #1]
 80064fe:	2b6c      	cmp	r3, #108	; 0x6c
 8006500:	f47e ae50 	bne.w	80051a4 <d_exprlist+0x4f8>
 8006504:	f04f 0900 	mov.w	r9, #0
 8006508:	3102      	adds	r1, #2
 800650a:	60e1      	str	r1, [r4, #12]
 800650c:	4620      	mov	r0, r4
 800650e:	2145      	movs	r1, #69	; 0x45
 8006510:	f7fe fbcc 	bl	8004cac <d_exprlist>
 8006514:	464a      	mov	r2, r9
 8006516:	4603      	mov	r3, r0
 8006518:	2130      	movs	r1, #48	; 0x30
 800651a:	4620      	mov	r0, r4
 800651c:	f7f9 fe58 	bl	80001d0 <d_make_comp>
 8006520:	4681      	mov	r9, r0
 8006522:	f7fe bd45 	b.w	8004fb0 <d_exprlist+0x304>
 8006526:	784b      	ldrb	r3, [r1, #1]
 8006528:	2b6e      	cmp	r3, #110	; 0x6e
 800652a:	f47e ae3b 	bne.w	80051a4 <d_exprlist+0x4f8>
 800652e:	3102      	adds	r1, #2
 8006530:	60e1      	str	r1, [r4, #12]
 8006532:	f7fe bd33 	b.w	8004f9c <d_exprlist+0x2f0>
 8006536:	3301      	adds	r3, #1
 8006538:	60e3      	str	r3, [r4, #12]
 800653a:	f7ff baa4 	b.w	8005a86 <d_exprlist+0xdda>
 800653e:	2b74      	cmp	r3, #116	; 0x74
 8006540:	f47e ae30 	bne.w	80051a4 <d_exprlist+0x4f8>
 8006544:	784b      	ldrb	r3, [r1, #1]
 8006546:	2b6c      	cmp	r3, #108	; 0x6c
 8006548:	f47e ae2c 	bne.w	80051a4 <d_exprlist+0x4f8>
 800654c:	4620      	mov	r0, r4
 800654e:	f000 fa17 	bl	8006980 <d_type>
 8006552:	68e1      	ldr	r1, [r4, #12]
 8006554:	4681      	mov	r9, r0
 8006556:	e7d7      	b.n	8006508 <d_exprlist+0x185c>
 8006558:	2b74      	cmp	r3, #116	; 0x74
 800655a:	f47e ae90 	bne.w	800527e <d_exprlist+0x5d2>
 800655e:	784b      	ldrb	r3, [r1, #1]
 8006560:	2b6c      	cmp	r3, #108	; 0x6c
 8006562:	f47e ae8c 	bne.w	800527e <d_exprlist+0x5d2>
 8006566:	4620      	mov	r0, r4
 8006568:	f000 fa0a 	bl	8006980 <d_type>
 800656c:	68e1      	ldr	r1, [r4, #12]
 800656e:	4682      	mov	sl, r0
 8006570:	e73c      	b.n	80063ec <d_exprlist+0x1740>
 8006572:	2b6f      	cmp	r3, #111	; 0x6f
 8006574:	d016      	beq.n	80065a4 <d_exprlist+0x18f8>
 8006576:	2b69      	cmp	r3, #105	; 0x69
 8006578:	d11c      	bne.n	80065b4 <d_exprlist+0x1908>
 800657a:	7853      	ldrb	r3, [r2, #1]
 800657c:	2b6c      	cmp	r3, #108	; 0x6c
 800657e:	f47e abd9 	bne.w	8004d34 <d_exprlist+0x88>
 8006582:	f04f 0800 	mov.w	r8, #0
 8006586:	3202      	adds	r2, #2
 8006588:	60e2      	str	r2, [r4, #12]
 800658a:	2145      	movs	r1, #69	; 0x45
 800658c:	4620      	mov	r0, r4
 800658e:	f7fe fb8d 	bl	8004cac <d_exprlist>
 8006592:	4642      	mov	r2, r8
 8006594:	4603      	mov	r3, r0
 8006596:	2130      	movs	r1, #48	; 0x30
 8006598:	4620      	mov	r0, r4
 800659a:	f7f9 fe19 	bl	80001d0 <d_make_comp>
 800659e:	4602      	mov	r2, r0
 80065a0:	f7fe bc0d 	b.w	8004dbe <d_exprlist+0x112>
 80065a4:	7853      	ldrb	r3, [r2, #1]
 80065a6:	2b6e      	cmp	r3, #110	; 0x6e
 80065a8:	f47e abc4 	bne.w	8004d34 <d_exprlist+0x88>
 80065ac:	3202      	adds	r2, #2
 80065ae:	60e2      	str	r2, [r4, #12]
 80065b0:	f7fe bb91 	b.w	8004cd6 <d_exprlist+0x2a>
 80065b4:	2b74      	cmp	r3, #116	; 0x74
 80065b6:	f47e abbd 	bne.w	8004d34 <d_exprlist+0x88>
 80065ba:	7853      	ldrb	r3, [r2, #1]
 80065bc:	2b6c      	cmp	r3, #108	; 0x6c
 80065be:	f47e abb9 	bne.w	8004d34 <d_exprlist+0x88>
 80065c2:	4620      	mov	r0, r4
 80065c4:	f000 f9dc 	bl	8006980 <d_type>
 80065c8:	68e2      	ldr	r2, [r4, #12]
 80065ca:	4680      	mov	r8, r0
 80065cc:	e7db      	b.n	8006586 <d_exprlist+0x18da>
 80065ce:	f04f 0900 	mov.w	r9, #0
 80065d2:	e6ce      	b.n	8006372 <d_exprlist+0x16c6>
 80065d4:	f04f 0900 	mov.w	r9, #0
 80065d8:	f7fe bd8d 	b.w	80050f6 <d_exprlist+0x44a>

080065dc <d_expression_1>:
 80065dc:	68c2      	ldr	r2, [r0, #12]
 80065de:	7813      	ldrb	r3, [r2, #0]
 80065e0:	2b4c      	cmp	r3, #76	; 0x4c
 80065e2:	d060      	beq.n	80066a6 <d_expression_1+0xca>
 80065e4:	2b54      	cmp	r3, #84	; 0x54
 80065e6:	d060      	beq.n	80066aa <d_expression_1+0xce>
 80065e8:	2b73      	cmp	r3, #115	; 0x73
 80065ea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80065ee:	4604      	mov	r4, r0
 80065f0:	d024      	beq.n	800663c <d_expression_1+0x60>
 80065f2:	2b66      	cmp	r3, #102	; 0x66
 80065f4:	d00f      	beq.n	8006616 <d_expression_1+0x3a>
 80065f6:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 80065fa:	2909      	cmp	r1, #9
 80065fc:	f200 818b 	bhi.w	8006916 <d_expression_1+0x33a>
 8006600:	4620      	mov	r0, r4
 8006602:	f000 fe3b 	bl	800727c <d_unqualified_name>
 8006606:	4605      	mov	r5, r0
 8006608:	b1a8      	cbz	r0, 8006636 <d_expression_1+0x5a>
 800660a:	68e3      	ldr	r3, [r4, #12]
 800660c:	781b      	ldrb	r3, [r3, #0]
 800660e:	2b49      	cmp	r3, #73	; 0x49
 8006610:	d062      	beq.n	80066d8 <d_expression_1+0xfc>
 8006612:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006616:	7853      	ldrb	r3, [r2, #1]
 8006618:	2b70      	cmp	r3, #112	; 0x70
 800661a:	d029      	beq.n	8006670 <d_expression_1+0x94>
 800661c:	4620      	mov	r0, r4
 800661e:	f000 fd6d 	bl	80070fc <d_operator_name>
 8006622:	4605      	mov	r5, r0
 8006624:	b138      	cbz	r0, 8006636 <d_expression_1+0x5a>
 8006626:	7803      	ldrb	r3, [r0, #0]
 8006628:	2b31      	cmp	r3, #49	; 0x31
 800662a:	d040      	beq.n	80066ae <d_expression_1+0xd2>
 800662c:	2b32      	cmp	r3, #50	; 0x32
 800662e:	d016      	beq.n	800665e <d_expression_1+0x82>
 8006630:	2b33      	cmp	r3, #51	; 0x33
 8006632:	f000 8115 	beq.w	8006860 <d_expression_1+0x284>
 8006636:	2000      	movs	r0, #0
 8006638:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800663c:	7853      	ldrb	r3, [r2, #1]
 800663e:	2b72      	cmp	r3, #114	; 0x72
 8006640:	d055      	beq.n	80066ee <d_expression_1+0x112>
 8006642:	2b70      	cmp	r3, #112	; 0x70
 8006644:	d1ea      	bne.n	800661c <d_expression_1+0x40>
 8006646:	3202      	adds	r2, #2
 8006648:	60c2      	str	r2, [r0, #12]
 800664a:	f7ff ffc7 	bl	80065dc <d_expression_1>
 800664e:	2300      	movs	r3, #0
 8006650:	4602      	mov	r2, r0
 8006652:	2149      	movs	r1, #73	; 0x49
 8006654:	4620      	mov	r0, r4
 8006656:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800665a:	f7f9 bdb9 	b.w	80001d0 <d_make_comp>
 800665e:	686b      	ldr	r3, [r5, #4]
 8006660:	2b03      	cmp	r3, #3
 8006662:	d8e8      	bhi.n	8006636 <d_expression_1+0x5a>
 8006664:	e8df f013 	tbh	[pc, r3, lsl #1]
 8006668:	00d9005d 	.word	0x00d9005d
 800666c:	006500a6 	.word	0x006500a6
 8006670:	1c93      	adds	r3, r2, #2
 8006672:	60c3      	str	r3, [r0, #12]
 8006674:	7893      	ldrb	r3, [r2, #2]
 8006676:	2b54      	cmp	r3, #84	; 0x54
 8006678:	d04f      	beq.n	800671a <d_expression_1+0x13e>
 800667a:	f7f9 ff35 	bl	80004e8 <d_compact_number>
 800667e:	1c45      	adds	r5, r0, #1
 8006680:	d0d9      	beq.n	8006636 <d_expression_1+0x5a>
 8006682:	6963      	ldr	r3, [r4, #20]
 8006684:	69a2      	ldr	r2, [r4, #24]
 8006686:	4293      	cmp	r3, r2
 8006688:	dad5      	bge.n	8006636 <d_expression_1+0x5a>
 800668a:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 800668e:	6921      	ldr	r1, [r4, #16]
 8006690:	3301      	adds	r3, #1
 8006692:	0092      	lsls	r2, r2, #2
 8006694:	6163      	str	r3, [r4, #20]
 8006696:	188b      	adds	r3, r1, r2
 8006698:	d0cd      	beq.n	8006636 <d_expression_1+0x5a>
 800669a:	2006      	movs	r0, #6
 800669c:	5488      	strb	r0, [r1, r2]
 800669e:	605d      	str	r5, [r3, #4]
 80066a0:	4618      	mov	r0, r3
 80066a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80066a6:	f001 bc55 	b.w	8007f54 <d_expr_primary>
 80066aa:	f7f9 bf35 	b.w	8000518 <d_template_param>
 80066ae:	6847      	ldr	r7, [r0, #4]
 80066b0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80066b2:	68bb      	ldr	r3, [r7, #8]
 80066b4:	683e      	ldr	r6, [r7, #0]
 80066b6:	49ad      	ldr	r1, [pc, #692]	; (800696c <d_expression_1+0x390>)
 80066b8:	3b02      	subs	r3, #2
 80066ba:	4413      	add	r3, r2
 80066bc:	6323      	str	r3, [r4, #48]	; 0x30
 80066be:	4630      	mov	r0, r6
 80066c0:	f001 ff0e 	bl	80084e0 <strcmp>
 80066c4:	2800      	cmp	r0, #0
 80066c6:	f000 80d7 	beq.w	8006878 <d_expression_1+0x29c>
 80066ca:	68fb      	ldr	r3, [r7, #12]
 80066cc:	2b03      	cmp	r3, #3
 80066ce:	d8b2      	bhi.n	8006636 <d_expression_1+0x5a>
 80066d0:	e8df f003 	tbb	[pc, r3]
 80066d4:	3071b627 	.word	0x3071b627
 80066d8:	4620      	mov	r0, r4
 80066da:	f7fd fc75 	bl	8003fc8 <d_template_args>
 80066de:	462a      	mov	r2, r5
 80066e0:	4603      	mov	r3, r0
 80066e2:	2104      	movs	r1, #4
 80066e4:	4620      	mov	r0, r4
 80066e6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80066ea:	f7f9 bd71 	b.w	80001d0 <d_make_comp>
 80066ee:	3202      	adds	r2, #2
 80066f0:	60c2      	str	r2, [r0, #12]
 80066f2:	f000 f945 	bl	8006980 <d_type>
 80066f6:	4605      	mov	r5, r0
 80066f8:	4620      	mov	r0, r4
 80066fa:	f000 fdbf 	bl	800727c <d_unqualified_name>
 80066fe:	68e3      	ldr	r3, [r4, #12]
 8006700:	781b      	ldrb	r3, [r3, #0]
 8006702:	2b49      	cmp	r3, #73	; 0x49
 8006704:	4606      	mov	r6, r0
 8006706:	f000 80db 	beq.w	80068c0 <d_expression_1+0x2e4>
 800670a:	4603      	mov	r3, r0
 800670c:	462a      	mov	r2, r5
 800670e:	4620      	mov	r0, r4
 8006710:	2101      	movs	r1, #1
 8006712:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006716:	f7f9 bd5b 	b.w	80001d0 <d_make_comp>
 800671a:	3203      	adds	r2, #3
 800671c:	60c2      	str	r2, [r0, #12]
 800671e:	2500      	movs	r5, #0
 8006720:	e7af      	b.n	8006682 <d_expression_1+0xa6>
 8006722:	462a      	mov	r2, r5
 8006724:	4620      	mov	r0, r4
 8006726:	2300      	movs	r3, #0
 8006728:	2134      	movs	r1, #52	; 0x34
 800672a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800672e:	f7f9 bd4f 	b.w	80001d0 <d_make_comp>
 8006732:	2600      	movs	r6, #0
 8006734:	498e      	ldr	r1, [pc, #568]	; (8006970 <d_expression_1+0x394>)
 8006736:	4630      	mov	r0, r6
 8006738:	f001 fed2 	bl	80084e0 <strcmp>
 800673c:	2800      	cmp	r0, #0
 800673e:	f000 809f 	beq.w	8006880 <d_expression_1+0x2a4>
 8006742:	7833      	ldrb	r3, [r6, #0]
 8006744:	2b6e      	cmp	r3, #110	; 0x6e
 8006746:	f47f af76 	bne.w	8006636 <d_expression_1+0x5a>
 800674a:	7873      	ldrb	r3, [r6, #1]
 800674c:	2b77      	cmp	r3, #119	; 0x77
 800674e:	d002      	beq.n	8006756 <d_expression_1+0x17a>
 8006750:	2b61      	cmp	r3, #97	; 0x61
 8006752:	f47f af70 	bne.w	8006636 <d_expression_1+0x5a>
 8006756:	215f      	movs	r1, #95	; 0x5f
 8006758:	4620      	mov	r0, r4
 800675a:	f7fe faa7 	bl	8004cac <d_exprlist>
 800675e:	4606      	mov	r6, r0
 8006760:	4620      	mov	r0, r4
 8006762:	f000 f90d 	bl	8006980 <d_type>
 8006766:	68e3      	ldr	r3, [r4, #12]
 8006768:	7819      	ldrb	r1, [r3, #0]
 800676a:	2945      	cmp	r1, #69	; 0x45
 800676c:	4607      	mov	r7, r0
 800676e:	f000 80b7 	beq.w	80068e0 <d_expression_1+0x304>
 8006772:	2970      	cmp	r1, #112	; 0x70
 8006774:	f000 80c3 	beq.w	80068fe <d_expression_1+0x322>
 8006778:	2969      	cmp	r1, #105	; 0x69
 800677a:	f47f af5c 	bne.w	8006636 <d_expression_1+0x5a>
 800677e:	785b      	ldrb	r3, [r3, #1]
 8006780:	2b6c      	cmp	r3, #108	; 0x6c
 8006782:	f47f af58 	bne.w	8006636 <d_expression_1+0x5a>
 8006786:	4620      	mov	r0, r4
 8006788:	f7ff ff28 	bl	80065dc <d_expression_1>
 800678c:	4603      	mov	r3, r0
 800678e:	463a      	mov	r2, r7
 8006790:	213a      	movs	r1, #58	; 0x3a
 8006792:	4620      	mov	r0, r4
 8006794:	f7f9 fd1c 	bl	80001d0 <d_make_comp>
 8006798:	4632      	mov	r2, r6
 800679a:	4603      	mov	r3, r0
 800679c:	2139      	movs	r1, #57	; 0x39
 800679e:	4620      	mov	r0, r4
 80067a0:	f7f9 fd16 	bl	80001d0 <d_make_comp>
 80067a4:	462a      	mov	r2, r5
 80067a6:	4603      	mov	r3, r0
 80067a8:	2138      	movs	r1, #56	; 0x38
 80067aa:	4620      	mov	r0, r4
 80067ac:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80067b0:	f7f9 bd0e 	b.w	80001d0 <d_make_comp>
 80067b4:	2600      	movs	r6, #0
 80067b6:	686b      	ldr	r3, [r5, #4]
 80067b8:	681b      	ldr	r3, [r3, #0]
 80067ba:	785a      	ldrb	r2, [r3, #1]
 80067bc:	2a63      	cmp	r2, #99	; 0x63
 80067be:	d072      	beq.n	80068a6 <d_expression_1+0x2ca>
 80067c0:	4620      	mov	r0, r4
 80067c2:	f7ff ff0b 	bl	80065dc <d_expression_1>
 80067c6:	4607      	mov	r7, r0
 80067c8:	496a      	ldr	r1, [pc, #424]	; (8006974 <d_expression_1+0x398>)
 80067ca:	4630      	mov	r0, r6
 80067cc:	f001 fe88 	bl	80084e0 <strcmp>
 80067d0:	2800      	cmp	r0, #0
 80067d2:	d062      	beq.n	800689a <d_expression_1+0x2be>
 80067d4:	4968      	ldr	r1, [pc, #416]	; (8006978 <d_expression_1+0x39c>)
 80067d6:	4630      	mov	r0, r6
 80067d8:	f001 fe82 	bl	80084e0 <strcmp>
 80067dc:	b128      	cbz	r0, 80067ea <d_expression_1+0x20e>
 80067de:	4630      	mov	r0, r6
 80067e0:	4966      	ldr	r1, [pc, #408]	; (800697c <d_expression_1+0x3a0>)
 80067e2:	f001 fe7d 	bl	80084e0 <strcmp>
 80067e6:	2800      	cmp	r0, #0
 80067e8:	d175      	bne.n	80068d6 <d_expression_1+0x2fa>
 80067ea:	4620      	mov	r0, r4
 80067ec:	f000 fd46 	bl	800727c <d_unqualified_name>
 80067f0:	68e3      	ldr	r3, [r4, #12]
 80067f2:	781b      	ldrb	r3, [r3, #0]
 80067f4:	2b49      	cmp	r3, #73	; 0x49
 80067f6:	4606      	mov	r6, r0
 80067f8:	d076      	beq.n	80068e8 <d_expression_1+0x30c>
 80067fa:	4633      	mov	r3, r6
 80067fc:	463a      	mov	r2, r7
 80067fe:	2137      	movs	r1, #55	; 0x37
 8006800:	4620      	mov	r0, r4
 8006802:	f7f9 fce5 	bl	80001d0 <d_make_comp>
 8006806:	462a      	mov	r2, r5
 8006808:	4603      	mov	r3, r0
 800680a:	2136      	movs	r1, #54	; 0x36
 800680c:	4620      	mov	r0, r4
 800680e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006812:	f7f9 bcdd 	b.w	80001d0 <d_make_comp>
 8006816:	3301      	adds	r3, #1
 8006818:	60e3      	str	r3, [r4, #12]
 800681a:	2600      	movs	r6, #0
 800681c:	4620      	mov	r0, r4
 800681e:	f7ff fedd 	bl	80065dc <d_expression_1>
 8006822:	4603      	mov	r3, r0
 8006824:	b12e      	cbz	r6, 8006832 <d_expression_1+0x256>
 8006826:	4602      	mov	r2, r0
 8006828:	2137      	movs	r1, #55	; 0x37
 800682a:	4620      	mov	r0, r4
 800682c:	f7f9 fcd0 	bl	80001d0 <d_make_comp>
 8006830:	4603      	mov	r3, r0
 8006832:	462a      	mov	r2, r5
 8006834:	4620      	mov	r0, r4
 8006836:	2135      	movs	r1, #53	; 0x35
 8006838:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800683c:	f7f9 bcc8 	b.w	80001d0 <d_make_comp>
 8006840:	2e00      	cmp	r6, #0
 8006842:	d0ea      	beq.n	800681a <d_expression_1+0x23e>
 8006844:	7833      	ldrb	r3, [r6, #0]
 8006846:	2b70      	cmp	r3, #112	; 0x70
 8006848:	d001      	beq.n	800684e <d_expression_1+0x272>
 800684a:	2b6d      	cmp	r3, #109	; 0x6d
 800684c:	d1e5      	bne.n	800681a <d_expression_1+0x23e>
 800684e:	7872      	ldrb	r2, [r6, #1]
 8006850:	429a      	cmp	r2, r3
 8006852:	d1e2      	bne.n	800681a <d_expression_1+0x23e>
 8006854:	68e3      	ldr	r3, [r4, #12]
 8006856:	781a      	ldrb	r2, [r3, #0]
 8006858:	2a5f      	cmp	r2, #95	; 0x5f
 800685a:	d0dc      	beq.n	8006816 <d_expression_1+0x23a>
 800685c:	2601      	movs	r6, #1
 800685e:	e7dd      	b.n	800681c <d_expression_1+0x240>
 8006860:	68e3      	ldr	r3, [r4, #12]
 8006862:	781a      	ldrb	r2, [r3, #0]
 8006864:	2a5f      	cmp	r2, #95	; 0x5f
 8006866:	d1d8      	bne.n	800681a <d_expression_1+0x23e>
 8006868:	3301      	adds	r3, #1
 800686a:	60e3      	str	r3, [r4, #12]
 800686c:	2145      	movs	r1, #69	; 0x45
 800686e:	4620      	mov	r0, r4
 8006870:	f7fe fa1c 	bl	8004cac <d_exprlist>
 8006874:	4603      	mov	r3, r0
 8006876:	e7dc      	b.n	8006832 <d_expression_1+0x256>
 8006878:	4620      	mov	r0, r4
 800687a:	f000 f881 	bl	8006980 <d_type>
 800687e:	e7d7      	b.n	8006830 <d_expression_1+0x254>
 8006880:	4620      	mov	r0, r4
 8006882:	f7ff feab 	bl	80065dc <d_expression_1>
 8006886:	4606      	mov	r6, r0
 8006888:	4620      	mov	r0, r4
 800688a:	f7ff fea7 	bl	80065dc <d_expression_1>
 800688e:	4607      	mov	r7, r0
 8006890:	4620      	mov	r0, r4
 8006892:	f7ff fea3 	bl	80065dc <d_expression_1>
 8006896:	4603      	mov	r3, r0
 8006898:	e779      	b.n	800678e <d_expression_1+0x1b2>
 800689a:	2145      	movs	r1, #69	; 0x45
 800689c:	4620      	mov	r0, r4
 800689e:	f7fe fa05 	bl	8004cac <d_exprlist>
 80068a2:	4606      	mov	r6, r0
 80068a4:	e7a9      	b.n	80067fa <d_expression_1+0x21e>
 80068a6:	781b      	ldrb	r3, [r3, #0]
 80068a8:	f1a3 0263 	sub.w	r2, r3, #99	; 0x63
 80068ac:	2a01      	cmp	r2, #1
 80068ae:	d902      	bls.n	80068b6 <d_expression_1+0x2da>
 80068b0:	3b72      	subs	r3, #114	; 0x72
 80068b2:	2b01      	cmp	r3, #1
 80068b4:	d884      	bhi.n	80067c0 <d_expression_1+0x1e4>
 80068b6:	4620      	mov	r0, r4
 80068b8:	f000 f862 	bl	8006980 <d_type>
 80068bc:	4607      	mov	r7, r0
 80068be:	e783      	b.n	80067c8 <d_expression_1+0x1ec>
 80068c0:	4620      	mov	r0, r4
 80068c2:	f7fd fb81 	bl	8003fc8 <d_template_args>
 80068c6:	4632      	mov	r2, r6
 80068c8:	4603      	mov	r3, r0
 80068ca:	2104      	movs	r1, #4
 80068cc:	4620      	mov	r0, r4
 80068ce:	f7f9 fc7f 	bl	80001d0 <d_make_comp>
 80068d2:	4603      	mov	r3, r0
 80068d4:	e71a      	b.n	800670c <d_expression_1+0x130>
 80068d6:	4620      	mov	r0, r4
 80068d8:	f7ff fe80 	bl	80065dc <d_expression_1>
 80068dc:	4606      	mov	r6, r0
 80068de:	e78c      	b.n	80067fa <d_expression_1+0x21e>
 80068e0:	3301      	adds	r3, #1
 80068e2:	60e3      	str	r3, [r4, #12]
 80068e4:	2300      	movs	r3, #0
 80068e6:	e752      	b.n	800678e <d_expression_1+0x1b2>
 80068e8:	4620      	mov	r0, r4
 80068ea:	f7fd fb6d 	bl	8003fc8 <d_template_args>
 80068ee:	4632      	mov	r2, r6
 80068f0:	4603      	mov	r3, r0
 80068f2:	2104      	movs	r1, #4
 80068f4:	4620      	mov	r0, r4
 80068f6:	f7f9 fc6b 	bl	80001d0 <d_make_comp>
 80068fa:	4606      	mov	r6, r0
 80068fc:	e77d      	b.n	80067fa <d_expression_1+0x21e>
 80068fe:	785a      	ldrb	r2, [r3, #1]
 8006900:	2a69      	cmp	r2, #105	; 0x69
 8006902:	f47f ae98 	bne.w	8006636 <d_expression_1+0x5a>
 8006906:	3302      	adds	r3, #2
 8006908:	60e3      	str	r3, [r4, #12]
 800690a:	2145      	movs	r1, #69	; 0x45
 800690c:	4620      	mov	r0, r4
 800690e:	f7fe f9cd 	bl	8004cac <d_exprlist>
 8006912:	4603      	mov	r3, r0
 8006914:	e73b      	b.n	800678e <d_expression_1+0x1b2>
 8006916:	2b6f      	cmp	r3, #111	; 0x6f
 8006918:	d014      	beq.n	8006944 <d_expression_1+0x368>
 800691a:	2b69      	cmp	r3, #105	; 0x69
 800691c:	d119      	bne.n	8006952 <d_expression_1+0x376>
 800691e:	7853      	ldrb	r3, [r2, #1]
 8006920:	2b6c      	cmp	r3, #108	; 0x6c
 8006922:	f47f ae7b 	bne.w	800661c <d_expression_1+0x40>
 8006926:	2500      	movs	r5, #0
 8006928:	3202      	adds	r2, #2
 800692a:	60e2      	str	r2, [r4, #12]
 800692c:	2145      	movs	r1, #69	; 0x45
 800692e:	4620      	mov	r0, r4
 8006930:	f7fe f9bc 	bl	8004cac <d_exprlist>
 8006934:	462a      	mov	r2, r5
 8006936:	4603      	mov	r3, r0
 8006938:	2130      	movs	r1, #48	; 0x30
 800693a:	4620      	mov	r0, r4
 800693c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006940:	f7f9 bc46 	b.w	80001d0 <d_make_comp>
 8006944:	7853      	ldrb	r3, [r2, #1]
 8006946:	2b6e      	cmp	r3, #110	; 0x6e
 8006948:	f47f ae68 	bne.w	800661c <d_expression_1+0x40>
 800694c:	3202      	adds	r2, #2
 800694e:	60c2      	str	r2, [r0, #12]
 8006950:	e656      	b.n	8006600 <d_expression_1+0x24>
 8006952:	2b74      	cmp	r3, #116	; 0x74
 8006954:	f47f ae62 	bne.w	800661c <d_expression_1+0x40>
 8006958:	7853      	ldrb	r3, [r2, #1]
 800695a:	2b6c      	cmp	r3, #108	; 0x6c
 800695c:	f47f ae5e 	bne.w	800661c <d_expression_1+0x40>
 8006960:	f000 f80e 	bl	8006980 <d_type>
 8006964:	68e2      	ldr	r2, [r4, #12]
 8006966:	4605      	mov	r5, r0
 8006968:	e7de      	b.n	8006928 <d_expression_1+0x34c>
 800696a:	bf00      	nop
 800696c:	0801158c 	.word	0x0801158c
 8006970:	08011284 	.word	0x08011284
 8006974:	0801127c 	.word	0x0801127c
 8006978:	08011398 	.word	0x08011398
 800697c:	0801139c 	.word	0x0801139c

08006980 <d_type>:
 8006980:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006984:	68c1      	ldr	r1, [r0, #12]
 8006986:	780b      	ldrb	r3, [r1, #0]
 8006988:	2b72      	cmp	r3, #114	; 0x72
 800698a:	b083      	sub	sp, #12
 800698c:	4604      	mov	r4, r0
 800698e:	d055      	beq.n	8006a3c <d_type+0xbc>
 8006990:	2b56      	cmp	r3, #86	; 0x56
 8006992:	d053      	beq.n	8006a3c <d_type+0xbc>
 8006994:	2b4b      	cmp	r3, #75	; 0x4b
 8006996:	d051      	beq.n	8006a3c <d_type+0xbc>
 8006998:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 800699c:	2a4a      	cmp	r2, #74	; 0x4a
 800699e:	f200 808a 	bhi.w	8006ab6 <d_type+0x136>
 80069a2:	e8df f012 	tbh	[pc, r2, lsl #1]
 80069a6:	00b2      	.short	0x00b2
 80069a8:	00b200b2 	.word	0x00b200b2
 80069ac:	00b200b2 	.word	0x00b200b2
 80069b0:	00b200b2 	.word	0x00b200b2
 80069b4:	00b200b2 	.word	0x00b200b2
 80069b8:	008800b2 	.word	0x008800b2
 80069bc:	00880088 	.word	0x00880088
 80069c0:	00880088 	.word	0x00880088
 80069c4:	00880088 	.word	0x00880088
 80069c8:	008800b8 	.word	0x008800b8
 80069cc:	010300e1 	.word	0x010300e1
 80069d0:	00ef0088 	.word	0x00ef0088
 80069d4:	008800f5 	.word	0x008800f5
 80069d8:	00880088 	.word	0x00880088
 80069dc:	00880088 	.word	0x00880088
 80069e0:	00b20175 	.word	0x00b20175
 80069e4:	019b018d 	.word	0x019b018d
 80069e8:	01a90088 	.word	0x01a90088
 80069ec:	020f01b7 	.word	0x020f01b7
 80069f0:	008801d8 	.word	0x008801d8
 80069f4:	00880088 	.word	0x00880088
 80069f8:	00b20088 	.word	0x00b20088
 80069fc:	00880088 	.word	0x00880088
 8006a00:	00880088 	.word	0x00880088
 8006a04:	00880088 	.word	0x00880088
 8006a08:	01ea01ea 	.word	0x01ea01ea
 8006a0c:	01ea01ea 	.word	0x01ea01ea
 8006a10:	01ea01ea 	.word	0x01ea01ea
 8006a14:	01ea01ea 	.word	0x01ea01ea
 8006a18:	01ea01ea 	.word	0x01ea01ea
 8006a1c:	01ea0088 	.word	0x01ea0088
 8006a20:	01ea01ea 	.word	0x01ea01ea
 8006a24:	008801ea 	.word	0x008801ea
 8006a28:	00880088 	.word	0x00880088
 8006a2c:	01ea01ea 	.word	0x01ea01ea
 8006a30:	01ea0098 	.word	0x01ea0098
 8006a34:	01ea01ea 	.word	0x01ea01ea
 8006a38:	01ea01ea 	.word	0x01ea01ea
 8006a3c:	2200      	movs	r2, #0
 8006a3e:	a901      	add	r1, sp, #4
 8006a40:	4620      	mov	r0, r4
 8006a42:	f7f9 fc11 	bl	8000268 <d_cv_qualifiers>
 8006a46:	4605      	mov	r5, r0
 8006a48:	2800      	cmp	r0, #0
 8006a4a:	d034      	beq.n	8006ab6 <d_type+0x136>
 8006a4c:	68e3      	ldr	r3, [r4, #12]
 8006a4e:	781b      	ldrb	r3, [r3, #0]
 8006a50:	2b46      	cmp	r3, #70	; 0x46
 8006a52:	4620      	mov	r0, r4
 8006a54:	d034      	beq.n	8006ac0 <d_type+0x140>
 8006a56:	f7ff ff93 	bl	8006980 <d_type>
 8006a5a:	6028      	str	r0, [r5, #0]
 8006a5c:	b358      	cbz	r0, 8006ab6 <d_type+0x136>
 8006a5e:	7803      	ldrb	r3, [r0, #0]
 8006a60:	3b1f      	subs	r3, #31
 8006a62:	2b01      	cmp	r3, #1
 8006a64:	d930      	bls.n	8006ac8 <d_type+0x148>
 8006a66:	9a01      	ldr	r2, [sp, #4]
 8006a68:	b32a      	cbz	r2, 8006ab6 <d_type+0x136>
 8006a6a:	6a23      	ldr	r3, [r4, #32]
 8006a6c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8006a6e:	428b      	cmp	r3, r1
 8006a70:	da21      	bge.n	8006ab6 <d_type+0x136>
 8006a72:	69e0      	ldr	r0, [r4, #28]
 8006a74:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 8006a78:	9d01      	ldr	r5, [sp, #4]
 8006a7a:	1c59      	adds	r1, r3, #1
 8006a7c:	4628      	mov	r0, r5
 8006a7e:	6221      	str	r1, [r4, #32]
 8006a80:	b003      	add	sp, #12
 8006a82:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006a86:	2301      	movs	r3, #1
 8006a88:	6b65      	ldr	r5, [r4, #52]	; 0x34
 8006a8a:	6363      	str	r3, [r4, #52]	; 0x34
 8006a8c:	4620      	mov	r0, r4
 8006a8e:	f7ff fda5 	bl	80065dc <d_expression_1>
 8006a92:	6365      	str	r5, [r4, #52]	; 0x34
 8006a94:	4602      	mov	r2, r0
 8006a96:	2300      	movs	r3, #0
 8006a98:	2141      	movs	r1, #65	; 0x41
 8006a9a:	4620      	mov	r0, r4
 8006a9c:	f7f9 fb98 	bl	80001d0 <d_make_comp>
 8006aa0:	4605      	mov	r5, r0
 8006aa2:	9001      	str	r0, [sp, #4]
 8006aa4:	b138      	cbz	r0, 8006ab6 <d_type+0x136>
 8006aa6:	68e3      	ldr	r3, [r4, #12]
 8006aa8:	781a      	ldrb	r2, [r3, #0]
 8006aaa:	b122      	cbz	r2, 8006ab6 <d_type+0x136>
 8006aac:	1c5a      	adds	r2, r3, #1
 8006aae:	60e2      	str	r2, [r4, #12]
 8006ab0:	781b      	ldrb	r3, [r3, #0]
 8006ab2:	2b45      	cmp	r3, #69	; 0x45
 8006ab4:	d01e      	beq.n	8006af4 <d_type+0x174>
 8006ab6:	2500      	movs	r5, #0
 8006ab8:	4628      	mov	r0, r5
 8006aba:	b003      	add	sp, #12
 8006abc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006ac0:	f000 fd32 	bl	8007528 <d_function_type>
 8006ac4:	6028      	str	r0, [r5, #0]
 8006ac6:	e7c9      	b.n	8006a5c <d_type+0xdc>
 8006ac8:	9a01      	ldr	r2, [sp, #4]
 8006aca:	6843      	ldr	r3, [r0, #4]
 8006acc:	6042      	str	r2, [r0, #4]
 8006ace:	682a      	ldr	r2, [r5, #0]
 8006ad0:	9201      	str	r2, [sp, #4]
 8006ad2:	602b      	str	r3, [r5, #0]
 8006ad4:	e7c7      	b.n	8006a66 <d_type+0xe6>
 8006ad6:	3101      	adds	r1, #1
 8006ad8:	60e1      	str	r1, [r4, #12]
 8006ada:	4620      	mov	r0, r4
 8006adc:	f7f9 fd3e 	bl	800055c <d_source_name>
 8006ae0:	2300      	movs	r3, #0
 8006ae2:	4602      	mov	r2, r0
 8006ae4:	2128      	movs	r1, #40	; 0x28
 8006ae6:	4620      	mov	r0, r4
 8006ae8:	f7f9 fb72 	bl	80001d0 <d_make_comp>
 8006aec:	4605      	mov	r5, r0
 8006aee:	9001      	str	r0, [sp, #4]
 8006af0:	2d00      	cmp	r5, #0
 8006af2:	d0e0      	beq.n	8006ab6 <d_type+0x136>
 8006af4:	6a23      	ldr	r3, [r4, #32]
 8006af6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006af8:	4293      	cmp	r3, r2
 8006afa:	dadc      	bge.n	8006ab6 <d_type+0x136>
 8006afc:	69e1      	ldr	r1, [r4, #28]
 8006afe:	1c5a      	adds	r2, r3, #1
 8006b00:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
 8006b04:	9d01      	ldr	r5, [sp, #4]
 8006b06:	6222      	str	r2, [r4, #32]
 8006b08:	e7d6      	b.n	8006ab8 <d_type+0x138>
 8006b0a:	4620      	mov	r0, r4
 8006b0c:	f000 fd2c 	bl	8007568 <d_name>
 8006b10:	4605      	mov	r5, r0
 8006b12:	9001      	str	r0, [sp, #4]
 8006b14:	e7ec      	b.n	8006af0 <d_type+0x170>
 8006b16:	1c48      	adds	r0, r1, #1
 8006b18:	60e0      	str	r0, [r4, #12]
 8006b1a:	784b      	ldrb	r3, [r1, #1]
 8006b1c:	2b5f      	cmp	r3, #95	; 0x5f
 8006b1e:	f000 8275 	beq.w	800700c <d_type+0x68c>
 8006b22:	3b30      	subs	r3, #48	; 0x30
 8006b24:	2b09      	cmp	r3, #9
 8006b26:	f200 827f 	bhi.w	8007028 <d_type+0x6a8>
 8006b2a:	4603      	mov	r3, r0
 8006b2c:	3301      	adds	r3, #1
 8006b2e:	60e3      	str	r3, [r4, #12]
 8006b30:	781a      	ldrb	r2, [r3, #0]
 8006b32:	3a30      	subs	r2, #48	; 0x30
 8006b34:	2a09      	cmp	r2, #9
 8006b36:	d9f9      	bls.n	8006b2c <d_type+0x1ac>
 8006b38:	6962      	ldr	r2, [r4, #20]
 8006b3a:	69a1      	ldr	r1, [r4, #24]
 8006b3c:	428a      	cmp	r2, r1
 8006b3e:	da11      	bge.n	8006b64 <d_type+0x1e4>
 8006b40:	eb02 0142 	add.w	r1, r2, r2, lsl #1
 8006b44:	6926      	ldr	r6, [r4, #16]
 8006b46:	0089      	lsls	r1, r1, #2
 8006b48:	3201      	adds	r2, #1
 8006b4a:	1875      	adds	r5, r6, r1
 8006b4c:	6162      	str	r2, [r4, #20]
 8006b4e:	d009      	beq.n	8006b64 <d_type+0x1e4>
 8006b50:	1a1a      	subs	r2, r3, r0
 8006b52:	d007      	beq.n	8006b64 <d_type+0x1e4>
 8006b54:	2700      	movs	r7, #0
 8006b56:	5477      	strb	r7, [r6, r1]
 8006b58:	6068      	str	r0, [r5, #4]
 8006b5a:	60aa      	str	r2, [r5, #8]
 8006b5c:	781a      	ldrb	r2, [r3, #0]
 8006b5e:	2a5f      	cmp	r2, #95	; 0x5f
 8006b60:	f000 82c9 	beq.w	80070f6 <d_type+0x776>
 8006b64:	2500      	movs	r5, #0
 8006b66:	e0a9      	b.n	8006cbc <d_type+0x33c>
 8006b68:	3101      	adds	r1, #1
 8006b6a:	60e1      	str	r1, [r4, #12]
 8006b6c:	4620      	mov	r0, r4
 8006b6e:	f7ff ff07 	bl	8006980 <d_type>
 8006b72:	2300      	movs	r3, #0
 8006b74:	4602      	mov	r2, r0
 8006b76:	2125      	movs	r1, #37	; 0x25
 8006b78:	4620      	mov	r0, r4
 8006b7a:	f7f9 fb29 	bl	80001d0 <d_make_comp>
 8006b7e:	4605      	mov	r5, r0
 8006b80:	9001      	str	r0, [sp, #4]
 8006b82:	e7b5      	b.n	8006af0 <d_type+0x170>
 8006b84:	4620      	mov	r0, r4
 8006b86:	f000 fccf 	bl	8007528 <d_function_type>
 8006b8a:	4605      	mov	r5, r0
 8006b8c:	9001      	str	r0, [sp, #4]
 8006b8e:	e7af      	b.n	8006af0 <d_type+0x170>
 8006b90:	3101      	adds	r1, #1
 8006b92:	60e1      	str	r1, [r4, #12]
 8006b94:	4620      	mov	r0, r4
 8006b96:	f7ff fef3 	bl	8006980 <d_type>
 8006b9a:	2300      	movs	r3, #0
 8006b9c:	4602      	mov	r2, r0
 8006b9e:	2126      	movs	r1, #38	; 0x26
 8006ba0:	4620      	mov	r0, r4
 8006ba2:	f7f9 fb15 	bl	80001d0 <d_make_comp>
 8006ba6:	4605      	mov	r5, r0
 8006ba8:	9001      	str	r0, [sp, #4]
 8006baa:	e7a1      	b.n	8006af0 <d_type+0x170>
 8006bac:	1c4b      	adds	r3, r1, #1
 8006bae:	60e3      	str	r3, [r4, #12]
 8006bb0:	784b      	ldrb	r3, [r1, #1]
 8006bb2:	2b00      	cmp	r3, #0
 8006bb4:	f43f af7f 	beq.w	8006ab6 <d_type+0x136>
 8006bb8:	1c8b      	adds	r3, r1, #2
 8006bba:	60e3      	str	r3, [r4, #12]
 8006bbc:	784b      	ldrb	r3, [r1, #1]
 8006bbe:	3b46      	subs	r3, #70	; 0x46
 8006bc0:	2b30      	cmp	r3, #48	; 0x30
 8006bc2:	f63f af78 	bhi.w	8006ab6 <d_type+0x136>
 8006bc6:	a201      	add	r2, pc, #4	; (adr r2, 8006bcc <d_type+0x24c>)
 8006bc8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006bcc:	08006f9b 	.word	0x08006f9b
 8006bd0:	08006ab7 	.word	0x08006ab7
 8006bd4:	08006ab7 	.word	0x08006ab7
 8006bd8:	08006ab7 	.word	0x08006ab7
 8006bdc:	08006ab7 	.word	0x08006ab7
 8006be0:	08006ab7 	.word	0x08006ab7
 8006be4:	08006ab7 	.word	0x08006ab7
 8006be8:	08006ab7 	.word	0x08006ab7
 8006bec:	08006ab7 	.word	0x08006ab7
 8006bf0:	08006ab7 	.word	0x08006ab7
 8006bf4:	08006ab7 	.word	0x08006ab7
 8006bf8:	08006ab7 	.word	0x08006ab7
 8006bfc:	08006ab7 	.word	0x08006ab7
 8006c00:	08006ab7 	.word	0x08006ab7
 8006c04:	08006a87 	.word	0x08006a87
 8006c08:	08006ab7 	.word	0x08006ab7
 8006c0c:	08006ab7 	.word	0x08006ab7
 8006c10:	08006ab7 	.word	0x08006ab7
 8006c14:	08006ab7 	.word	0x08006ab7
 8006c18:	08006ab7 	.word	0x08006ab7
 8006c1c:	08006ab7 	.word	0x08006ab7
 8006c20:	08006ab7 	.word	0x08006ab7
 8006c24:	08006ab7 	.word	0x08006ab7
 8006c28:	08006ab7 	.word	0x08006ab7
 8006c2c:	08006ab7 	.word	0x08006ab7
 8006c30:	08006ab7 	.word	0x08006ab7
 8006c34:	08006ab7 	.word	0x08006ab7
 8006c38:	08006f71 	.word	0x08006f71
 8006c3c:	08006ab7 	.word	0x08006ab7
 8006c40:	08006ab7 	.word	0x08006ab7
 8006c44:	08006f53 	.word	0x08006f53
 8006c48:	08006e8d 	.word	0x08006e8d
 8006c4c:	08006e61 	.word	0x08006e61
 8006c50:	08006ab7 	.word	0x08006ab7
 8006c54:	08006e35 	.word	0x08006e35
 8006c58:	08006e09 	.word	0x08006e09
 8006c5c:	08006ab7 	.word	0x08006ab7
 8006c60:	08006ab7 	.word	0x08006ab7
 8006c64:	08006ab7 	.word	0x08006ab7
 8006c68:	08006ab7 	.word	0x08006ab7
 8006c6c:	08006f2b 	.word	0x08006f2b
 8006c70:	08006ab7 	.word	0x08006ab7
 8006c74:	08006f13 	.word	0x08006f13
 8006c78:	08006ab7 	.word	0x08006ab7
 8006c7c:	08006ab7 	.word	0x08006ab7
 8006c80:	08006ef3 	.word	0x08006ef3
 8006c84:	08006a87 	.word	0x08006a87
 8006c88:	08006ab7 	.word	0x08006ab7
 8006c8c:	08006eb9 	.word	0x08006eb9
 8006c90:	3101      	adds	r1, #1
 8006c92:	60e1      	str	r1, [r4, #12]
 8006c94:	4620      	mov	r0, r4
 8006c96:	f7ff fe73 	bl	8006980 <d_type>
 8006c9a:	4605      	mov	r5, r0
 8006c9c:	2800      	cmp	r0, #0
 8006c9e:	f43f af61 	beq.w	8006b64 <d_type+0x1e4>
 8006ca2:	4620      	mov	r0, r4
 8006ca4:	f7ff fe6c 	bl	8006980 <d_type>
 8006ca8:	2800      	cmp	r0, #0
 8006caa:	f43f af5b 	beq.w	8006b64 <d_type+0x1e4>
 8006cae:	4603      	mov	r3, r0
 8006cb0:	462a      	mov	r2, r5
 8006cb2:	212b      	movs	r1, #43	; 0x2b
 8006cb4:	4620      	mov	r0, r4
 8006cb6:	f7f9 fa8b 	bl	80001d0 <d_make_comp>
 8006cba:	4605      	mov	r5, r0
 8006cbc:	9501      	str	r5, [sp, #4]
 8006cbe:	e717      	b.n	8006af0 <d_type+0x170>
 8006cc0:	3101      	adds	r1, #1
 8006cc2:	60e1      	str	r1, [r4, #12]
 8006cc4:	4620      	mov	r0, r4
 8006cc6:	f7ff fe5b 	bl	8006980 <d_type>
 8006cca:	2300      	movs	r3, #0
 8006ccc:	4602      	mov	r2, r0
 8006cce:	2124      	movs	r1, #36	; 0x24
 8006cd0:	4620      	mov	r0, r4
 8006cd2:	f7f9 fa7d 	bl	80001d0 <d_make_comp>
 8006cd6:	4605      	mov	r5, r0
 8006cd8:	9001      	str	r0, [sp, #4]
 8006cda:	e709      	b.n	8006af0 <d_type+0x170>
 8006cdc:	3101      	adds	r1, #1
 8006cde:	60e1      	str	r1, [r4, #12]
 8006ce0:	4620      	mov	r0, r4
 8006ce2:	f7ff fe4d 	bl	8006980 <d_type>
 8006ce6:	2300      	movs	r3, #0
 8006ce8:	4602      	mov	r2, r0
 8006cea:	2122      	movs	r1, #34	; 0x22
 8006cec:	4620      	mov	r0, r4
 8006cee:	f7f9 fa6f 	bl	80001d0 <d_make_comp>
 8006cf2:	4605      	mov	r5, r0
 8006cf4:	9001      	str	r0, [sp, #4]
 8006cf6:	e6fb      	b.n	8006af0 <d_type+0x170>
 8006cf8:	3101      	adds	r1, #1
 8006cfa:	60e1      	str	r1, [r4, #12]
 8006cfc:	4620      	mov	r0, r4
 8006cfe:	f7ff fe3f 	bl	8006980 <d_type>
 8006d02:	2300      	movs	r3, #0
 8006d04:	4602      	mov	r2, r0
 8006d06:	2123      	movs	r1, #35	; 0x23
 8006d08:	4620      	mov	r0, r4
 8006d0a:	f7f9 fa61 	bl	80001d0 <d_make_comp>
 8006d0e:	4605      	mov	r5, r0
 8006d10:	9001      	str	r0, [sp, #4]
 8006d12:	e6ed      	b.n	8006af0 <d_type+0x170>
 8006d14:	784b      	ldrb	r3, [r1, #1]
 8006d16:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8006d1a:	2a09      	cmp	r2, #9
 8006d1c:	d905      	bls.n	8006d2a <d_type+0x3aa>
 8006d1e:	2b5f      	cmp	r3, #95	; 0x5f
 8006d20:	d003      	beq.n	8006d2a <d_type+0x3aa>
 8006d22:	3b41      	subs	r3, #65	; 0x41
 8006d24:	2b19      	cmp	r3, #25
 8006d26:	f200 818c 	bhi.w	8007042 <d_type+0x6c2>
 8006d2a:	2100      	movs	r1, #0
 8006d2c:	4620      	mov	r0, r4
 8006d2e:	f7f9 fc8b 	bl	8000648 <d_substitution>
 8006d32:	68e3      	ldr	r3, [r4, #12]
 8006d34:	9001      	str	r0, [sp, #4]
 8006d36:	781b      	ldrb	r3, [r3, #0]
 8006d38:	2b49      	cmp	r3, #73	; 0x49
 8006d3a:	4605      	mov	r5, r0
 8006d3c:	f47f aebc 	bne.w	8006ab8 <d_type+0x138>
 8006d40:	4620      	mov	r0, r4
 8006d42:	f7fd f941 	bl	8003fc8 <d_template_args>
 8006d46:	462a      	mov	r2, r5
 8006d48:	4603      	mov	r3, r0
 8006d4a:	2104      	movs	r1, #4
 8006d4c:	4620      	mov	r0, r4
 8006d4e:	f7f9 fa3f 	bl	80001d0 <d_make_comp>
 8006d52:	4605      	mov	r5, r0
 8006d54:	e7b2      	b.n	8006cbc <d_type+0x33c>
 8006d56:	3101      	adds	r1, #1
 8006d58:	60e1      	str	r1, [r4, #12]
 8006d5a:	4620      	mov	r0, r4
 8006d5c:	f7f9 fbfe 	bl	800055c <d_source_name>
 8006d60:	9001      	str	r0, [sp, #4]
 8006d62:	4620      	mov	r0, r4
 8006d64:	f7ff fe0c 	bl	8006980 <d_type>
 8006d68:	9b01      	ldr	r3, [sp, #4]
 8006d6a:	4602      	mov	r2, r0
 8006d6c:	2121      	movs	r1, #33	; 0x21
 8006d6e:	4620      	mov	r0, r4
 8006d70:	f7f9 fa2e 	bl	80001d0 <d_make_comp>
 8006d74:	4605      	mov	r5, r0
 8006d76:	9001      	str	r0, [sp, #4]
 8006d78:	e6ba      	b.n	8006af0 <d_type+0x170>
 8006d7a:	3b61      	subs	r3, #97	; 0x61
 8006d7c:	4fb7      	ldr	r7, [pc, #732]	; (800705c <d_type+0x6dc>)
 8006d7e:	6962      	ldr	r2, [r4, #20]
 8006d80:	69a5      	ldr	r5, [r4, #24]
 8006d82:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8006d86:	009b      	lsls	r3, r3, #2
 8006d88:	f107 00c4 	add.w	r0, r7, #196	; 0xc4
 8006d8c:	42aa      	cmp	r2, r5
 8006d8e:	4418      	add	r0, r3
 8006d90:	f280 8138 	bge.w	8007004 <d_type+0x684>
 8006d94:	eb02 0642 	add.w	r6, r2, r2, lsl #1
 8006d98:	f8d4 e010 	ldr.w	lr, [r4, #16]
 8006d9c:	00b6      	lsls	r6, r6, #2
 8006d9e:	3201      	adds	r2, #1
 8006da0:	eb1e 0506 	adds.w	r5, lr, r6
 8006da4:	6162      	str	r2, [r4, #20]
 8006da6:	f000 812d 	beq.w	8007004 <d_type+0x684>
 8006daa:	2227      	movs	r2, #39	; 0x27
 8006dac:	443b      	add	r3, r7
 8006dae:	f80e 2006 	strb.w	r2, [lr, r6]
 8006db2:	6068      	str	r0, [r5, #4]
 8006db4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006db6:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8006dba:	3101      	adds	r1, #1
 8006dbc:	4413      	add	r3, r2
 8006dbe:	60e1      	str	r1, [r4, #12]
 8006dc0:	6323      	str	r3, [r4, #48]	; 0x30
 8006dc2:	e679      	b.n	8006ab8 <d_type+0x138>
 8006dc4:	4620      	mov	r0, r4
 8006dc6:	f7f9 fba7 	bl	8000518 <d_template_param>
 8006dca:	68e6      	ldr	r6, [r4, #12]
 8006dcc:	9001      	str	r0, [sp, #4]
 8006dce:	7833      	ldrb	r3, [r6, #0]
 8006dd0:	2b49      	cmp	r3, #73	; 0x49
 8006dd2:	4605      	mov	r5, r0
 8006dd4:	f47f ae8c 	bne.w	8006af0 <d_type+0x170>
 8006dd8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006dda:	2b00      	cmp	r3, #0
 8006ddc:	f040 8150 	bne.w	8007080 <d_type+0x700>
 8006de0:	2800      	cmp	r0, #0
 8006de2:	f43f ae68 	beq.w	8006ab6 <d_type+0x136>
 8006de6:	6a23      	ldr	r3, [r4, #32]
 8006de8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006dea:	4293      	cmp	r3, r2
 8006dec:	f6bf ae63 	bge.w	8006ab6 <d_type+0x136>
 8006df0:	69e1      	ldr	r1, [r4, #28]
 8006df2:	1c5a      	adds	r2, r3, #1
 8006df4:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8006df8:	6222      	str	r2, [r4, #32]
 8006dfa:	4620      	mov	r0, r4
 8006dfc:	9d01      	ldr	r5, [sp, #4]
 8006dfe:	f7fd f8e3 	bl	8003fc8 <d_template_args>
 8006e02:	462a      	mov	r2, r5
 8006e04:	4603      	mov	r3, r0
 8006e06:	e7a0      	b.n	8006d4a <d_type+0x3ca>
 8006e08:	6963      	ldr	r3, [r4, #20]
 8006e0a:	69a2      	ldr	r2, [r4, #24]
 8006e0c:	4293      	cmp	r3, r2
 8006e0e:	f280 80f9 	bge.w	8007004 <d_type+0x684>
 8006e12:	eb03 0143 	add.w	r1, r3, r3, lsl #1
 8006e16:	6922      	ldr	r2, [r4, #16]
 8006e18:	0089      	lsls	r1, r1, #2
 8006e1a:	3301      	adds	r3, #1
 8006e1c:	1855      	adds	r5, r2, r1
 8006e1e:	6163      	str	r3, [r4, #20]
 8006e20:	f000 80f0 	beq.w	8007004 <d_type+0x684>
 8006e24:	4b8e      	ldr	r3, [pc, #568]	; (8007060 <d_type+0x6e0>)
 8006e26:	2027      	movs	r0, #39	; 0x27
 8006e28:	5450      	strb	r0, [r2, r1]
 8006e2a:	606b      	str	r3, [r5, #4]
 8006e2c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006e2e:	3308      	adds	r3, #8
 8006e30:	6323      	str	r3, [r4, #48]	; 0x30
 8006e32:	e641      	b.n	8006ab8 <d_type+0x138>
 8006e34:	6963      	ldr	r3, [r4, #20]
 8006e36:	69a2      	ldr	r2, [r4, #24]
 8006e38:	4293      	cmp	r3, r2
 8006e3a:	f280 80e3 	bge.w	8007004 <d_type+0x684>
 8006e3e:	eb03 0143 	add.w	r1, r3, r3, lsl #1
 8006e42:	6922      	ldr	r2, [r4, #16]
 8006e44:	0089      	lsls	r1, r1, #2
 8006e46:	3301      	adds	r3, #1
 8006e48:	1855      	adds	r5, r2, r1
 8006e4a:	6163      	str	r3, [r4, #20]
 8006e4c:	f000 80da 	beq.w	8007004 <d_type+0x684>
 8006e50:	4b84      	ldr	r3, [pc, #528]	; (8007064 <d_type+0x6e4>)
 8006e52:	2027      	movs	r0, #39	; 0x27
 8006e54:	5450      	strb	r0, [r2, r1]
 8006e56:	606b      	str	r3, [r5, #4]
 8006e58:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006e5a:	3304      	adds	r3, #4
 8006e5c:	6323      	str	r3, [r4, #48]	; 0x30
 8006e5e:	e62b      	b.n	8006ab8 <d_type+0x138>
 8006e60:	6963      	ldr	r3, [r4, #20]
 8006e62:	69a2      	ldr	r2, [r4, #24]
 8006e64:	4293      	cmp	r3, r2
 8006e66:	f280 80cd 	bge.w	8007004 <d_type+0x684>
 8006e6a:	eb03 0143 	add.w	r1, r3, r3, lsl #1
 8006e6e:	6922      	ldr	r2, [r4, #16]
 8006e70:	0089      	lsls	r1, r1, #2
 8006e72:	3301      	adds	r3, #1
 8006e74:	1855      	adds	r5, r2, r1
 8006e76:	6163      	str	r3, [r4, #20]
 8006e78:	f000 80c4 	beq.w	8007004 <d_type+0x684>
 8006e7c:	4b7a      	ldr	r3, [pc, #488]	; (8007068 <d_type+0x6e8>)
 8006e7e:	2027      	movs	r0, #39	; 0x27
 8006e80:	5450      	strb	r0, [r2, r1]
 8006e82:	606b      	str	r3, [r5, #4]
 8006e84:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006e86:	3309      	adds	r3, #9
 8006e88:	6323      	str	r3, [r4, #48]	; 0x30
 8006e8a:	e615      	b.n	8006ab8 <d_type+0x138>
 8006e8c:	6963      	ldr	r3, [r4, #20]
 8006e8e:	69a2      	ldr	r2, [r4, #24]
 8006e90:	4293      	cmp	r3, r2
 8006e92:	f280 80b7 	bge.w	8007004 <d_type+0x684>
 8006e96:	eb03 0143 	add.w	r1, r3, r3, lsl #1
 8006e9a:	6922      	ldr	r2, [r4, #16]
 8006e9c:	0089      	lsls	r1, r1, #2
 8006e9e:	3301      	adds	r3, #1
 8006ea0:	1855      	adds	r5, r2, r1
 8006ea2:	6163      	str	r3, [r4, #20]
 8006ea4:	f000 80ae 	beq.w	8007004 <d_type+0x684>
 8006ea8:	4b70      	ldr	r3, [pc, #448]	; (800706c <d_type+0x6ec>)
 8006eaa:	2027      	movs	r0, #39	; 0x27
 8006eac:	5450      	strb	r0, [r2, r1]
 8006eae:	606b      	str	r3, [r5, #4]
 8006eb0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006eb2:	330a      	adds	r3, #10
 8006eb4:	6323      	str	r3, [r4, #48]	; 0x30
 8006eb6:	e5ff      	b.n	8006ab8 <d_type+0x138>
 8006eb8:	788b      	ldrb	r3, [r1, #2]
 8006eba:	2b5f      	cmp	r3, #95	; 0x5f
 8006ebc:	f000 80ff 	beq.w	80070be <d_type+0x73e>
 8006ec0:	4620      	mov	r0, r4
 8006ec2:	f7f9 faf5 	bl	80004b0 <d_number_component>
 8006ec6:	4605      	mov	r5, r0
 8006ec8:	2d00      	cmp	r5, #0
 8006eca:	f43f aef7 	beq.w	8006cbc <d_type+0x33c>
 8006ece:	68e3      	ldr	r3, [r4, #12]
 8006ed0:	781a      	ldrb	r2, [r3, #0]
 8006ed2:	2a5f      	cmp	r2, #95	; 0x5f
 8006ed4:	f47f ae46 	bne.w	8006b64 <d_type+0x1e4>
 8006ed8:	3301      	adds	r3, #1
 8006eda:	60e3      	str	r3, [r4, #12]
 8006edc:	4620      	mov	r0, r4
 8006ede:	f7ff fd4f 	bl	8006980 <d_type>
 8006ee2:	462a      	mov	r2, r5
 8006ee4:	4603      	mov	r3, r0
 8006ee6:	212d      	movs	r1, #45	; 0x2d
 8006ee8:	4620      	mov	r0, r4
 8006eea:	f7f9 f971 	bl	80001d0 <d_make_comp>
 8006eee:	4605      	mov	r5, r0
 8006ef0:	e6e4      	b.n	8006cbc <d_type+0x33c>
 8006ef2:	6963      	ldr	r3, [r4, #20]
 8006ef4:	69a2      	ldr	r2, [r4, #24]
 8006ef6:	4293      	cmp	r3, r2
 8006ef8:	f280 8084 	bge.w	8007004 <d_type+0x684>
 8006efc:	eb03 0143 	add.w	r1, r3, r3, lsl #1
 8006f00:	6922      	ldr	r2, [r4, #16]
 8006f02:	0089      	lsls	r1, r1, #2
 8006f04:	3301      	adds	r3, #1
 8006f06:	1855      	adds	r5, r2, r1
 8006f08:	6163      	str	r3, [r4, #20]
 8006f0a:	d07b      	beq.n	8007004 <d_type+0x684>
 8006f0c:	2027      	movs	r0, #39	; 0x27
 8006f0e:	4b58      	ldr	r3, [pc, #352]	; (8007070 <d_type+0x6f0>)
 8006f10:	e78a      	b.n	8006e28 <d_type+0x4a8>
 8006f12:	4620      	mov	r0, r4
 8006f14:	f7ff fd34 	bl	8006980 <d_type>
 8006f18:	2300      	movs	r3, #0
 8006f1a:	4602      	mov	r2, r0
 8006f1c:	2149      	movs	r1, #73	; 0x49
 8006f1e:	4620      	mov	r0, r4
 8006f20:	f7f9 f956 	bl	80001d0 <d_make_comp>
 8006f24:	4605      	mov	r5, r0
 8006f26:	9001      	str	r0, [sp, #4]
 8006f28:	e5e2      	b.n	8006af0 <d_type+0x170>
 8006f2a:	6963      	ldr	r3, [r4, #20]
 8006f2c:	69a2      	ldr	r2, [r4, #24]
 8006f2e:	4293      	cmp	r3, r2
 8006f30:	da68      	bge.n	8007004 <d_type+0x684>
 8006f32:	eb03 0143 	add.w	r1, r3, r3, lsl #1
 8006f36:	6922      	ldr	r2, [r4, #16]
 8006f38:	0089      	lsls	r1, r1, #2
 8006f3a:	3301      	adds	r3, #1
 8006f3c:	1855      	adds	r5, r2, r1
 8006f3e:	6163      	str	r3, [r4, #20]
 8006f40:	d060      	beq.n	8007004 <d_type+0x684>
 8006f42:	4b4c      	ldr	r3, [pc, #304]	; (8007074 <d_type+0x6f4>)
 8006f44:	2027      	movs	r0, #39	; 0x27
 8006f46:	5450      	strb	r0, [r2, r1]
 8006f48:	606b      	str	r3, [r5, #4]
 8006f4a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006f4c:	3311      	adds	r3, #17
 8006f4e:	6323      	str	r3, [r4, #48]	; 0x30
 8006f50:	e5b2      	b.n	8006ab8 <d_type+0x138>
 8006f52:	6963      	ldr	r3, [r4, #20]
 8006f54:	69a2      	ldr	r2, [r4, #24]
 8006f56:	4293      	cmp	r3, r2
 8006f58:	da54      	bge.n	8007004 <d_type+0x684>
 8006f5a:	eb03 0143 	add.w	r1, r3, r3, lsl #1
 8006f5e:	6922      	ldr	r2, [r4, #16]
 8006f60:	0089      	lsls	r1, r1, #2
 8006f62:	3301      	adds	r3, #1
 8006f64:	1855      	adds	r5, r2, r1
 8006f66:	6163      	str	r3, [r4, #20]
 8006f68:	d04c      	beq.n	8007004 <d_type+0x684>
 8006f6a:	2027      	movs	r0, #39	; 0x27
 8006f6c:	4b42      	ldr	r3, [pc, #264]	; (8007078 <d_type+0x6f8>)
 8006f6e:	e787      	b.n	8006e80 <d_type+0x500>
 8006f70:	6963      	ldr	r3, [r4, #20]
 8006f72:	69a2      	ldr	r2, [r4, #24]
 8006f74:	4293      	cmp	r3, r2
 8006f76:	f6bf ad9e 	bge.w	8006ab6 <d_type+0x136>
 8006f7a:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8006f7e:	6921      	ldr	r1, [r4, #16]
 8006f80:	0092      	lsls	r2, r2, #2
 8006f82:	3301      	adds	r3, #1
 8006f84:	188d      	adds	r5, r1, r2
 8006f86:	6163      	str	r3, [r4, #20]
 8006f88:	f43f ad95 	beq.w	8006ab6 <d_type+0x136>
 8006f8c:	2300      	movs	r3, #0
 8006f8e:	548b      	strb	r3, [r1, r2]
 8006f90:	483a      	ldr	r0, [pc, #232]	; (800707c <d_type+0x6fc>)
 8006f92:	6068      	str	r0, [r5, #4]
 8006f94:	2304      	movs	r3, #4
 8006f96:	60ab      	str	r3, [r5, #8]
 8006f98:	e58e      	b.n	8006ab8 <d_type+0x138>
 8006f9a:	6963      	ldr	r3, [r4, #20]
 8006f9c:	69a2      	ldr	r2, [r4, #24]
 8006f9e:	4293      	cmp	r3, r2
 8006fa0:	f280 8084 	bge.w	80070ac <d_type+0x72c>
 8006fa4:	6925      	ldr	r5, [r4, #16]
 8006fa6:	eb03 0043 	add.w	r0, r3, r3, lsl #1
 8006faa:	0080      	lsls	r0, r0, #2
 8006fac:	3301      	adds	r3, #1
 8006fae:	182a      	adds	r2, r5, r0
 8006fb0:	262c      	movs	r6, #44	; 0x2c
 8006fb2:	6163      	str	r3, [r4, #20]
 8006fb4:	9201      	str	r2, [sp, #4]
 8006fb6:	542e      	strb	r6, [r5, r0]
 8006fb8:	788b      	ldrb	r3, [r1, #2]
 8006fba:	3b30      	subs	r3, #48	; 0x30
 8006fbc:	b2db      	uxtb	r3, r3
 8006fbe:	2b09      	cmp	r3, #9
 8006fc0:	bf94      	ite	ls
 8006fc2:	2301      	movls	r3, #1
 8006fc4:	2300      	movhi	r3, #0
 8006fc6:	8113      	strh	r3, [r2, #8]
 8006fc8:	d973      	bls.n	80070b2 <d_type+0x732>
 8006fca:	4615      	mov	r5, r2
 8006fcc:	4620      	mov	r0, r4
 8006fce:	f7ff fcd7 	bl	8006980 <d_type>
 8006fd2:	9b01      	ldr	r3, [sp, #4]
 8006fd4:	6068      	str	r0, [r5, #4]
 8006fd6:	685b      	ldr	r3, [r3, #4]
 8006fd8:	2b00      	cmp	r3, #0
 8006fda:	f43f ad6c 	beq.w	8006ab6 <d_type+0x136>
 8006fde:	f104 000c 	add.w	r0, r4, #12
 8006fe2:	f7f9 fa3b 	bl	800045c <d_number.isra.0>
 8006fe6:	68e2      	ldr	r2, [r4, #12]
 8006fe8:	7813      	ldrb	r3, [r2, #0]
 8006fea:	b143      	cbz	r3, 8006ffe <d_type+0x67e>
 8006fec:	1c53      	adds	r3, r2, #1
 8006fee:	60e3      	str	r3, [r4, #12]
 8006ff0:	7813      	ldrb	r3, [r2, #0]
 8006ff2:	f1a3 0373 	sub.w	r3, r3, #115	; 0x73
 8006ff6:	fab3 f383 	clz	r3, r3
 8006ffa:	095b      	lsrs	r3, r3, #5
 8006ffc:	b21b      	sxth	r3, r3
 8006ffe:	9d01      	ldr	r5, [sp, #4]
 8007000:	816b      	strh	r3, [r5, #10]
 8007002:	e559      	b.n	8006ab8 <d_type+0x138>
 8007004:	2300      	movs	r3, #0
 8007006:	9301      	str	r3, [sp, #4]
 8007008:	685b      	ldr	r3, [r3, #4]
 800700a:	deff      	udf	#255	; 0xff
 800700c:	2500      	movs	r5, #0
 800700e:	3001      	adds	r0, #1
 8007010:	60e0      	str	r0, [r4, #12]
 8007012:	4620      	mov	r0, r4
 8007014:	f7ff fcb4 	bl	8006980 <d_type>
 8007018:	462a      	mov	r2, r5
 800701a:	4603      	mov	r3, r0
 800701c:	212a      	movs	r1, #42	; 0x2a
 800701e:	4620      	mov	r0, r4
 8007020:	f7f9 f8d6 	bl	80001d0 <d_make_comp>
 8007024:	4605      	mov	r5, r0
 8007026:	e649      	b.n	8006cbc <d_type+0x33c>
 8007028:	2301      	movs	r3, #1
 800702a:	6b65      	ldr	r5, [r4, #52]	; 0x34
 800702c:	6363      	str	r3, [r4, #52]	; 0x34
 800702e:	4620      	mov	r0, r4
 8007030:	f7ff fad4 	bl	80065dc <d_expression_1>
 8007034:	6365      	str	r5, [r4, #52]	; 0x34
 8007036:	4605      	mov	r5, r0
 8007038:	2800      	cmp	r0, #0
 800703a:	f43f ad93 	beq.w	8006b64 <d_type+0x1e4>
 800703e:	68e3      	ldr	r3, [r4, #12]
 8007040:	e58c      	b.n	8006b5c <d_type+0x1dc>
 8007042:	4620      	mov	r0, r4
 8007044:	f000 fa90 	bl	8007568 <d_name>
 8007048:	4605      	mov	r5, r0
 800704a:	9001      	str	r0, [sp, #4]
 800704c:	2800      	cmp	r0, #0
 800704e:	f43f ad32 	beq.w	8006ab6 <d_type+0x136>
 8007052:	7803      	ldrb	r3, [r0, #0]
 8007054:	2b18      	cmp	r3, #24
 8007056:	f47f ad4d 	bne.w	8006af4 <d_type+0x174>
 800705a:	e52d      	b.n	8006ab8 <d_type+0x138>
 800705c:	080106e8 	.word	0x080106e8
 8007060:	08010a18 	.word	0x08010a18
 8007064:	080109f0 	.word	0x080109f0
 8007068:	080109b4 	.word	0x080109b4
 800706c:	080109dc 	.word	0x080109dc
 8007070:	08010a04 	.word	0x08010a04
 8007074:	08010a2c 	.word	0x08010a2c
 8007078:	080109c8 	.word	0x080109c8
 800707c:	080113a0 	.word	0x080113a0
 8007080:	4620      	mov	r0, r4
 8007082:	f8d4 9014 	ldr.w	r9, [r4, #20]
 8007086:	f8d4 8020 	ldr.w	r8, [r4, #32]
 800708a:	6aa7      	ldr	r7, [r4, #40]	; 0x28
 800708c:	6b25      	ldr	r5, [r4, #48]	; 0x30
 800708e:	f7fc ff9b 	bl	8003fc8 <d_template_args>
 8007092:	68e2      	ldr	r2, [r4, #12]
 8007094:	7812      	ldrb	r2, [r2, #0]
 8007096:	2a49      	cmp	r2, #73	; 0x49
 8007098:	d01c      	beq.n	80070d4 <d_type+0x754>
 800709a:	6325      	str	r5, [r4, #48]	; 0x30
 800709c:	60e6      	str	r6, [r4, #12]
 800709e:	f8c4 9014 	str.w	r9, [r4, #20]
 80070a2:	f8c4 8020 	str.w	r8, [r4, #32]
 80070a6:	62a7      	str	r7, [r4, #40]	; 0x28
 80070a8:	9d01      	ldr	r5, [sp, #4]
 80070aa:	e521      	b.n	8006af0 <d_type+0x170>
 80070ac:	2300      	movs	r3, #0
 80070ae:	701b      	strb	r3, [r3, #0]
 80070b0:	deff      	udf	#255	; 0xff
 80070b2:	f104 000c 	add.w	r0, r4, #12
 80070b6:	f7f9 f9d1 	bl	800045c <d_number.isra.0>
 80070ba:	9d01      	ldr	r5, [sp, #4]
 80070bc:	e786      	b.n	8006fcc <d_type+0x64c>
 80070be:	3103      	adds	r1, #3
 80070c0:	2301      	movs	r3, #1
 80070c2:	6b66      	ldr	r6, [r4, #52]	; 0x34
 80070c4:	60e1      	str	r1, [r4, #12]
 80070c6:	6363      	str	r3, [r4, #52]	; 0x34
 80070c8:	4620      	mov	r0, r4
 80070ca:	f7ff fa87 	bl	80065dc <d_expression_1>
 80070ce:	6366      	str	r6, [r4, #52]	; 0x34
 80070d0:	4605      	mov	r5, r0
 80070d2:	e6f9      	b.n	8006ec8 <d_type+0x548>
 80070d4:	9b01      	ldr	r3, [sp, #4]
 80070d6:	2b00      	cmp	r3, #0
 80070d8:	f43f aced 	beq.w	8006ab6 <d_type+0x136>
 80070dc:	6a22      	ldr	r2, [r4, #32]
 80070de:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80070e0:	428a      	cmp	r2, r1
 80070e2:	f6bf ace8 	bge.w	8006ab6 <d_type+0x136>
 80070e6:	69e5      	ldr	r5, [r4, #28]
 80070e8:	1c51      	adds	r1, r2, #1
 80070ea:	f845 3022 	str.w	r3, [r5, r2, lsl #2]
 80070ee:	9a01      	ldr	r2, [sp, #4]
 80070f0:	6221      	str	r1, [r4, #32]
 80070f2:	4603      	mov	r3, r0
 80070f4:	e629      	b.n	8006d4a <d_type+0x3ca>
 80070f6:	4618      	mov	r0, r3
 80070f8:	e789      	b.n	800700e <d_type+0x68e>
 80070fa:	bf00      	nop

080070fc <d_operator_name>:
 80070fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007100:	68c3      	ldr	r3, [r0, #12]
 8007102:	781e      	ldrb	r6, [r3, #0]
 8007104:	4684      	mov	ip, r0
 8007106:	b316      	cbz	r6, 800714e <d_operator_name+0x52>
 8007108:	1c5a      	adds	r2, r3, #1
 800710a:	60c2      	str	r2, [r0, #12]
 800710c:	785a      	ldrb	r2, [r3, #1]
 800710e:	781e      	ldrb	r6, [r3, #0]
 8007110:	2a00      	cmp	r2, #0
 8007112:	d059      	beq.n	80071c8 <d_operator_name+0xcc>
 8007114:	1c9a      	adds	r2, r3, #2
 8007116:	60c2      	str	r2, [r0, #12]
 8007118:	2e76      	cmp	r6, #118	; 0x76
 800711a:	4604      	mov	r4, r0
 800711c:	f893 e001 	ldrb.w	lr, [r3, #1]
 8007120:	d043      	beq.n	80071aa <d_operator_name+0xae>
 8007122:	2e63      	cmp	r6, #99	; 0x63
 8007124:	d114      	bne.n	8007150 <d_operator_name+0x54>
 8007126:	f1be 0f76 	cmp.w	lr, #118	; 0x76
 800712a:	d111      	bne.n	8007150 <d_operator_name+0x54>
 800712c:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800712e:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8007130:	fab3 f383 	clz	r3, r3
 8007134:	095b      	lsrs	r3, r3, #5
 8007136:	6383      	str	r3, [r0, #56]	; 0x38
 8007138:	f7ff fc22 	bl	8006980 <d_type>
 800713c:	63a5      	str	r5, [r4, #56]	; 0x38
 800713e:	4602      	mov	r2, r0
 8007140:	2300      	movs	r3, #0
 8007142:	4620      	mov	r0, r4
 8007144:	2133      	movs	r1, #51	; 0x33
 8007146:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800714a:	f7f9 b841 	b.w	80001d0 <d_make_comp>
 800714e:	46b6      	mov	lr, r6
 8007150:	4c28      	ldr	r4, [pc, #160]	; (80071f4 <d_operator_name+0xf8>)
 8007152:	203d      	movs	r0, #61	; 0x3d
 8007154:	2200      	movs	r2, #0
 8007156:	e004      	b.n	8007162 <d_operator_name+0x66>
 8007158:	bf94      	ite	ls
 800715a:	1c5a      	addls	r2, r3, #1
 800715c:	4618      	movhi	r0, r3
 800715e:	4282      	cmp	r2, r0
 8007160:	d02f      	beq.n	80071c2 <d_operator_name+0xc6>
 8007162:	1a83      	subs	r3, r0, r2
 8007164:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8007168:	eb02 0363 	add.w	r3, r2, r3, asr #1
 800716c:	0119      	lsls	r1, r3, #4
 800716e:	1867      	adds	r7, r4, r1
 8007170:	5861      	ldr	r1, [r4, r1]
 8007172:	780d      	ldrb	r5, [r1, #0]
 8007174:	42b5      	cmp	r5, r6
 8007176:	d1ef      	bne.n	8007158 <d_operator_name+0x5c>
 8007178:	7849      	ldrb	r1, [r1, #1]
 800717a:	4571      	cmp	r1, lr
 800717c:	d1ec      	bne.n	8007158 <d_operator_name+0x5c>
 800717e:	f8dc 3014 	ldr.w	r3, [ip, #20]
 8007182:	f8dc 2018 	ldr.w	r2, [ip, #24]
 8007186:	4293      	cmp	r3, r2
 8007188:	da1b      	bge.n	80071c2 <d_operator_name+0xc6>
 800718a:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 800718e:	f8dc 1010 	ldr.w	r1, [ip, #16]
 8007192:	3301      	adds	r3, #1
 8007194:	0092      	lsls	r2, r2, #2
 8007196:	f8cc 3014 	str.w	r3, [ip, #20]
 800719a:	188b      	adds	r3, r1, r2
 800719c:	d027      	beq.n	80071ee <d_operator_name+0xf2>
 800719e:	2031      	movs	r0, #49	; 0x31
 80071a0:	5488      	strb	r0, [r1, r2]
 80071a2:	605f      	str	r7, [r3, #4]
 80071a4:	4618      	mov	r0, r3
 80071a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80071aa:	f1ae 0530 	sub.w	r5, lr, #48	; 0x30
 80071ae:	b2eb      	uxtb	r3, r5
 80071b0:	2b09      	cmp	r3, #9
 80071b2:	d8cd      	bhi.n	8007150 <d_operator_name+0x54>
 80071b4:	f7f9 f9d2 	bl	800055c <d_source_name>
 80071b8:	6963      	ldr	r3, [r4, #20]
 80071ba:	69a2      	ldr	r2, [r4, #24]
 80071bc:	4293      	cmp	r3, r2
 80071be:	4601      	mov	r1, r0
 80071c0:	db04      	blt.n	80071cc <d_operator_name+0xd0>
 80071c2:	2000      	movs	r0, #0
 80071c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80071c8:	4696      	mov	lr, r2
 80071ca:	e7c1      	b.n	8007150 <d_operator_name+0x54>
 80071cc:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 80071d0:	6920      	ldr	r0, [r4, #16]
 80071d2:	3301      	adds	r3, #1
 80071d4:	0092      	lsls	r2, r2, #2
 80071d6:	6163      	str	r3, [r4, #20]
 80071d8:	1883      	adds	r3, r0, r2
 80071da:	d0f2      	beq.n	80071c2 <d_operator_name+0xc6>
 80071dc:	2900      	cmp	r1, #0
 80071de:	d0f0      	beq.n	80071c2 <d_operator_name+0xc6>
 80071e0:	2432      	movs	r4, #50	; 0x32
 80071e2:	5484      	strb	r4, [r0, r2]
 80071e4:	605d      	str	r5, [r3, #4]
 80071e6:	6099      	str	r1, [r3, #8]
 80071e8:	4618      	mov	r0, r3
 80071ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80071ee:	4618      	mov	r0, r3
 80071f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80071f4:	08010a40 	.word	0x08010a40

080071f8 <d_parmlist>:
 80071f8:	b530      	push	{r4, r5, lr}
 80071fa:	68c2      	ldr	r2, [r0, #12]
 80071fc:	b083      	sub	sp, #12
 80071fe:	2300      	movs	r3, #0
 8007200:	9301      	str	r3, [sp, #4]
 8007202:	7813      	ldrb	r3, [r2, #0]
 8007204:	b343      	cbz	r3, 8007258 <d_parmlist+0x60>
 8007206:	2b45      	cmp	r3, #69	; 0x45
 8007208:	d026      	beq.n	8007258 <d_parmlist+0x60>
 800720a:	2b2e      	cmp	r3, #46	; 0x2e
 800720c:	d024      	beq.n	8007258 <d_parmlist+0x60>
 800720e:	4604      	mov	r4, r0
 8007210:	ad01      	add	r5, sp, #4
 8007212:	e015      	b.n	8007240 <d_parmlist+0x48>
 8007214:	2b4f      	cmp	r3, #79	; 0x4f
 8007216:	d016      	beq.n	8007246 <d_parmlist+0x4e>
 8007218:	f7ff fbb2 	bl	8006980 <d_type>
 800721c:	2300      	movs	r3, #0
 800721e:	4602      	mov	r2, r0
 8007220:	212e      	movs	r1, #46	; 0x2e
 8007222:	b1c8      	cbz	r0, 8007258 <d_parmlist+0x60>
 8007224:	4620      	mov	r0, r4
 8007226:	f7f8 ffd3 	bl	80001d0 <d_make_comp>
 800722a:	6028      	str	r0, [r5, #0]
 800722c:	b1a0      	cbz	r0, 8007258 <d_parmlist+0x60>
 800722e:	68e2      	ldr	r2, [r4, #12]
 8007230:	7813      	ldrb	r3, [r2, #0]
 8007232:	f100 0508 	add.w	r5, r0, #8
 8007236:	b14b      	cbz	r3, 800724c <d_parmlist+0x54>
 8007238:	2b45      	cmp	r3, #69	; 0x45
 800723a:	d007      	beq.n	800724c <d_parmlist+0x54>
 800723c:	2b2e      	cmp	r3, #46	; 0x2e
 800723e:	d005      	beq.n	800724c <d_parmlist+0x54>
 8007240:	2b52      	cmp	r3, #82	; 0x52
 8007242:	4620      	mov	r0, r4
 8007244:	d1e6      	bne.n	8007214 <d_parmlist+0x1c>
 8007246:	7853      	ldrb	r3, [r2, #1]
 8007248:	2b45      	cmp	r3, #69	; 0x45
 800724a:	d1e5      	bne.n	8007218 <d_parmlist+0x20>
 800724c:	9801      	ldr	r0, [sp, #4]
 800724e:	b118      	cbz	r0, 8007258 <d_parmlist+0x60>
 8007250:	6883      	ldr	r3, [r0, #8]
 8007252:	b123      	cbz	r3, 800725e <d_parmlist+0x66>
 8007254:	b003      	add	sp, #12
 8007256:	bd30      	pop	{r4, r5, pc}
 8007258:	2000      	movs	r0, #0
 800725a:	b003      	add	sp, #12
 800725c:	bd30      	pop	{r4, r5, pc}
 800725e:	6842      	ldr	r2, [r0, #4]
 8007260:	7811      	ldrb	r1, [r2, #0]
 8007262:	2927      	cmp	r1, #39	; 0x27
 8007264:	d1f6      	bne.n	8007254 <d_parmlist+0x5c>
 8007266:	6852      	ldr	r2, [r2, #4]
 8007268:	7c11      	ldrb	r1, [r2, #16]
 800726a:	2909      	cmp	r1, #9
 800726c:	d1f2      	bne.n	8007254 <d_parmlist+0x5c>
 800726e:	6851      	ldr	r1, [r2, #4]
 8007270:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007272:	1a52      	subs	r2, r2, r1
 8007274:	6322      	str	r2, [r4, #48]	; 0x30
 8007276:	6043      	str	r3, [r0, #4]
 8007278:	e7ec      	b.n	8007254 <d_parmlist+0x5c>
 800727a:	bf00      	nop

0800727c <d_unqualified_name>:
 800727c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800727e:	68c2      	ldr	r2, [r0, #12]
 8007280:	7813      	ldrb	r3, [r2, #0]
 8007282:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8007286:	2909      	cmp	r1, #9
 8007288:	4604      	mov	r4, r0
 800728a:	d920      	bls.n	80072ce <d_unqualified_name+0x52>
 800728c:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8007290:	2919      	cmp	r1, #25
 8007292:	d925      	bls.n	80072e0 <d_unqualified_name+0x64>
 8007294:	f1a3 0143 	sub.w	r1, r3, #67	; 0x43
 8007298:	2901      	cmp	r1, #1
 800729a:	d92c      	bls.n	80072f6 <d_unqualified_name+0x7a>
 800729c:	2b4c      	cmp	r3, #76	; 0x4c
 800729e:	f000 8089 	beq.w	80073b4 <d_unqualified_name+0x138>
 80072a2:	2b55      	cmp	r3, #85	; 0x55
 80072a4:	d133      	bne.n	800730e <d_unqualified_name+0x92>
 80072a6:	7853      	ldrb	r3, [r2, #1]
 80072a8:	2b6c      	cmp	r3, #108	; 0x6c
 80072aa:	d032      	beq.n	8007312 <d_unqualified_name+0x96>
 80072ac:	2b74      	cmp	r3, #116	; 0x74
 80072ae:	d12e      	bne.n	800730e <d_unqualified_name+0x92>
 80072b0:	1c53      	adds	r3, r2, #1
 80072b2:	60c3      	str	r3, [r0, #12]
 80072b4:	7853      	ldrb	r3, [r2, #1]
 80072b6:	2b74      	cmp	r3, #116	; 0x74
 80072b8:	d05b      	beq.n	8007372 <d_unqualified_name+0xf6>
 80072ba:	2b42      	cmp	r3, #66	; 0x42
 80072bc:	f04f 0500 	mov.w	r5, #0
 80072c0:	d10c      	bne.n	80072dc <d_unqualified_name+0x60>
 80072c2:	4629      	mov	r1, r5
 80072c4:	4620      	mov	r0, r4
 80072c6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80072ca:	f7f9 b9a3 	b.w	8000614 <d_abi_tags>
 80072ce:	f7f9 f945 	bl	800055c <d_source_name>
 80072d2:	68e3      	ldr	r3, [r4, #12]
 80072d4:	781b      	ldrb	r3, [r3, #0]
 80072d6:	4605      	mov	r5, r0
 80072d8:	2b42      	cmp	r3, #66	; 0x42
 80072da:	d0f2      	beq.n	80072c2 <d_unqualified_name+0x46>
 80072dc:	4628      	mov	r0, r5
 80072de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80072e0:	f7ff ff0c 	bl	80070fc <d_operator_name>
 80072e4:	4605      	mov	r5, r0
 80072e6:	b118      	cbz	r0, 80072f0 <d_unqualified_name+0x74>
 80072e8:	7803      	ldrb	r3, [r0, #0]
 80072ea:	2b31      	cmp	r3, #49	; 0x31
 80072ec:	f000 80b2 	beq.w	8007454 <d_unqualified_name+0x1d8>
 80072f0:	68e3      	ldr	r3, [r4, #12]
 80072f2:	781b      	ldrb	r3, [r3, #0]
 80072f4:	e7f0      	b.n	80072d8 <d_unqualified_name+0x5c>
 80072f6:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80072f8:	b121      	cbz	r1, 8007304 <d_unqualified_name+0x88>
 80072fa:	7808      	ldrb	r0, [r1, #0]
 80072fc:	2800      	cmp	r0, #0
 80072fe:	d06d      	beq.n	80073dc <d_unqualified_name+0x160>
 8007300:	2818      	cmp	r0, #24
 8007302:	d06b      	beq.n	80073dc <d_unqualified_name+0x160>
 8007304:	2b43      	cmp	r3, #67	; 0x43
 8007306:	f000 80c2 	beq.w	800748e <d_unqualified_name+0x212>
 800730a:	2b44      	cmp	r3, #68	; 0x44
 800730c:	d070      	beq.n	80073f0 <d_unqualified_name+0x174>
 800730e:	2000      	movs	r0, #0
 8007310:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007312:	1c53      	adds	r3, r2, #1
 8007314:	60c3      	str	r3, [r0, #12]
 8007316:	7853      	ldrb	r3, [r2, #1]
 8007318:	2b6c      	cmp	r3, #108	; 0x6c
 800731a:	d1ce      	bne.n	80072ba <d_unqualified_name+0x3e>
 800731c:	3202      	adds	r2, #2
 800731e:	60c2      	str	r2, [r0, #12]
 8007320:	f7ff ff6a 	bl	80071f8 <d_parmlist>
 8007324:	4606      	mov	r6, r0
 8007326:	2800      	cmp	r0, #0
 8007328:	f000 80da 	beq.w	80074e0 <d_unqualified_name+0x264>
 800732c:	68e2      	ldr	r2, [r4, #12]
 800732e:	7813      	ldrb	r3, [r2, #0]
 8007330:	2b45      	cmp	r3, #69	; 0x45
 8007332:	d1c2      	bne.n	80072ba <d_unqualified_name+0x3e>
 8007334:	3201      	adds	r2, #1
 8007336:	60e2      	str	r2, [r4, #12]
 8007338:	4620      	mov	r0, r4
 800733a:	f7f9 f8d5 	bl	80004e8 <d_compact_number>
 800733e:	2800      	cmp	r0, #0
 8007340:	db13      	blt.n	800736a <d_unqualified_name+0xee>
 8007342:	6963      	ldr	r3, [r4, #20]
 8007344:	69a2      	ldr	r2, [r4, #24]
 8007346:	4293      	cmp	r3, r2
 8007348:	da0f      	bge.n	800736a <d_unqualified_name+0xee>
 800734a:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 800734e:	6921      	ldr	r1, [r4, #16]
 8007350:	0092      	lsls	r2, r2, #2
 8007352:	3301      	adds	r3, #1
 8007354:	188d      	adds	r5, r1, r2
 8007356:	6163      	str	r3, [r4, #20]
 8007358:	d007      	beq.n	800736a <d_unqualified_name+0xee>
 800735a:	2344      	movs	r3, #68	; 0x44
 800735c:	548b      	strb	r3, [r1, r2]
 800735e:	606e      	str	r6, [r5, #4]
 8007360:	60a8      	str	r0, [r5, #8]
 8007362:	6a23      	ldr	r3, [r4, #32]
 8007364:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8007366:	4293      	cmp	r3, r2
 8007368:	db1c      	blt.n	80073a4 <d_unqualified_name+0x128>
 800736a:	68e3      	ldr	r3, [r4, #12]
 800736c:	2500      	movs	r5, #0
 800736e:	781b      	ldrb	r3, [r3, #0]
 8007370:	e7b2      	b.n	80072d8 <d_unqualified_name+0x5c>
 8007372:	3202      	adds	r2, #2
 8007374:	60c2      	str	r2, [r0, #12]
 8007376:	f7f9 f8b7 	bl	80004e8 <d_compact_number>
 800737a:	2800      	cmp	r0, #0
 800737c:	dbf5      	blt.n	800736a <d_unqualified_name+0xee>
 800737e:	6963      	ldr	r3, [r4, #20]
 8007380:	69a2      	ldr	r2, [r4, #24]
 8007382:	4293      	cmp	r3, r2
 8007384:	daf1      	bge.n	800736a <d_unqualified_name+0xee>
 8007386:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 800738a:	6921      	ldr	r1, [r4, #16]
 800738c:	0092      	lsls	r2, r2, #2
 800738e:	3301      	adds	r3, #1
 8007390:	188d      	adds	r5, r1, r2
 8007392:	6163      	str	r3, [r4, #20]
 8007394:	d0e9      	beq.n	800736a <d_unqualified_name+0xee>
 8007396:	2346      	movs	r3, #70	; 0x46
 8007398:	548b      	strb	r3, [r1, r2]
 800739a:	6068      	str	r0, [r5, #4]
 800739c:	6a23      	ldr	r3, [r4, #32]
 800739e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80073a0:	4293      	cmp	r3, r2
 80073a2:	dae2      	bge.n	800736a <d_unqualified_name+0xee>
 80073a4:	69e2      	ldr	r2, [r4, #28]
 80073a6:	f842 5023 	str.w	r5, [r2, r3, lsl #2]
 80073aa:	3301      	adds	r3, #1
 80073ac:	68e2      	ldr	r2, [r4, #12]
 80073ae:	6223      	str	r3, [r4, #32]
 80073b0:	7813      	ldrb	r3, [r2, #0]
 80073b2:	e791      	b.n	80072d8 <d_unqualified_name+0x5c>
 80073b4:	3201      	adds	r2, #1
 80073b6:	60c2      	str	r2, [r0, #12]
 80073b8:	f7f9 f8d0 	bl	800055c <d_source_name>
 80073bc:	4605      	mov	r5, r0
 80073be:	2800      	cmp	r0, #0
 80073c0:	d0a5      	beq.n	800730e <d_unqualified_name+0x92>
 80073c2:	68e2      	ldr	r2, [r4, #12]
 80073c4:	7813      	ldrb	r3, [r2, #0]
 80073c6:	2b5f      	cmp	r3, #95	; 0x5f
 80073c8:	d186      	bne.n	80072d8 <d_unqualified_name+0x5c>
 80073ca:	4620      	mov	r0, r4
 80073cc:	3201      	adds	r2, #1
 80073ce:	f840 2f0c 	str.w	r2, [r0, #12]!
 80073d2:	f7f9 f843 	bl	800045c <d_number.isra.0>
 80073d6:	2800      	cmp	r0, #0
 80073d8:	da8a      	bge.n	80072f0 <d_unqualified_name+0x74>
 80073da:	e798      	b.n	800730e <d_unqualified_name+0x92>
 80073dc:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80073de:	688b      	ldr	r3, [r1, #8]
 80073e0:	4403      	add	r3, r0
 80073e2:	6323      	str	r3, [r4, #48]	; 0x30
 80073e4:	7813      	ldrb	r3, [r2, #0]
 80073e6:	2b43      	cmp	r3, #67	; 0x43
 80073e8:	d051      	beq.n	800748e <d_unqualified_name+0x212>
 80073ea:	2b44      	cmp	r3, #68	; 0x44
 80073ec:	f47f af65 	bne.w	80072ba <d_unqualified_name+0x3e>
 80073f0:	7853      	ldrb	r3, [r2, #1]
 80073f2:	3b30      	subs	r3, #48	; 0x30
 80073f4:	2b05      	cmp	r3, #5
 80073f6:	d88a      	bhi.n	800730e <d_unqualified_name+0x92>
 80073f8:	a001      	add	r0, pc, #4	; (adr r0, 8007400 <d_unqualified_name+0x184>)
 80073fa:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 80073fe:	bf00      	nop
 8007400:	08007449 	.word	0x08007449
 8007404:	08007419 	.word	0x08007419
 8007408:	08007445 	.word	0x08007445
 800740c:	0800730f 	.word	0x0800730f
 8007410:	08007451 	.word	0x08007451
 8007414:	0800744d 	.word	0x0800744d
 8007418:	2702      	movs	r7, #2
 800741a:	6963      	ldr	r3, [r4, #20]
 800741c:	69a0      	ldr	r0, [r4, #24]
 800741e:	1c95      	adds	r5, r2, #2
 8007420:	4283      	cmp	r3, r0
 8007422:	60e5      	str	r5, [r4, #12]
 8007424:	da30      	bge.n	8007488 <d_unqualified_name+0x20c>
 8007426:	eb03 0043 	add.w	r0, r3, r3, lsl #1
 800742a:	6926      	ldr	r6, [r4, #16]
 800742c:	0080      	lsls	r0, r0, #2
 800742e:	3301      	adds	r3, #1
 8007430:	1835      	adds	r5, r6, r0
 8007432:	6163      	str	r3, [r4, #20]
 8007434:	d028      	beq.n	8007488 <d_unqualified_name+0x20c>
 8007436:	b339      	cbz	r1, 8007488 <d_unqualified_name+0x20c>
 8007438:	2308      	movs	r3, #8
 800743a:	5433      	strb	r3, [r6, r0]
 800743c:	712f      	strb	r7, [r5, #4]
 800743e:	60a9      	str	r1, [r5, #8]
 8007440:	7893      	ldrb	r3, [r2, #2]
 8007442:	e749      	b.n	80072d8 <d_unqualified_name+0x5c>
 8007444:	2703      	movs	r7, #3
 8007446:	e7e8      	b.n	800741a <d_unqualified_name+0x19e>
 8007448:	2701      	movs	r7, #1
 800744a:	e7e6      	b.n	800741a <d_unqualified_name+0x19e>
 800744c:	2705      	movs	r7, #5
 800744e:	e7e4      	b.n	800741a <d_unqualified_name+0x19e>
 8007450:	2704      	movs	r7, #4
 8007452:	e7e2      	b.n	800741a <d_unqualified_name+0x19e>
 8007454:	6842      	ldr	r2, [r0, #4]
 8007456:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8007458:	6893      	ldr	r3, [r2, #8]
 800745a:	6810      	ldr	r0, [r2, #0]
 800745c:	4922      	ldr	r1, [pc, #136]	; (80074e8 <d_unqualified_name+0x26c>)
 800745e:	4433      	add	r3, r6
 8007460:	3307      	adds	r3, #7
 8007462:	6323      	str	r3, [r4, #48]	; 0x30
 8007464:	f001 f83c 	bl	80084e0 <strcmp>
 8007468:	2800      	cmp	r0, #0
 800746a:	f47f af41 	bne.w	80072f0 <d_unqualified_name+0x74>
 800746e:	4620      	mov	r0, r4
 8007470:	f7f9 f874 	bl	800055c <d_source_name>
 8007474:	462a      	mov	r2, r5
 8007476:	4603      	mov	r3, r0
 8007478:	2135      	movs	r1, #53	; 0x35
 800747a:	4620      	mov	r0, r4
 800747c:	f7f8 fea8 	bl	80001d0 <d_make_comp>
 8007480:	68e3      	ldr	r3, [r4, #12]
 8007482:	4605      	mov	r5, r0
 8007484:	781b      	ldrb	r3, [r3, #0]
 8007486:	e727      	b.n	80072d8 <d_unqualified_name+0x5c>
 8007488:	7893      	ldrb	r3, [r2, #2]
 800748a:	2500      	movs	r5, #0
 800748c:	e724      	b.n	80072d8 <d_unqualified_name+0x5c>
 800748e:	7853      	ldrb	r3, [r2, #1]
 8007490:	3b31      	subs	r3, #49	; 0x31
 8007492:	2b04      	cmp	r3, #4
 8007494:	f63f af3b 	bhi.w	800730e <d_unqualified_name+0x92>
 8007498:	e8df f003 	tbb	[pc, r3]
 800749c:	1e20031a 	.word	0x1e20031a
 80074a0:	1c          	.byte	0x1c
 80074a1:	00          	.byte	0x00
 80074a2:	2702      	movs	r7, #2
 80074a4:	6963      	ldr	r3, [r4, #20]
 80074a6:	69a0      	ldr	r0, [r4, #24]
 80074a8:	1c95      	adds	r5, r2, #2
 80074aa:	4283      	cmp	r3, r0
 80074ac:	60e5      	str	r5, [r4, #12]
 80074ae:	daeb      	bge.n	8007488 <d_unqualified_name+0x20c>
 80074b0:	eb03 0043 	add.w	r0, r3, r3, lsl #1
 80074b4:	6926      	ldr	r6, [r4, #16]
 80074b6:	0080      	lsls	r0, r0, #2
 80074b8:	3301      	adds	r3, #1
 80074ba:	1835      	adds	r5, r6, r0
 80074bc:	6163      	str	r3, [r4, #20]
 80074be:	d0e3      	beq.n	8007488 <d_unqualified_name+0x20c>
 80074c0:	2900      	cmp	r1, #0
 80074c2:	d0e1      	beq.n	8007488 <d_unqualified_name+0x20c>
 80074c4:	2307      	movs	r3, #7
 80074c6:	5433      	strb	r3, [r6, r0]
 80074c8:	712f      	strb	r7, [r5, #4]
 80074ca:	60a9      	str	r1, [r5, #8]
 80074cc:	7893      	ldrb	r3, [r2, #2]
 80074ce:	e703      	b.n	80072d8 <d_unqualified_name+0x5c>
 80074d0:	2701      	movs	r7, #1
 80074d2:	e7e7      	b.n	80074a4 <d_unqualified_name+0x228>
 80074d4:	2705      	movs	r7, #5
 80074d6:	e7e5      	b.n	80074a4 <d_unqualified_name+0x228>
 80074d8:	2704      	movs	r7, #4
 80074da:	e7e3      	b.n	80074a4 <d_unqualified_name+0x228>
 80074dc:	2703      	movs	r7, #3
 80074de:	e7e1      	b.n	80074a4 <d_unqualified_name+0x228>
 80074e0:	68e3      	ldr	r3, [r4, #12]
 80074e2:	4605      	mov	r5, r0
 80074e4:	781b      	ldrb	r3, [r3, #0]
 80074e6:	e6f7      	b.n	80072d8 <d_unqualified_name+0x5c>
 80074e8:	080113a8 	.word	0x080113a8

080074ec <d_bare_function_type>:
 80074ec:	b570      	push	{r4, r5, r6, lr}
 80074ee:	68c3      	ldr	r3, [r0, #12]
 80074f0:	781a      	ldrb	r2, [r3, #0]
 80074f2:	2a4a      	cmp	r2, #74	; 0x4a
 80074f4:	4604      	mov	r4, r0
 80074f6:	d00d      	beq.n	8007514 <d_bare_function_type+0x28>
 80074f8:	b971      	cbnz	r1, 8007518 <d_bare_function_type+0x2c>
 80074fa:	460d      	mov	r5, r1
 80074fc:	4620      	mov	r0, r4
 80074fe:	f7ff fe7b 	bl	80071f8 <d_parmlist>
 8007502:	b178      	cbz	r0, 8007524 <d_bare_function_type+0x38>
 8007504:	4603      	mov	r3, r0
 8007506:	462a      	mov	r2, r5
 8007508:	4620      	mov	r0, r4
 800750a:	2129      	movs	r1, #41	; 0x29
 800750c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8007510:	f7f8 be5e 	b.w	80001d0 <d_make_comp>
 8007514:	3301      	adds	r3, #1
 8007516:	60c3      	str	r3, [r0, #12]
 8007518:	4620      	mov	r0, r4
 800751a:	f7ff fa31 	bl	8006980 <d_type>
 800751e:	4605      	mov	r5, r0
 8007520:	2800      	cmp	r0, #0
 8007522:	d1eb      	bne.n	80074fc <d_bare_function_type+0x10>
 8007524:	2000      	movs	r0, #0
 8007526:	bd70      	pop	{r4, r5, r6, pc}

08007528 <d_function_type>:
 8007528:	68c3      	ldr	r3, [r0, #12]
 800752a:	781a      	ldrb	r2, [r3, #0]
 800752c:	2a46      	cmp	r2, #70	; 0x46
 800752e:	d001      	beq.n	8007534 <d_function_type+0xc>
 8007530:	2000      	movs	r0, #0
 8007532:	4770      	bx	lr
 8007534:	b510      	push	{r4, lr}
 8007536:	1c5a      	adds	r2, r3, #1
 8007538:	60c2      	str	r2, [r0, #12]
 800753a:	785a      	ldrb	r2, [r3, #1]
 800753c:	2a59      	cmp	r2, #89	; 0x59
 800753e:	bf04      	itt	eq
 8007540:	3302      	addeq	r3, #2
 8007542:	60c3      	streq	r3, [r0, #12]
 8007544:	2101      	movs	r1, #1
 8007546:	4604      	mov	r4, r0
 8007548:	f7ff ffd0 	bl	80074ec <d_bare_function_type>
 800754c:	4601      	mov	r1, r0
 800754e:	4620      	mov	r0, r4
 8007550:	f7f8 fee6 	bl	8000320 <d_ref_qualifier>
 8007554:	68e3      	ldr	r3, [r4, #12]
 8007556:	781a      	ldrb	r2, [r3, #0]
 8007558:	2a45      	cmp	r2, #69	; 0x45
 800755a:	d001      	beq.n	8007560 <d_function_type+0x38>
 800755c:	2000      	movs	r0, #0
 800755e:	bd10      	pop	{r4, pc}
 8007560:	3301      	adds	r3, #1
 8007562:	60e3      	str	r3, [r4, #12]
 8007564:	bd10      	pop	{r4, pc}
 8007566:	bf00      	nop

08007568 <d_name>:
 8007568:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800756c:	68c2      	ldr	r2, [r0, #12]
 800756e:	7813      	ldrb	r3, [r2, #0]
 8007570:	3b4e      	subs	r3, #78	; 0x4e
 8007572:	b083      	sub	sp, #12
 8007574:	4605      	mov	r5, r0
 8007576:	2b0c      	cmp	r3, #12
 8007578:	d869      	bhi.n	800764e <d_name+0xe6>
 800757a:	e8df f003 	tbb	[pc, r3]
 800757e:	681b      	.short	0x681b
 8007580:	59686868 	.word	0x59686868
 8007584:	68681668 	.word	0x68681668
 8007588:	6868      	.short	0x6868
 800758a:	07          	.byte	0x07
 800758b:	00          	.byte	0x00
 800758c:	3201      	adds	r2, #1
 800758e:	2100      	movs	r1, #0
 8007590:	60c2      	str	r2, [r0, #12]
 8007592:	f000 f9a3 	bl	80078dc <d_encoding>
 8007596:	68eb      	ldr	r3, [r5, #12]
 8007598:	7819      	ldrb	r1, [r3, #0]
 800759a:	2945      	cmp	r1, #69	; 0x45
 800759c:	4606      	mov	r6, r0
 800759e:	f000 809c 	beq.w	80076da <d_name+0x172>
 80075a2:	2000      	movs	r0, #0
 80075a4:	b003      	add	sp, #12
 80075a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80075aa:	f7ff fe67 	bl	800727c <d_unqualified_name>
 80075ae:	b003      	add	sp, #12
 80075b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80075b4:	3201      	adds	r2, #1
 80075b6:	60c2      	str	r2, [r0, #12]
 80075b8:	a901      	add	r1, sp, #4
 80075ba:	2201      	movs	r2, #1
 80075bc:	f7f8 fe54 	bl	8000268 <d_cv_qualifiers>
 80075c0:	4681      	mov	r9, r0
 80075c2:	2800      	cmp	r0, #0
 80075c4:	d0ed      	beq.n	80075a2 <d_name+0x3a>
 80075c6:	2100      	movs	r1, #0
 80075c8:	4628      	mov	r0, r5
 80075ca:	f7f8 fea9 	bl	8000320 <d_ref_qualifier>
 80075ce:	68ea      	ldr	r2, [r5, #12]
 80075d0:	4eb4      	ldr	r6, [pc, #720]	; (80078a4 <d_name+0x33c>)
 80075d2:	7814      	ldrb	r4, [r2, #0]
 80075d4:	4680      	mov	r8, r0
 80075d6:	2700      	movs	r7, #0
 80075d8:	2c00      	cmp	r4, #0
 80075da:	f000 80ee 	beq.w	80077ba <d_name+0x252>
 80075de:	2c44      	cmp	r4, #68	; 0x44
 80075e0:	f000 80d7 	beq.w	8007792 <d_name+0x22a>
 80075e4:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80075e8:	b2db      	uxtb	r3, r3
 80075ea:	2b1c      	cmp	r3, #28
 80075ec:	f240 80ad 	bls.w	800774a <d_name+0x1e2>
 80075f0:	f1a4 0361 	sub.w	r3, r4, #97	; 0x61
 80075f4:	b2db      	uxtb	r3, r3
 80075f6:	2b19      	cmp	r3, #25
 80075f8:	f240 80ac 	bls.w	8007754 <d_name+0x1ec>
 80075fc:	2c55      	cmp	r4, #85	; 0x55
 80075fe:	f000 80e2 	beq.w	80077c6 <d_name+0x25e>
 8007602:	2c53      	cmp	r4, #83	; 0x53
 8007604:	f000 80e8 	beq.w	80077d8 <d_name+0x270>
 8007608:	2c49      	cmp	r4, #73	; 0x49
 800760a:	f000 80de 	beq.w	80077ca <d_name+0x262>
 800760e:	2c54      	cmp	r4, #84	; 0x54
 8007610:	f000 8119 	beq.w	8007846 <d_name+0x2de>
 8007614:	2c45      	cmp	r4, #69	; 0x45
 8007616:	f000 814b 	beq.w	80078b0 <d_name+0x348>
 800761a:	2c4d      	cmp	r4, #77	; 0x4d
 800761c:	f040 80cd 	bne.w	80077ba <d_name+0x252>
 8007620:	2f00      	cmp	r7, #0
 8007622:	f000 80ca 	beq.w	80077ba <d_name+0x252>
 8007626:	1c53      	adds	r3, r2, #1
 8007628:	60eb      	str	r3, [r5, #12]
 800762a:	7854      	ldrb	r4, [r2, #1]
 800762c:	461a      	mov	r2, r3
 800762e:	e7d3      	b.n	80075d8 <d_name+0x70>
 8007630:	7853      	ldrb	r3, [r2, #1]
 8007632:	2b74      	cmp	r3, #116	; 0x74
 8007634:	d029      	beq.n	800768a <d_name+0x122>
 8007636:	2100      	movs	r1, #0
 8007638:	f7f9 f806 	bl	8000648 <d_substitution>
 800763c:	68eb      	ldr	r3, [r5, #12]
 800763e:	781b      	ldrb	r3, [r3, #0]
 8007640:	2b49      	cmp	r3, #73	; 0x49
 8007642:	4604      	mov	r4, r0
 8007644:	d047      	beq.n	80076d6 <d_name+0x16e>
 8007646:	4620      	mov	r0, r4
 8007648:	b003      	add	sp, #12
 800764a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800764e:	f7ff fe15 	bl	800727c <d_unqualified_name>
 8007652:	68eb      	ldr	r3, [r5, #12]
 8007654:	781b      	ldrb	r3, [r3, #0]
 8007656:	2b49      	cmp	r3, #73	; 0x49
 8007658:	4604      	mov	r4, r0
 800765a:	d1f4      	bne.n	8007646 <d_name+0xde>
 800765c:	2800      	cmp	r0, #0
 800765e:	d0a0      	beq.n	80075a2 <d_name+0x3a>
 8007660:	6a2b      	ldr	r3, [r5, #32]
 8007662:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8007664:	4293      	cmp	r3, r2
 8007666:	da9c      	bge.n	80075a2 <d_name+0x3a>
 8007668:	69e9      	ldr	r1, [r5, #28]
 800766a:	1c5a      	adds	r2, r3, #1
 800766c:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8007670:	4628      	mov	r0, r5
 8007672:	622a      	str	r2, [r5, #32]
 8007674:	f7fc fca8 	bl	8003fc8 <d_template_args>
 8007678:	4622      	mov	r2, r4
 800767a:	4603      	mov	r3, r0
 800767c:	2104      	movs	r1, #4
 800767e:	4628      	mov	r0, r5
 8007680:	f7f8 fda6 	bl	80001d0 <d_make_comp>
 8007684:	b003      	add	sp, #12
 8007686:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800768a:	6943      	ldr	r3, [r0, #20]
 800768c:	6981      	ldr	r1, [r0, #24]
 800768e:	3202      	adds	r2, #2
 8007690:	428b      	cmp	r3, r1
 8007692:	60c2      	str	r2, [r0, #12]
 8007694:	f2c0 80aa 	blt.w	80077ec <d_name+0x284>
 8007698:	2400      	movs	r4, #0
 800769a:	4628      	mov	r0, r5
 800769c:	f7ff fdee 	bl	800727c <d_unqualified_name>
 80076a0:	4622      	mov	r2, r4
 80076a2:	4603      	mov	r3, r0
 80076a4:	2101      	movs	r1, #1
 80076a6:	4628      	mov	r0, r5
 80076a8:	f7f8 fd92 	bl	80001d0 <d_make_comp>
 80076ac:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80076ae:	68ea      	ldr	r2, [r5, #12]
 80076b0:	3303      	adds	r3, #3
 80076b2:	632b      	str	r3, [r5, #48]	; 0x30
 80076b4:	7813      	ldrb	r3, [r2, #0]
 80076b6:	2b49      	cmp	r3, #73	; 0x49
 80076b8:	4604      	mov	r4, r0
 80076ba:	d1c4      	bne.n	8007646 <d_name+0xde>
 80076bc:	2800      	cmp	r0, #0
 80076be:	f43f af70 	beq.w	80075a2 <d_name+0x3a>
 80076c2:	6a2b      	ldr	r3, [r5, #32]
 80076c4:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 80076c6:	4293      	cmp	r3, r2
 80076c8:	f6bf af6b 	bge.w	80075a2 <d_name+0x3a>
 80076cc:	69e9      	ldr	r1, [r5, #28]
 80076ce:	1c5a      	adds	r2, r3, #1
 80076d0:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 80076d4:	622a      	str	r2, [r5, #32]
 80076d6:	4628      	mov	r0, r5
 80076d8:	e7cc      	b.n	8007674 <d_name+0x10c>
 80076da:	1c5a      	adds	r2, r3, #1
 80076dc:	60ea      	str	r2, [r5, #12]
 80076de:	7859      	ldrb	r1, [r3, #1]
 80076e0:	2973      	cmp	r1, #115	; 0x73
 80076e2:	f000 8098 	beq.w	8007816 <d_name+0x2ae>
 80076e6:	2964      	cmp	r1, #100	; 0x64
 80076e8:	f000 80b1 	beq.w	800784e <d_name+0x2e6>
 80076ec:	4628      	mov	r0, r5
 80076ee:	f7ff ff3b 	bl	8007568 <d_name>
 80076f2:	4604      	mov	r4, r0
 80076f4:	2800      	cmp	r0, #0
 80076f6:	f000 808a 	beq.w	800780e <d_name+0x2a6>
 80076fa:	7803      	ldrb	r3, [r0, #0]
 80076fc:	2b44      	cmp	r3, #68	; 0x44
 80076fe:	f000 8086 	beq.w	800780e <d_name+0x2a6>
 8007702:	2b46      	cmp	r3, #70	; 0x46
 8007704:	f000 8083 	beq.w	800780e <d_name+0x2a6>
 8007708:	f04f 37ff 	mov.w	r7, #4294967295
 800770c:	68eb      	ldr	r3, [r5, #12]
 800770e:	781a      	ldrb	r2, [r3, #0]
 8007710:	2a5f      	cmp	r2, #95	; 0x5f
 8007712:	f000 80b3 	beq.w	800787c <d_name+0x314>
 8007716:	1c7b      	adds	r3, r7, #1
 8007718:	d079      	beq.n	800780e <d_name+0x2a6>
 800771a:	696b      	ldr	r3, [r5, #20]
 800771c:	69aa      	ldr	r2, [r5, #24]
 800771e:	4293      	cmp	r3, r2
 8007720:	da77      	bge.n	8007812 <d_name+0x2aa>
 8007722:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8007726:	6929      	ldr	r1, [r5, #16]
 8007728:	3301      	adds	r3, #1
 800772a:	0092      	lsls	r2, r2, #2
 800772c:	616b      	str	r3, [r5, #20]
 800772e:	188b      	adds	r3, r1, r2
 8007730:	d003      	beq.n	800773a <d_name+0x1d2>
 8007732:	2045      	movs	r0, #69	; 0x45
 8007734:	5488      	strb	r0, [r1, r2]
 8007736:	609f      	str	r7, [r3, #8]
 8007738:	605c      	str	r4, [r3, #4]
 800773a:	4632      	mov	r2, r6
 800773c:	4628      	mov	r0, r5
 800773e:	2102      	movs	r1, #2
 8007740:	f7f8 fd46 	bl	80001d0 <d_make_comp>
 8007744:	b003      	add	sp, #12
 8007746:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800774a:	fa26 f303 	lsr.w	r3, r6, r3
 800774e:	07d9      	lsls	r1, r3, #31
 8007750:	f57f af4e 	bpl.w	80075f0 <d_name+0x88>
 8007754:	4628      	mov	r0, r5
 8007756:	f7ff fd91 	bl	800727c <d_unqualified_name>
 800775a:	b34f      	cbz	r7, 80077b0 <d_name+0x248>
 800775c:	2101      	movs	r1, #1
 800775e:	4603      	mov	r3, r0
 8007760:	463a      	mov	r2, r7
 8007762:	4628      	mov	r0, r5
 8007764:	f7f8 fd34 	bl	80001d0 <d_make_comp>
 8007768:	4607      	mov	r7, r0
 800776a:	2c53      	cmp	r4, #83	; 0x53
 800776c:	d01d      	beq.n	80077aa <d_name+0x242>
 800776e:	68ea      	ldr	r2, [r5, #12]
 8007770:	7814      	ldrb	r4, [r2, #0]
 8007772:	2c45      	cmp	r4, #69	; 0x45
 8007774:	f43f af36 	beq.w	80075e4 <d_name+0x7c>
 8007778:	b1ff      	cbz	r7, 80077ba <d_name+0x252>
 800777a:	6a2b      	ldr	r3, [r5, #32]
 800777c:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 800777e:	4293      	cmp	r3, r2
 8007780:	da1b      	bge.n	80077ba <d_name+0x252>
 8007782:	69ea      	ldr	r2, [r5, #28]
 8007784:	f842 7023 	str.w	r7, [r2, r3, lsl #2]
 8007788:	3301      	adds	r3, #1
 800778a:	68ea      	ldr	r2, [r5, #12]
 800778c:	622b      	str	r3, [r5, #32]
 800778e:	7814      	ldrb	r4, [r2, #0]
 8007790:	e722      	b.n	80075d8 <d_name+0x70>
 8007792:	7853      	ldrb	r3, [r2, #1]
 8007794:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8007798:	2b54      	cmp	r3, #84	; 0x54
 800779a:	4628      	mov	r0, r5
 800779c:	d00a      	beq.n	80077b4 <d_name+0x24c>
 800779e:	f7ff fd6d 	bl	800727c <d_unqualified_name>
 80077a2:	2f00      	cmp	r7, #0
 80077a4:	d1da      	bne.n	800775c <d_name+0x1f4>
 80077a6:	4607      	mov	r7, r0
 80077a8:	e7e1      	b.n	800776e <d_name+0x206>
 80077aa:	68ea      	ldr	r2, [r5, #12]
 80077ac:	7814      	ldrb	r4, [r2, #0]
 80077ae:	e713      	b.n	80075d8 <d_name+0x70>
 80077b0:	4607      	mov	r7, r0
 80077b2:	e7da      	b.n	800776a <d_name+0x202>
 80077b4:	f7ff f8e4 	bl	8006980 <d_type>
 80077b8:	e7f3      	b.n	80077a2 <d_name+0x23a>
 80077ba:	2000      	movs	r0, #0
 80077bc:	f8c9 0000 	str.w	r0, [r9]
 80077c0:	b003      	add	sp, #12
 80077c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80077c6:	4628      	mov	r0, r5
 80077c8:	e7e9      	b.n	800779e <d_name+0x236>
 80077ca:	2f00      	cmp	r7, #0
 80077cc:	d0f5      	beq.n	80077ba <d_name+0x252>
 80077ce:	4628      	mov	r0, r5
 80077d0:	f7fc fbfa 	bl	8003fc8 <d_template_args>
 80077d4:	2104      	movs	r1, #4
 80077d6:	e7c2      	b.n	800775e <d_name+0x1f6>
 80077d8:	2101      	movs	r1, #1
 80077da:	4628      	mov	r0, r5
 80077dc:	f7f8 ff34 	bl	8000648 <d_substitution>
 80077e0:	2f00      	cmp	r7, #0
 80077e2:	d1bb      	bne.n	800775c <d_name+0x1f4>
 80077e4:	68ea      	ldr	r2, [r5, #12]
 80077e6:	4607      	mov	r7, r0
 80077e8:	7814      	ldrb	r4, [r2, #0]
 80077ea:	e6f5      	b.n	80075d8 <d_name+0x70>
 80077ec:	eb03 0143 	add.w	r1, r3, r3, lsl #1
 80077f0:	6900      	ldr	r0, [r0, #16]
 80077f2:	0089      	lsls	r1, r1, #2
 80077f4:	3301      	adds	r3, #1
 80077f6:	1842      	adds	r2, r0, r1
 80077f8:	616b      	str	r3, [r5, #20]
 80077fa:	f43f af4d 	beq.w	8007698 <d_name+0x130>
 80077fe:	2300      	movs	r3, #0
 8007800:	5443      	strb	r3, [r0, r1]
 8007802:	4c29      	ldr	r4, [pc, #164]	; (80078a8 <d_name+0x340>)
 8007804:	6054      	str	r4, [r2, #4]
 8007806:	2303      	movs	r3, #3
 8007808:	6093      	str	r3, [r2, #8]
 800780a:	4614      	mov	r4, r2
 800780c:	e745      	b.n	800769a <d_name+0x132>
 800780e:	4623      	mov	r3, r4
 8007810:	e793      	b.n	800773a <d_name+0x1d2>
 8007812:	2300      	movs	r3, #0
 8007814:	e791      	b.n	800773a <d_name+0x1d2>
 8007816:	1c9a      	adds	r2, r3, #2
 8007818:	60ea      	str	r2, [r5, #12]
 800781a:	789a      	ldrb	r2, [r3, #2]
 800781c:	2a5f      	cmp	r2, #95	; 0x5f
 800781e:	d037      	beq.n	8007890 <d_name+0x328>
 8007820:	696b      	ldr	r3, [r5, #20]
 8007822:	69aa      	ldr	r2, [r5, #24]
 8007824:	4293      	cmp	r3, r2
 8007826:	daf4      	bge.n	8007812 <d_name+0x2aa>
 8007828:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 800782c:	6929      	ldr	r1, [r5, #16]
 800782e:	3301      	adds	r3, #1
 8007830:	0092      	lsls	r2, r2, #2
 8007832:	616b      	str	r3, [r5, #20]
 8007834:	188b      	adds	r3, r1, r2
 8007836:	d0ec      	beq.n	8007812 <d_name+0x2aa>
 8007838:	2400      	movs	r4, #0
 800783a:	548c      	strb	r4, [r1, r2]
 800783c:	481b      	ldr	r0, [pc, #108]	; (80078ac <d_name+0x344>)
 800783e:	6058      	str	r0, [r3, #4]
 8007840:	220e      	movs	r2, #14
 8007842:	609a      	str	r2, [r3, #8]
 8007844:	e779      	b.n	800773a <d_name+0x1d2>
 8007846:	4628      	mov	r0, r5
 8007848:	f7f8 fe66 	bl	8000518 <d_template_param>
 800784c:	e7a9      	b.n	80077a2 <d_name+0x23a>
 800784e:	3302      	adds	r3, #2
 8007850:	60eb      	str	r3, [r5, #12]
 8007852:	4628      	mov	r0, r5
 8007854:	f7f8 fe48 	bl	80004e8 <d_compact_number>
 8007858:	1e07      	subs	r7, r0, #0
 800785a:	f6ff aea2 	blt.w	80075a2 <d_name+0x3a>
 800785e:	4628      	mov	r0, r5
 8007860:	f7ff fe82 	bl	8007568 <d_name>
 8007864:	4604      	mov	r4, r0
 8007866:	2800      	cmp	r0, #0
 8007868:	f43f af57 	beq.w	800771a <d_name+0x1b2>
 800786c:	7803      	ldrb	r3, [r0, #0]
 800786e:	2b44      	cmp	r3, #68	; 0x44
 8007870:	f43f af53 	beq.w	800771a <d_name+0x1b2>
 8007874:	2b46      	cmp	r3, #70	; 0x46
 8007876:	f43f af50 	beq.w	800771a <d_name+0x1b2>
 800787a:	e747      	b.n	800770c <d_name+0x1a4>
 800787c:	4628      	mov	r0, r5
 800787e:	3301      	adds	r3, #1
 8007880:	f840 3f0c 	str.w	r3, [r0, #12]!
 8007884:	f7f8 fdea 	bl	800045c <d_number.isra.0>
 8007888:	2800      	cmp	r0, #0
 800788a:	f6bf af44 	bge.w	8007716 <d_name+0x1ae>
 800788e:	e688      	b.n	80075a2 <d_name+0x3a>
 8007890:	4628      	mov	r0, r5
 8007892:	3303      	adds	r3, #3
 8007894:	f840 3f0c 	str.w	r3, [r0, #12]!
 8007898:	f7f8 fde0 	bl	800045c <d_number.isra.0>
 800789c:	2800      	cmp	r0, #0
 800789e:	dabf      	bge.n	8007820 <d_name+0x2b8>
 80078a0:	e67f      	b.n	80075a2 <d_name+0x3a>
 80078a2:	bf00      	nop
 80078a4:	100803ff 	.word	0x100803ff
 80078a8:	080113bc 	.word	0x080113bc
 80078ac:	080113ac 	.word	0x080113ac
 80078b0:	f8c9 7000 	str.w	r7, [r9]
 80078b4:	2f00      	cmp	r7, #0
 80078b6:	f43f ae74 	beq.w	80075a2 <d_name+0x3a>
 80078ba:	f1b8 0f00 	cmp.w	r8, #0
 80078be:	d004      	beq.n	80078ca <d_name+0x362>
 80078c0:	9b01      	ldr	r3, [sp, #4]
 80078c2:	f8c8 3004 	str.w	r3, [r8, #4]
 80078c6:	f8cd 8004 	str.w	r8, [sp, #4]
 80078ca:	68eb      	ldr	r3, [r5, #12]
 80078cc:	781a      	ldrb	r2, [r3, #0]
 80078ce:	2a45      	cmp	r2, #69	; 0x45
 80078d0:	f47f ae67 	bne.w	80075a2 <d_name+0x3a>
 80078d4:	3301      	adds	r3, #1
 80078d6:	60eb      	str	r3, [r5, #12]
 80078d8:	9801      	ldr	r0, [sp, #4]
 80078da:	e668      	b.n	80075ae <d_name+0x46>

080078dc <d_encoding>:
 80078dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80078e0:	68c3      	ldr	r3, [r0, #12]
 80078e2:	781a      	ldrb	r2, [r3, #0]
 80078e4:	2a47      	cmp	r2, #71	; 0x47
 80078e6:	4605      	mov	r5, r0
 80078e8:	d03b      	beq.n	8007962 <d_encoding+0x86>
 80078ea:	2a54      	cmp	r2, #84	; 0x54
 80078ec:	d039      	beq.n	8007962 <d_encoding+0x86>
 80078ee:	460e      	mov	r6, r1
 80078f0:	f7ff fe3a 	bl	8007568 <d_name>
 80078f4:	4604      	mov	r4, r0
 80078f6:	b328      	cbz	r0, 8007944 <d_encoding+0x68>
 80078f8:	b116      	cbz	r6, 8007900 <d_encoding+0x24>
 80078fa:	68ab      	ldr	r3, [r5, #8]
 80078fc:	07db      	lsls	r3, r3, #31
 80078fe:	d525      	bpl.n	800794c <d_encoding+0x70>
 8007900:	68eb      	ldr	r3, [r5, #12]
 8007902:	781b      	ldrb	r3, [r3, #0]
 8007904:	b353      	cbz	r3, 800795c <d_encoding+0x80>
 8007906:	2b45      	cmp	r3, #69	; 0x45
 8007908:	d028      	beq.n	800795c <d_encoding+0x80>
 800790a:	4621      	mov	r1, r4
 800790c:	780b      	ldrb	r3, [r1, #0]
 800790e:	2b04      	cmp	r3, #4
 8007910:	f1a3 021c 	sub.w	r2, r3, #28
 8007914:	f000 811a 	beq.w	8007b4c <d_encoding+0x270>
 8007918:	f0c0 8116 	bcc.w	8007b48 <d_encoding+0x26c>
 800791c:	2a04      	cmp	r2, #4
 800791e:	f200 8113 	bhi.w	8007b48 <d_encoding+0x26c>
 8007922:	6849      	ldr	r1, [r1, #4]
 8007924:	2900      	cmp	r1, #0
 8007926:	d1f1      	bne.n	800790c <d_encoding+0x30>
 8007928:	4628      	mov	r0, r5
 800792a:	f7ff fddf 	bl	80074ec <d_bare_function_type>
 800792e:	4622      	mov	r2, r4
 8007930:	4603      	mov	r3, r0
 8007932:	2103      	movs	r1, #3
 8007934:	4628      	mov	r0, r5
 8007936:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800793a:	f7f8 bc49 	b.w	80001d0 <d_make_comp>
 800793e:	68eb      	ldr	r3, [r5, #12]
 8007940:	4419      	add	r1, r3
 8007942:	60e9      	str	r1, [r5, #12]
 8007944:	2000      	movs	r0, #0
 8007946:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800794a:	6864      	ldr	r4, [r4, #4]
 800794c:	7823      	ldrb	r3, [r4, #0]
 800794e:	f1a3 021c 	sub.w	r2, r3, #28
 8007952:	2a04      	cmp	r2, #4
 8007954:	d9f9      	bls.n	800794a <d_encoding+0x6e>
 8007956:	2b02      	cmp	r3, #2
 8007958:	f000 8168 	beq.w	8007c2c <d_encoding+0x350>
 800795c:	4620      	mov	r0, r4
 800795e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007962:	6b29      	ldr	r1, [r5, #48]	; 0x30
 8007964:	f101 0214 	add.w	r2, r1, #20
 8007968:	632a      	str	r2, [r5, #48]	; 0x30
 800796a:	781a      	ldrb	r2, [r3, #0]
 800796c:	2a54      	cmp	r2, #84	; 0x54
 800796e:	d073      	beq.n	8007a58 <d_encoding+0x17c>
 8007970:	2a47      	cmp	r2, #71	; 0x47
 8007972:	d1e7      	bne.n	8007944 <d_encoding+0x68>
 8007974:	1c5a      	adds	r2, r3, #1
 8007976:	60ea      	str	r2, [r5, #12]
 8007978:	785a      	ldrb	r2, [r3, #1]
 800797a:	2a00      	cmp	r2, #0
 800797c:	d0e2      	beq.n	8007944 <d_encoding+0x68>
 800797e:	1c9a      	adds	r2, r3, #2
 8007980:	60ea      	str	r2, [r5, #12]
 8007982:	785a      	ldrb	r2, [r3, #1]
 8007984:	3a41      	subs	r2, #65	; 0x41
 8007986:	2a31      	cmp	r2, #49	; 0x31
 8007988:	d8dc      	bhi.n	8007944 <d_encoding+0x68>
 800798a:	a101      	add	r1, pc, #4	; (adr r1, 8007990 <d_encoding+0xb4>)
 800798c:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8007990:	08007d31 	.word	0x08007d31
 8007994:	08007945 	.word	0x08007945
 8007998:	08007945 	.word	0x08007945
 800799c:	08007945 	.word	0x08007945
 80079a0:	08007945 	.word	0x08007945
 80079a4:	08007945 	.word	0x08007945
 80079a8:	08007945 	.word	0x08007945
 80079ac:	08007945 	.word	0x08007945
 80079b0:	08007945 	.word	0x08007945
 80079b4:	08007945 	.word	0x08007945
 80079b8:	08007945 	.word	0x08007945
 80079bc:	08007945 	.word	0x08007945
 80079c0:	08007945 	.word	0x08007945
 80079c4:	08007945 	.word	0x08007945
 80079c8:	08007945 	.word	0x08007945
 80079cc:	08007945 	.word	0x08007945
 80079d0:	08007945 	.word	0x08007945
 80079d4:	08007d13 	.word	0x08007d13
 80079d8:	08007945 	.word	0x08007945
 80079dc:	08007d49 	.word	0x08007d49
 80079e0:	08007945 	.word	0x08007945
 80079e4:	08007cfd 	.word	0x08007cfd
 80079e8:	08007945 	.word	0x08007945
 80079ec:	08007945 	.word	0x08007945
 80079f0:	08007945 	.word	0x08007945
 80079f4:	08007945 	.word	0x08007945
 80079f8:	08007945 	.word	0x08007945
 80079fc:	08007945 	.word	0x08007945
 8007a00:	08007945 	.word	0x08007945
 8007a04:	08007945 	.word	0x08007945
 8007a08:	08007945 	.word	0x08007945
 8007a0c:	08007945 	.word	0x08007945
 8007a10:	08007945 	.word	0x08007945
 8007a14:	08007945 	.word	0x08007945
 8007a18:	08007945 	.word	0x08007945
 8007a1c:	08007945 	.word	0x08007945
 8007a20:	08007945 	.word	0x08007945
 8007a24:	08007945 	.word	0x08007945
 8007a28:	08007945 	.word	0x08007945
 8007a2c:	08007945 	.word	0x08007945
 8007a30:	08007945 	.word	0x08007945
 8007a34:	08007945 	.word	0x08007945
 8007a38:	08007945 	.word	0x08007945
 8007a3c:	08007945 	.word	0x08007945
 8007a40:	08007945 	.word	0x08007945
 8007a44:	08007945 	.word	0x08007945
 8007a48:	08007945 	.word	0x08007945
 8007a4c:	08007945 	.word	0x08007945
 8007a50:	08007945 	.word	0x08007945
 8007a54:	08007c53 	.word	0x08007c53
 8007a58:	1c5a      	adds	r2, r3, #1
 8007a5a:	60ea      	str	r2, [r5, #12]
 8007a5c:	785a      	ldrb	r2, [r3, #1]
 8007a5e:	2a00      	cmp	r2, #0
 8007a60:	f43f af70 	beq.w	8007944 <d_encoding+0x68>
 8007a64:	1c9a      	adds	r2, r3, #2
 8007a66:	60ea      	str	r2, [r5, #12]
 8007a68:	785b      	ldrb	r3, [r3, #1]
 8007a6a:	3b43      	subs	r3, #67	; 0x43
 8007a6c:	2b33      	cmp	r3, #51	; 0x33
 8007a6e:	f63f af69 	bhi.w	8007944 <d_encoding+0x68>
 8007a72:	a201      	add	r2, pc, #4	; (adr r2, 8007a78 <d_encoding+0x19c>)
 8007a74:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007a78:	08007ead 	.word	0x08007ead
 8007a7c:	08007945 	.word	0x08007945
 8007a80:	08007945 	.word	0x08007945
 8007a84:	08007e97 	.word	0x08007e97
 8007a88:	08007945 	.word	0x08007945
 8007a8c:	08007e81 	.word	0x08007e81
 8007a90:	08007e6b 	.word	0x08007e6b
 8007a94:	08007e55 	.word	0x08007e55
 8007a98:	08007945 	.word	0x08007945
 8007a9c:	08007945 	.word	0x08007945
 8007aa0:	08007945 	.word	0x08007945
 8007aa4:	08007945 	.word	0x08007945
 8007aa8:	08007945 	.word	0x08007945
 8007aac:	08007945 	.word	0x08007945
 8007ab0:	08007945 	.word	0x08007945
 8007ab4:	08007945 	.word	0x08007945
 8007ab8:	08007e3f 	.word	0x08007e3f
 8007abc:	08007e25 	.word	0x08007e25
 8007ac0:	08007945 	.word	0x08007945
 8007ac4:	08007e0b 	.word	0x08007e0b
 8007ac8:	08007dcf 	.word	0x08007dcf
 8007acc:	08007945 	.word	0x08007945
 8007ad0:	08007945 	.word	0x08007945
 8007ad4:	08007945 	.word	0x08007945
 8007ad8:	08007945 	.word	0x08007945
 8007adc:	08007945 	.word	0x08007945
 8007ae0:	08007945 	.word	0x08007945
 8007ae4:	08007945 	.word	0x08007945
 8007ae8:	08007945 	.word	0x08007945
 8007aec:	08007945 	.word	0x08007945
 8007af0:	08007945 	.word	0x08007945
 8007af4:	08007945 	.word	0x08007945
 8007af8:	08007d9b 	.word	0x08007d9b
 8007afc:	08007945 	.word	0x08007945
 8007b00:	08007945 	.word	0x08007945
 8007b04:	08007945 	.word	0x08007945
 8007b08:	08007945 	.word	0x08007945
 8007b0c:	08007de5 	.word	0x08007de5
 8007b10:	08007945 	.word	0x08007945
 8007b14:	08007945 	.word	0x08007945
 8007b18:	08007945 	.word	0x08007945
 8007b1c:	08007945 	.word	0x08007945
 8007b20:	08007945 	.word	0x08007945
 8007b24:	08007945 	.word	0x08007945
 8007b28:	08007945 	.word	0x08007945
 8007b2c:	08007945 	.word	0x08007945
 8007b30:	08007945 	.word	0x08007945
 8007b34:	08007945 	.word	0x08007945
 8007b38:	08007945 	.word	0x08007945
 8007b3c:	08007945 	.word	0x08007945
 8007b40:	08007945 	.word	0x08007945
 8007b44:	08007d75 	.word	0x08007d75
 8007b48:	2100      	movs	r1, #0
 8007b4a:	e6ed      	b.n	8007928 <d_encoding+0x4c>
 8007b4c:	684a      	ldr	r2, [r1, #4]
 8007b4e:	2a00      	cmp	r2, #0
 8007b50:	d07d      	beq.n	8007c4e <d_encoding+0x372>
 8007b52:	7813      	ldrb	r3, [r2, #0]
 8007b54:	3b01      	subs	r3, #1
 8007b56:	2b32      	cmp	r3, #50	; 0x32
 8007b58:	d879      	bhi.n	8007c4e <d_encoding+0x372>
 8007b5a:	a101      	add	r1, pc, #4	; (adr r1, 8007b60 <d_encoding+0x284>)
 8007b5c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8007b60:	08007c49 	.word	0x08007c49
 8007b64:	08007c49 	.word	0x08007c49
 8007b68:	08007c4f 	.word	0x08007c4f
 8007b6c:	08007c4f 	.word	0x08007c4f
 8007b70:	08007c4f 	.word	0x08007c4f
 8007b74:	08007c4f 	.word	0x08007c4f
 8007b78:	08007b49 	.word	0x08007b49
 8007b7c:	08007b49 	.word	0x08007b49
 8007b80:	08007c4f 	.word	0x08007c4f
 8007b84:	08007c4f 	.word	0x08007c4f
 8007b88:	08007c4f 	.word	0x08007c4f
 8007b8c:	08007c4f 	.word	0x08007c4f
 8007b90:	08007c4f 	.word	0x08007c4f
 8007b94:	08007c4f 	.word	0x08007c4f
 8007b98:	08007c4f 	.word	0x08007c4f
 8007b9c:	08007c4f 	.word	0x08007c4f
 8007ba0:	08007c4f 	.word	0x08007c4f
 8007ba4:	08007c4f 	.word	0x08007c4f
 8007ba8:	08007c4f 	.word	0x08007c4f
 8007bac:	08007c4f 	.word	0x08007c4f
 8007bb0:	08007c4f 	.word	0x08007c4f
 8007bb4:	08007c4f 	.word	0x08007c4f
 8007bb8:	08007c4f 	.word	0x08007c4f
 8007bbc:	08007c4f 	.word	0x08007c4f
 8007bc0:	08007c4f 	.word	0x08007c4f
 8007bc4:	08007c4f 	.word	0x08007c4f
 8007bc8:	08007c4f 	.word	0x08007c4f
 8007bcc:	08007c4f 	.word	0x08007c4f
 8007bd0:	08007c4f 	.word	0x08007c4f
 8007bd4:	08007c4f 	.word	0x08007c4f
 8007bd8:	08007c4f 	.word	0x08007c4f
 8007bdc:	08007c4f 	.word	0x08007c4f
 8007be0:	08007c4f 	.word	0x08007c4f
 8007be4:	08007c4f 	.word	0x08007c4f
 8007be8:	08007c4f 	.word	0x08007c4f
 8007bec:	08007c4f 	.word	0x08007c4f
 8007bf0:	08007c4f 	.word	0x08007c4f
 8007bf4:	08007c4f 	.word	0x08007c4f
 8007bf8:	08007c4f 	.word	0x08007c4f
 8007bfc:	08007c4f 	.word	0x08007c4f
 8007c00:	08007c4f 	.word	0x08007c4f
 8007c04:	08007c4f 	.word	0x08007c4f
 8007c08:	08007c4f 	.word	0x08007c4f
 8007c0c:	08007c4f 	.word	0x08007c4f
 8007c10:	08007c4f 	.word	0x08007c4f
 8007c14:	08007c4f 	.word	0x08007c4f
 8007c18:	08007c4f 	.word	0x08007c4f
 8007c1c:	08007c4f 	.word	0x08007c4f
 8007c20:	08007c4f 	.word	0x08007c4f
 8007c24:	08007c4f 	.word	0x08007c4f
 8007c28:	08007b49 	.word	0x08007b49
 8007c2c:	68a2      	ldr	r2, [r4, #8]
 8007c2e:	7813      	ldrb	r3, [r2, #0]
 8007c30:	3b1c      	subs	r3, #28
 8007c32:	2b04      	cmp	r3, #4
 8007c34:	d804      	bhi.n	8007c40 <d_encoding+0x364>
 8007c36:	6852      	ldr	r2, [r2, #4]
 8007c38:	7813      	ldrb	r3, [r2, #0]
 8007c3a:	3b1c      	subs	r3, #28
 8007c3c:	2b04      	cmp	r3, #4
 8007c3e:	d9fa      	bls.n	8007c36 <d_encoding+0x35a>
 8007c40:	60a2      	str	r2, [r4, #8]
 8007c42:	4620      	mov	r0, r4
 8007c44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007c48:	6892      	ldr	r2, [r2, #8]
 8007c4a:	2a00      	cmp	r2, #0
 8007c4c:	d181      	bne.n	8007b52 <d_encoding+0x276>
 8007c4e:	2101      	movs	r1, #1
 8007c50:	e66a      	b.n	8007928 <d_encoding+0x4c>
 8007c52:	f105 000c 	add.w	r0, r5, #12
 8007c56:	f7f8 fc01 	bl	800045c <d_number.isra.0>
 8007c5a:	2801      	cmp	r0, #1
 8007c5c:	f77f ae72 	ble.w	8007944 <d_encoding+0x68>
 8007c60:	68eb      	ldr	r3, [r5, #12]
 8007c62:	781a      	ldrb	r2, [r3, #0]
 8007c64:	2a00      	cmp	r2, #0
 8007c66:	f43f ae6d 	beq.w	8007944 <d_encoding+0x68>
 8007c6a:	1c5f      	adds	r7, r3, #1
 8007c6c:	60ef      	str	r7, [r5, #12]
 8007c6e:	781b      	ldrb	r3, [r3, #0]
 8007c70:	2b5f      	cmp	r3, #95	; 0x5f
 8007c72:	f47f ae67 	bne.w	8007944 <d_encoding+0x68>
 8007c76:	2200      	movs	r2, #0
 8007c78:	1e46      	subs	r6, r0, #1
 8007c7a:	4690      	mov	r8, r2
 8007c7c:	f04f 093f 	mov.w	r9, #63	; 0x3f
 8007c80:	783b      	ldrb	r3, [r7, #0]
 8007c82:	2b00      	cmp	r3, #0
 8007c84:	f43f ae5e 	beq.w	8007944 <d_encoding+0x68>
 8007c88:	2b24      	cmp	r3, #36	; 0x24
 8007c8a:	f000 812f 	beq.w	8007eec <d_encoding+0x610>
 8007c8e:	463c      	mov	r4, r7
 8007c90:	2100      	movs	r1, #0
 8007c92:	e004      	b.n	8007c9e <d_encoding+0x3c2>
 8007c94:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8007c98:	b123      	cbz	r3, 8007ca4 <d_encoding+0x3c8>
 8007c9a:	2b24      	cmp	r3, #36	; 0x24
 8007c9c:	d002      	beq.n	8007ca4 <d_encoding+0x3c8>
 8007c9e:	3101      	adds	r1, #1
 8007ca0:	42b1      	cmp	r1, r6
 8007ca2:	dbf7      	blt.n	8007c94 <d_encoding+0x3b8>
 8007ca4:	696b      	ldr	r3, [r5, #20]
 8007ca6:	69a8      	ldr	r0, [r5, #24]
 8007ca8:	4283      	cmp	r3, r0
 8007caa:	f6bf ae48 	bge.w	800793e <d_encoding+0x62>
 8007cae:	6928      	ldr	r0, [r5, #16]
 8007cb0:	eb03 0443 	add.w	r4, r3, r3, lsl #1
 8007cb4:	f103 0e01 	add.w	lr, r3, #1
 8007cb8:	eb10 0384 	adds.w	r3, r0, r4, lsl #2
 8007cbc:	f8c5 e014 	str.w	lr, [r5, #20]
 8007cc0:	f43f ae3d 	beq.w	800793e <d_encoding+0x62>
 8007cc4:	f800 8024 	strb.w	r8, [r0, r4, lsl #2]
 8007cc8:	605f      	str	r7, [r3, #4]
 8007cca:	6099      	str	r1, [r3, #8]
 8007ccc:	68ef      	ldr	r7, [r5, #12]
 8007cce:	440f      	add	r7, r1
 8007cd0:	1a76      	subs	r6, r6, r1
 8007cd2:	60ef      	str	r7, [r5, #12]
 8007cd4:	2a00      	cmp	r2, #0
 8007cd6:	f000 8126 	beq.w	8007f26 <d_encoding+0x64a>
 8007cda:	213e      	movs	r1, #62	; 0x3e
 8007cdc:	4628      	mov	r0, r5
 8007cde:	f7f8 fa77 	bl	80001d0 <d_make_comp>
 8007ce2:	4602      	mov	r2, r0
 8007ce4:	2800      	cmp	r0, #0
 8007ce6:	f43f ae2d 	beq.w	8007944 <d_encoding+0x68>
 8007cea:	2e00      	cmp	r6, #0
 8007cec:	dcc8      	bgt.n	8007c80 <d_encoding+0x3a4>
 8007cee:	4628      	mov	r0, r5
 8007cf0:	2300      	movs	r3, #0
 8007cf2:	213d      	movs	r1, #61	; 0x3d
 8007cf4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007cf8:	f7f8 ba6a 	b.w	80001d0 <d_make_comp>
 8007cfc:	4628      	mov	r0, r5
 8007cfe:	f7ff fc33 	bl	8007568 <d_name>
 8007d02:	2300      	movs	r3, #0
 8007d04:	4602      	mov	r2, r0
 8007d06:	2113      	movs	r1, #19
 8007d08:	4628      	mov	r0, r5
 8007d0a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007d0e:	f7f8 ba5f 	b.w	80001d0 <d_make_comp>
 8007d12:	4628      	mov	r0, r5
 8007d14:	f7ff fc28 	bl	8007568 <d_name>
 8007d18:	4604      	mov	r4, r0
 8007d1a:	4628      	mov	r0, r5
 8007d1c:	f7f8 fbc8 	bl	80004b0 <d_number_component>
 8007d20:	4622      	mov	r2, r4
 8007d22:	4603      	mov	r3, r0
 8007d24:	2116      	movs	r1, #22
 8007d26:	4628      	mov	r0, r5
 8007d28:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007d2c:	f7f8 ba50 	b.w	80001d0 <d_make_comp>
 8007d30:	2100      	movs	r1, #0
 8007d32:	4628      	mov	r0, r5
 8007d34:	f7ff fdd2 	bl	80078dc <d_encoding>
 8007d38:	2300      	movs	r3, #0
 8007d3a:	4602      	mov	r2, r0
 8007d3c:	2117      	movs	r1, #23
 8007d3e:	4628      	mov	r0, r5
 8007d40:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007d44:	f7f8 ba44 	b.w	80001d0 <d_make_comp>
 8007d48:	789a      	ldrb	r2, [r3, #2]
 8007d4a:	2100      	movs	r1, #0
 8007d4c:	4628      	mov	r0, r5
 8007d4e:	2a00      	cmp	r2, #0
 8007d50:	f000 80eb 	beq.w	8007f2a <d_encoding+0x64e>
 8007d54:	1cda      	adds	r2, r3, #3
 8007d56:	60ea      	str	r2, [r5, #12]
 8007d58:	789b      	ldrb	r3, [r3, #2]
 8007d5a:	2b6e      	cmp	r3, #110	; 0x6e
 8007d5c:	f040 80e5 	bne.w	8007f2a <d_encoding+0x64e>
 8007d60:	f7ff fdbc 	bl	80078dc <d_encoding>
 8007d64:	2300      	movs	r3, #0
 8007d66:	4602      	mov	r2, r0
 8007d68:	2148      	movs	r1, #72	; 0x48
 8007d6a:	4628      	mov	r0, r5
 8007d6c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007d70:	f7f8 ba2e 	b.w	80001d0 <d_make_comp>
 8007d74:	2176      	movs	r1, #118	; 0x76
 8007d76:	4628      	mov	r0, r5
 8007d78:	f7f8 fd2c 	bl	80007d4 <d_call_offset>
 8007d7c:	2800      	cmp	r0, #0
 8007d7e:	f43f ade1 	beq.w	8007944 <d_encoding+0x68>
 8007d82:	2100      	movs	r1, #0
 8007d84:	4628      	mov	r0, r5
 8007d86:	f7ff fda9 	bl	80078dc <d_encoding>
 8007d8a:	2300      	movs	r3, #0
 8007d8c:	4602      	mov	r2, r0
 8007d8e:	2110      	movs	r1, #16
 8007d90:	4628      	mov	r0, r5
 8007d92:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007d96:	f7f8 ba1b 	b.w	80001d0 <d_make_comp>
 8007d9a:	2100      	movs	r1, #0
 8007d9c:	4628      	mov	r0, r5
 8007d9e:	f7f8 fd19 	bl	80007d4 <d_call_offset>
 8007da2:	2800      	cmp	r0, #0
 8007da4:	f43f adce 	beq.w	8007944 <d_encoding+0x68>
 8007da8:	2100      	movs	r1, #0
 8007daa:	4628      	mov	r0, r5
 8007dac:	f7f8 fd12 	bl	80007d4 <d_call_offset>
 8007db0:	2800      	cmp	r0, #0
 8007db2:	f43f adc7 	beq.w	8007944 <d_encoding+0x68>
 8007db6:	2100      	movs	r1, #0
 8007db8:	4628      	mov	r0, r5
 8007dba:	f7ff fd8f 	bl	80078dc <d_encoding>
 8007dbe:	2300      	movs	r3, #0
 8007dc0:	4602      	mov	r2, r0
 8007dc2:	2111      	movs	r1, #17
 8007dc4:	4628      	mov	r0, r5
 8007dc6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007dca:	f7f8 ba01 	b.w	80001d0 <d_make_comp>
 8007dce:	4628      	mov	r0, r5
 8007dd0:	f7ff fbca 	bl	8007568 <d_name>
 8007dd4:	2300      	movs	r3, #0
 8007dd6:	4602      	mov	r2, r0
 8007dd8:	2115      	movs	r1, #21
 8007dda:	4628      	mov	r0, r5
 8007ddc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007de0:	f7f8 b9f6 	b.w	80001d0 <d_make_comp>
 8007de4:	2168      	movs	r1, #104	; 0x68
 8007de6:	4628      	mov	r0, r5
 8007de8:	f7f8 fcf4 	bl	80007d4 <d_call_offset>
 8007dec:	2800      	cmp	r0, #0
 8007dee:	f43f ada9 	beq.w	8007944 <d_encoding+0x68>
 8007df2:	2100      	movs	r1, #0
 8007df4:	4628      	mov	r0, r5
 8007df6:	f7ff fd71 	bl	80078dc <d_encoding>
 8007dfa:	2300      	movs	r3, #0
 8007dfc:	4602      	mov	r2, r0
 8007dfe:	210f      	movs	r1, #15
 8007e00:	4628      	mov	r0, r5
 8007e02:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007e06:	f7f8 b9e3 	b.w	80001d0 <d_make_comp>
 8007e0a:	310f      	adds	r1, #15
 8007e0c:	6329      	str	r1, [r5, #48]	; 0x30
 8007e0e:	4628      	mov	r0, r5
 8007e10:	f7fe fdb6 	bl	8006980 <d_type>
 8007e14:	2300      	movs	r3, #0
 8007e16:	4602      	mov	r2, r0
 8007e18:	2109      	movs	r1, #9
 8007e1a:	4628      	mov	r0, r5
 8007e1c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007e20:	f7f8 b9d6 	b.w	80001d0 <d_make_comp>
 8007e24:	310a      	adds	r1, #10
 8007e26:	6329      	str	r1, [r5, #48]	; 0x30
 8007e28:	4628      	mov	r0, r5
 8007e2a:	f7fe fda9 	bl	8006980 <d_type>
 8007e2e:	2300      	movs	r3, #0
 8007e30:	4602      	mov	r2, r0
 8007e32:	210a      	movs	r1, #10
 8007e34:	4628      	mov	r0, r5
 8007e36:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007e3a:	f7f8 b9c9 	b.w	80001d0 <d_make_comp>
 8007e3e:	4628      	mov	r0, r5
 8007e40:	f7fe fd9e 	bl	8006980 <d_type>
 8007e44:	2300      	movs	r3, #0
 8007e46:	4602      	mov	r2, r0
 8007e48:	210d      	movs	r1, #13
 8007e4a:	4628      	mov	r0, r5
 8007e4c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007e50:	f7f8 b9be 	b.w	80001d0 <d_make_comp>
 8007e54:	4628      	mov	r0, r5
 8007e56:	f7fe fd93 	bl	8006980 <d_type>
 8007e5a:	2300      	movs	r3, #0
 8007e5c:	4602      	mov	r2, r0
 8007e5e:	2112      	movs	r1, #18
 8007e60:	4628      	mov	r0, r5
 8007e62:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007e66:	f7f8 b9b3 	b.w	80001d0 <d_make_comp>
 8007e6a:	4628      	mov	r0, r5
 8007e6c:	f7fe fd88 	bl	8006980 <d_type>
 8007e70:	2300      	movs	r3, #0
 8007e72:	4602      	mov	r2, r0
 8007e74:	210c      	movs	r1, #12
 8007e76:	4628      	mov	r0, r5
 8007e78:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007e7c:	f7f8 b9a8 	b.w	80001d0 <d_make_comp>
 8007e80:	4628      	mov	r0, r5
 8007e82:	f7ff fb71 	bl	8007568 <d_name>
 8007e86:	2300      	movs	r3, #0
 8007e88:	4602      	mov	r2, r0
 8007e8a:	2114      	movs	r1, #20
 8007e8c:	4628      	mov	r0, r5
 8007e8e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007e92:	f7f8 b99d 	b.w	80001d0 <d_make_comp>
 8007e96:	4628      	mov	r0, r5
 8007e98:	f7fe fd72 	bl	8006980 <d_type>
 8007e9c:	2300      	movs	r3, #0
 8007e9e:	4602      	mov	r2, r0
 8007ea0:	210e      	movs	r1, #14
 8007ea2:	4628      	mov	r0, r5
 8007ea4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007ea8:	f7f8 b992 	b.w	80001d0 <d_make_comp>
 8007eac:	4628      	mov	r0, r5
 8007eae:	f7fe fd67 	bl	8006980 <d_type>
 8007eb2:	4604      	mov	r4, r0
 8007eb4:	f105 000c 	add.w	r0, r5, #12
 8007eb8:	f7f8 fad0 	bl	800045c <d_number.isra.0>
 8007ebc:	2800      	cmp	r0, #0
 8007ebe:	f6ff ad41 	blt.w	8007944 <d_encoding+0x68>
 8007ec2:	68eb      	ldr	r3, [r5, #12]
 8007ec4:	781a      	ldrb	r2, [r3, #0]
 8007ec6:	2a5f      	cmp	r2, #95	; 0x5f
 8007ec8:	f47f ad3c 	bne.w	8007944 <d_encoding+0x68>
 8007ecc:	3301      	adds	r3, #1
 8007ece:	60eb      	str	r3, [r5, #12]
 8007ed0:	4628      	mov	r0, r5
 8007ed2:	f7fe fd55 	bl	8006980 <d_type>
 8007ed6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8007ed8:	1d59      	adds	r1, r3, #5
 8007eda:	6329      	str	r1, [r5, #48]	; 0x30
 8007edc:	4602      	mov	r2, r0
 8007ede:	4623      	mov	r3, r4
 8007ee0:	4628      	mov	r0, r5
 8007ee2:	210b      	movs	r1, #11
 8007ee4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007ee8:	f7f8 b972 	b.w	80001d0 <d_make_comp>
 8007eec:	787b      	ldrb	r3, [r7, #1]
 8007eee:	2b53      	cmp	r3, #83	; 0x53
 8007ef0:	d027      	beq.n	8007f42 <d_encoding+0x666>
 8007ef2:	2b5f      	cmp	r3, #95	; 0x5f
 8007ef4:	d023      	beq.n	8007f3e <d_encoding+0x662>
 8007ef6:	2b24      	cmp	r3, #36	; 0x24
 8007ef8:	f47f ad24 	bne.w	8007944 <d_encoding+0x68>
 8007efc:	4618      	mov	r0, r3
 8007efe:	696b      	ldr	r3, [r5, #20]
 8007f00:	69a9      	ldr	r1, [r5, #24]
 8007f02:	428b      	cmp	r3, r1
 8007f04:	da1f      	bge.n	8007f46 <d_encoding+0x66a>
 8007f06:	692c      	ldr	r4, [r5, #16]
 8007f08:	eb03 0143 	add.w	r1, r3, r3, lsl #1
 8007f0c:	1c5f      	adds	r7, r3, #1
 8007f0e:	eb14 0381 	adds.w	r3, r4, r1, lsl #2
 8007f12:	616f      	str	r7, [r5, #20]
 8007f14:	d017      	beq.n	8007f46 <d_encoding+0x66a>
 8007f16:	f804 9021 	strb.w	r9, [r4, r1, lsl #2]
 8007f1a:	6058      	str	r0, [r3, #4]
 8007f1c:	68ef      	ldr	r7, [r5, #12]
 8007f1e:	3702      	adds	r7, #2
 8007f20:	3e02      	subs	r6, #2
 8007f22:	60ef      	str	r7, [r5, #12]
 8007f24:	e6d6      	b.n	8007cd4 <d_encoding+0x3f8>
 8007f26:	461a      	mov	r2, r3
 8007f28:	e6df      	b.n	8007cea <d_encoding+0x40e>
 8007f2a:	f7ff fcd7 	bl	80078dc <d_encoding>
 8007f2e:	2300      	movs	r3, #0
 8007f30:	4602      	mov	r2, r0
 8007f32:	2147      	movs	r1, #71	; 0x47
 8007f34:	4628      	mov	r0, r5
 8007f36:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007f3a:	f7f8 b949 	b.w	80001d0 <d_make_comp>
 8007f3e:	202e      	movs	r0, #46	; 0x2e
 8007f40:	e7dd      	b.n	8007efe <d_encoding+0x622>
 8007f42:	202f      	movs	r0, #47	; 0x2f
 8007f44:	e7db      	b.n	8007efe <d_encoding+0x622>
 8007f46:	68eb      	ldr	r3, [r5, #12]
 8007f48:	3302      	adds	r3, #2
 8007f4a:	60eb      	str	r3, [r5, #12]
 8007f4c:	2000      	movs	r0, #0
 8007f4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007f52:	bf00      	nop

08007f54 <d_expr_primary>:
 8007f54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007f56:	68c2      	ldr	r2, [r0, #12]
 8007f58:	7813      	ldrb	r3, [r2, #0]
 8007f5a:	2b4c      	cmp	r3, #76	; 0x4c
 8007f5c:	d001      	beq.n	8007f62 <d_expr_primary+0xe>
 8007f5e:	2000      	movs	r0, #0
 8007f60:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007f62:	1c53      	adds	r3, r2, #1
 8007f64:	60c3      	str	r3, [r0, #12]
 8007f66:	7851      	ldrb	r1, [r2, #1]
 8007f68:	295f      	cmp	r1, #95	; 0x5f
 8007f6a:	4605      	mov	r5, r0
 8007f6c:	d03c      	beq.n	8007fe8 <d_expr_primary+0x94>
 8007f6e:	295a      	cmp	r1, #90	; 0x5a
 8007f70:	d041      	beq.n	8007ff6 <d_expr_primary+0xa2>
 8007f72:	f7fe fd05 	bl	8006980 <d_type>
 8007f76:	2800      	cmp	r0, #0
 8007f78:	d0f1      	beq.n	8007f5e <d_expr_primary+0xa>
 8007f7a:	7803      	ldrb	r3, [r0, #0]
 8007f7c:	2b27      	cmp	r3, #39	; 0x27
 8007f7e:	d048      	beq.n	8008012 <d_expr_primary+0xbe>
 8007f80:	68ee      	ldr	r6, [r5, #12]
 8007f82:	7833      	ldrb	r3, [r6, #0]
 8007f84:	2b6e      	cmp	r3, #110	; 0x6e
 8007f86:	d04d      	beq.n	8008024 <d_expr_primary+0xd0>
 8007f88:	213b      	movs	r1, #59	; 0x3b
 8007f8a:	2b45      	cmp	r3, #69	; 0x45
 8007f8c:	d050      	beq.n	8008030 <d_expr_primary+0xdc>
 8007f8e:	2b00      	cmp	r3, #0
 8007f90:	d0e5      	beq.n	8007f5e <d_expr_primary+0xa>
 8007f92:	4633      	mov	r3, r6
 8007f94:	e001      	b.n	8007f9a <d_expr_primary+0x46>
 8007f96:	2c00      	cmp	r4, #0
 8007f98:	d0e1      	beq.n	8007f5e <d_expr_primary+0xa>
 8007f9a:	3301      	adds	r3, #1
 8007f9c:	60eb      	str	r3, [r5, #12]
 8007f9e:	781c      	ldrb	r4, [r3, #0]
 8007fa0:	2c45      	cmp	r4, #69	; 0x45
 8007fa2:	d1f8      	bne.n	8007f96 <d_expr_primary+0x42>
 8007fa4:	1b9c      	subs	r4, r3, r6
 8007fa6:	696b      	ldr	r3, [r5, #20]
 8007fa8:	69aa      	ldr	r2, [r5, #24]
 8007faa:	4293      	cmp	r3, r2
 8007fac:	da2f      	bge.n	800800e <d_expr_primary+0xba>
 8007fae:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8007fb2:	692f      	ldr	r7, [r5, #16]
 8007fb4:	0092      	lsls	r2, r2, #2
 8007fb6:	3301      	adds	r3, #1
 8007fb8:	eb17 0e02 	adds.w	lr, r7, r2
 8007fbc:	616b      	str	r3, [r5, #20]
 8007fbe:	d026      	beq.n	800800e <d_expr_primary+0xba>
 8007fc0:	b32e      	cbz	r6, 800800e <d_expr_primary+0xba>
 8007fc2:	b324      	cbz	r4, 800800e <d_expr_primary+0xba>
 8007fc4:	2300      	movs	r3, #0
 8007fc6:	54bb      	strb	r3, [r7, r2]
 8007fc8:	4673      	mov	r3, lr
 8007fca:	f8ce 6004 	str.w	r6, [lr, #4]
 8007fce:	f8ce 4008 	str.w	r4, [lr, #8]
 8007fd2:	4602      	mov	r2, r0
 8007fd4:	4628      	mov	r0, r5
 8007fd6:	f7f8 f8fb 	bl	80001d0 <d_make_comp>
 8007fda:	68eb      	ldr	r3, [r5, #12]
 8007fdc:	781a      	ldrb	r2, [r3, #0]
 8007fde:	2a45      	cmp	r2, #69	; 0x45
 8007fe0:	d1bd      	bne.n	8007f5e <d_expr_primary+0xa>
 8007fe2:	3301      	adds	r3, #1
 8007fe4:	60eb      	str	r3, [r5, #12]
 8007fe6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007fe8:	1c93      	adds	r3, r2, #2
 8007fea:	60c3      	str	r3, [r0, #12]
 8007fec:	7892      	ldrb	r2, [r2, #2]
 8007fee:	2a5a      	cmp	r2, #90	; 0x5a
 8007ff0:	bf18      	it	ne
 8007ff2:	2000      	movne	r0, #0
 8007ff4:	d107      	bne.n	8008006 <d_expr_primary+0xb2>
 8007ff6:	3301      	adds	r3, #1
 8007ff8:	60eb      	str	r3, [r5, #12]
 8007ffa:	2100      	movs	r1, #0
 8007ffc:	4628      	mov	r0, r5
 8007ffe:	f7ff fc6d 	bl	80078dc <d_encoding>
 8008002:	68eb      	ldr	r3, [r5, #12]
 8008004:	781a      	ldrb	r2, [r3, #0]
 8008006:	2a45      	cmp	r2, #69	; 0x45
 8008008:	d0eb      	beq.n	8007fe2 <d_expr_primary+0x8e>
 800800a:	2000      	movs	r0, #0
 800800c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800800e:	2300      	movs	r3, #0
 8008010:	e7df      	b.n	8007fd2 <d_expr_primary+0x7e>
 8008012:	6843      	ldr	r3, [r0, #4]
 8008014:	7c1a      	ldrb	r2, [r3, #16]
 8008016:	2a00      	cmp	r2, #0
 8008018:	d0b2      	beq.n	8007f80 <d_expr_primary+0x2c>
 800801a:	685a      	ldr	r2, [r3, #4]
 800801c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800801e:	1a9b      	subs	r3, r3, r2
 8008020:	632b      	str	r3, [r5, #48]	; 0x30
 8008022:	e7ad      	b.n	8007f80 <d_expr_primary+0x2c>
 8008024:	1c72      	adds	r2, r6, #1
 8008026:	60ea      	str	r2, [r5, #12]
 8008028:	7873      	ldrb	r3, [r6, #1]
 800802a:	213c      	movs	r1, #60	; 0x3c
 800802c:	4616      	mov	r6, r2
 800802e:	e7ac      	b.n	8007f8a <d_expr_primary+0x36>
 8008030:	2400      	movs	r4, #0
 8008032:	e7b8      	b.n	8007fa6 <d_expr_primary+0x52>

08008034 <d_demangle_callback.constprop.15>:
 8008034:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008038:	b0e5      	sub	sp, #404	; 0x194
 800803a:	f890 9000 	ldrb.w	r9, [r0]
 800803e:	f1b9 0f5f 	cmp.w	r9, #95	; 0x5f
 8008042:	af00      	add	r7, sp, #0
 8008044:	4605      	mov	r5, r0
 8008046:	460e      	mov	r6, r1
 8008048:	4690      	mov	r8, r2
 800804a:	f000 80e6 	beq.w	800821a <d_demangle_callback.constprop.15+0x1e6>
 800804e:	2208      	movs	r2, #8
 8008050:	49c0      	ldr	r1, [pc, #768]	; (8008354 <d_demangle_callback.constprop.15+0x320>)
 8008052:	4628      	mov	r0, r5
 8008054:	f005 fc82 	bl	800d95c <strncmp>
 8008058:	b978      	cbnz	r0, 800807a <d_demangle_callback.constprop.15+0x46>
 800805a:	7a2b      	ldrb	r3, [r5, #8]
 800805c:	2b2e      	cmp	r3, #46	; 0x2e
 800805e:	d005      	beq.n	800806c <d_demangle_callback.constprop.15+0x38>
 8008060:	2b5f      	cmp	r3, #95	; 0x5f
 8008062:	d003      	beq.n	800806c <d_demangle_callback.constprop.15+0x38>
 8008064:	2b24      	cmp	r3, #36	; 0x24
 8008066:	d001      	beq.n	800806c <d_demangle_callback.constprop.15+0x38>
 8008068:	4682      	mov	sl, r0
 800806a:	e008      	b.n	800807e <d_demangle_callback.constprop.15+0x4a>
 800806c:	7a6b      	ldrb	r3, [r5, #9]
 800806e:	2b44      	cmp	r3, #68	; 0x44
 8008070:	f000 80e3 	beq.w	800823a <d_demangle_callback.constprop.15+0x206>
 8008074:	2b49      	cmp	r3, #73	; 0x49
 8008076:	f000 80e0 	beq.w	800823a <d_demangle_callback.constprop.15+0x206>
 800807a:	f04f 0a00 	mov.w	sl, #0
 800807e:	4628      	mov	r0, r5
 8008080:	f000 fa38 	bl	80084f4 <strlen>
 8008084:	ea4f 0b40 	mov.w	fp, r0, lsl #1
 8008088:	0083      	lsls	r3, r0, #2
 800808a:	eb03 020b 	add.w	r2, r3, fp
 800808e:	0092      	lsls	r2, r2, #2
 8008090:	3208      	adds	r2, #8
 8008092:	330a      	adds	r3, #10
 8008094:	ebad 0d02 	sub.w	sp, sp, r2
 8008098:	f023 0307 	bic.w	r3, r3, #7
 800809c:	2400      	movs	r4, #0
 800809e:	466a      	mov	r2, sp
 80080a0:	1829      	adds	r1, r5, r0
 80080a2:	ebad 0d03 	sub.w	sp, sp, r3
 80080a6:	f1ba 0f01 	cmp.w	sl, #1
 80080aa:	f04f 0311 	mov.w	r3, #17
 80080ae:	623a      	str	r2, [r7, #32]
 80080b0:	f8c7 d02c 	str.w	sp, [r7, #44]	; 0x2c
 80080b4:	f8c7 b028 	str.w	fp, [r7, #40]	; 0x28
 80080b8:	613d      	str	r5, [r7, #16]
 80080ba:	61fd      	str	r5, [r7, #28]
 80080bc:	6378      	str	r0, [r7, #52]	; 0x34
 80080be:	6179      	str	r1, [r7, #20]
 80080c0:	61bb      	str	r3, [r7, #24]
 80080c2:	627c      	str	r4, [r7, #36]	; 0x24
 80080c4:	633c      	str	r4, [r7, #48]	; 0x30
 80080c6:	63bc      	str	r4, [r7, #56]	; 0x38
 80080c8:	63fc      	str	r4, [r7, #60]	; 0x3c
 80080ca:	643c      	str	r4, [r7, #64]	; 0x40
 80080cc:	647c      	str	r4, [r7, #68]	; 0x44
 80080ce:	64bc      	str	r4, [r7, #72]	; 0x48
 80080d0:	f000 80aa 	beq.w	8008228 <d_demangle_callback.constprop.15+0x1f4>
 80080d4:	f0c0 80c9 	bcc.w	800826a <d_demangle_callback.constprop.15+0x236>
 80080d8:	f1ba 0f03 	cmp.w	sl, #3
 80080dc:	f200 80c5 	bhi.w	800826a <d_demangle_callback.constprop.15+0x236>
 80080e0:	7aeb      	ldrb	r3, [r5, #11]
 80080e2:	f1ba 0f02 	cmp.w	sl, #2
 80080e6:	bf18      	it	ne
 80080e8:	f04f 0943 	movne.w	r9, #67	; 0x43
 80080ec:	f105 0a0b 	add.w	sl, r5, #11
 80080f0:	bf08      	it	eq
 80080f2:	f04f 0942 	moveq.w	r9, #66	; 0x42
 80080f6:	2b5f      	cmp	r3, #95	; 0x5f
 80080f8:	f8c7 a01c 	str.w	sl, [r7, #28]
 80080fc:	f000 80a8 	beq.w	8008250 <d_demangle_callback.constprop.15+0x21c>
 8008100:	4650      	mov	r0, sl
 8008102:	607a      	str	r2, [r7, #4]
 8008104:	f000 f9f6 	bl	80084f4 <strlen>
 8008108:	f1bb 0f00 	cmp.w	fp, #0
 800810c:	f340 80b6 	ble.w	800827c <d_demangle_callback.constprop.15+0x248>
 8008110:	2301      	movs	r3, #1
 8008112:	627b      	str	r3, [r7, #36]	; 0x24
 8008114:	2800      	cmp	r0, #0
 8008116:	f000 80b1 	beq.w	800827c <d_demangle_callback.constprop.15+0x248>
 800811a:	687a      	ldr	r2, [r7, #4]
 800811c:	2300      	movs	r3, #0
 800811e:	f8c2 a004 	str.w	sl, [r2, #4]
 8008122:	6090      	str	r0, [r2, #8]
 8008124:	7013      	strb	r3, [r2, #0]
 8008126:	4649      	mov	r1, r9
 8008128:	2300      	movs	r3, #0
 800812a:	f107 0010 	add.w	r0, r7, #16
 800812e:	f7f8 f84f 	bl	80001d0 <d_make_comp>
 8008132:	69fc      	ldr	r4, [r7, #28]
 8008134:	4605      	mov	r5, r0
 8008136:	4620      	mov	r0, r4
 8008138:	f000 f9dc 	bl	80084f4 <strlen>
 800813c:	1823      	adds	r3, r4, r0
 800813e:	61fb      	str	r3, [r7, #28]
 8008140:	f814 9000 	ldrb.w	r9, [r4, r0]
 8008144:	f1b9 0f00 	cmp.w	r9, #0
 8008148:	d171      	bne.n	800822e <d_demangle_callback.constprop.15+0x1fa>
 800814a:	2d00      	cmp	r5, #0
 800814c:	d06f      	beq.n	800822e <d_demangle_callback.constprop.15+0x1fa>
 800814e:	f107 044c 	add.w	r4, r7, #76	; 0x4c
 8008152:	462a      	mov	r2, r5
 8008154:	f507 71be 	add.w	r1, r7, #380	; 0x17c
 8008158:	f507 70c4 	add.w	r0, r7, #392	; 0x188
 800815c:	f8c4 6108 	str.w	r6, [r4, #264]	; 0x108
 8008160:	f8c4 9100 	str.w	r9, [r4, #256]	; 0x100
 8008164:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 8008168:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
 800816c:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
 8008170:	f8c4 911c 	str.w	r9, [r4, #284]	; 0x11c
 8008174:	f8c4 9120 	str.w	r9, [r4, #288]	; 0x120
 8008178:	f8c4 810c 	str.w	r8, [r4, #268]	; 0x10c
 800817c:	f8c4 9118 	str.w	r9, [r4, #280]	; 0x118
 8008180:	f8c4 9124 	str.w	r9, [r4, #292]	; 0x124
 8008184:	f8c4 9128 	str.w	r9, [r4, #296]	; 0x128
 8008188:	f8c4 912c 	str.w	r9, [r4, #300]	; 0x12c
 800818c:	f8c4 9130 	str.w	r9, [r4, #304]	; 0x130
 8008190:	f8c4 9134 	str.w	r9, [r4, #308]	; 0x134
 8008194:	f8c4 9138 	str.w	r9, [r4, #312]	; 0x138
 8008198:	f8c4 913c 	str.w	r9, [r4, #316]	; 0x13c
 800819c:	f7f8 f8dc 	bl	8000358 <d_count_templates_scopes>
 80081a0:	f8d4 1130 	ldr.w	r1, [r4, #304]	; 0x130
 80081a4:	f8d4 213c 	ldr.w	r2, [r4, #316]	; 0x13c
 80081a8:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80081ac:	60fb      	str	r3, [r7, #12]
 80081ae:	00c8      	lsls	r0, r1, #3
 80081b0:	3008      	adds	r0, #8
 80081b2:	fb02 f101 	mul.w	r1, r2, r1
 80081b6:	466e      	mov	r6, sp
 80081b8:	00ca      	lsls	r2, r1, #3
 80081ba:	ebad 0d00 	sub.w	sp, sp, r0
 80081be:	4668      	mov	r0, sp
 80081c0:	3208      	adds	r2, #8
 80081c2:	ebad 0d02 	sub.w	sp, sp, r2
 80081c6:	f107 0308 	add.w	r3, r7, #8
 80081ca:	462a      	mov	r2, r5
 80081cc:	f8c4 0128 	str.w	r0, [r4, #296]	; 0x128
 80081d0:	f8c4 113c 	str.w	r1, [r4, #316]	; 0x13c
 80081d4:	4620      	mov	r0, r4
 80081d6:	2111      	movs	r1, #17
 80081d8:	f8c4 d134 	str.w	sp, [r4, #308]	; 0x134
 80081dc:	60bd      	str	r5, [r7, #8]
 80081de:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80081e2:	f8c4 9140 	str.w	r9, [r4, #320]	; 0x140
 80081e6:	f7f8 fbc5 	bl	8000974 <d_print_comp_inner>
 80081ea:	68fb      	ldr	r3, [r7, #12]
 80081ec:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80081f0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80081f4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80081f8:	f804 9001 	strb.w	r9, [r4, r1]
 80081fc:	4620      	mov	r0, r4
 80081fe:	46b5      	mov	sp, r6
 8008200:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8008204:	4798      	blx	r3
 8008206:	f8d4 0118 	ldr.w	r0, [r4, #280]	; 0x118
 800820a:	fab0 f080 	clz	r0, r0
 800820e:	0940      	lsrs	r0, r0, #5
 8008210:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8008214:	46bd      	mov	sp, r7
 8008216:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800821a:	7843      	ldrb	r3, [r0, #1]
 800821c:	2b5a      	cmp	r3, #90	; 0x5a
 800821e:	f47f af16 	bne.w	800804e <d_demangle_callback.constprop.15+0x1a>
 8008222:	f04f 0a01 	mov.w	sl, #1
 8008226:	e72a      	b.n	800807e <d_demangle_callback.constprop.15+0x4a>
 8008228:	f1b9 0f5f 	cmp.w	r9, #95	; 0x5f
 800822c:	d028      	beq.n	8008280 <d_demangle_callback.constprop.15+0x24c>
 800822e:	2000      	movs	r0, #0
 8008230:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8008234:	46bd      	mov	sp, r7
 8008236:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800823a:	7aaa      	ldrb	r2, [r5, #10]
 800823c:	2a5f      	cmp	r2, #95	; 0x5f
 800823e:	f47f af1c 	bne.w	800807a <d_demangle_callback.constprop.15+0x46>
 8008242:	2b49      	cmp	r3, #73	; 0x49
 8008244:	bf14      	ite	ne
 8008246:	f04f 0a03 	movne.w	sl, #3
 800824a:	f04f 0a02 	moveq.w	sl, #2
 800824e:	e716      	b.n	800807e <d_demangle_callback.constprop.15+0x4a>
 8008250:	7b2b      	ldrb	r3, [r5, #12]
 8008252:	2b5a      	cmp	r3, #90	; 0x5a
 8008254:	f47f af54 	bne.w	8008100 <d_demangle_callback.constprop.15+0xcc>
 8008258:	350d      	adds	r5, #13
 800825a:	4621      	mov	r1, r4
 800825c:	f107 0010 	add.w	r0, r7, #16
 8008260:	61fd      	str	r5, [r7, #28]
 8008262:	f7ff fb3b 	bl	80078dc <d_encoding>
 8008266:	4602      	mov	r2, r0
 8008268:	e75d      	b.n	8008126 <d_demangle_callback.constprop.15+0xf2>
 800826a:	f107 0010 	add.w	r0, r7, #16
 800826e:	f7fe fb87 	bl	8006980 <d_type>
 8008272:	69fb      	ldr	r3, [r7, #28]
 8008274:	4605      	mov	r5, r0
 8008276:	f893 9000 	ldrb.w	r9, [r3]
 800827a:	e763      	b.n	8008144 <d_demangle_callback.constprop.15+0x110>
 800827c:	2200      	movs	r2, #0
 800827e:	e752      	b.n	8008126 <d_demangle_callback.constprop.15+0xf2>
 8008280:	786b      	ldrb	r3, [r5, #1]
 8008282:	2b5a      	cmp	r3, #90	; 0x5a
 8008284:	d1d3      	bne.n	800822e <d_demangle_callback.constprop.15+0x1fa>
 8008286:	3502      	adds	r5, #2
 8008288:	4651      	mov	r1, sl
 800828a:	f107 0010 	add.w	r0, r7, #16
 800828e:	61fd      	str	r5, [r7, #28]
 8008290:	f7ff fb24 	bl	80078dc <d_encoding>
 8008294:	69bb      	ldr	r3, [r7, #24]
 8008296:	07db      	lsls	r3, r3, #31
 8008298:	4605      	mov	r5, r0
 800829a:	d557      	bpl.n	800834c <d_demangle_callback.constprop.15+0x318>
 800829c:	69f8      	ldr	r0, [r7, #28]
 800829e:	f890 9000 	ldrb.w	r9, [r0]
 80082a2:	f1b9 0f2e 	cmp.w	r9, #46	; 0x2e
 80082a6:	f47f af4d 	bne.w	8008144 <d_demangle_callback.constprop.15+0x110>
 80082aa:	7843      	ldrb	r3, [r0, #1]
 80082ac:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 80082b0:	2a19      	cmp	r2, #25
 80082b2:	d93e      	bls.n	8008332 <d_demangle_callback.constprop.15+0x2fe>
 80082b4:	2b5f      	cmp	r3, #95	; 0x5f
 80082b6:	d03c      	beq.n	8008332 <d_demangle_callback.constprop.15+0x2fe>
 80082b8:	3b30      	subs	r3, #48	; 0x30
 80082ba:	2b09      	cmp	r3, #9
 80082bc:	d846      	bhi.n	800834c <d_demangle_callback.constprop.15+0x318>
 80082be:	7802      	ldrb	r2, [r0, #0]
 80082c0:	4603      	mov	r3, r0
 80082c2:	2a2e      	cmp	r2, #46	; 0x2e
 80082c4:	d112      	bne.n	80082ec <d_demangle_callback.constprop.15+0x2b8>
 80082c6:	785a      	ldrb	r2, [r3, #1]
 80082c8:	3a30      	subs	r2, #48	; 0x30
 80082ca:	2a09      	cmp	r2, #9
 80082cc:	d80e      	bhi.n	80082ec <d_demangle_callback.constprop.15+0x2b8>
 80082ce:	789a      	ldrb	r2, [r3, #2]
 80082d0:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 80082d4:	2909      	cmp	r1, #9
 80082d6:	f103 0302 	add.w	r3, r3, #2
 80082da:	d8f2      	bhi.n	80082c2 <d_demangle_callback.constprop.15+0x28e>
 80082dc:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 80082e0:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 80082e4:	2909      	cmp	r1, #9
 80082e6:	d9f9      	bls.n	80082dc <d_demangle_callback.constprop.15+0x2a8>
 80082e8:	2a2e      	cmp	r2, #46	; 0x2e
 80082ea:	d0ec      	beq.n	80082c6 <d_demangle_callback.constprop.15+0x292>
 80082ec:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80082ee:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80082f0:	61fb      	str	r3, [r7, #28]
 80082f2:	428a      	cmp	r2, r1
 80082f4:	da1b      	bge.n	800832e <d_demangle_callback.constprop.15+0x2fa>
 80082f6:	6a39      	ldr	r1, [r7, #32]
 80082f8:	f102 0e01 	add.w	lr, r2, #1
 80082fc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8008300:	f8c7 e024 	str.w	lr, [r7, #36]	; 0x24
 8008304:	eb11 0e82 	adds.w	lr, r1, r2, lsl #2
 8008308:	d011      	beq.n	800832e <d_demangle_callback.constprop.15+0x2fa>
 800830a:	ebb3 0c00 	subs.w	ip, r3, r0
 800830e:	d00e      	beq.n	800832e <d_demangle_callback.constprop.15+0x2fa>
 8008310:	f801 4022 	strb.w	r4, [r1, r2, lsl #2]
 8008314:	4673      	mov	r3, lr
 8008316:	f8ce 0004 	str.w	r0, [lr, #4]
 800831a:	f8ce c008 	str.w	ip, [lr, #8]
 800831e:	462a      	mov	r2, r5
 8008320:	214b      	movs	r1, #75	; 0x4b
 8008322:	f107 0010 	add.w	r0, r7, #16
 8008326:	f7f7 ff53 	bl	80001d0 <d_make_comp>
 800832a:	4605      	mov	r5, r0
 800832c:	e7b6      	b.n	800829c <d_demangle_callback.constprop.15+0x268>
 800832e:	2300      	movs	r3, #0
 8008330:	e7f5      	b.n	800831e <d_demangle_callback.constprop.15+0x2ea>
 8008332:	1c81      	adds	r1, r0, #2
 8008334:	780a      	ldrb	r2, [r1, #0]
 8008336:	f1a2 0e61 	sub.w	lr, r2, #97	; 0x61
 800833a:	f1be 0f19 	cmp.w	lr, #25
 800833e:	460b      	mov	r3, r1
 8008340:	f101 0101 	add.w	r1, r1, #1
 8008344:	d9f6      	bls.n	8008334 <d_demangle_callback.constprop.15+0x300>
 8008346:	2a5f      	cmp	r2, #95	; 0x5f
 8008348:	d0f4      	beq.n	8008334 <d_demangle_callback.constprop.15+0x300>
 800834a:	e7ba      	b.n	80082c2 <d_demangle_callback.constprop.15+0x28e>
 800834c:	69fb      	ldr	r3, [r7, #28]
 800834e:	f893 9000 	ldrb.w	r9, [r3]
 8008352:	e6f7      	b.n	8008144 <d_demangle_callback.constprop.15+0x110>
 8008354:	080110a0 	.word	0x080110a0

08008358 <__cxa_demangle>:
 8008358:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800835c:	b084      	sub	sp, #16
 800835e:	b370      	cbz	r0, 80083be <__cxa_demangle+0x66>
 8008360:	b101      	cbz	r1, 8008364 <__cxa_demangle+0xc>
 8008362:	b362      	cbz	r2, 80083be <__cxa_demangle+0x66>
 8008364:	2400      	movs	r4, #0
 8008366:	4617      	mov	r7, r2
 8008368:	460d      	mov	r5, r1
 800836a:	466a      	mov	r2, sp
 800836c:	4928      	ldr	r1, [pc, #160]	; (8008410 <__cxa_demangle+0xb8>)
 800836e:	9400      	str	r4, [sp, #0]
 8008370:	461e      	mov	r6, r3
 8008372:	9401      	str	r4, [sp, #4]
 8008374:	9402      	str	r4, [sp, #8]
 8008376:	9403      	str	r4, [sp, #12]
 8008378:	f7ff fe5c 	bl	8008034 <d_demangle_callback.constprop.15>
 800837c:	b368      	cbz	r0, 80083da <__cxa_demangle+0x82>
 800837e:	9b03      	ldr	r3, [sp, #12]
 8008380:	b1d3      	cbz	r3, 80083b8 <__cxa_demangle+0x60>
 8008382:	f04f 0801 	mov.w	r8, #1
 8008386:	9c00      	ldr	r4, [sp, #0]
 8008388:	b3ac      	cbz	r4, 80083f6 <__cxa_demangle+0x9e>
 800838a:	b38d      	cbz	r5, 80083f0 <__cxa_demangle+0x98>
 800838c:	4620      	mov	r0, r4
 800838e:	f000 f8b1 	bl	80084f4 <strlen>
 8008392:	683b      	ldr	r3, [r7, #0]
 8008394:	4298      	cmp	r0, r3
 8008396:	d21a      	bcs.n	80083ce <__cxa_demangle+0x76>
 8008398:	1c42      	adds	r2, r0, #1
 800839a:	4621      	mov	r1, r4
 800839c:	4628      	mov	r0, r5
 800839e:	f005 f84c 	bl	800d43a <memcpy>
 80083a2:	4620      	mov	r0, r4
 80083a4:	f004 fe12 	bl	800cfcc <free>
 80083a8:	462c      	mov	r4, r5
 80083aa:	b376      	cbz	r6, 800840a <__cxa_demangle+0xb2>
 80083ac:	2300      	movs	r3, #0
 80083ae:	4620      	mov	r0, r4
 80083b0:	6033      	str	r3, [r6, #0]
 80083b2:	b004      	add	sp, #16
 80083b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80083b8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80083bc:	e7e3      	b.n	8008386 <__cxa_demangle+0x2e>
 80083be:	b19b      	cbz	r3, 80083e8 <__cxa_demangle+0x90>
 80083c0:	f06f 0202 	mvn.w	r2, #2
 80083c4:	2000      	movs	r0, #0
 80083c6:	601a      	str	r2, [r3, #0]
 80083c8:	b004      	add	sp, #16
 80083ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80083ce:	4628      	mov	r0, r5
 80083d0:	f004 fdfc 	bl	800cfcc <free>
 80083d4:	f8c7 8000 	str.w	r8, [r7]
 80083d8:	e7e7      	b.n	80083aa <__cxa_demangle+0x52>
 80083da:	9800      	ldr	r0, [sp, #0]
 80083dc:	f004 fdf6 	bl	800cfcc <free>
 80083e0:	b116      	cbz	r6, 80083e8 <__cxa_demangle+0x90>
 80083e2:	f06f 0301 	mvn.w	r3, #1
 80083e6:	6033      	str	r3, [r6, #0]
 80083e8:	2000      	movs	r0, #0
 80083ea:	b004      	add	sp, #16
 80083ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80083f0:	2f00      	cmp	r7, #0
 80083f2:	d1ef      	bne.n	80083d4 <__cxa_demangle+0x7c>
 80083f4:	e7d9      	b.n	80083aa <__cxa_demangle+0x52>
 80083f6:	2e00      	cmp	r6, #0
 80083f8:	d0f6      	beq.n	80083e8 <__cxa_demangle+0x90>
 80083fa:	f1b8 0f01 	cmp.w	r8, #1
 80083fe:	d1f0      	bne.n	80083e2 <__cxa_demangle+0x8a>
 8008400:	f04f 33ff 	mov.w	r3, #4294967295
 8008404:	4620      	mov	r0, r4
 8008406:	6033      	str	r3, [r6, #0]
 8008408:	e7d3      	b.n	80083b2 <__cxa_demangle+0x5a>
 800840a:	4620      	mov	r0, r4
 800840c:	e7d1      	b.n	80083b2 <__cxa_demangle+0x5a>
 800840e:	bf00      	nop
 8008410:	080008f9 	.word	0x080008f9

08008414 <__gcclibcxx_demangle_callback>:
 8008414:	b160      	cbz	r0, 8008430 <__gcclibcxx_demangle_callback+0x1c>
 8008416:	b508      	push	{r3, lr}
 8008418:	b139      	cbz	r1, 800842a <__gcclibcxx_demangle_callback+0x16>
 800841a:	f7ff fe0b 	bl	8008034 <d_demangle_callback.constprop.15>
 800841e:	2800      	cmp	r0, #0
 8008420:	bf0c      	ite	eq
 8008422:	f06f 0001 	mvneq.w	r0, #1
 8008426:	2000      	movne	r0, #0
 8008428:	bd08      	pop	{r3, pc}
 800842a:	f06f 0002 	mvn.w	r0, #2
 800842e:	bd08      	pop	{r3, pc}
 8008430:	f06f 0002 	mvn.w	r0, #2
 8008434:	4770      	bx	lr
 8008436:	bf00      	nop
	...

08008440 <memchr>:
 8008440:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8008444:	2a10      	cmp	r2, #16
 8008446:	db2b      	blt.n	80084a0 <memchr+0x60>
 8008448:	f010 0f07 	tst.w	r0, #7
 800844c:	d008      	beq.n	8008460 <memchr+0x20>
 800844e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8008452:	3a01      	subs	r2, #1
 8008454:	428b      	cmp	r3, r1
 8008456:	d02d      	beq.n	80084b4 <memchr+0x74>
 8008458:	f010 0f07 	tst.w	r0, #7
 800845c:	b342      	cbz	r2, 80084b0 <memchr+0x70>
 800845e:	d1f6      	bne.n	800844e <memchr+0xe>
 8008460:	b4f0      	push	{r4, r5, r6, r7}
 8008462:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8008466:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800846a:	f022 0407 	bic.w	r4, r2, #7
 800846e:	f07f 0700 	mvns.w	r7, #0
 8008472:	2300      	movs	r3, #0
 8008474:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8008478:	3c08      	subs	r4, #8
 800847a:	ea85 0501 	eor.w	r5, r5, r1
 800847e:	ea86 0601 	eor.w	r6, r6, r1
 8008482:	fa85 f547 	uadd8	r5, r5, r7
 8008486:	faa3 f587 	sel	r5, r3, r7
 800848a:	fa86 f647 	uadd8	r6, r6, r7
 800848e:	faa5 f687 	sel	r6, r5, r7
 8008492:	b98e      	cbnz	r6, 80084b8 <memchr+0x78>
 8008494:	d1ee      	bne.n	8008474 <memchr+0x34>
 8008496:	bcf0      	pop	{r4, r5, r6, r7}
 8008498:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800849c:	f002 0207 	and.w	r2, r2, #7
 80084a0:	b132      	cbz	r2, 80084b0 <memchr+0x70>
 80084a2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80084a6:	3a01      	subs	r2, #1
 80084a8:	ea83 0301 	eor.w	r3, r3, r1
 80084ac:	b113      	cbz	r3, 80084b4 <memchr+0x74>
 80084ae:	d1f8      	bne.n	80084a2 <memchr+0x62>
 80084b0:	2000      	movs	r0, #0
 80084b2:	4770      	bx	lr
 80084b4:	3801      	subs	r0, #1
 80084b6:	4770      	bx	lr
 80084b8:	2d00      	cmp	r5, #0
 80084ba:	bf06      	itte	eq
 80084bc:	4635      	moveq	r5, r6
 80084be:	3803      	subeq	r0, #3
 80084c0:	3807      	subne	r0, #7
 80084c2:	f015 0f01 	tst.w	r5, #1
 80084c6:	d107      	bne.n	80084d8 <memchr+0x98>
 80084c8:	3001      	adds	r0, #1
 80084ca:	f415 7f80 	tst.w	r5, #256	; 0x100
 80084ce:	bf02      	ittt	eq
 80084d0:	3001      	addeq	r0, #1
 80084d2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80084d6:	3001      	addeq	r0, #1
 80084d8:	bcf0      	pop	{r4, r5, r6, r7}
 80084da:	3801      	subs	r0, #1
 80084dc:	4770      	bx	lr
 80084de:	bf00      	nop

080084e0 <strcmp>:
 80084e0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80084e4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80084e8:	2a01      	cmp	r2, #1
 80084ea:	bf28      	it	cs
 80084ec:	429a      	cmpcs	r2, r3
 80084ee:	d0f7      	beq.n	80084e0 <strcmp>
 80084f0:	1ad0      	subs	r0, r2, r3
 80084f2:	4770      	bx	lr

080084f4 <strlen>:
 80084f4:	4603      	mov	r3, r0
 80084f6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80084fa:	2a00      	cmp	r2, #0
 80084fc:	d1fb      	bne.n	80084f6 <strlen+0x2>
 80084fe:	1a18      	subs	r0, r3, r0
 8008500:	3801      	subs	r0, #1
 8008502:	4770      	bx	lr

08008504 <__aeabi_drsub>:
 8008504:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8008508:	e002      	b.n	8008510 <__adddf3>
 800850a:	bf00      	nop

0800850c <__aeabi_dsub>:
 800850c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08008510 <__adddf3>:
 8008510:	b530      	push	{r4, r5, lr}
 8008512:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8008516:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800851a:	ea94 0f05 	teq	r4, r5
 800851e:	bf08      	it	eq
 8008520:	ea90 0f02 	teqeq	r0, r2
 8008524:	bf1f      	itttt	ne
 8008526:	ea54 0c00 	orrsne.w	ip, r4, r0
 800852a:	ea55 0c02 	orrsne.w	ip, r5, r2
 800852e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8008532:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8008536:	f000 80e2 	beq.w	80086fe <__adddf3+0x1ee>
 800853a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800853e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8008542:	bfb8      	it	lt
 8008544:	426d      	neglt	r5, r5
 8008546:	dd0c      	ble.n	8008562 <__adddf3+0x52>
 8008548:	442c      	add	r4, r5
 800854a:	ea80 0202 	eor.w	r2, r0, r2
 800854e:	ea81 0303 	eor.w	r3, r1, r3
 8008552:	ea82 0000 	eor.w	r0, r2, r0
 8008556:	ea83 0101 	eor.w	r1, r3, r1
 800855a:	ea80 0202 	eor.w	r2, r0, r2
 800855e:	ea81 0303 	eor.w	r3, r1, r3
 8008562:	2d36      	cmp	r5, #54	; 0x36
 8008564:	bf88      	it	hi
 8008566:	bd30      	pophi	{r4, r5, pc}
 8008568:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800856c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8008570:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8008574:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8008578:	d002      	beq.n	8008580 <__adddf3+0x70>
 800857a:	4240      	negs	r0, r0
 800857c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8008580:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8008584:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8008588:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800858c:	d002      	beq.n	8008594 <__adddf3+0x84>
 800858e:	4252      	negs	r2, r2
 8008590:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8008594:	ea94 0f05 	teq	r4, r5
 8008598:	f000 80a7 	beq.w	80086ea <__adddf3+0x1da>
 800859c:	f1a4 0401 	sub.w	r4, r4, #1
 80085a0:	f1d5 0e20 	rsbs	lr, r5, #32
 80085a4:	db0d      	blt.n	80085c2 <__adddf3+0xb2>
 80085a6:	fa02 fc0e 	lsl.w	ip, r2, lr
 80085aa:	fa22 f205 	lsr.w	r2, r2, r5
 80085ae:	1880      	adds	r0, r0, r2
 80085b0:	f141 0100 	adc.w	r1, r1, #0
 80085b4:	fa03 f20e 	lsl.w	r2, r3, lr
 80085b8:	1880      	adds	r0, r0, r2
 80085ba:	fa43 f305 	asr.w	r3, r3, r5
 80085be:	4159      	adcs	r1, r3
 80085c0:	e00e      	b.n	80085e0 <__adddf3+0xd0>
 80085c2:	f1a5 0520 	sub.w	r5, r5, #32
 80085c6:	f10e 0e20 	add.w	lr, lr, #32
 80085ca:	2a01      	cmp	r2, #1
 80085cc:	fa03 fc0e 	lsl.w	ip, r3, lr
 80085d0:	bf28      	it	cs
 80085d2:	f04c 0c02 	orrcs.w	ip, ip, #2
 80085d6:	fa43 f305 	asr.w	r3, r3, r5
 80085da:	18c0      	adds	r0, r0, r3
 80085dc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80085e0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80085e4:	d507      	bpl.n	80085f6 <__adddf3+0xe6>
 80085e6:	f04f 0e00 	mov.w	lr, #0
 80085ea:	f1dc 0c00 	rsbs	ip, ip, #0
 80085ee:	eb7e 0000 	sbcs.w	r0, lr, r0
 80085f2:	eb6e 0101 	sbc.w	r1, lr, r1
 80085f6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80085fa:	d31b      	bcc.n	8008634 <__adddf3+0x124>
 80085fc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8008600:	d30c      	bcc.n	800861c <__adddf3+0x10c>
 8008602:	0849      	lsrs	r1, r1, #1
 8008604:	ea5f 0030 	movs.w	r0, r0, rrx
 8008608:	ea4f 0c3c 	mov.w	ip, ip, rrx
 800860c:	f104 0401 	add.w	r4, r4, #1
 8008610:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8008614:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8008618:	f080 809a 	bcs.w	8008750 <__adddf3+0x240>
 800861c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8008620:	bf08      	it	eq
 8008622:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8008626:	f150 0000 	adcs.w	r0, r0, #0
 800862a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800862e:	ea41 0105 	orr.w	r1, r1, r5
 8008632:	bd30      	pop	{r4, r5, pc}
 8008634:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8008638:	4140      	adcs	r0, r0
 800863a:	eb41 0101 	adc.w	r1, r1, r1
 800863e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8008642:	f1a4 0401 	sub.w	r4, r4, #1
 8008646:	d1e9      	bne.n	800861c <__adddf3+0x10c>
 8008648:	f091 0f00 	teq	r1, #0
 800864c:	bf04      	itt	eq
 800864e:	4601      	moveq	r1, r0
 8008650:	2000      	moveq	r0, #0
 8008652:	fab1 f381 	clz	r3, r1
 8008656:	bf08      	it	eq
 8008658:	3320      	addeq	r3, #32
 800865a:	f1a3 030b 	sub.w	r3, r3, #11
 800865e:	f1b3 0220 	subs.w	r2, r3, #32
 8008662:	da0c      	bge.n	800867e <__adddf3+0x16e>
 8008664:	320c      	adds	r2, #12
 8008666:	dd08      	ble.n	800867a <__adddf3+0x16a>
 8008668:	f102 0c14 	add.w	ip, r2, #20
 800866c:	f1c2 020c 	rsb	r2, r2, #12
 8008670:	fa01 f00c 	lsl.w	r0, r1, ip
 8008674:	fa21 f102 	lsr.w	r1, r1, r2
 8008678:	e00c      	b.n	8008694 <__adddf3+0x184>
 800867a:	f102 0214 	add.w	r2, r2, #20
 800867e:	bfd8      	it	le
 8008680:	f1c2 0c20 	rsble	ip, r2, #32
 8008684:	fa01 f102 	lsl.w	r1, r1, r2
 8008688:	fa20 fc0c 	lsr.w	ip, r0, ip
 800868c:	bfdc      	itt	le
 800868e:	ea41 010c 	orrle.w	r1, r1, ip
 8008692:	4090      	lslle	r0, r2
 8008694:	1ae4      	subs	r4, r4, r3
 8008696:	bfa2      	ittt	ge
 8008698:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800869c:	4329      	orrge	r1, r5
 800869e:	bd30      	popge	{r4, r5, pc}
 80086a0:	ea6f 0404 	mvn.w	r4, r4
 80086a4:	3c1f      	subs	r4, #31
 80086a6:	da1c      	bge.n	80086e2 <__adddf3+0x1d2>
 80086a8:	340c      	adds	r4, #12
 80086aa:	dc0e      	bgt.n	80086ca <__adddf3+0x1ba>
 80086ac:	f104 0414 	add.w	r4, r4, #20
 80086b0:	f1c4 0220 	rsb	r2, r4, #32
 80086b4:	fa20 f004 	lsr.w	r0, r0, r4
 80086b8:	fa01 f302 	lsl.w	r3, r1, r2
 80086bc:	ea40 0003 	orr.w	r0, r0, r3
 80086c0:	fa21 f304 	lsr.w	r3, r1, r4
 80086c4:	ea45 0103 	orr.w	r1, r5, r3
 80086c8:	bd30      	pop	{r4, r5, pc}
 80086ca:	f1c4 040c 	rsb	r4, r4, #12
 80086ce:	f1c4 0220 	rsb	r2, r4, #32
 80086d2:	fa20 f002 	lsr.w	r0, r0, r2
 80086d6:	fa01 f304 	lsl.w	r3, r1, r4
 80086da:	ea40 0003 	orr.w	r0, r0, r3
 80086de:	4629      	mov	r1, r5
 80086e0:	bd30      	pop	{r4, r5, pc}
 80086e2:	fa21 f004 	lsr.w	r0, r1, r4
 80086e6:	4629      	mov	r1, r5
 80086e8:	bd30      	pop	{r4, r5, pc}
 80086ea:	f094 0f00 	teq	r4, #0
 80086ee:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80086f2:	bf06      	itte	eq
 80086f4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80086f8:	3401      	addeq	r4, #1
 80086fa:	3d01      	subne	r5, #1
 80086fc:	e74e      	b.n	800859c <__adddf3+0x8c>
 80086fe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8008702:	bf18      	it	ne
 8008704:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8008708:	d029      	beq.n	800875e <__adddf3+0x24e>
 800870a:	ea94 0f05 	teq	r4, r5
 800870e:	bf08      	it	eq
 8008710:	ea90 0f02 	teqeq	r0, r2
 8008714:	d005      	beq.n	8008722 <__adddf3+0x212>
 8008716:	ea54 0c00 	orrs.w	ip, r4, r0
 800871a:	bf04      	itt	eq
 800871c:	4619      	moveq	r1, r3
 800871e:	4610      	moveq	r0, r2
 8008720:	bd30      	pop	{r4, r5, pc}
 8008722:	ea91 0f03 	teq	r1, r3
 8008726:	bf1e      	ittt	ne
 8008728:	2100      	movne	r1, #0
 800872a:	2000      	movne	r0, #0
 800872c:	bd30      	popne	{r4, r5, pc}
 800872e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8008732:	d105      	bne.n	8008740 <__adddf3+0x230>
 8008734:	0040      	lsls	r0, r0, #1
 8008736:	4149      	adcs	r1, r1
 8008738:	bf28      	it	cs
 800873a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800873e:	bd30      	pop	{r4, r5, pc}
 8008740:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8008744:	bf3c      	itt	cc
 8008746:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800874a:	bd30      	popcc	{r4, r5, pc}
 800874c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008750:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8008754:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008758:	f04f 0000 	mov.w	r0, #0
 800875c:	bd30      	pop	{r4, r5, pc}
 800875e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8008762:	bf1a      	itte	ne
 8008764:	4619      	movne	r1, r3
 8008766:	4610      	movne	r0, r2
 8008768:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800876c:	bf1c      	itt	ne
 800876e:	460b      	movne	r3, r1
 8008770:	4602      	movne	r2, r0
 8008772:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8008776:	bf06      	itte	eq
 8008778:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800877c:	ea91 0f03 	teqeq	r1, r3
 8008780:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8008784:	bd30      	pop	{r4, r5, pc}
 8008786:	bf00      	nop

08008788 <__aeabi_ui2d>:
 8008788:	f090 0f00 	teq	r0, #0
 800878c:	bf04      	itt	eq
 800878e:	2100      	moveq	r1, #0
 8008790:	4770      	bxeq	lr
 8008792:	b530      	push	{r4, r5, lr}
 8008794:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8008798:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800879c:	f04f 0500 	mov.w	r5, #0
 80087a0:	f04f 0100 	mov.w	r1, #0
 80087a4:	e750      	b.n	8008648 <__adddf3+0x138>
 80087a6:	bf00      	nop

080087a8 <__aeabi_i2d>:
 80087a8:	f090 0f00 	teq	r0, #0
 80087ac:	bf04      	itt	eq
 80087ae:	2100      	moveq	r1, #0
 80087b0:	4770      	bxeq	lr
 80087b2:	b530      	push	{r4, r5, lr}
 80087b4:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80087b8:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80087bc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80087c0:	bf48      	it	mi
 80087c2:	4240      	negmi	r0, r0
 80087c4:	f04f 0100 	mov.w	r1, #0
 80087c8:	e73e      	b.n	8008648 <__adddf3+0x138>
 80087ca:	bf00      	nop

080087cc <__aeabi_f2d>:
 80087cc:	0042      	lsls	r2, r0, #1
 80087ce:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80087d2:	ea4f 0131 	mov.w	r1, r1, rrx
 80087d6:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80087da:	bf1f      	itttt	ne
 80087dc:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80087e0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80087e4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80087e8:	4770      	bxne	lr
 80087ea:	f092 0f00 	teq	r2, #0
 80087ee:	bf14      	ite	ne
 80087f0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80087f4:	4770      	bxeq	lr
 80087f6:	b530      	push	{r4, r5, lr}
 80087f8:	f44f 7460 	mov.w	r4, #896	; 0x380
 80087fc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008800:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8008804:	e720      	b.n	8008648 <__adddf3+0x138>
 8008806:	bf00      	nop

08008808 <__aeabi_ul2d>:
 8008808:	ea50 0201 	orrs.w	r2, r0, r1
 800880c:	bf08      	it	eq
 800880e:	4770      	bxeq	lr
 8008810:	b530      	push	{r4, r5, lr}
 8008812:	f04f 0500 	mov.w	r5, #0
 8008816:	e00a      	b.n	800882e <__aeabi_l2d+0x16>

08008818 <__aeabi_l2d>:
 8008818:	ea50 0201 	orrs.w	r2, r0, r1
 800881c:	bf08      	it	eq
 800881e:	4770      	bxeq	lr
 8008820:	b530      	push	{r4, r5, lr}
 8008822:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8008826:	d502      	bpl.n	800882e <__aeabi_l2d+0x16>
 8008828:	4240      	negs	r0, r0
 800882a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800882e:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8008832:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8008836:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800883a:	f43f aedc 	beq.w	80085f6 <__adddf3+0xe6>
 800883e:	f04f 0203 	mov.w	r2, #3
 8008842:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8008846:	bf18      	it	ne
 8008848:	3203      	addne	r2, #3
 800884a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800884e:	bf18      	it	ne
 8008850:	3203      	addne	r2, #3
 8008852:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8008856:	f1c2 0320 	rsb	r3, r2, #32
 800885a:	fa00 fc03 	lsl.w	ip, r0, r3
 800885e:	fa20 f002 	lsr.w	r0, r0, r2
 8008862:	fa01 fe03 	lsl.w	lr, r1, r3
 8008866:	ea40 000e 	orr.w	r0, r0, lr
 800886a:	fa21 f102 	lsr.w	r1, r1, r2
 800886e:	4414      	add	r4, r2
 8008870:	e6c1      	b.n	80085f6 <__adddf3+0xe6>
 8008872:	bf00      	nop

08008874 <__aeabi_dmul>:
 8008874:	b570      	push	{r4, r5, r6, lr}
 8008876:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800887a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800887e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8008882:	bf1d      	ittte	ne
 8008884:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8008888:	ea94 0f0c 	teqne	r4, ip
 800888c:	ea95 0f0c 	teqne	r5, ip
 8008890:	f000 f8de 	bleq	8008a50 <__aeabi_dmul+0x1dc>
 8008894:	442c      	add	r4, r5
 8008896:	ea81 0603 	eor.w	r6, r1, r3
 800889a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800889e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80088a2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80088a6:	bf18      	it	ne
 80088a8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80088ac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80088b0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80088b4:	d038      	beq.n	8008928 <__aeabi_dmul+0xb4>
 80088b6:	fba0 ce02 	umull	ip, lr, r0, r2
 80088ba:	f04f 0500 	mov.w	r5, #0
 80088be:	fbe1 e502 	umlal	lr, r5, r1, r2
 80088c2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80088c6:	fbe0 e503 	umlal	lr, r5, r0, r3
 80088ca:	f04f 0600 	mov.w	r6, #0
 80088ce:	fbe1 5603 	umlal	r5, r6, r1, r3
 80088d2:	f09c 0f00 	teq	ip, #0
 80088d6:	bf18      	it	ne
 80088d8:	f04e 0e01 	orrne.w	lr, lr, #1
 80088dc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80088e0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80088e4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80088e8:	d204      	bcs.n	80088f4 <__aeabi_dmul+0x80>
 80088ea:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80088ee:	416d      	adcs	r5, r5
 80088f0:	eb46 0606 	adc.w	r6, r6, r6
 80088f4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80088f8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80088fc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8008900:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8008904:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8008908:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800890c:	bf88      	it	hi
 800890e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8008912:	d81e      	bhi.n	8008952 <__aeabi_dmul+0xde>
 8008914:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8008918:	bf08      	it	eq
 800891a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800891e:	f150 0000 	adcs.w	r0, r0, #0
 8008922:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8008926:	bd70      	pop	{r4, r5, r6, pc}
 8008928:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 800892c:	ea46 0101 	orr.w	r1, r6, r1
 8008930:	ea40 0002 	orr.w	r0, r0, r2
 8008934:	ea81 0103 	eor.w	r1, r1, r3
 8008938:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 800893c:	bfc2      	ittt	gt
 800893e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8008942:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8008946:	bd70      	popgt	{r4, r5, r6, pc}
 8008948:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800894c:	f04f 0e00 	mov.w	lr, #0
 8008950:	3c01      	subs	r4, #1
 8008952:	f300 80ab 	bgt.w	8008aac <__aeabi_dmul+0x238>
 8008956:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800895a:	bfde      	ittt	le
 800895c:	2000      	movle	r0, #0
 800895e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8008962:	bd70      	pople	{r4, r5, r6, pc}
 8008964:	f1c4 0400 	rsb	r4, r4, #0
 8008968:	3c20      	subs	r4, #32
 800896a:	da35      	bge.n	80089d8 <__aeabi_dmul+0x164>
 800896c:	340c      	adds	r4, #12
 800896e:	dc1b      	bgt.n	80089a8 <__aeabi_dmul+0x134>
 8008970:	f104 0414 	add.w	r4, r4, #20
 8008974:	f1c4 0520 	rsb	r5, r4, #32
 8008978:	fa00 f305 	lsl.w	r3, r0, r5
 800897c:	fa20 f004 	lsr.w	r0, r0, r4
 8008980:	fa01 f205 	lsl.w	r2, r1, r5
 8008984:	ea40 0002 	orr.w	r0, r0, r2
 8008988:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 800898c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8008990:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8008994:	fa21 f604 	lsr.w	r6, r1, r4
 8008998:	eb42 0106 	adc.w	r1, r2, r6
 800899c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80089a0:	bf08      	it	eq
 80089a2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80089a6:	bd70      	pop	{r4, r5, r6, pc}
 80089a8:	f1c4 040c 	rsb	r4, r4, #12
 80089ac:	f1c4 0520 	rsb	r5, r4, #32
 80089b0:	fa00 f304 	lsl.w	r3, r0, r4
 80089b4:	fa20 f005 	lsr.w	r0, r0, r5
 80089b8:	fa01 f204 	lsl.w	r2, r1, r4
 80089bc:	ea40 0002 	orr.w	r0, r0, r2
 80089c0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80089c4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80089c8:	f141 0100 	adc.w	r1, r1, #0
 80089cc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80089d0:	bf08      	it	eq
 80089d2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80089d6:	bd70      	pop	{r4, r5, r6, pc}
 80089d8:	f1c4 0520 	rsb	r5, r4, #32
 80089dc:	fa00 f205 	lsl.w	r2, r0, r5
 80089e0:	ea4e 0e02 	orr.w	lr, lr, r2
 80089e4:	fa20 f304 	lsr.w	r3, r0, r4
 80089e8:	fa01 f205 	lsl.w	r2, r1, r5
 80089ec:	ea43 0302 	orr.w	r3, r3, r2
 80089f0:	fa21 f004 	lsr.w	r0, r1, r4
 80089f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80089f8:	fa21 f204 	lsr.w	r2, r1, r4
 80089fc:	ea20 0002 	bic.w	r0, r0, r2
 8008a00:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8008a04:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8008a08:	bf08      	it	eq
 8008a0a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8008a0e:	bd70      	pop	{r4, r5, r6, pc}
 8008a10:	f094 0f00 	teq	r4, #0
 8008a14:	d10f      	bne.n	8008a36 <__aeabi_dmul+0x1c2>
 8008a16:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8008a1a:	0040      	lsls	r0, r0, #1
 8008a1c:	eb41 0101 	adc.w	r1, r1, r1
 8008a20:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8008a24:	bf08      	it	eq
 8008a26:	3c01      	subeq	r4, #1
 8008a28:	d0f7      	beq.n	8008a1a <__aeabi_dmul+0x1a6>
 8008a2a:	ea41 0106 	orr.w	r1, r1, r6
 8008a2e:	f095 0f00 	teq	r5, #0
 8008a32:	bf18      	it	ne
 8008a34:	4770      	bxne	lr
 8008a36:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8008a3a:	0052      	lsls	r2, r2, #1
 8008a3c:	eb43 0303 	adc.w	r3, r3, r3
 8008a40:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8008a44:	bf08      	it	eq
 8008a46:	3d01      	subeq	r5, #1
 8008a48:	d0f7      	beq.n	8008a3a <__aeabi_dmul+0x1c6>
 8008a4a:	ea43 0306 	orr.w	r3, r3, r6
 8008a4e:	4770      	bx	lr
 8008a50:	ea94 0f0c 	teq	r4, ip
 8008a54:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8008a58:	bf18      	it	ne
 8008a5a:	ea95 0f0c 	teqne	r5, ip
 8008a5e:	d00c      	beq.n	8008a7a <__aeabi_dmul+0x206>
 8008a60:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8008a64:	bf18      	it	ne
 8008a66:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8008a6a:	d1d1      	bne.n	8008a10 <__aeabi_dmul+0x19c>
 8008a6c:	ea81 0103 	eor.w	r1, r1, r3
 8008a70:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8008a74:	f04f 0000 	mov.w	r0, #0
 8008a78:	bd70      	pop	{r4, r5, r6, pc}
 8008a7a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8008a7e:	bf06      	itte	eq
 8008a80:	4610      	moveq	r0, r2
 8008a82:	4619      	moveq	r1, r3
 8008a84:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8008a88:	d019      	beq.n	8008abe <__aeabi_dmul+0x24a>
 8008a8a:	ea94 0f0c 	teq	r4, ip
 8008a8e:	d102      	bne.n	8008a96 <__aeabi_dmul+0x222>
 8008a90:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8008a94:	d113      	bne.n	8008abe <__aeabi_dmul+0x24a>
 8008a96:	ea95 0f0c 	teq	r5, ip
 8008a9a:	d105      	bne.n	8008aa8 <__aeabi_dmul+0x234>
 8008a9c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8008aa0:	bf1c      	itt	ne
 8008aa2:	4610      	movne	r0, r2
 8008aa4:	4619      	movne	r1, r3
 8008aa6:	d10a      	bne.n	8008abe <__aeabi_dmul+0x24a>
 8008aa8:	ea81 0103 	eor.w	r1, r1, r3
 8008aac:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8008ab0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8008ab4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008ab8:	f04f 0000 	mov.w	r0, #0
 8008abc:	bd70      	pop	{r4, r5, r6, pc}
 8008abe:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8008ac2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 8008ac6:	bd70      	pop	{r4, r5, r6, pc}

08008ac8 <__aeabi_ddiv>:
 8008ac8:	b570      	push	{r4, r5, r6, lr}
 8008aca:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8008ace:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8008ad2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8008ad6:	bf1d      	ittte	ne
 8008ad8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8008adc:	ea94 0f0c 	teqne	r4, ip
 8008ae0:	ea95 0f0c 	teqne	r5, ip
 8008ae4:	f000 f8a7 	bleq	8008c36 <__aeabi_ddiv+0x16e>
 8008ae8:	eba4 0405 	sub.w	r4, r4, r5
 8008aec:	ea81 0e03 	eor.w	lr, r1, r3
 8008af0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8008af4:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8008af8:	f000 8088 	beq.w	8008c0c <__aeabi_ddiv+0x144>
 8008afc:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8008b00:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8008b04:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8008b08:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8008b0c:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8008b10:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8008b14:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8008b18:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8008b1c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8008b20:	429d      	cmp	r5, r3
 8008b22:	bf08      	it	eq
 8008b24:	4296      	cmpeq	r6, r2
 8008b26:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8008b2a:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8008b2e:	d202      	bcs.n	8008b36 <__aeabi_ddiv+0x6e>
 8008b30:	085b      	lsrs	r3, r3, #1
 8008b32:	ea4f 0232 	mov.w	r2, r2, rrx
 8008b36:	1ab6      	subs	r6, r6, r2
 8008b38:	eb65 0503 	sbc.w	r5, r5, r3
 8008b3c:	085b      	lsrs	r3, r3, #1
 8008b3e:	ea4f 0232 	mov.w	r2, r2, rrx
 8008b42:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8008b46:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8008b4a:	ebb6 0e02 	subs.w	lr, r6, r2
 8008b4e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8008b52:	bf22      	ittt	cs
 8008b54:	1ab6      	subcs	r6, r6, r2
 8008b56:	4675      	movcs	r5, lr
 8008b58:	ea40 000c 	orrcs.w	r0, r0, ip
 8008b5c:	085b      	lsrs	r3, r3, #1
 8008b5e:	ea4f 0232 	mov.w	r2, r2, rrx
 8008b62:	ebb6 0e02 	subs.w	lr, r6, r2
 8008b66:	eb75 0e03 	sbcs.w	lr, r5, r3
 8008b6a:	bf22      	ittt	cs
 8008b6c:	1ab6      	subcs	r6, r6, r2
 8008b6e:	4675      	movcs	r5, lr
 8008b70:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8008b74:	085b      	lsrs	r3, r3, #1
 8008b76:	ea4f 0232 	mov.w	r2, r2, rrx
 8008b7a:	ebb6 0e02 	subs.w	lr, r6, r2
 8008b7e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8008b82:	bf22      	ittt	cs
 8008b84:	1ab6      	subcs	r6, r6, r2
 8008b86:	4675      	movcs	r5, lr
 8008b88:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8008b8c:	085b      	lsrs	r3, r3, #1
 8008b8e:	ea4f 0232 	mov.w	r2, r2, rrx
 8008b92:	ebb6 0e02 	subs.w	lr, r6, r2
 8008b96:	eb75 0e03 	sbcs.w	lr, r5, r3
 8008b9a:	bf22      	ittt	cs
 8008b9c:	1ab6      	subcs	r6, r6, r2
 8008b9e:	4675      	movcs	r5, lr
 8008ba0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8008ba4:	ea55 0e06 	orrs.w	lr, r5, r6
 8008ba8:	d018      	beq.n	8008bdc <__aeabi_ddiv+0x114>
 8008baa:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8008bae:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8008bb2:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8008bb6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8008bba:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8008bbe:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8008bc2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8008bc6:	d1c0      	bne.n	8008b4a <__aeabi_ddiv+0x82>
 8008bc8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8008bcc:	d10b      	bne.n	8008be6 <__aeabi_ddiv+0x11e>
 8008bce:	ea41 0100 	orr.w	r1, r1, r0
 8008bd2:	f04f 0000 	mov.w	r0, #0
 8008bd6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8008bda:	e7b6      	b.n	8008b4a <__aeabi_ddiv+0x82>
 8008bdc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8008be0:	bf04      	itt	eq
 8008be2:	4301      	orreq	r1, r0
 8008be4:	2000      	moveq	r0, #0
 8008be6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8008bea:	bf88      	it	hi
 8008bec:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8008bf0:	f63f aeaf 	bhi.w	8008952 <__aeabi_dmul+0xde>
 8008bf4:	ebb5 0c03 	subs.w	ip, r5, r3
 8008bf8:	bf04      	itt	eq
 8008bfa:	ebb6 0c02 	subseq.w	ip, r6, r2
 8008bfe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8008c02:	f150 0000 	adcs.w	r0, r0, #0
 8008c06:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8008c0a:	bd70      	pop	{r4, r5, r6, pc}
 8008c0c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8008c10:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8008c14:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8008c18:	bfc2      	ittt	gt
 8008c1a:	ebd4 050c 	rsbsgt	r5, r4, ip
 8008c1e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8008c22:	bd70      	popgt	{r4, r5, r6, pc}
 8008c24:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8008c28:	f04f 0e00 	mov.w	lr, #0
 8008c2c:	3c01      	subs	r4, #1
 8008c2e:	e690      	b.n	8008952 <__aeabi_dmul+0xde>
 8008c30:	ea45 0e06 	orr.w	lr, r5, r6
 8008c34:	e68d      	b.n	8008952 <__aeabi_dmul+0xde>
 8008c36:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8008c3a:	ea94 0f0c 	teq	r4, ip
 8008c3e:	bf08      	it	eq
 8008c40:	ea95 0f0c 	teqeq	r5, ip
 8008c44:	f43f af3b 	beq.w	8008abe <__aeabi_dmul+0x24a>
 8008c48:	ea94 0f0c 	teq	r4, ip
 8008c4c:	d10a      	bne.n	8008c64 <__aeabi_ddiv+0x19c>
 8008c4e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8008c52:	f47f af34 	bne.w	8008abe <__aeabi_dmul+0x24a>
 8008c56:	ea95 0f0c 	teq	r5, ip
 8008c5a:	f47f af25 	bne.w	8008aa8 <__aeabi_dmul+0x234>
 8008c5e:	4610      	mov	r0, r2
 8008c60:	4619      	mov	r1, r3
 8008c62:	e72c      	b.n	8008abe <__aeabi_dmul+0x24a>
 8008c64:	ea95 0f0c 	teq	r5, ip
 8008c68:	d106      	bne.n	8008c78 <__aeabi_ddiv+0x1b0>
 8008c6a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8008c6e:	f43f aefd 	beq.w	8008a6c <__aeabi_dmul+0x1f8>
 8008c72:	4610      	mov	r0, r2
 8008c74:	4619      	mov	r1, r3
 8008c76:	e722      	b.n	8008abe <__aeabi_dmul+0x24a>
 8008c78:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8008c7c:	bf18      	it	ne
 8008c7e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8008c82:	f47f aec5 	bne.w	8008a10 <__aeabi_dmul+0x19c>
 8008c86:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8008c8a:	f47f af0d 	bne.w	8008aa8 <__aeabi_dmul+0x234>
 8008c8e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8008c92:	f47f aeeb 	bne.w	8008a6c <__aeabi_dmul+0x1f8>
 8008c96:	e712      	b.n	8008abe <__aeabi_dmul+0x24a>

08008c98 <__gedf2>:
 8008c98:	f04f 3cff 	mov.w	ip, #4294967295
 8008c9c:	e006      	b.n	8008cac <__cmpdf2+0x4>
 8008c9e:	bf00      	nop

08008ca0 <__ledf2>:
 8008ca0:	f04f 0c01 	mov.w	ip, #1
 8008ca4:	e002      	b.n	8008cac <__cmpdf2+0x4>
 8008ca6:	bf00      	nop

08008ca8 <__cmpdf2>:
 8008ca8:	f04f 0c01 	mov.w	ip, #1
 8008cac:	f84d cd04 	str.w	ip, [sp, #-4]!
 8008cb0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8008cb4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8008cb8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8008cbc:	bf18      	it	ne
 8008cbe:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8008cc2:	d01b      	beq.n	8008cfc <__cmpdf2+0x54>
 8008cc4:	b001      	add	sp, #4
 8008cc6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8008cca:	bf0c      	ite	eq
 8008ccc:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8008cd0:	ea91 0f03 	teqne	r1, r3
 8008cd4:	bf02      	ittt	eq
 8008cd6:	ea90 0f02 	teqeq	r0, r2
 8008cda:	2000      	moveq	r0, #0
 8008cdc:	4770      	bxeq	lr
 8008cde:	f110 0f00 	cmn.w	r0, #0
 8008ce2:	ea91 0f03 	teq	r1, r3
 8008ce6:	bf58      	it	pl
 8008ce8:	4299      	cmppl	r1, r3
 8008cea:	bf08      	it	eq
 8008cec:	4290      	cmpeq	r0, r2
 8008cee:	bf2c      	ite	cs
 8008cf0:	17d8      	asrcs	r0, r3, #31
 8008cf2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8008cf6:	f040 0001 	orr.w	r0, r0, #1
 8008cfa:	4770      	bx	lr
 8008cfc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8008d00:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8008d04:	d102      	bne.n	8008d0c <__cmpdf2+0x64>
 8008d06:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8008d0a:	d107      	bne.n	8008d1c <__cmpdf2+0x74>
 8008d0c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8008d10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8008d14:	d1d6      	bne.n	8008cc4 <__cmpdf2+0x1c>
 8008d16:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8008d1a:	d0d3      	beq.n	8008cc4 <__cmpdf2+0x1c>
 8008d1c:	f85d 0b04 	ldr.w	r0, [sp], #4
 8008d20:	4770      	bx	lr
 8008d22:	bf00      	nop

08008d24 <__aeabi_cdrcmple>:
 8008d24:	4684      	mov	ip, r0
 8008d26:	4610      	mov	r0, r2
 8008d28:	4662      	mov	r2, ip
 8008d2a:	468c      	mov	ip, r1
 8008d2c:	4619      	mov	r1, r3
 8008d2e:	4663      	mov	r3, ip
 8008d30:	e000      	b.n	8008d34 <__aeabi_cdcmpeq>
 8008d32:	bf00      	nop

08008d34 <__aeabi_cdcmpeq>:
 8008d34:	b501      	push	{r0, lr}
 8008d36:	f7ff ffb7 	bl	8008ca8 <__cmpdf2>
 8008d3a:	2800      	cmp	r0, #0
 8008d3c:	bf48      	it	mi
 8008d3e:	f110 0f00 	cmnmi.w	r0, #0
 8008d42:	bd01      	pop	{r0, pc}

08008d44 <__aeabi_dcmpeq>:
 8008d44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8008d48:	f7ff fff4 	bl	8008d34 <__aeabi_cdcmpeq>
 8008d4c:	bf0c      	ite	eq
 8008d4e:	2001      	moveq	r0, #1
 8008d50:	2000      	movne	r0, #0
 8008d52:	f85d fb08 	ldr.w	pc, [sp], #8
 8008d56:	bf00      	nop

08008d58 <__aeabi_dcmplt>:
 8008d58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8008d5c:	f7ff ffea 	bl	8008d34 <__aeabi_cdcmpeq>
 8008d60:	bf34      	ite	cc
 8008d62:	2001      	movcc	r0, #1
 8008d64:	2000      	movcs	r0, #0
 8008d66:	f85d fb08 	ldr.w	pc, [sp], #8
 8008d6a:	bf00      	nop

08008d6c <__aeabi_dcmple>:
 8008d6c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8008d70:	f7ff ffe0 	bl	8008d34 <__aeabi_cdcmpeq>
 8008d74:	bf94      	ite	ls
 8008d76:	2001      	movls	r0, #1
 8008d78:	2000      	movhi	r0, #0
 8008d7a:	f85d fb08 	ldr.w	pc, [sp], #8
 8008d7e:	bf00      	nop

08008d80 <__aeabi_dcmpge>:
 8008d80:	f84d ed08 	str.w	lr, [sp, #-8]!
 8008d84:	f7ff ffce 	bl	8008d24 <__aeabi_cdrcmple>
 8008d88:	bf94      	ite	ls
 8008d8a:	2001      	movls	r0, #1
 8008d8c:	2000      	movhi	r0, #0
 8008d8e:	f85d fb08 	ldr.w	pc, [sp], #8
 8008d92:	bf00      	nop

08008d94 <__aeabi_dcmpgt>:
 8008d94:	f84d ed08 	str.w	lr, [sp, #-8]!
 8008d98:	f7ff ffc4 	bl	8008d24 <__aeabi_cdrcmple>
 8008d9c:	bf34      	ite	cc
 8008d9e:	2001      	movcc	r0, #1
 8008da0:	2000      	movcs	r0, #0
 8008da2:	f85d fb08 	ldr.w	pc, [sp], #8
 8008da6:	bf00      	nop

08008da8 <__aeabi_dcmpun>:
 8008da8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8008dac:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8008db0:	d102      	bne.n	8008db8 <__aeabi_dcmpun+0x10>
 8008db2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8008db6:	d10a      	bne.n	8008dce <__aeabi_dcmpun+0x26>
 8008db8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8008dbc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8008dc0:	d102      	bne.n	8008dc8 <__aeabi_dcmpun+0x20>
 8008dc2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8008dc6:	d102      	bne.n	8008dce <__aeabi_dcmpun+0x26>
 8008dc8:	f04f 0000 	mov.w	r0, #0
 8008dcc:	4770      	bx	lr
 8008dce:	f04f 0001 	mov.w	r0, #1
 8008dd2:	4770      	bx	lr

08008dd4 <__aeabi_d2iz>:
 8008dd4:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8008dd8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8008ddc:	d215      	bcs.n	8008e0a <__aeabi_d2iz+0x36>
 8008dde:	d511      	bpl.n	8008e04 <__aeabi_d2iz+0x30>
 8008de0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8008de4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8008de8:	d912      	bls.n	8008e10 <__aeabi_d2iz+0x3c>
 8008dea:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8008dee:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8008df2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8008df6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8008dfa:	fa23 f002 	lsr.w	r0, r3, r2
 8008dfe:	bf18      	it	ne
 8008e00:	4240      	negne	r0, r0
 8008e02:	4770      	bx	lr
 8008e04:	f04f 0000 	mov.w	r0, #0
 8008e08:	4770      	bx	lr
 8008e0a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8008e0e:	d105      	bne.n	8008e1c <__aeabi_d2iz+0x48>
 8008e10:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8008e14:	bf08      	it	eq
 8008e16:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8008e1a:	4770      	bx	lr
 8008e1c:	f04f 0000 	mov.w	r0, #0
 8008e20:	4770      	bx	lr
 8008e22:	bf00      	nop

08008e24 <__aeabi_uldivmod>:
 8008e24:	b953      	cbnz	r3, 8008e3c <__aeabi_uldivmod+0x18>
 8008e26:	b94a      	cbnz	r2, 8008e3c <__aeabi_uldivmod+0x18>
 8008e28:	2900      	cmp	r1, #0
 8008e2a:	bf08      	it	eq
 8008e2c:	2800      	cmpeq	r0, #0
 8008e2e:	bf1c      	itt	ne
 8008e30:	f04f 31ff 	movne.w	r1, #4294967295
 8008e34:	f04f 30ff 	movne.w	r0, #4294967295
 8008e38:	f001 b8ec 	b.w	800a014 <__aeabi_idiv0>
 8008e3c:	f1ad 0c08 	sub.w	ip, sp, #8
 8008e40:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8008e44:	f000 f806 	bl	8008e54 <__udivmoddi4>
 8008e48:	f8dd e004 	ldr.w	lr, [sp, #4]
 8008e4c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8008e50:	b004      	add	sp, #16
 8008e52:	4770      	bx	lr

08008e54 <__udivmoddi4>:
 8008e54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008e58:	468c      	mov	ip, r1
 8008e5a:	460e      	mov	r6, r1
 8008e5c:	4604      	mov	r4, r0
 8008e5e:	9d08      	ldr	r5, [sp, #32]
 8008e60:	2b00      	cmp	r3, #0
 8008e62:	d150      	bne.n	8008f06 <__udivmoddi4+0xb2>
 8008e64:	428a      	cmp	r2, r1
 8008e66:	4617      	mov	r7, r2
 8008e68:	d96c      	bls.n	8008f44 <__udivmoddi4+0xf0>
 8008e6a:	fab2 fe82 	clz	lr, r2
 8008e6e:	f1be 0f00 	cmp.w	lr, #0
 8008e72:	d00b      	beq.n	8008e8c <__udivmoddi4+0x38>
 8008e74:	f1ce 0420 	rsb	r4, lr, #32
 8008e78:	fa20 f404 	lsr.w	r4, r0, r4
 8008e7c:	fa01 f60e 	lsl.w	r6, r1, lr
 8008e80:	ea44 0c06 	orr.w	ip, r4, r6
 8008e84:	fa02 f70e 	lsl.w	r7, r2, lr
 8008e88:	fa00 f40e 	lsl.w	r4, r0, lr
 8008e8c:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8008e90:	0c22      	lsrs	r2, r4, #16
 8008e92:	fbbc f0f9 	udiv	r0, ip, r9
 8008e96:	fa1f f887 	uxth.w	r8, r7
 8008e9a:	fb09 c610 	mls	r6, r9, r0, ip
 8008e9e:	ea42 4606 	orr.w	r6, r2, r6, lsl #16
 8008ea2:	fb00 f308 	mul.w	r3, r0, r8
 8008ea6:	42b3      	cmp	r3, r6
 8008ea8:	d909      	bls.n	8008ebe <__udivmoddi4+0x6a>
 8008eaa:	19f6      	adds	r6, r6, r7
 8008eac:	f100 32ff 	add.w	r2, r0, #4294967295
 8008eb0:	f080 8122 	bcs.w	80090f8 <__udivmoddi4+0x2a4>
 8008eb4:	42b3      	cmp	r3, r6
 8008eb6:	f240 811f 	bls.w	80090f8 <__udivmoddi4+0x2a4>
 8008eba:	3802      	subs	r0, #2
 8008ebc:	443e      	add	r6, r7
 8008ebe:	1af6      	subs	r6, r6, r3
 8008ec0:	b2a2      	uxth	r2, r4
 8008ec2:	fbb6 f3f9 	udiv	r3, r6, r9
 8008ec6:	fb09 6613 	mls	r6, r9, r3, r6
 8008eca:	ea42 4406 	orr.w	r4, r2, r6, lsl #16
 8008ece:	fb03 f808 	mul.w	r8, r3, r8
 8008ed2:	45a0      	cmp	r8, r4
 8008ed4:	d909      	bls.n	8008eea <__udivmoddi4+0x96>
 8008ed6:	19e4      	adds	r4, r4, r7
 8008ed8:	f103 32ff 	add.w	r2, r3, #4294967295
 8008edc:	f080 810a 	bcs.w	80090f4 <__udivmoddi4+0x2a0>
 8008ee0:	45a0      	cmp	r8, r4
 8008ee2:	f240 8107 	bls.w	80090f4 <__udivmoddi4+0x2a0>
 8008ee6:	3b02      	subs	r3, #2
 8008ee8:	443c      	add	r4, r7
 8008eea:	ebc8 0404 	rsb	r4, r8, r4
 8008eee:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8008ef2:	2100      	movs	r1, #0
 8008ef4:	2d00      	cmp	r5, #0
 8008ef6:	d062      	beq.n	8008fbe <__udivmoddi4+0x16a>
 8008ef8:	fa24 f40e 	lsr.w	r4, r4, lr
 8008efc:	2300      	movs	r3, #0
 8008efe:	602c      	str	r4, [r5, #0]
 8008f00:	606b      	str	r3, [r5, #4]
 8008f02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008f06:	428b      	cmp	r3, r1
 8008f08:	d907      	bls.n	8008f1a <__udivmoddi4+0xc6>
 8008f0a:	2d00      	cmp	r5, #0
 8008f0c:	d055      	beq.n	8008fba <__udivmoddi4+0x166>
 8008f0e:	2100      	movs	r1, #0
 8008f10:	e885 0041 	stmia.w	r5, {r0, r6}
 8008f14:	4608      	mov	r0, r1
 8008f16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008f1a:	fab3 f183 	clz	r1, r3
 8008f1e:	2900      	cmp	r1, #0
 8008f20:	f040 8090 	bne.w	8009044 <__udivmoddi4+0x1f0>
 8008f24:	42b3      	cmp	r3, r6
 8008f26:	d302      	bcc.n	8008f2e <__udivmoddi4+0xda>
 8008f28:	4282      	cmp	r2, r0
 8008f2a:	f200 80f8 	bhi.w	800911e <__udivmoddi4+0x2ca>
 8008f2e:	1a84      	subs	r4, r0, r2
 8008f30:	eb66 0603 	sbc.w	r6, r6, r3
 8008f34:	2001      	movs	r0, #1
 8008f36:	46b4      	mov	ip, r6
 8008f38:	2d00      	cmp	r5, #0
 8008f3a:	d040      	beq.n	8008fbe <__udivmoddi4+0x16a>
 8008f3c:	e885 1010 	stmia.w	r5, {r4, ip}
 8008f40:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008f44:	b912      	cbnz	r2, 8008f4c <__udivmoddi4+0xf8>
 8008f46:	2701      	movs	r7, #1
 8008f48:	fbb7 f7f2 	udiv	r7, r7, r2
 8008f4c:	fab7 fe87 	clz	lr, r7
 8008f50:	f1be 0f00 	cmp.w	lr, #0
 8008f54:	d135      	bne.n	8008fc2 <__udivmoddi4+0x16e>
 8008f56:	1bf3      	subs	r3, r6, r7
 8008f58:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8008f5c:	fa1f fc87 	uxth.w	ip, r7
 8008f60:	2101      	movs	r1, #1
 8008f62:	fbb3 f0f8 	udiv	r0, r3, r8
 8008f66:	0c22      	lsrs	r2, r4, #16
 8008f68:	fb08 3610 	mls	r6, r8, r0, r3
 8008f6c:	ea42 4606 	orr.w	r6, r2, r6, lsl #16
 8008f70:	fb0c f300 	mul.w	r3, ip, r0
 8008f74:	42b3      	cmp	r3, r6
 8008f76:	d907      	bls.n	8008f88 <__udivmoddi4+0x134>
 8008f78:	19f6      	adds	r6, r6, r7
 8008f7a:	f100 32ff 	add.w	r2, r0, #4294967295
 8008f7e:	d202      	bcs.n	8008f86 <__udivmoddi4+0x132>
 8008f80:	42b3      	cmp	r3, r6
 8008f82:	f200 80ce 	bhi.w	8009122 <__udivmoddi4+0x2ce>
 8008f86:	4610      	mov	r0, r2
 8008f88:	1af6      	subs	r6, r6, r3
 8008f8a:	b2a2      	uxth	r2, r4
 8008f8c:	fbb6 f3f8 	udiv	r3, r6, r8
 8008f90:	fb08 6613 	mls	r6, r8, r3, r6
 8008f94:	ea42 4406 	orr.w	r4, r2, r6, lsl #16
 8008f98:	fb0c fc03 	mul.w	ip, ip, r3
 8008f9c:	45a4      	cmp	ip, r4
 8008f9e:	d907      	bls.n	8008fb0 <__udivmoddi4+0x15c>
 8008fa0:	19e4      	adds	r4, r4, r7
 8008fa2:	f103 32ff 	add.w	r2, r3, #4294967295
 8008fa6:	d202      	bcs.n	8008fae <__udivmoddi4+0x15a>
 8008fa8:	45a4      	cmp	ip, r4
 8008faa:	f200 80b5 	bhi.w	8009118 <__udivmoddi4+0x2c4>
 8008fae:	4613      	mov	r3, r2
 8008fb0:	ebcc 0404 	rsb	r4, ip, r4
 8008fb4:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8008fb8:	e79c      	b.n	8008ef4 <__udivmoddi4+0xa0>
 8008fba:	4629      	mov	r1, r5
 8008fbc:	4628      	mov	r0, r5
 8008fbe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008fc2:	f1ce 0120 	rsb	r1, lr, #32
 8008fc6:	fa06 f30e 	lsl.w	r3, r6, lr
 8008fca:	fa07 f70e 	lsl.w	r7, r7, lr
 8008fce:	fa20 f901 	lsr.w	r9, r0, r1
 8008fd2:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8008fd6:	40ce      	lsrs	r6, r1
 8008fd8:	ea49 0903 	orr.w	r9, r9, r3
 8008fdc:	fbb6 faf8 	udiv	sl, r6, r8
 8008fe0:	ea4f 4419 	mov.w	r4, r9, lsr #16
 8008fe4:	fb08 661a 	mls	r6, r8, sl, r6
 8008fe8:	fa1f fc87 	uxth.w	ip, r7
 8008fec:	ea44 4306 	orr.w	r3, r4, r6, lsl #16
 8008ff0:	fb0a f20c 	mul.w	r2, sl, ip
 8008ff4:	429a      	cmp	r2, r3
 8008ff6:	fa00 f40e 	lsl.w	r4, r0, lr
 8008ffa:	d90a      	bls.n	8009012 <__udivmoddi4+0x1be>
 8008ffc:	19db      	adds	r3, r3, r7
 8008ffe:	f10a 31ff 	add.w	r1, sl, #4294967295
 8009002:	f080 8087 	bcs.w	8009114 <__udivmoddi4+0x2c0>
 8009006:	429a      	cmp	r2, r3
 8009008:	f240 8084 	bls.w	8009114 <__udivmoddi4+0x2c0>
 800900c:	f1aa 0a02 	sub.w	sl, sl, #2
 8009010:	443b      	add	r3, r7
 8009012:	1a9b      	subs	r3, r3, r2
 8009014:	fa1f f989 	uxth.w	r9, r9
 8009018:	fbb3 f1f8 	udiv	r1, r3, r8
 800901c:	fb08 3311 	mls	r3, r8, r1, r3
 8009020:	ea49 4303 	orr.w	r3, r9, r3, lsl #16
 8009024:	fb01 f60c 	mul.w	r6, r1, ip
 8009028:	429e      	cmp	r6, r3
 800902a:	d907      	bls.n	800903c <__udivmoddi4+0x1e8>
 800902c:	19db      	adds	r3, r3, r7
 800902e:	f101 32ff 	add.w	r2, r1, #4294967295
 8009032:	d26b      	bcs.n	800910c <__udivmoddi4+0x2b8>
 8009034:	429e      	cmp	r6, r3
 8009036:	d969      	bls.n	800910c <__udivmoddi4+0x2b8>
 8009038:	3902      	subs	r1, #2
 800903a:	443b      	add	r3, r7
 800903c:	1b9b      	subs	r3, r3, r6
 800903e:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 8009042:	e78e      	b.n	8008f62 <__udivmoddi4+0x10e>
 8009044:	f1c1 0e20 	rsb	lr, r1, #32
 8009048:	fa22 f40e 	lsr.w	r4, r2, lr
 800904c:	408b      	lsls	r3, r1
 800904e:	4323      	orrs	r3, r4
 8009050:	fa20 f70e 	lsr.w	r7, r0, lr
 8009054:	fa06 f401 	lsl.w	r4, r6, r1
 8009058:	ea4f 4c13 	mov.w	ip, r3, lsr #16
 800905c:	fa26 f60e 	lsr.w	r6, r6, lr
 8009060:	433c      	orrs	r4, r7
 8009062:	fbb6 f9fc 	udiv	r9, r6, ip
 8009066:	0c27      	lsrs	r7, r4, #16
 8009068:	fb0c 6619 	mls	r6, ip, r9, r6
 800906c:	fa1f f883 	uxth.w	r8, r3
 8009070:	ea47 4606 	orr.w	r6, r7, r6, lsl #16
 8009074:	fb09 f708 	mul.w	r7, r9, r8
 8009078:	42b7      	cmp	r7, r6
 800907a:	fa02 f201 	lsl.w	r2, r2, r1
 800907e:	fa00 fa01 	lsl.w	sl, r0, r1
 8009082:	d908      	bls.n	8009096 <__udivmoddi4+0x242>
 8009084:	18f6      	adds	r6, r6, r3
 8009086:	f109 30ff 	add.w	r0, r9, #4294967295
 800908a:	d241      	bcs.n	8009110 <__udivmoddi4+0x2bc>
 800908c:	42b7      	cmp	r7, r6
 800908e:	d93f      	bls.n	8009110 <__udivmoddi4+0x2bc>
 8009090:	f1a9 0902 	sub.w	r9, r9, #2
 8009094:	441e      	add	r6, r3
 8009096:	1bf6      	subs	r6, r6, r7
 8009098:	b2a0      	uxth	r0, r4
 800909a:	fbb6 f4fc 	udiv	r4, r6, ip
 800909e:	fb0c 6614 	mls	r6, ip, r4, r6
 80090a2:	ea40 4706 	orr.w	r7, r0, r6, lsl #16
 80090a6:	fb04 f808 	mul.w	r8, r4, r8
 80090aa:	45b8      	cmp	r8, r7
 80090ac:	d907      	bls.n	80090be <__udivmoddi4+0x26a>
 80090ae:	18ff      	adds	r7, r7, r3
 80090b0:	f104 30ff 	add.w	r0, r4, #4294967295
 80090b4:	d228      	bcs.n	8009108 <__udivmoddi4+0x2b4>
 80090b6:	45b8      	cmp	r8, r7
 80090b8:	d926      	bls.n	8009108 <__udivmoddi4+0x2b4>
 80090ba:	3c02      	subs	r4, #2
 80090bc:	441f      	add	r7, r3
 80090be:	ea44 4009 	orr.w	r0, r4, r9, lsl #16
 80090c2:	ebc8 0707 	rsb	r7, r8, r7
 80090c6:	fba0 8902 	umull	r8, r9, r0, r2
 80090ca:	454f      	cmp	r7, r9
 80090cc:	4644      	mov	r4, r8
 80090ce:	464e      	mov	r6, r9
 80090d0:	d314      	bcc.n	80090fc <__udivmoddi4+0x2a8>
 80090d2:	d029      	beq.n	8009128 <__udivmoddi4+0x2d4>
 80090d4:	b365      	cbz	r5, 8009130 <__udivmoddi4+0x2dc>
 80090d6:	ebba 0304 	subs.w	r3, sl, r4
 80090da:	eb67 0706 	sbc.w	r7, r7, r6
 80090de:	fa07 fe0e 	lsl.w	lr, r7, lr
 80090e2:	40cb      	lsrs	r3, r1
 80090e4:	40cf      	lsrs	r7, r1
 80090e6:	ea4e 0303 	orr.w	r3, lr, r3
 80090ea:	e885 0088 	stmia.w	r5, {r3, r7}
 80090ee:	2100      	movs	r1, #0
 80090f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80090f4:	4613      	mov	r3, r2
 80090f6:	e6f8      	b.n	8008eea <__udivmoddi4+0x96>
 80090f8:	4610      	mov	r0, r2
 80090fa:	e6e0      	b.n	8008ebe <__udivmoddi4+0x6a>
 80090fc:	ebb8 0402 	subs.w	r4, r8, r2
 8009100:	eb69 0603 	sbc.w	r6, r9, r3
 8009104:	3801      	subs	r0, #1
 8009106:	e7e5      	b.n	80090d4 <__udivmoddi4+0x280>
 8009108:	4604      	mov	r4, r0
 800910a:	e7d8      	b.n	80090be <__udivmoddi4+0x26a>
 800910c:	4611      	mov	r1, r2
 800910e:	e795      	b.n	800903c <__udivmoddi4+0x1e8>
 8009110:	4681      	mov	r9, r0
 8009112:	e7c0      	b.n	8009096 <__udivmoddi4+0x242>
 8009114:	468a      	mov	sl, r1
 8009116:	e77c      	b.n	8009012 <__udivmoddi4+0x1be>
 8009118:	3b02      	subs	r3, #2
 800911a:	443c      	add	r4, r7
 800911c:	e748      	b.n	8008fb0 <__udivmoddi4+0x15c>
 800911e:	4608      	mov	r0, r1
 8009120:	e70a      	b.n	8008f38 <__udivmoddi4+0xe4>
 8009122:	3802      	subs	r0, #2
 8009124:	443e      	add	r6, r7
 8009126:	e72f      	b.n	8008f88 <__udivmoddi4+0x134>
 8009128:	45c2      	cmp	sl, r8
 800912a:	d3e7      	bcc.n	80090fc <__udivmoddi4+0x2a8>
 800912c:	463e      	mov	r6, r7
 800912e:	e7d1      	b.n	80090d4 <__udivmoddi4+0x280>
 8009130:	4629      	mov	r1, r5
 8009132:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009136:	bf00      	nop

08009138 <selfrel_offset31>:
 8009138:	6803      	ldr	r3, [r0, #0]
 800913a:	005a      	lsls	r2, r3, #1
 800913c:	bf4c      	ite	mi
 800913e:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
 8009142:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
 8009146:	4418      	add	r0, r3
 8009148:	4770      	bx	lr
 800914a:	bf00      	nop

0800914c <search_EIT_table>:
 800914c:	b361      	cbz	r1, 80091a8 <search_EIT_table+0x5c>
 800914e:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009152:	f101 3aff 	add.w	sl, r1, #4294967295
 8009156:	4690      	mov	r8, r2
 8009158:	4606      	mov	r6, r0
 800915a:	46d1      	mov	r9, sl
 800915c:	2700      	movs	r7, #0
 800915e:	eb07 0409 	add.w	r4, r7, r9
 8009162:	eb04 74d4 	add.w	r4, r4, r4, lsr #31
 8009166:	1064      	asrs	r4, r4, #1
 8009168:	00e5      	lsls	r5, r4, #3
 800916a:	1971      	adds	r1, r6, r5
 800916c:	4608      	mov	r0, r1
 800916e:	f7ff ffe3 	bl	8009138 <selfrel_offset31>
 8009172:	45a2      	cmp	sl, r4
 8009174:	4683      	mov	fp, r0
 8009176:	f105 0008 	add.w	r0, r5, #8
 800917a:	4430      	add	r0, r6
 800917c:	d009      	beq.n	8009192 <search_EIT_table+0x46>
 800917e:	f7ff ffdb 	bl	8009138 <selfrel_offset31>
 8009182:	45c3      	cmp	fp, r8
 8009184:	f100 30ff 	add.w	r0, r0, #4294967295
 8009188:	d805      	bhi.n	8009196 <search_EIT_table+0x4a>
 800918a:	4540      	cmp	r0, r8
 800918c:	d209      	bcs.n	80091a2 <search_EIT_table+0x56>
 800918e:	1c67      	adds	r7, r4, #1
 8009190:	e7e5      	b.n	800915e <search_EIT_table+0x12>
 8009192:	45c3      	cmp	fp, r8
 8009194:	d905      	bls.n	80091a2 <search_EIT_table+0x56>
 8009196:	42a7      	cmp	r7, r4
 8009198:	d002      	beq.n	80091a0 <search_EIT_table+0x54>
 800919a:	f104 39ff 	add.w	r9, r4, #4294967295
 800919e:	e7de      	b.n	800915e <search_EIT_table+0x12>
 80091a0:	2100      	movs	r1, #0
 80091a2:	4608      	mov	r0, r1
 80091a4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80091a8:	4608      	mov	r0, r1
 80091aa:	4770      	bx	lr

080091ac <__gnu_unwind_get_pr_addr>:
 80091ac:	2801      	cmp	r0, #1
 80091ae:	d007      	beq.n	80091c0 <__gnu_unwind_get_pr_addr+0x14>
 80091b0:	2802      	cmp	r0, #2
 80091b2:	d007      	beq.n	80091c4 <__gnu_unwind_get_pr_addr+0x18>
 80091b4:	4b04      	ldr	r3, [pc, #16]	; (80091c8 <__gnu_unwind_get_pr_addr+0x1c>)
 80091b6:	2800      	cmp	r0, #0
 80091b8:	bf0c      	ite	eq
 80091ba:	4618      	moveq	r0, r3
 80091bc:	2000      	movne	r0, #0
 80091be:	4770      	bx	lr
 80091c0:	4802      	ldr	r0, [pc, #8]	; (80091cc <__gnu_unwind_get_pr_addr+0x20>)
 80091c2:	4770      	bx	lr
 80091c4:	4802      	ldr	r0, [pc, #8]	; (80091d0 <__gnu_unwind_get_pr_addr+0x24>)
 80091c6:	4770      	bx	lr
 80091c8:	080098b9 	.word	0x080098b9
 80091cc:	080098bd 	.word	0x080098bd
 80091d0:	080098c1 	.word	0x080098c1

080091d4 <get_eit_entry>:
 80091d4:	b530      	push	{r4, r5, lr}
 80091d6:	4b24      	ldr	r3, [pc, #144]	; (8009268 <get_eit_entry+0x94>)
 80091d8:	b083      	sub	sp, #12
 80091da:	4604      	mov	r4, r0
 80091dc:	1e8d      	subs	r5, r1, #2
 80091de:	b37b      	cbz	r3, 8009240 <get_eit_entry+0x6c>
 80091e0:	a901      	add	r1, sp, #4
 80091e2:	4628      	mov	r0, r5
 80091e4:	f3af 8000 	nop.w
 80091e8:	b320      	cbz	r0, 8009234 <get_eit_entry+0x60>
 80091ea:	9901      	ldr	r1, [sp, #4]
 80091ec:	462a      	mov	r2, r5
 80091ee:	f7ff ffad 	bl	800914c <search_EIT_table>
 80091f2:	4601      	mov	r1, r0
 80091f4:	b1f0      	cbz	r0, 8009234 <get_eit_entry+0x60>
 80091f6:	f7ff ff9f 	bl	8009138 <selfrel_offset31>
 80091fa:	684b      	ldr	r3, [r1, #4]
 80091fc:	64a0      	str	r0, [r4, #72]	; 0x48
 80091fe:	2b01      	cmp	r3, #1
 8009200:	d012      	beq.n	8009228 <get_eit_entry+0x54>
 8009202:	2b00      	cmp	r3, #0
 8009204:	f101 0004 	add.w	r0, r1, #4
 8009208:	db20      	blt.n	800924c <get_eit_entry+0x78>
 800920a:	f7ff ff95 	bl	8009138 <selfrel_offset31>
 800920e:	2300      	movs	r3, #0
 8009210:	64e0      	str	r0, [r4, #76]	; 0x4c
 8009212:	6523      	str	r3, [r4, #80]	; 0x50
 8009214:	6803      	ldr	r3, [r0, #0]
 8009216:	2b00      	cmp	r3, #0
 8009218:	db1c      	blt.n	8009254 <get_eit_entry+0x80>
 800921a:	f7ff ff8d 	bl	8009138 <selfrel_offset31>
 800921e:	2300      	movs	r3, #0
 8009220:	6120      	str	r0, [r4, #16]
 8009222:	4618      	mov	r0, r3
 8009224:	b003      	add	sp, #12
 8009226:	bd30      	pop	{r4, r5, pc}
 8009228:	2300      	movs	r3, #0
 800922a:	6123      	str	r3, [r4, #16]
 800922c:	2305      	movs	r3, #5
 800922e:	4618      	mov	r0, r3
 8009230:	b003      	add	sp, #12
 8009232:	bd30      	pop	{r4, r5, pc}
 8009234:	2300      	movs	r3, #0
 8009236:	6123      	str	r3, [r4, #16]
 8009238:	2309      	movs	r3, #9
 800923a:	4618      	mov	r0, r3
 800923c:	b003      	add	sp, #12
 800923e:	bd30      	pop	{r4, r5, pc}
 8009240:	490a      	ldr	r1, [pc, #40]	; (800926c <get_eit_entry+0x98>)
 8009242:	480b      	ldr	r0, [pc, #44]	; (8009270 <get_eit_entry+0x9c>)
 8009244:	1a09      	subs	r1, r1, r0
 8009246:	10c9      	asrs	r1, r1, #3
 8009248:	9101      	str	r1, [sp, #4]
 800924a:	e7cf      	b.n	80091ec <get_eit_entry+0x18>
 800924c:	2301      	movs	r3, #1
 800924e:	64e0      	str	r0, [r4, #76]	; 0x4c
 8009250:	6523      	str	r3, [r4, #80]	; 0x50
 8009252:	e7df      	b.n	8009214 <get_eit_entry+0x40>
 8009254:	f3c3 6003 	ubfx	r0, r3, #24, #4
 8009258:	f7ff ffa8 	bl	80091ac <__gnu_unwind_get_pr_addr>
 800925c:	2800      	cmp	r0, #0
 800925e:	6120      	str	r0, [r4, #16]
 8009260:	bf14      	ite	ne
 8009262:	2300      	movne	r3, #0
 8009264:	2309      	moveq	r3, #9
 8009266:	e7dc      	b.n	8009222 <get_eit_entry+0x4e>
 8009268:	00000000 	.word	0x00000000
 800926c:	08011d60 	.word	0x08011d60
 8009270:	08011b90 	.word	0x08011b90

08009274 <restore_non_core_regs>:
 8009274:	6803      	ldr	r3, [r0, #0]
 8009276:	07da      	lsls	r2, r3, #31
 8009278:	b510      	push	{r4, lr}
 800927a:	4604      	mov	r4, r0
 800927c:	d406      	bmi.n	800928c <restore_non_core_regs+0x18>
 800927e:	079b      	lsls	r3, r3, #30
 8009280:	f100 0048 	add.w	r0, r0, #72	; 0x48
 8009284:	d509      	bpl.n	800929a <restore_non_core_regs+0x26>
 8009286:	f000 fc59 	bl	8009b3c <__gnu_Unwind_Restore_VFP_D>
 800928a:	6823      	ldr	r3, [r4, #0]
 800928c:	0759      	lsls	r1, r3, #29
 800928e:	d509      	bpl.n	80092a4 <restore_non_core_regs+0x30>
 8009290:	071a      	lsls	r2, r3, #28
 8009292:	d50e      	bpl.n	80092b2 <restore_non_core_regs+0x3e>
 8009294:	06db      	lsls	r3, r3, #27
 8009296:	d513      	bpl.n	80092c0 <restore_non_core_regs+0x4c>
 8009298:	bd10      	pop	{r4, pc}
 800929a:	f000 fc47 	bl	8009b2c <__gnu_Unwind_Restore_VFP>
 800929e:	6823      	ldr	r3, [r4, #0]
 80092a0:	0759      	lsls	r1, r3, #29
 80092a2:	d4f5      	bmi.n	8009290 <restore_non_core_regs+0x1c>
 80092a4:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80092a8:	f000 fc50 	bl	8009b4c <__gnu_Unwind_Restore_VFP_D_16_to_31>
 80092ac:	6823      	ldr	r3, [r4, #0]
 80092ae:	071a      	lsls	r2, r3, #28
 80092b0:	d4f0      	bmi.n	8009294 <restore_non_core_regs+0x20>
 80092b2:	f504 70a8 	add.w	r0, r4, #336	; 0x150
 80092b6:	f000 fc51 	bl	8009b5c <__gnu_Unwind_Restore_WMMXD>
 80092ba:	6823      	ldr	r3, [r4, #0]
 80092bc:	06db      	lsls	r3, r3, #27
 80092be:	d4eb      	bmi.n	8009298 <restore_non_core_regs+0x24>
 80092c0:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
 80092c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80092c8:	f000 bc8c 	b.w	8009be4 <__gnu_Unwind_Restore_WMMXC>

080092cc <_Unwind_decode_typeinfo_ptr.isra.0>:
 80092cc:	6803      	ldr	r3, [r0, #0]
 80092ce:	b10b      	cbz	r3, 80092d4 <_Unwind_decode_typeinfo_ptr.isra.0+0x8>
 80092d0:	4418      	add	r0, r3
 80092d2:	4770      	bx	lr
 80092d4:	4618      	mov	r0, r3
 80092d6:	4770      	bx	lr

080092d8 <__gnu_unwind_24bit.isra.1>:
 80092d8:	2009      	movs	r0, #9
 80092da:	4770      	bx	lr

080092dc <_Unwind_DebugHook>:
 80092dc:	4770      	bx	lr
 80092de:	bf00      	nop

080092e0 <unwind_phase2>:
 80092e0:	b570      	push	{r4, r5, r6, lr}
 80092e2:	4604      	mov	r4, r0
 80092e4:	460d      	mov	r5, r1
 80092e6:	e008      	b.n	80092fa <unwind_phase2+0x1a>
 80092e8:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80092ea:	6163      	str	r3, [r4, #20]
 80092ec:	462a      	mov	r2, r5
 80092ee:	6923      	ldr	r3, [r4, #16]
 80092f0:	4621      	mov	r1, r4
 80092f2:	2001      	movs	r0, #1
 80092f4:	4798      	blx	r3
 80092f6:	2808      	cmp	r0, #8
 80092f8:	d108      	bne.n	800930c <unwind_phase2+0x2c>
 80092fa:	6c29      	ldr	r1, [r5, #64]	; 0x40
 80092fc:	4620      	mov	r0, r4
 80092fe:	f7ff ff69 	bl	80091d4 <get_eit_entry>
 8009302:	4606      	mov	r6, r0
 8009304:	2800      	cmp	r0, #0
 8009306:	d0ef      	beq.n	80092e8 <unwind_phase2+0x8>
 8009308:	f003 fc20 	bl	800cb4c <abort>
 800930c:	2807      	cmp	r0, #7
 800930e:	d1fb      	bne.n	8009308 <unwind_phase2+0x28>
 8009310:	4630      	mov	r0, r6
 8009312:	6c29      	ldr	r1, [r5, #64]	; 0x40
 8009314:	f7ff ffe2 	bl	80092dc <_Unwind_DebugHook>
 8009318:	1d28      	adds	r0, r5, #4
 800931a:	f000 fbfb 	bl	8009b14 <__restore_core_regs>
 800931e:	bf00      	nop

08009320 <unwind_phase2_forced>:
 8009320:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009324:	1d0c      	adds	r4, r1, #4
 8009326:	4606      	mov	r6, r0
 8009328:	4617      	mov	r7, r2
 800932a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800932c:	f5ad 7d72 	sub.w	sp, sp, #968	; 0x3c8
 8009330:	ad03      	add	r5, sp, #12
 8009332:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8009334:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009336:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8009338:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800933a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800933c:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8009340:	ac02      	add	r4, sp, #8
 8009342:	f8d6 800c 	ldr.w	r8, [r6, #12]
 8009346:	f8d6 9018 	ldr.w	r9, [r6, #24]
 800934a:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 800934e:	2300      	movs	r3, #0
 8009350:	4630      	mov	r0, r6
 8009352:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8009354:	6023      	str	r3, [r4, #0]
 8009356:	f7ff ff3d 	bl	80091d4 <get_eit_entry>
 800935a:	2f00      	cmp	r7, #0
 800935c:	4605      	mov	r5, r0
 800935e:	bf14      	ite	ne
 8009360:	270a      	movne	r7, #10
 8009362:	2709      	moveq	r7, #9
 8009364:	b17d      	cbz	r5, 8009386 <unwind_phase2_forced+0x66>
 8009366:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009368:	f047 0110 	orr.w	r1, r7, #16
 800936c:	e88d 0210 	stmia.w	sp, {r4, r9}
 8009370:	4632      	mov	r2, r6
 8009372:	6463      	str	r3, [r4, #68]	; 0x44
 8009374:	2001      	movs	r0, #1
 8009376:	4633      	mov	r3, r6
 8009378:	47c0      	blx	r8
 800937a:	bb78      	cbnz	r0, 80093dc <unwind_phase2_forced+0xbc>
 800937c:	4628      	mov	r0, r5
 800937e:	f50d 7d72 	add.w	sp, sp, #968	; 0x3c8
 8009382:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009386:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009388:	6173      	str	r3, [r6, #20]
 800938a:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 800938e:	4621      	mov	r1, r4
 8009390:	a87a      	add	r0, sp, #488	; 0x1e8
 8009392:	f004 f852 	bl	800d43a <memcpy>
 8009396:	6933      	ldr	r3, [r6, #16]
 8009398:	aa7a      	add	r2, sp, #488	; 0x1e8
 800939a:	4631      	mov	r1, r6
 800939c:	4638      	mov	r0, r7
 800939e:	4798      	blx	r3
 80093a0:	9b88      	ldr	r3, [sp, #544]	; 0x220
 80093a2:	4682      	mov	sl, r0
 80093a4:	e88d 0210 	stmia.w	sp, {r4, r9}
 80093a8:	4639      	mov	r1, r7
 80093aa:	6463      	str	r3, [r4, #68]	; 0x44
 80093ac:	4632      	mov	r2, r6
 80093ae:	4633      	mov	r3, r6
 80093b0:	2001      	movs	r0, #1
 80093b2:	47c0      	blx	r8
 80093b4:	b990      	cbnz	r0, 80093dc <unwind_phase2_forced+0xbc>
 80093b6:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80093ba:	a97a      	add	r1, sp, #488	; 0x1e8
 80093bc:	4620      	mov	r0, r4
 80093be:	f004 f83c 	bl	800d43a <memcpy>
 80093c2:	f1ba 0f08 	cmp.w	sl, #8
 80093c6:	d106      	bne.n	80093d6 <unwind_phase2_forced+0xb6>
 80093c8:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80093ca:	4630      	mov	r0, r6
 80093cc:	f7ff ff02 	bl	80091d4 <get_eit_entry>
 80093d0:	2709      	movs	r7, #9
 80093d2:	4605      	mov	r5, r0
 80093d4:	e7c6      	b.n	8009364 <unwind_phase2_forced+0x44>
 80093d6:	f1ba 0f07 	cmp.w	sl, #7
 80093da:	d004      	beq.n	80093e6 <unwind_phase2_forced+0xc6>
 80093dc:	2009      	movs	r0, #9
 80093de:	f50d 7d72 	add.w	sp, sp, #968	; 0x3c8
 80093e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80093e6:	4628      	mov	r0, r5
 80093e8:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80093ea:	f7ff ff77 	bl	80092dc <_Unwind_DebugHook>
 80093ee:	a803      	add	r0, sp, #12
 80093f0:	f000 fb90 	bl	8009b14 <__restore_core_regs>

080093f4 <_Unwind_GetCFA>:
 80093f4:	6c40      	ldr	r0, [r0, #68]	; 0x44
 80093f6:	4770      	bx	lr

080093f8 <__gnu_Unwind_RaiseException>:
 80093f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80093fa:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 80093fc:	640b      	str	r3, [r1, #64]	; 0x40
 80093fe:	1d0e      	adds	r6, r1, #4
 8009400:	460f      	mov	r7, r1
 8009402:	4604      	mov	r4, r0
 8009404:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8009406:	b0f9      	sub	sp, #484	; 0x1e4
 8009408:	ad01      	add	r5, sp, #4
 800940a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800940c:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800940e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8009410:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8009412:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8009414:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8009418:	f04f 36ff 	mov.w	r6, #4294967295
 800941c:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8009420:	9600      	str	r6, [sp, #0]
 8009422:	e006      	b.n	8009432 <__gnu_Unwind_RaiseException+0x3a>
 8009424:	6923      	ldr	r3, [r4, #16]
 8009426:	466a      	mov	r2, sp
 8009428:	4621      	mov	r1, r4
 800942a:	4798      	blx	r3
 800942c:	2808      	cmp	r0, #8
 800942e:	4605      	mov	r5, r0
 8009430:	d108      	bne.n	8009444 <__gnu_Unwind_RaiseException+0x4c>
 8009432:	9910      	ldr	r1, [sp, #64]	; 0x40
 8009434:	4620      	mov	r0, r4
 8009436:	f7ff fecd 	bl	80091d4 <get_eit_entry>
 800943a:	2800      	cmp	r0, #0
 800943c:	d0f2      	beq.n	8009424 <__gnu_Unwind_RaiseException+0x2c>
 800943e:	2009      	movs	r0, #9
 8009440:	b079      	add	sp, #484	; 0x1e4
 8009442:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009444:	4668      	mov	r0, sp
 8009446:	f7ff ff15 	bl	8009274 <restore_non_core_regs>
 800944a:	2d06      	cmp	r5, #6
 800944c:	d1f7      	bne.n	800943e <__gnu_Unwind_RaiseException+0x46>
 800944e:	4639      	mov	r1, r7
 8009450:	4620      	mov	r0, r4
 8009452:	f7ff ff45 	bl	80092e0 <unwind_phase2>
 8009456:	bf00      	nop

08009458 <__gnu_Unwind_ForcedUnwind>:
 8009458:	b430      	push	{r4, r5}
 800945a:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800945c:	60c1      	str	r1, [r0, #12]
 800945e:	6182      	str	r2, [r0, #24]
 8009460:	4619      	mov	r1, r3
 8009462:	641d      	str	r5, [r3, #64]	; 0x40
 8009464:	2200      	movs	r2, #0
 8009466:	bc30      	pop	{r4, r5}
 8009468:	e75a      	b.n	8009320 <unwind_phase2_forced>
 800946a:	bf00      	nop

0800946c <__gnu_Unwind_Resume>:
 800946c:	b570      	push	{r4, r5, r6, lr}
 800946e:	68c6      	ldr	r6, [r0, #12]
 8009470:	6943      	ldr	r3, [r0, #20]
 8009472:	640b      	str	r3, [r1, #64]	; 0x40
 8009474:	b126      	cbz	r6, 8009480 <__gnu_Unwind_Resume+0x14>
 8009476:	2201      	movs	r2, #1
 8009478:	f7ff ff52 	bl	8009320 <unwind_phase2_forced>
 800947c:	f003 fb66 	bl	800cb4c <abort>
 8009480:	6903      	ldr	r3, [r0, #16]
 8009482:	460a      	mov	r2, r1
 8009484:	4604      	mov	r4, r0
 8009486:	460d      	mov	r5, r1
 8009488:	4601      	mov	r1, r0
 800948a:	2002      	movs	r0, #2
 800948c:	4798      	blx	r3
 800948e:	2807      	cmp	r0, #7
 8009490:	d007      	beq.n	80094a2 <__gnu_Unwind_Resume+0x36>
 8009492:	2808      	cmp	r0, #8
 8009494:	d103      	bne.n	800949e <__gnu_Unwind_Resume+0x32>
 8009496:	4629      	mov	r1, r5
 8009498:	4620      	mov	r0, r4
 800949a:	f7ff ff21 	bl	80092e0 <unwind_phase2>
 800949e:	f003 fb55 	bl	800cb4c <abort>
 80094a2:	4630      	mov	r0, r6
 80094a4:	6c29      	ldr	r1, [r5, #64]	; 0x40
 80094a6:	f7ff ff19 	bl	80092dc <_Unwind_DebugHook>
 80094aa:	1d28      	adds	r0, r5, #4
 80094ac:	f000 fb32 	bl	8009b14 <__restore_core_regs>

080094b0 <__gnu_Unwind_Resume_or_Rethrow>:
 80094b0:	68c2      	ldr	r2, [r0, #12]
 80094b2:	b11a      	cbz	r2, 80094bc <__gnu_Unwind_Resume_or_Rethrow+0xc>
 80094b4:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 80094b6:	640a      	str	r2, [r1, #64]	; 0x40
 80094b8:	2200      	movs	r2, #0
 80094ba:	e731      	b.n	8009320 <unwind_phase2_forced>
 80094bc:	e79c      	b.n	80093f8 <__gnu_Unwind_RaiseException>
 80094be:	bf00      	nop

080094c0 <_Unwind_Complete>:
 80094c0:	4770      	bx	lr
 80094c2:	bf00      	nop

080094c4 <_Unwind_DeleteException>:
 80094c4:	6883      	ldr	r3, [r0, #8]
 80094c6:	b113      	cbz	r3, 80094ce <_Unwind_DeleteException+0xa>
 80094c8:	4601      	mov	r1, r0
 80094ca:	2001      	movs	r0, #1
 80094cc:	4718      	bx	r3
 80094ce:	4770      	bx	lr

080094d0 <_Unwind_VRS_Get>:
 80094d0:	b500      	push	{lr}
 80094d2:	2904      	cmp	r1, #4
 80094d4:	d807      	bhi.n	80094e6 <_Unwind_VRS_Get+0x16>
 80094d6:	e8df f001 	tbb	[pc, r1]
 80094da:	0903      	.short	0x0903
 80094dc:	0906      	.short	0x0906
 80094de:	09          	.byte	0x09
 80094df:	00          	.byte	0x00
 80094e0:	b90b      	cbnz	r3, 80094e6 <_Unwind_VRS_Get+0x16>
 80094e2:	2a0f      	cmp	r2, #15
 80094e4:	d905      	bls.n	80094f2 <_Unwind_VRS_Get+0x22>
 80094e6:	2002      	movs	r0, #2
 80094e8:	f85d fb04 	ldr.w	pc, [sp], #4
 80094ec:	2001      	movs	r0, #1
 80094ee:	f85d fb04 	ldr.w	pc, [sp], #4
 80094f2:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 80094f6:	4618      	mov	r0, r3
 80094f8:	6853      	ldr	r3, [r2, #4]
 80094fa:	9a01      	ldr	r2, [sp, #4]
 80094fc:	6013      	str	r3, [r2, #0]
 80094fe:	f85d fb04 	ldr.w	pc, [sp], #4
 8009502:	bf00      	nop

08009504 <_Unwind_GetGR>:
 8009504:	b510      	push	{r4, lr}
 8009506:	b084      	sub	sp, #16
 8009508:	2300      	movs	r3, #0
 800950a:	ac03      	add	r4, sp, #12
 800950c:	460a      	mov	r2, r1
 800950e:	9400      	str	r4, [sp, #0]
 8009510:	4619      	mov	r1, r3
 8009512:	f7ff ffdd 	bl	80094d0 <_Unwind_VRS_Get>
 8009516:	9803      	ldr	r0, [sp, #12]
 8009518:	b004      	add	sp, #16
 800951a:	bd10      	pop	{r4, pc}

0800951c <_Unwind_VRS_Set>:
 800951c:	b500      	push	{lr}
 800951e:	2904      	cmp	r1, #4
 8009520:	d807      	bhi.n	8009532 <_Unwind_VRS_Set+0x16>
 8009522:	e8df f001 	tbb	[pc, r1]
 8009526:	0903      	.short	0x0903
 8009528:	0906      	.short	0x0906
 800952a:	09          	.byte	0x09
 800952b:	00          	.byte	0x00
 800952c:	b90b      	cbnz	r3, 8009532 <_Unwind_VRS_Set+0x16>
 800952e:	2a0f      	cmp	r2, #15
 8009530:	d905      	bls.n	800953e <_Unwind_VRS_Set+0x22>
 8009532:	2002      	movs	r0, #2
 8009534:	f85d fb04 	ldr.w	pc, [sp], #4
 8009538:	2001      	movs	r0, #1
 800953a:	f85d fb04 	ldr.w	pc, [sp], #4
 800953e:	9901      	ldr	r1, [sp, #4]
 8009540:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8009544:	6809      	ldr	r1, [r1, #0]
 8009546:	6051      	str	r1, [r2, #4]
 8009548:	4618      	mov	r0, r3
 800954a:	f85d fb04 	ldr.w	pc, [sp], #4
 800954e:	bf00      	nop

08009550 <_Unwind_SetGR>:
 8009550:	b510      	push	{r4, lr}
 8009552:	b084      	sub	sp, #16
 8009554:	ac04      	add	r4, sp, #16
 8009556:	2300      	movs	r3, #0
 8009558:	f844 2d04 	str.w	r2, [r4, #-4]!
 800955c:	460a      	mov	r2, r1
 800955e:	9400      	str	r4, [sp, #0]
 8009560:	4619      	mov	r1, r3
 8009562:	f7ff ffdb 	bl	800951c <_Unwind_VRS_Set>
 8009566:	b004      	add	sp, #16
 8009568:	bd10      	pop	{r4, pc}
 800956a:	bf00      	nop

0800956c <__gnu_Unwind_Backtrace>:
 800956c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800956e:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 8009570:	6413      	str	r3, [r2, #64]	; 0x40
 8009572:	1d15      	adds	r5, r2, #4
 8009574:	4607      	mov	r7, r0
 8009576:	460e      	mov	r6, r1
 8009578:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800957a:	f5ad 7d0f 	sub.w	sp, sp, #572	; 0x23c
 800957e:	ac17      	add	r4, sp, #92	; 0x5c
 8009580:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009582:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8009584:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009586:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8009588:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800958a:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800958e:	f04f 35ff 	mov.w	r5, #4294967295
 8009592:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8009596:	9516      	str	r5, [sp, #88]	; 0x58
 8009598:	e010      	b.n	80095bc <__gnu_Unwind_Backtrace+0x50>
 800959a:	a816      	add	r0, sp, #88	; 0x58
 800959c:	f7ff ffd8 	bl	8009550 <_Unwind_SetGR>
 80095a0:	4631      	mov	r1, r6
 80095a2:	a816      	add	r0, sp, #88	; 0x58
 80095a4:	47b8      	blx	r7
 80095a6:	aa16      	add	r2, sp, #88	; 0x58
 80095a8:	4669      	mov	r1, sp
 80095aa:	b978      	cbnz	r0, 80095cc <__gnu_Unwind_Backtrace+0x60>
 80095ac:	9b04      	ldr	r3, [sp, #16]
 80095ae:	2008      	movs	r0, #8
 80095b0:	4798      	blx	r3
 80095b2:	2805      	cmp	r0, #5
 80095b4:	4604      	mov	r4, r0
 80095b6:	d00a      	beq.n	80095ce <__gnu_Unwind_Backtrace+0x62>
 80095b8:	2809      	cmp	r0, #9
 80095ba:	d007      	beq.n	80095cc <__gnu_Unwind_Backtrace+0x60>
 80095bc:	9926      	ldr	r1, [sp, #152]	; 0x98
 80095be:	4668      	mov	r0, sp
 80095c0:	f7ff fe08 	bl	80091d4 <get_eit_entry>
 80095c4:	466a      	mov	r2, sp
 80095c6:	210c      	movs	r1, #12
 80095c8:	2800      	cmp	r0, #0
 80095ca:	d0e6      	beq.n	800959a <__gnu_Unwind_Backtrace+0x2e>
 80095cc:	2409      	movs	r4, #9
 80095ce:	a816      	add	r0, sp, #88	; 0x58
 80095d0:	f7ff fe50 	bl	8009274 <restore_non_core_regs>
 80095d4:	4620      	mov	r0, r4
 80095d6:	f50d 7d0f 	add.w	sp, sp, #572	; 0x23c
 80095da:	bdf0      	pop	{r4, r5, r6, r7, pc}

080095dc <__gnu_unwind_pr_common>:
 80095dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80095e0:	460d      	mov	r5, r1
 80095e2:	6cc9      	ldr	r1, [r1, #76]	; 0x4c
 80095e4:	b08b      	sub	sp, #44	; 0x2c
 80095e6:	1d0c      	adds	r4, r1, #4
 80095e8:	6809      	ldr	r1, [r1, #0]
 80095ea:	9107      	str	r1, [sp, #28]
 80095ec:	4691      	mov	r9, r2
 80095ee:	9408      	str	r4, [sp, #32]
 80095f0:	f000 0b03 	and.w	fp, r0, #3
 80095f4:	461e      	mov	r6, r3
 80095f6:	2b00      	cmp	r3, #0
 80095f8:	d164      	bne.n	80096c4 <__gnu_unwind_pr_common+0xe8>
 80095fa:	0209      	lsls	r1, r1, #8
 80095fc:	2303      	movs	r3, #3
 80095fe:	9107      	str	r1, [sp, #28]
 8009600:	f88d 6025 	strb.w	r6, [sp, #37]	; 0x25
 8009604:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8009608:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 800960a:	f1bb 0f02 	cmp.w	fp, #2
 800960e:	bf08      	it	eq
 8009610:	6bac      	ldreq	r4, [r5, #56]	; 0x38
 8009612:	f013 0301 	ands.w	r3, r3, #1
 8009616:	d143      	bne.n	80096a0 <__gnu_unwind_pr_common+0xc4>
 8009618:	f000 0008 	and.w	r0, r0, #8
 800961c:	b2c2      	uxtb	r2, r0
 800961e:	9203      	str	r2, [sp, #12]
 8009620:	9301      	str	r3, [sp, #4]
 8009622:	6827      	ldr	r7, [r4, #0]
 8009624:	2f00      	cmp	r7, #0
 8009626:	d03d      	beq.n	80096a4 <__gnu_unwind_pr_common+0xc8>
 8009628:	2e02      	cmp	r6, #2
 800962a:	d047      	beq.n	80096bc <__gnu_unwind_pr_common+0xe0>
 800962c:	8827      	ldrh	r7, [r4, #0]
 800962e:	f8b4 8002 	ldrh.w	r8, [r4, #2]
 8009632:	3404      	adds	r4, #4
 8009634:	6cab      	ldr	r3, [r5, #72]	; 0x48
 8009636:	f028 0a01 	bic.w	sl, r8, #1
 800963a:	210f      	movs	r1, #15
 800963c:	4648      	mov	r0, r9
 800963e:	449a      	add	sl, r3
 8009640:	f7ff ff60 	bl	8009504 <_Unwind_GetGR>
 8009644:	4582      	cmp	sl, r0
 8009646:	d837      	bhi.n	80096b8 <__gnu_unwind_pr_common+0xdc>
 8009648:	f027 0301 	bic.w	r3, r7, #1
 800964c:	449a      	add	sl, r3
 800964e:	4550      	cmp	r0, sl
 8009650:	bf2c      	ite	cs
 8009652:	2000      	movcs	r0, #0
 8009654:	2001      	movcc	r0, #1
 8009656:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800965a:	f008 0802 	and.w	r8, r8, #2
 800965e:	f007 0701 	and.w	r7, r7, #1
 8009662:	ea48 0807 	orr.w	r8, r8, r7
 8009666:	f1b8 0f01 	cmp.w	r8, #1
 800966a:	d041      	beq.n	80096f0 <__gnu_unwind_pr_common+0x114>
 800966c:	d338      	bcc.n	80096e0 <__gnu_unwind_pr_common+0x104>
 800966e:	f1b8 0f02 	cmp.w	r8, #2
 8009672:	d11d      	bne.n	80096b0 <__gnu_unwind_pr_common+0xd4>
 8009674:	6823      	ldr	r3, [r4, #0]
 8009676:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 800967a:	9202      	str	r2, [sp, #8]
 800967c:	f1bb 0f00 	cmp.w	fp, #0
 8009680:	d179      	bne.n	8009776 <__gnu_unwind_pr_common+0x19a>
 8009682:	b130      	cbz	r0, 8009692 <__gnu_unwind_pr_common+0xb6>
 8009684:	9903      	ldr	r1, [sp, #12]
 8009686:	2900      	cmp	r1, #0
 8009688:	f000 8081 	beq.w	800978e <__gnu_unwind_pr_common+0x1b2>
 800968c:	2a00      	cmp	r2, #0
 800968e:	f000 80a8 	beq.w	80097e2 <__gnu_unwind_pr_common+0x206>
 8009692:	2b00      	cmp	r3, #0
 8009694:	db79      	blt.n	800978a <__gnu_unwind_pr_common+0x1ae>
 8009696:	9b02      	ldr	r3, [sp, #8]
 8009698:	3301      	adds	r3, #1
 800969a:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800969e:	e7c0      	b.n	8009622 <__gnu_unwind_pr_common+0x46>
 80096a0:	2300      	movs	r3, #0
 80096a2:	9301      	str	r3, [sp, #4]
 80096a4:	2e02      	cmp	r6, #2
 80096a6:	dd40      	ble.n	800972a <__gnu_unwind_pr_common+0x14e>
 80096a8:	f7ff fe16 	bl	80092d8 <__gnu_unwind_24bit.isra.1>
 80096ac:	2800      	cmp	r0, #0
 80096ae:	d042      	beq.n	8009736 <__gnu_unwind_pr_common+0x15a>
 80096b0:	2009      	movs	r0, #9
 80096b2:	b00b      	add	sp, #44	; 0x2c
 80096b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80096b8:	2000      	movs	r0, #0
 80096ba:	e7cc      	b.n	8009656 <__gnu_unwind_pr_common+0x7a>
 80096bc:	f8d4 8004 	ldr.w	r8, [r4, #4]
 80096c0:	3408      	adds	r4, #8
 80096c2:	e7b7      	b.n	8009634 <__gnu_unwind_pr_common+0x58>
 80096c4:	2b02      	cmp	r3, #2
 80096c6:	dc9f      	bgt.n	8009608 <__gnu_unwind_pr_common+0x2c>
 80096c8:	0c0b      	lsrs	r3, r1, #16
 80096ca:	b2da      	uxtb	r2, r3
 80096cc:	0409      	lsls	r1, r1, #16
 80096ce:	f88d 3025 	strb.w	r3, [sp, #37]	; 0x25
 80096d2:	2302      	movs	r3, #2
 80096d4:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 80096d8:	9107      	str	r1, [sp, #28]
 80096da:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80096de:	e793      	b.n	8009608 <__gnu_unwind_pr_common+0x2c>
 80096e0:	f1bb 0f00 	cmp.w	fp, #0
 80096e4:	d002      	beq.n	80096ec <__gnu_unwind_pr_common+0x110>
 80096e6:	2800      	cmp	r0, #0
 80096e8:	f040 80b0 	bne.w	800984c <__gnu_unwind_pr_common+0x270>
 80096ec:	3404      	adds	r4, #4
 80096ee:	e798      	b.n	8009622 <__gnu_unwind_pr_common+0x46>
 80096f0:	f1bb 0f00 	cmp.w	fp, #0
 80096f4:	d126      	bne.n	8009744 <__gnu_unwind_pr_common+0x168>
 80096f6:	b1b0      	cbz	r0, 8009726 <__gnu_unwind_pr_common+0x14a>
 80096f8:	e894 000c 	ldmia.w	r4, {r2, r3}
 80096fc:	1c99      	adds	r1, r3, #2
 80096fe:	ea4f 72d2 	mov.w	r2, r2, lsr #31
 8009702:	d0d5      	beq.n	80096b0 <__gnu_unwind_pr_common+0xd4>
 8009704:	f105 0158 	add.w	r1, r5, #88	; 0x58
 8009708:	3301      	adds	r3, #1
 800970a:	9106      	str	r1, [sp, #24]
 800970c:	f000 8094 	beq.w	8009838 <__gnu_unwind_pr_common+0x25c>
 8009710:	1d20      	adds	r0, r4, #4
 8009712:	f7ff fddb 	bl	80092cc <_Unwind_decode_typeinfo_ptr.isra.0>
 8009716:	ab06      	add	r3, sp, #24
 8009718:	4601      	mov	r1, r0
 800971a:	4628      	mov	r0, r5
 800971c:	f002 f9a6 	bl	800ba6c <__cxa_type_match>
 8009720:	2800      	cmp	r0, #0
 8009722:	f040 80b8 	bne.w	8009896 <__gnu_unwind_pr_common+0x2ba>
 8009726:	3408      	adds	r4, #8
 8009728:	e77b      	b.n	8009622 <__gnu_unwind_pr_common+0x46>
 800972a:	a907      	add	r1, sp, #28
 800972c:	4648      	mov	r0, r9
 800972e:	f000 faf3 	bl	8009d18 <__gnu_unwind_execute>
 8009732:	2800      	cmp	r0, #0
 8009734:	d1bc      	bne.n	80096b0 <__gnu_unwind_pr_common+0xd4>
 8009736:	9b01      	ldr	r3, [sp, #4]
 8009738:	2b00      	cmp	r3, #0
 800973a:	d15c      	bne.n	80097f6 <__gnu_unwind_pr_common+0x21a>
 800973c:	2008      	movs	r0, #8
 800973e:	b00b      	add	sp, #44	; 0x2c
 8009740:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009744:	210d      	movs	r1, #13
 8009746:	4648      	mov	r0, r9
 8009748:	6a2f      	ldr	r7, [r5, #32]
 800974a:	f7ff fedb 	bl	8009504 <_Unwind_GetGR>
 800974e:	4287      	cmp	r7, r0
 8009750:	d1e9      	bne.n	8009726 <__gnu_unwind_pr_common+0x14a>
 8009752:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8009754:	429c      	cmp	r4, r3
 8009756:	d1e6      	bne.n	8009726 <__gnu_unwind_pr_common+0x14a>
 8009758:	4620      	mov	r0, r4
 800975a:	f7ff fced 	bl	8009138 <selfrel_offset31>
 800975e:	210f      	movs	r1, #15
 8009760:	4602      	mov	r2, r0
 8009762:	4648      	mov	r0, r9
 8009764:	f7ff fef4 	bl	8009550 <_Unwind_SetGR>
 8009768:	4648      	mov	r0, r9
 800976a:	462a      	mov	r2, r5
 800976c:	2100      	movs	r1, #0
 800976e:	f7ff feef 	bl	8009550 <_Unwind_SetGR>
 8009772:	2007      	movs	r0, #7
 8009774:	e79d      	b.n	80096b2 <__gnu_unwind_pr_common+0xd6>
 8009776:	210d      	movs	r1, #13
 8009778:	4648      	mov	r0, r9
 800977a:	6a2f      	ldr	r7, [r5, #32]
 800977c:	f7ff fec2 	bl	8009504 <_Unwind_GetGR>
 8009780:	4287      	cmp	r7, r0
 8009782:	d048      	beq.n	8009816 <__gnu_unwind_pr_common+0x23a>
 8009784:	6823      	ldr	r3, [r4, #0]
 8009786:	2b00      	cmp	r3, #0
 8009788:	da85      	bge.n	8009696 <__gnu_unwind_pr_common+0xba>
 800978a:	3404      	adds	r4, #4
 800978c:	e783      	b.n	8009696 <__gnu_unwind_pr_common+0xba>
 800978e:	9b02      	ldr	r3, [sp, #8]
 8009790:	b33b      	cbz	r3, 80097e2 <__gnu_unwind_pr_common+0x206>
 8009792:	f105 0358 	add.w	r3, r5, #88	; 0x58
 8009796:	1d27      	adds	r7, r4, #4
 8009798:	f8cd b010 	str.w	fp, [sp, #16]
 800979c:	f8dd 800c 	ldr.w	r8, [sp, #12]
 80097a0:	f8dd a008 	ldr.w	sl, [sp, #8]
 80097a4:	9605      	str	r6, [sp, #20]
 80097a6:	46a3      	mov	fp, r4
 80097a8:	461c      	mov	r4, r3
 80097aa:	e002      	b.n	80097b2 <__gnu_unwind_pr_common+0x1d6>
 80097ac:	45b2      	cmp	sl, r6
 80097ae:	46b0      	mov	r8, r6
 80097b0:	d016      	beq.n	80097e0 <__gnu_unwind_pr_common+0x204>
 80097b2:	4638      	mov	r0, r7
 80097b4:	9406      	str	r4, [sp, #24]
 80097b6:	f7ff fd89 	bl	80092cc <_Unwind_decode_typeinfo_ptr.isra.0>
 80097ba:	ab06      	add	r3, sp, #24
 80097bc:	4601      	mov	r1, r0
 80097be:	2200      	movs	r2, #0
 80097c0:	4628      	mov	r0, r5
 80097c2:	f002 f953 	bl	800ba6c <__cxa_type_match>
 80097c6:	f108 0601 	add.w	r6, r8, #1
 80097ca:	3704      	adds	r7, #4
 80097cc:	2800      	cmp	r0, #0
 80097ce:	d0ed      	beq.n	80097ac <__gnu_unwind_pr_common+0x1d0>
 80097d0:	9b02      	ldr	r3, [sp, #8]
 80097d2:	9e05      	ldr	r6, [sp, #20]
 80097d4:	4543      	cmp	r3, r8
 80097d6:	465c      	mov	r4, fp
 80097d8:	f8dd b010 	ldr.w	fp, [sp, #16]
 80097dc:	d1d2      	bne.n	8009784 <__gnu_unwind_pr_common+0x1a8>
 80097de:	e000      	b.n	80097e2 <__gnu_unwind_pr_common+0x206>
 80097e0:	465c      	mov	r4, fp
 80097e2:	4648      	mov	r0, r9
 80097e4:	210d      	movs	r1, #13
 80097e6:	f7ff fe8d 	bl	8009504 <_Unwind_GetGR>
 80097ea:	9b06      	ldr	r3, [sp, #24]
 80097ec:	6228      	str	r0, [r5, #32]
 80097ee:	62ac      	str	r4, [r5, #40]	; 0x28
 80097f0:	626b      	str	r3, [r5, #36]	; 0x24
 80097f2:	2006      	movs	r0, #6
 80097f4:	e75d      	b.n	80096b2 <__gnu_unwind_pr_common+0xd6>
 80097f6:	210f      	movs	r1, #15
 80097f8:	4648      	mov	r0, r9
 80097fa:	f7ff fe83 	bl	8009504 <_Unwind_GetGR>
 80097fe:	210e      	movs	r1, #14
 8009800:	4602      	mov	r2, r0
 8009802:	4648      	mov	r0, r9
 8009804:	f7ff fea4 	bl	8009550 <_Unwind_SetGR>
 8009808:	4648      	mov	r0, r9
 800980a:	4a2a      	ldr	r2, [pc, #168]	; (80098b4 <__gnu_unwind_pr_common+0x2d8>)
 800980c:	210f      	movs	r1, #15
 800980e:	f7ff fe9f 	bl	8009550 <_Unwind_SetGR>
 8009812:	2007      	movs	r0, #7
 8009814:	e74d      	b.n	80096b2 <__gnu_unwind_pr_common+0xd6>
 8009816:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8009818:	429c      	cmp	r4, r3
 800981a:	d1b3      	bne.n	8009784 <__gnu_unwind_pr_common+0x1a8>
 800981c:	2204      	movs	r2, #4
 800981e:	2700      	movs	r7, #0
 8009820:	18a3      	adds	r3, r4, r2
 8009822:	9902      	ldr	r1, [sp, #8]
 8009824:	62a9      	str	r1, [r5, #40]	; 0x28
 8009826:	62ef      	str	r7, [r5, #44]	; 0x2c
 8009828:	632a      	str	r2, [r5, #48]	; 0x30
 800982a:	636b      	str	r3, [r5, #52]	; 0x34
 800982c:	6823      	ldr	r3, [r4, #0]
 800982e:	42bb      	cmp	r3, r7
 8009830:	db1f      	blt.n	8009872 <__gnu_unwind_pr_common+0x296>
 8009832:	2301      	movs	r3, #1
 8009834:	9301      	str	r3, [sp, #4]
 8009836:	e72e      	b.n	8009696 <__gnu_unwind_pr_common+0xba>
 8009838:	4648      	mov	r0, r9
 800983a:	210d      	movs	r1, #13
 800983c:	f7ff fe62 	bl	8009504 <_Unwind_GetGR>
 8009840:	6228      	str	r0, [r5, #32]
 8009842:	9b06      	ldr	r3, [sp, #24]
 8009844:	626b      	str	r3, [r5, #36]	; 0x24
 8009846:	62ac      	str	r4, [r5, #40]	; 0x28
 8009848:	2006      	movs	r0, #6
 800984a:	e732      	b.n	80096b2 <__gnu_unwind_pr_common+0xd6>
 800984c:	4620      	mov	r0, r4
 800984e:	f7ff fc73 	bl	8009138 <selfrel_offset31>
 8009852:	3404      	adds	r4, #4
 8009854:	4606      	mov	r6, r0
 8009856:	63ac      	str	r4, [r5, #56]	; 0x38
 8009858:	4628      	mov	r0, r5
 800985a:	f002 f95f 	bl	800bb1c <__cxa_begin_cleanup>
 800985e:	2800      	cmp	r0, #0
 8009860:	f43f af26 	beq.w	80096b0 <__gnu_unwind_pr_common+0xd4>
 8009864:	4648      	mov	r0, r9
 8009866:	4632      	mov	r2, r6
 8009868:	210f      	movs	r1, #15
 800986a:	f7ff fe71 	bl	8009550 <_Unwind_SetGR>
 800986e:	2007      	movs	r0, #7
 8009870:	e71f      	b.n	80096b2 <__gnu_unwind_pr_common+0xd6>
 8009872:	4608      	mov	r0, r1
 8009874:	3001      	adds	r0, #1
 8009876:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 800987a:	f7ff fc5d 	bl	8009138 <selfrel_offset31>
 800987e:	210f      	movs	r1, #15
 8009880:	4602      	mov	r2, r0
 8009882:	4648      	mov	r0, r9
 8009884:	f7ff fe64 	bl	8009550 <_Unwind_SetGR>
 8009888:	4648      	mov	r0, r9
 800988a:	462a      	mov	r2, r5
 800988c:	4639      	mov	r1, r7
 800988e:	f7ff fe5f 	bl	8009550 <_Unwind_SetGR>
 8009892:	2007      	movs	r0, #7
 8009894:	e70d      	b.n	80096b2 <__gnu_unwind_pr_common+0xd6>
 8009896:	4607      	mov	r7, r0
 8009898:	210d      	movs	r1, #13
 800989a:	4648      	mov	r0, r9
 800989c:	f7ff fe32 	bl	8009504 <_Unwind_GetGR>
 80098a0:	2f02      	cmp	r7, #2
 80098a2:	6228      	str	r0, [r5, #32]
 80098a4:	d1cd      	bne.n	8009842 <__gnu_unwind_pr_common+0x266>
 80098a6:	462b      	mov	r3, r5
 80098a8:	9a06      	ldr	r2, [sp, #24]
 80098aa:	f843 2f2c 	str.w	r2, [r3, #44]!
 80098ae:	626b      	str	r3, [r5, #36]	; 0x24
 80098b0:	e7c9      	b.n	8009846 <__gnu_unwind_pr_common+0x26a>
 80098b2:	bf00      	nop
 80098b4:	0800c589 	.word	0x0800c589

080098b8 <__aeabi_unwind_cpp_pr0>:
 80098b8:	2300      	movs	r3, #0
 80098ba:	e68f      	b.n	80095dc <__gnu_unwind_pr_common>

080098bc <__aeabi_unwind_cpp_pr1>:
 80098bc:	2301      	movs	r3, #1
 80098be:	e68d      	b.n	80095dc <__gnu_unwind_pr_common>

080098c0 <__aeabi_unwind_cpp_pr2>:
 80098c0:	2302      	movs	r3, #2
 80098c2:	e68b      	b.n	80095dc <__gnu_unwind_pr_common>

080098c4 <_Unwind_VRS_Pop>:
 80098c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80098c6:	4604      	mov	r4, r0
 80098c8:	b0c5      	sub	sp, #276	; 0x114
 80098ca:	2904      	cmp	r1, #4
 80098cc:	d80d      	bhi.n	80098ea <_Unwind_VRS_Pop+0x26>
 80098ce:	e8df f001 	tbb	[pc, r1]
 80098d2:	0357      	.short	0x0357
 80098d4:	310c      	.short	0x310c
 80098d6:	0f          	.byte	0x0f
 80098d7:	00          	.byte	0x00
 80098d8:	2b01      	cmp	r3, #1
 80098da:	ea4f 4612 	mov.w	r6, r2, lsr #16
 80098de:	b295      	uxth	r5, r2
 80098e0:	d166      	bne.n	80099b0 <_Unwind_VRS_Pop+0xec>
 80098e2:	1972      	adds	r2, r6, r5
 80098e4:	2a10      	cmp	r2, #16
 80098e6:	f240 809f 	bls.w	8009a28 <_Unwind_VRS_Pop+0x164>
 80098ea:	2002      	movs	r0, #2
 80098ec:	b045      	add	sp, #276	; 0x114
 80098ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80098f0:	2b00      	cmp	r3, #0
 80098f2:	d1fa      	bne.n	80098ea <_Unwind_VRS_Pop+0x26>
 80098f4:	2a10      	cmp	r2, #16
 80098f6:	d8f8      	bhi.n	80098ea <_Unwind_VRS_Pop+0x26>
 80098f8:	6823      	ldr	r3, [r4, #0]
 80098fa:	06d8      	lsls	r0, r3, #27
 80098fc:	f100 80c9 	bmi.w	8009a92 <_Unwind_VRS_Pop+0x1ce>
 8009900:	ae22      	add	r6, sp, #136	; 0x88
 8009902:	4630      	mov	r0, r6
 8009904:	9201      	str	r2, [sp, #4]
 8009906:	f000 f977 	bl	8009bf8 <__gnu_Unwind_Save_WMMXC>
 800990a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800990c:	9a01      	ldr	r2, [sp, #4]
 800990e:	2300      	movs	r3, #0
 8009910:	2501      	movs	r5, #1
 8009912:	fa05 f103 	lsl.w	r1, r5, r3
 8009916:	4211      	tst	r1, r2
 8009918:	d003      	beq.n	8009922 <_Unwind_VRS_Pop+0x5e>
 800991a:	6801      	ldr	r1, [r0, #0]
 800991c:	f846 1023 	str.w	r1, [r6, r3, lsl #2]
 8009920:	3004      	adds	r0, #4
 8009922:	3301      	adds	r3, #1
 8009924:	2b04      	cmp	r3, #4
 8009926:	d1f4      	bne.n	8009912 <_Unwind_VRS_Pop+0x4e>
 8009928:	63a0      	str	r0, [r4, #56]	; 0x38
 800992a:	4630      	mov	r0, r6
 800992c:	f000 f95a 	bl	8009be4 <__gnu_Unwind_Restore_WMMXC>
 8009930:	2000      	movs	r0, #0
 8009932:	e7db      	b.n	80098ec <_Unwind_VRS_Pop+0x28>
 8009934:	2b03      	cmp	r3, #3
 8009936:	d1d8      	bne.n	80098ea <_Unwind_VRS_Pop+0x26>
 8009938:	0c15      	lsrs	r5, r2, #16
 800993a:	b297      	uxth	r7, r2
 800993c:	19eb      	adds	r3, r5, r7
 800993e:	2b10      	cmp	r3, #16
 8009940:	d8d3      	bhi.n	80098ea <_Unwind_VRS_Pop+0x26>
 8009942:	6823      	ldr	r3, [r4, #0]
 8009944:	071e      	lsls	r6, r3, #28
 8009946:	f100 80b8 	bmi.w	8009aba <_Unwind_VRS_Pop+0x1f6>
 800994a:	ae22      	add	r6, sp, #136	; 0x88
 800994c:	4630      	mov	r0, r6
 800994e:	007f      	lsls	r7, r7, #1
 8009950:	f000 f926 	bl	8009ba0 <__gnu_Unwind_Save_WMMXD>
 8009954:	eb06 02c5 	add.w	r2, r6, r5, lsl #3
 8009958:	1e7b      	subs	r3, r7, #1
 800995a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 800995c:	b157      	cbz	r7, 8009974 <_Unwind_VRS_Pop+0xb0>
 800995e:	3a04      	subs	r2, #4
 8009960:	4629      	mov	r1, r5
 8009962:	f851 0b04 	ldr.w	r0, [r1], #4
 8009966:	f842 0f04 	str.w	r0, [r2, #4]!
 800996a:	3b01      	subs	r3, #1
 800996c:	1c58      	adds	r0, r3, #1
 800996e:	d1f8      	bne.n	8009962 <_Unwind_VRS_Pop+0x9e>
 8009970:	eb05 0587 	add.w	r5, r5, r7, lsl #2
 8009974:	4630      	mov	r0, r6
 8009976:	63a5      	str	r5, [r4, #56]	; 0x38
 8009978:	f000 f8f0 	bl	8009b5c <__gnu_Unwind_Restore_WMMXD>
 800997c:	2000      	movs	r0, #0
 800997e:	e7b5      	b.n	80098ec <_Unwind_VRS_Pop+0x28>
 8009980:	2b00      	cmp	r3, #0
 8009982:	d1b2      	bne.n	80098ea <_Unwind_VRS_Pop+0x26>
 8009984:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 8009986:	b297      	uxth	r7, r2
 8009988:	1d20      	adds	r0, r4, #4
 800998a:	2601      	movs	r6, #1
 800998c:	fa06 f103 	lsl.w	r1, r6, r3
 8009990:	4239      	tst	r1, r7
 8009992:	f103 0301 	add.w	r3, r3, #1
 8009996:	d002      	beq.n	800999e <_Unwind_VRS_Pop+0xda>
 8009998:	6829      	ldr	r1, [r5, #0]
 800999a:	6001      	str	r1, [r0, #0]
 800999c:	3504      	adds	r5, #4
 800999e:	2b10      	cmp	r3, #16
 80099a0:	f100 0004 	add.w	r0, r0, #4
 80099a4:	d1f2      	bne.n	800998c <_Unwind_VRS_Pop+0xc8>
 80099a6:	f412 5000 	ands.w	r0, r2, #8192	; 0x2000
 80099aa:	d13b      	bne.n	8009a24 <_Unwind_VRS_Pop+0x160>
 80099ac:	63a5      	str	r5, [r4, #56]	; 0x38
 80099ae:	e79d      	b.n	80098ec <_Unwind_VRS_Pop+0x28>
 80099b0:	2b05      	cmp	r3, #5
 80099b2:	d19a      	bne.n	80098ea <_Unwind_VRS_Pop+0x26>
 80099b4:	1977      	adds	r7, r6, r5
 80099b6:	2f20      	cmp	r7, #32
 80099b8:	d897      	bhi.n	80098ea <_Unwind_VRS_Pop+0x26>
 80099ba:	2e0f      	cmp	r6, #15
 80099bc:	d965      	bls.n	8009a8a <_Unwind_VRS_Pop+0x1c6>
 80099be:	462f      	mov	r7, r5
 80099c0:	2d00      	cmp	r5, #0
 80099c2:	d148      	bne.n	8009a56 <_Unwind_VRS_Pop+0x192>
 80099c4:	462a      	mov	r2, r5
 80099c6:	2700      	movs	r7, #0
 80099c8:	2a00      	cmp	r2, #0
 80099ca:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80099cc:	dd71      	ble.n	8009ab2 <_Unwind_VRS_Pop+0x1ee>
 80099ce:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 80099d2:	4601      	mov	r1, r0
 80099d4:	a844      	add	r0, sp, #272	; 0x110
 80099d6:	eb00 00c6 	add.w	r0, r0, r6, lsl #3
 80099da:	388c      	subs	r0, #140	; 0x8c
 80099dc:	f851 5b04 	ldr.w	r5, [r1], #4
 80099e0:	f840 5f04 	str.w	r5, [r0, #4]!
 80099e4:	4291      	cmp	r1, r2
 80099e6:	d1f9      	bne.n	80099dc <_Unwind_VRS_Pop+0x118>
 80099e8:	4608      	mov	r0, r1
 80099ea:	b197      	cbz	r7, 8009a12 <_Unwind_VRS_Pop+0x14e>
 80099ec:	2e10      	cmp	r6, #16
 80099ee:	4632      	mov	r2, r6
 80099f0:	a944      	add	r1, sp, #272	; 0x110
 80099f2:	bf38      	it	cc
 80099f4:	2210      	movcc	r2, #16
 80099f6:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 80099fa:	f5a2 72c4 	sub.w	r2, r2, #392	; 0x188
 80099fe:	0079      	lsls	r1, r7, #1
 8009a00:	3a04      	subs	r2, #4
 8009a02:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8009a06:	f850 5b04 	ldr.w	r5, [r0], #4
 8009a0a:	f842 5f04 	str.w	r5, [r2, #4]!
 8009a0e:	4281      	cmp	r1, r0
 8009a10:	d1f9      	bne.n	8009a06 <_Unwind_VRS_Pop+0x142>
 8009a12:	2b01      	cmp	r3, #1
 8009a14:	d047      	beq.n	8009aa6 <_Unwind_VRS_Pop+0x1e2>
 8009a16:	2e0f      	cmp	r6, #15
 8009a18:	63a1      	str	r1, [r4, #56]	; 0x38
 8009a1a:	d932      	bls.n	8009a82 <_Unwind_VRS_Pop+0x1be>
 8009a1c:	b117      	cbz	r7, 8009a24 <_Unwind_VRS_Pop+0x160>
 8009a1e:	a802      	add	r0, sp, #8
 8009a20:	f000 f894 	bl	8009b4c <__gnu_Unwind_Restore_VFP_D_16_to_31>
 8009a24:	2000      	movs	r0, #0
 8009a26:	e761      	b.n	80098ec <_Unwind_VRS_Pop+0x28>
 8009a28:	2e0f      	cmp	r6, #15
 8009a2a:	f63f af5e 	bhi.w	80098ea <_Unwind_VRS_Pop+0x26>
 8009a2e:	2700      	movs	r7, #0
 8009a30:	6822      	ldr	r2, [r4, #0]
 8009a32:	07d1      	lsls	r1, r2, #31
 8009a34:	d50d      	bpl.n	8009a52 <_Unwind_VRS_Pop+0x18e>
 8009a36:	f022 0101 	bic.w	r1, r2, #1
 8009a3a:	2b05      	cmp	r3, #5
 8009a3c:	6021      	str	r1, [r4, #0]
 8009a3e:	9301      	str	r3, [sp, #4]
 8009a40:	4620      	mov	r0, r4
 8009a42:	d052      	beq.n	8009aea <_Unwind_VRS_Pop+0x226>
 8009a44:	f022 0203 	bic.w	r2, r2, #3
 8009a48:	f840 2b48 	str.w	r2, [r0], #72
 8009a4c:	f000 f872 	bl	8009b34 <__gnu_Unwind_Save_VFP>
 8009a50:	9b01      	ldr	r3, [sp, #4]
 8009a52:	2f00      	cmp	r7, #0
 8009a54:	d051      	beq.n	8009afa <_Unwind_VRS_Pop+0x236>
 8009a56:	6822      	ldr	r2, [r4, #0]
 8009a58:	0751      	lsls	r1, r2, #29
 8009a5a:	d436      	bmi.n	8009aca <_Unwind_VRS_Pop+0x206>
 8009a5c:	2b01      	cmp	r3, #1
 8009a5e:	d03e      	beq.n	8009ade <_Unwind_VRS_Pop+0x21a>
 8009a60:	2e0f      	cmp	r6, #15
 8009a62:	d806      	bhi.n	8009a72 <_Unwind_VRS_Pop+0x1ae>
 8009a64:	a822      	add	r0, sp, #136	; 0x88
 8009a66:	9301      	str	r3, [sp, #4]
 8009a68:	f000 f86c 	bl	8009b44 <__gnu_Unwind_Save_VFP_D>
 8009a6c:	9b01      	ldr	r3, [sp, #4]
 8009a6e:	2f00      	cmp	r7, #0
 8009a70:	d0a8      	beq.n	80099c4 <_Unwind_VRS_Pop+0x100>
 8009a72:	a802      	add	r0, sp, #8
 8009a74:	9301      	str	r3, [sp, #4]
 8009a76:	f000 f86d 	bl	8009b54 <__gnu_Unwind_Save_VFP_D_16_to_31>
 8009a7a:	9b01      	ldr	r3, [sp, #4]
 8009a7c:	f1c6 0210 	rsb	r2, r6, #16
 8009a80:	e7a2      	b.n	80099c8 <_Unwind_VRS_Pop+0x104>
 8009a82:	a822      	add	r0, sp, #136	; 0x88
 8009a84:	f000 f85a 	bl	8009b3c <__gnu_Unwind_Restore_VFP_D>
 8009a88:	e7c8      	b.n	8009a1c <_Unwind_VRS_Pop+0x158>
 8009a8a:	2f10      	cmp	r7, #16
 8009a8c:	d9cf      	bls.n	8009a2e <_Unwind_VRS_Pop+0x16a>
 8009a8e:	3f10      	subs	r7, #16
 8009a90:	e7ce      	b.n	8009a30 <_Unwind_VRS_Pop+0x16c>
 8009a92:	f023 0310 	bic.w	r3, r3, #16
 8009a96:	6023      	str	r3, [r4, #0]
 8009a98:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
 8009a9c:	9201      	str	r2, [sp, #4]
 8009a9e:	f000 f8ab 	bl	8009bf8 <__gnu_Unwind_Save_WMMXC>
 8009aa2:	9a01      	ldr	r2, [sp, #4]
 8009aa4:	e72c      	b.n	8009900 <_Unwind_VRS_Pop+0x3c>
 8009aa6:	3104      	adds	r1, #4
 8009aa8:	63a1      	str	r1, [r4, #56]	; 0x38
 8009aaa:	a822      	add	r0, sp, #136	; 0x88
 8009aac:	f000 f83e 	bl	8009b2c <__gnu_Unwind_Restore_VFP>
 8009ab0:	e7b8      	b.n	8009a24 <_Unwind_VRS_Pop+0x160>
 8009ab2:	2f00      	cmp	r7, #0
 8009ab4:	d19a      	bne.n	80099ec <_Unwind_VRS_Pop+0x128>
 8009ab6:	4601      	mov	r1, r0
 8009ab8:	e7ab      	b.n	8009a12 <_Unwind_VRS_Pop+0x14e>
 8009aba:	f023 0308 	bic.w	r3, r3, #8
 8009abe:	6023      	str	r3, [r4, #0]
 8009ac0:	f504 70a8 	add.w	r0, r4, #336	; 0x150
 8009ac4:	f000 f86c 	bl	8009ba0 <__gnu_Unwind_Save_WMMXD>
 8009ac8:	e73f      	b.n	800994a <_Unwind_VRS_Pop+0x86>
 8009aca:	4620      	mov	r0, r4
 8009acc:	f022 0204 	bic.w	r2, r2, #4
 8009ad0:	f840 2bd0 	str.w	r2, [r0], #208
 8009ad4:	9301      	str	r3, [sp, #4]
 8009ad6:	f000 f83d 	bl	8009b54 <__gnu_Unwind_Save_VFP_D_16_to_31>
 8009ada:	9b01      	ldr	r3, [sp, #4]
 8009adc:	e7be      	b.n	8009a5c <_Unwind_VRS_Pop+0x198>
 8009ade:	a822      	add	r0, sp, #136	; 0x88
 8009ae0:	9301      	str	r3, [sp, #4]
 8009ae2:	f000 f827 	bl	8009b34 <__gnu_Unwind_Save_VFP>
 8009ae6:	9b01      	ldr	r3, [sp, #4]
 8009ae8:	e7c8      	b.n	8009a7c <_Unwind_VRS_Pop+0x1b8>
 8009aea:	f041 0102 	orr.w	r1, r1, #2
 8009aee:	f840 1b48 	str.w	r1, [r0], #72
 8009af2:	f000 f827 	bl	8009b44 <__gnu_Unwind_Save_VFP_D>
 8009af6:	9b01      	ldr	r3, [sp, #4]
 8009af8:	e7ab      	b.n	8009a52 <_Unwind_VRS_Pop+0x18e>
 8009afa:	2b01      	cmp	r3, #1
 8009afc:	d003      	beq.n	8009b06 <_Unwind_VRS_Pop+0x242>
 8009afe:	2e0f      	cmp	r6, #15
 8009b00:	f63f af60 	bhi.w	80099c4 <_Unwind_VRS_Pop+0x100>
 8009b04:	e7ae      	b.n	8009a64 <_Unwind_VRS_Pop+0x1a0>
 8009b06:	a822      	add	r0, sp, #136	; 0x88
 8009b08:	9301      	str	r3, [sp, #4]
 8009b0a:	f000 f813 	bl	8009b34 <__gnu_Unwind_Save_VFP>
 8009b0e:	9b01      	ldr	r3, [sp, #4]
 8009b10:	e758      	b.n	80099c4 <_Unwind_VRS_Pop+0x100>
 8009b12:	bf00      	nop

08009b14 <__restore_core_regs>:
 8009b14:	f100 0134 	add.w	r1, r0, #52	; 0x34
 8009b18:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
 8009b1c:	469c      	mov	ip, r3
 8009b1e:	46a6      	mov	lr, r4
 8009b20:	f84c 5d04 	str.w	r5, [ip, #-4]!
 8009b24:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 8009b28:	46e5      	mov	sp, ip
 8009b2a:	bd00      	pop	{pc}

08009b2c <__gnu_Unwind_Restore_VFP>:
 8009b2c:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
 8009b30:	4770      	bx	lr
 8009b32:	bf00      	nop

08009b34 <__gnu_Unwind_Save_VFP>:
 8009b34:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
 8009b38:	4770      	bx	lr
 8009b3a:	bf00      	nop

08009b3c <__gnu_Unwind_Restore_VFP_D>:
 8009b3c:	ec90 0b20 	vldmia	r0, {d0-d15}
 8009b40:	4770      	bx	lr
 8009b42:	bf00      	nop

08009b44 <__gnu_Unwind_Save_VFP_D>:
 8009b44:	ec80 0b20 	vstmia	r0, {d0-d15}
 8009b48:	4770      	bx	lr
 8009b4a:	bf00      	nop

08009b4c <__gnu_Unwind_Restore_VFP_D_16_to_31>:
 8009b4c:	ecd0 0b20 	vldmia	r0, {d16-d31}
 8009b50:	4770      	bx	lr
 8009b52:	bf00      	nop

08009b54 <__gnu_Unwind_Save_VFP_D_16_to_31>:
 8009b54:	ecc0 0b20 	vstmia	r0, {d16-d31}
 8009b58:	4770      	bx	lr
 8009b5a:	bf00      	nop

08009b5c <__gnu_Unwind_Restore_WMMXD>:
 8009b5c:	ecf0 0102 	ldfe	f0, [r0], #8
 8009b60:	ecf0 1102 	ldfe	f1, [r0], #8
 8009b64:	ecf0 2102 	ldfe	f2, [r0], #8
 8009b68:	ecf0 3102 	ldfe	f3, [r0], #8
 8009b6c:	ecf0 4102 	ldfe	f4, [r0], #8
 8009b70:	ecf0 5102 	ldfe	f5, [r0], #8
 8009b74:	ecf0 6102 	ldfe	f6, [r0], #8
 8009b78:	ecf0 7102 	ldfe	f7, [r0], #8
 8009b7c:	ecf0 8102 	ldfp	f0, [r0], #8
 8009b80:	ecf0 9102 	ldfp	f1, [r0], #8
 8009b84:	ecf0 a102 	ldfp	f2, [r0], #8
 8009b88:	ecf0 b102 	ldfp	f3, [r0], #8
 8009b8c:	ecf0 c102 	ldfp	f4, [r0], #8
 8009b90:	ecf0 d102 	ldfp	f5, [r0], #8
 8009b94:	ecf0 e102 	ldfp	f6, [r0], #8
 8009b98:	ecf0 f102 	ldfp	f7, [r0], #8
 8009b9c:	4770      	bx	lr
 8009b9e:	bf00      	nop

08009ba0 <__gnu_Unwind_Save_WMMXD>:
 8009ba0:	ece0 0102 	stfe	f0, [r0], #8
 8009ba4:	ece0 1102 	stfe	f1, [r0], #8
 8009ba8:	ece0 2102 	stfe	f2, [r0], #8
 8009bac:	ece0 3102 	stfe	f3, [r0], #8
 8009bb0:	ece0 4102 	stfe	f4, [r0], #8
 8009bb4:	ece0 5102 	stfe	f5, [r0], #8
 8009bb8:	ece0 6102 	stfe	f6, [r0], #8
 8009bbc:	ece0 7102 	stfe	f7, [r0], #8
 8009bc0:	ece0 8102 	stfp	f0, [r0], #8
 8009bc4:	ece0 9102 	stfp	f1, [r0], #8
 8009bc8:	ece0 a102 	stfp	f2, [r0], #8
 8009bcc:	ece0 b102 	stfp	f3, [r0], #8
 8009bd0:	ece0 c102 	stfp	f4, [r0], #8
 8009bd4:	ece0 d102 	stfp	f5, [r0], #8
 8009bd8:	ece0 e102 	stfp	f6, [r0], #8
 8009bdc:	ece0 f102 	stfp	f7, [r0], #8
 8009be0:	4770      	bx	lr
 8009be2:	bf00      	nop

08009be4 <__gnu_Unwind_Restore_WMMXC>:
 8009be4:	fcb0 8101 	ldc2	1, cr8, [r0], #4
 8009be8:	fcb0 9101 	ldc2	1, cr9, [r0], #4
 8009bec:	fcb0 a101 	ldc2	1, cr10, [r0], #4
 8009bf0:	fcb0 b101 	ldc2	1, cr11, [r0], #4
 8009bf4:	4770      	bx	lr
 8009bf6:	bf00      	nop

08009bf8 <__gnu_Unwind_Save_WMMXC>:
 8009bf8:	fca0 8101 	stc2	1, cr8, [r0], #4
 8009bfc:	fca0 9101 	stc2	1, cr9, [r0], #4
 8009c00:	fca0 a101 	stc2	1, cr10, [r0], #4
 8009c04:	fca0 b101 	stc2	1, cr11, [r0], #4
 8009c08:	4770      	bx	lr
 8009c0a:	bf00      	nop

08009c0c <_Unwind_RaiseException>:
 8009c0c:	46ec      	mov	ip, sp
 8009c0e:	b500      	push	{lr}
 8009c10:	e92d 5000 	stmdb	sp!, {ip, lr}
 8009c14:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8009c18:	f04f 0300 	mov.w	r3, #0
 8009c1c:	e92d 000c 	stmdb	sp!, {r2, r3}
 8009c20:	a901      	add	r1, sp, #4
 8009c22:	f7ff fbe9 	bl	80093f8 <__gnu_Unwind_RaiseException>
 8009c26:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8009c2a:	b012      	add	sp, #72	; 0x48
 8009c2c:	4770      	bx	lr
 8009c2e:	bf00      	nop

08009c30 <_Unwind_Resume>:
 8009c30:	46ec      	mov	ip, sp
 8009c32:	b500      	push	{lr}
 8009c34:	e92d 5000 	stmdb	sp!, {ip, lr}
 8009c38:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8009c3c:	f04f 0300 	mov.w	r3, #0
 8009c40:	e92d 000c 	stmdb	sp!, {r2, r3}
 8009c44:	a901      	add	r1, sp, #4
 8009c46:	f7ff fc11 	bl	800946c <__gnu_Unwind_Resume>
 8009c4a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8009c4e:	b012      	add	sp, #72	; 0x48
 8009c50:	4770      	bx	lr
 8009c52:	bf00      	nop

08009c54 <_Unwind_Resume_or_Rethrow>:
 8009c54:	46ec      	mov	ip, sp
 8009c56:	b500      	push	{lr}
 8009c58:	e92d 5000 	stmdb	sp!, {ip, lr}
 8009c5c:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8009c60:	f04f 0300 	mov.w	r3, #0
 8009c64:	e92d 000c 	stmdb	sp!, {r2, r3}
 8009c68:	a901      	add	r1, sp, #4
 8009c6a:	f7ff fc21 	bl	80094b0 <__gnu_Unwind_Resume_or_Rethrow>
 8009c6e:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8009c72:	b012      	add	sp, #72	; 0x48
 8009c74:	4770      	bx	lr
 8009c76:	bf00      	nop

08009c78 <_Unwind_ForcedUnwind>:
 8009c78:	46ec      	mov	ip, sp
 8009c7a:	b500      	push	{lr}
 8009c7c:	e92d 5000 	stmdb	sp!, {ip, lr}
 8009c80:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8009c84:	f04f 0300 	mov.w	r3, #0
 8009c88:	e92d 000c 	stmdb	sp!, {r2, r3}
 8009c8c:	ab01      	add	r3, sp, #4
 8009c8e:	f7ff fbe3 	bl	8009458 <__gnu_Unwind_ForcedUnwind>
 8009c92:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8009c96:	b012      	add	sp, #72	; 0x48
 8009c98:	4770      	bx	lr
 8009c9a:	bf00      	nop

08009c9c <_Unwind_Backtrace>:
 8009c9c:	46ec      	mov	ip, sp
 8009c9e:	b500      	push	{lr}
 8009ca0:	e92d 5000 	stmdb	sp!, {ip, lr}
 8009ca4:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8009ca8:	f04f 0300 	mov.w	r3, #0
 8009cac:	e92d 000c 	stmdb	sp!, {r2, r3}
 8009cb0:	aa01      	add	r2, sp, #4
 8009cb2:	f7ff fc5b 	bl	800956c <__gnu_Unwind_Backtrace>
 8009cb6:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8009cba:	b012      	add	sp, #72	; 0x48
 8009cbc:	4770      	bx	lr
 8009cbe:	bf00      	nop

08009cc0 <next_unwind_byte>:
 8009cc0:	7a03      	ldrb	r3, [r0, #8]
 8009cc2:	b91b      	cbnz	r3, 8009ccc <next_unwind_byte+0xc>
 8009cc4:	7a43      	ldrb	r3, [r0, #9]
 8009cc6:	b943      	cbnz	r3, 8009cda <next_unwind_byte+0x1a>
 8009cc8:	20b0      	movs	r0, #176	; 0xb0
 8009cca:	4770      	bx	lr
 8009ccc:	1e5a      	subs	r2, r3, #1
 8009cce:	6803      	ldr	r3, [r0, #0]
 8009cd0:	7202      	strb	r2, [r0, #8]
 8009cd2:	021a      	lsls	r2, r3, #8
 8009cd4:	6002      	str	r2, [r0, #0]
 8009cd6:	0e18      	lsrs	r0, r3, #24
 8009cd8:	4770      	bx	lr
 8009cda:	6842      	ldr	r2, [r0, #4]
 8009cdc:	3b01      	subs	r3, #1
 8009cde:	b410      	push	{r4}
 8009ce0:	7243      	strb	r3, [r0, #9]
 8009ce2:	6813      	ldr	r3, [r2, #0]
 8009ce4:	2103      	movs	r1, #3
 8009ce6:	1d14      	adds	r4, r2, #4
 8009ce8:	7201      	strb	r1, [r0, #8]
 8009cea:	021a      	lsls	r2, r3, #8
 8009cec:	6044      	str	r4, [r0, #4]
 8009cee:	6002      	str	r2, [r0, #0]
 8009cf0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009cf4:	0e18      	lsrs	r0, r3, #24
 8009cf6:	4770      	bx	lr

08009cf8 <_Unwind_GetGR.constprop.0>:
 8009cf8:	b500      	push	{lr}
 8009cfa:	b085      	sub	sp, #20
 8009cfc:	aa03      	add	r2, sp, #12
 8009cfe:	2300      	movs	r3, #0
 8009d00:	9200      	str	r2, [sp, #0]
 8009d02:	4619      	mov	r1, r3
 8009d04:	220c      	movs	r2, #12
 8009d06:	f7ff fbe3 	bl	80094d0 <_Unwind_VRS_Get>
 8009d0a:	9803      	ldr	r0, [sp, #12]
 8009d0c:	b005      	add	sp, #20
 8009d0e:	f85d fb04 	ldr.w	pc, [sp], #4
 8009d12:	bf00      	nop

08009d14 <unwind_UCB_from_context>:
 8009d14:	e7f0      	b.n	8009cf8 <_Unwind_GetGR.constprop.0>
 8009d16:	bf00      	nop

08009d18 <__gnu_unwind_execute>:
 8009d18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009d1c:	4606      	mov	r6, r0
 8009d1e:	b085      	sub	sp, #20
 8009d20:	460d      	mov	r5, r1
 8009d22:	f04f 0800 	mov.w	r8, #0
 8009d26:	4628      	mov	r0, r5
 8009d28:	f7ff ffca 	bl	8009cc0 <next_unwind_byte>
 8009d2c:	28b0      	cmp	r0, #176	; 0xb0
 8009d2e:	4604      	mov	r4, r0
 8009d30:	f000 80b4 	beq.w	8009e9c <__gnu_unwind_execute+0x184>
 8009d34:	f020 037f 	bic.w	r3, r0, #127	; 0x7f
 8009d38:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
 8009d3c:	d020      	beq.n	8009d80 <__gnu_unwind_execute+0x68>
 8009d3e:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
 8009d42:	2b80      	cmp	r3, #128	; 0x80
 8009d44:	d07a      	beq.n	8009e3c <__gnu_unwind_execute+0x124>
 8009d46:	2b90      	cmp	r3, #144	; 0x90
 8009d48:	d035      	beq.n	8009db6 <__gnu_unwind_execute+0x9e>
 8009d4a:	2ba0      	cmp	r3, #160	; 0xa0
 8009d4c:	d048      	beq.n	8009de0 <__gnu_unwind_execute+0xc8>
 8009d4e:	2bb0      	cmp	r3, #176	; 0xb0
 8009d50:	d05c      	beq.n	8009e0c <__gnu_unwind_execute+0xf4>
 8009d52:	2bc0      	cmp	r3, #192	; 0xc0
 8009d54:	f000 8089 	beq.w	8009e6a <__gnu_unwind_execute+0x152>
 8009d58:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 8009d5c:	2bd0      	cmp	r3, #208	; 0xd0
 8009d5e:	d10b      	bne.n	8009d78 <__gnu_unwind_execute+0x60>
 8009d60:	f000 0207 	and.w	r2, r0, #7
 8009d64:	3201      	adds	r2, #1
 8009d66:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8009d6a:	2305      	movs	r3, #5
 8009d6c:	2101      	movs	r1, #1
 8009d6e:	4630      	mov	r0, r6
 8009d70:	f7ff fda8 	bl	80098c4 <_Unwind_VRS_Pop>
 8009d74:	2800      	cmp	r0, #0
 8009d76:	d0d6      	beq.n	8009d26 <__gnu_unwind_execute+0xe>
 8009d78:	2009      	movs	r0, #9
 8009d7a:	b005      	add	sp, #20
 8009d7c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009d80:	f10d 090c 	add.w	r9, sp, #12
 8009d84:	4619      	mov	r1, r3
 8009d86:	0087      	lsls	r7, r0, #2
 8009d88:	f8cd 9000 	str.w	r9, [sp]
 8009d8c:	220d      	movs	r2, #13
 8009d8e:	4630      	mov	r0, r6
 8009d90:	f7ff fb9e 	bl	80094d0 <_Unwind_VRS_Get>
 8009d94:	b2ff      	uxtb	r7, r7
 8009d96:	9b03      	ldr	r3, [sp, #12]
 8009d98:	f8cd 9000 	str.w	r9, [sp]
 8009d9c:	3704      	adds	r7, #4
 8009d9e:	0660      	lsls	r0, r4, #25
 8009da0:	bf4c      	ite	mi
 8009da2:	1bdf      	submi	r7, r3, r7
 8009da4:	18ff      	addpl	r7, r7, r3
 8009da6:	2300      	movs	r3, #0
 8009da8:	4619      	mov	r1, r3
 8009daa:	220d      	movs	r2, #13
 8009dac:	4630      	mov	r0, r6
 8009dae:	9703      	str	r7, [sp, #12]
 8009db0:	f7ff fbb4 	bl	800951c <_Unwind_VRS_Set>
 8009db4:	e7b7      	b.n	8009d26 <__gnu_unwind_execute+0xe>
 8009db6:	f000 030d 	and.w	r3, r0, #13
 8009dba:	2b0d      	cmp	r3, #13
 8009dbc:	d0dc      	beq.n	8009d78 <__gnu_unwind_execute+0x60>
 8009dbe:	af03      	add	r7, sp, #12
 8009dc0:	2300      	movs	r3, #0
 8009dc2:	f000 020f 	and.w	r2, r0, #15
 8009dc6:	4619      	mov	r1, r3
 8009dc8:	9700      	str	r7, [sp, #0]
 8009dca:	4630      	mov	r0, r6
 8009dcc:	f7ff fb80 	bl	80094d0 <_Unwind_VRS_Get>
 8009dd0:	2300      	movs	r3, #0
 8009dd2:	9700      	str	r7, [sp, #0]
 8009dd4:	4619      	mov	r1, r3
 8009dd6:	220d      	movs	r2, #13
 8009dd8:	4630      	mov	r0, r6
 8009dda:	f7ff fb9f 	bl	800951c <_Unwind_VRS_Set>
 8009dde:	e7a2      	b.n	8009d26 <__gnu_unwind_execute+0xe>
 8009de0:	43c2      	mvns	r2, r0
 8009de2:	f44f 637f 	mov.w	r3, #4080	; 0xff0
 8009de6:	f002 0207 	and.w	r2, r2, #7
 8009dea:	fa43 f202 	asr.w	r2, r3, r2
 8009dee:	0701      	lsls	r1, r0, #28
 8009df0:	ea02 0203 	and.w	r2, r2, r3
 8009df4:	f04f 0300 	mov.w	r3, #0
 8009df8:	bf48      	it	mi
 8009dfa:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
 8009dfe:	4619      	mov	r1, r3
 8009e00:	4630      	mov	r0, r6
 8009e02:	f7ff fd5f 	bl	80098c4 <_Unwind_VRS_Pop>
 8009e06:	2800      	cmp	r0, #0
 8009e08:	d1b6      	bne.n	8009d78 <__gnu_unwind_execute+0x60>
 8009e0a:	e78c      	b.n	8009d26 <__gnu_unwind_execute+0xe>
 8009e0c:	28b1      	cmp	r0, #177	; 0xb1
 8009e0e:	d04a      	beq.n	8009ea6 <__gnu_unwind_execute+0x18e>
 8009e10:	28b2      	cmp	r0, #178	; 0xb2
 8009e12:	d053      	beq.n	8009ebc <__gnu_unwind_execute+0x1a4>
 8009e14:	28b3      	cmp	r0, #179	; 0xb3
 8009e16:	f000 8081 	beq.w	8009f1c <__gnu_unwind_execute+0x204>
 8009e1a:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
 8009e1e:	2bb4      	cmp	r3, #180	; 0xb4
 8009e20:	d0aa      	beq.n	8009d78 <__gnu_unwind_execute+0x60>
 8009e22:	f000 0207 	and.w	r2, r0, #7
 8009e26:	3201      	adds	r2, #1
 8009e28:	2301      	movs	r3, #1
 8009e2a:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8009e2e:	4619      	mov	r1, r3
 8009e30:	4630      	mov	r0, r6
 8009e32:	f7ff fd47 	bl	80098c4 <_Unwind_VRS_Pop>
 8009e36:	2800      	cmp	r0, #0
 8009e38:	d19e      	bne.n	8009d78 <__gnu_unwind_execute+0x60>
 8009e3a:	e774      	b.n	8009d26 <__gnu_unwind_execute+0xe>
 8009e3c:	4628      	mov	r0, r5
 8009e3e:	f7ff ff3f 	bl	8009cc0 <next_unwind_byte>
 8009e42:	0224      	lsls	r4, r4, #8
 8009e44:	4320      	orrs	r0, r4
 8009e46:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8009e4a:	d095      	beq.n	8009d78 <__gnu_unwind_execute+0x60>
 8009e4c:	0104      	lsls	r4, r0, #4
 8009e4e:	2300      	movs	r3, #0
 8009e50:	b2a2      	uxth	r2, r4
 8009e52:	4619      	mov	r1, r3
 8009e54:	4630      	mov	r0, r6
 8009e56:	f7ff fd35 	bl	80098c4 <_Unwind_VRS_Pop>
 8009e5a:	2800      	cmp	r0, #0
 8009e5c:	d18c      	bne.n	8009d78 <__gnu_unwind_execute+0x60>
 8009e5e:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8009e62:	bf18      	it	ne
 8009e64:	f04f 0801 	movne.w	r8, #1
 8009e68:	e75d      	b.n	8009d26 <__gnu_unwind_execute+0xe>
 8009e6a:	28c6      	cmp	r0, #198	; 0xc6
 8009e6c:	d062      	beq.n	8009f34 <__gnu_unwind_execute+0x21c>
 8009e6e:	28c7      	cmp	r0, #199	; 0xc7
 8009e70:	d06c      	beq.n	8009f4c <__gnu_unwind_execute+0x234>
 8009e72:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 8009e76:	2bc0      	cmp	r3, #192	; 0xc0
 8009e78:	d07b      	beq.n	8009f72 <__gnu_unwind_execute+0x25a>
 8009e7a:	28c8      	cmp	r0, #200	; 0xc8
 8009e7c:	f000 8091 	beq.w	8009fa2 <__gnu_unwind_execute+0x28a>
 8009e80:	28c9      	cmp	r0, #201	; 0xc9
 8009e82:	f47f af79 	bne.w	8009d78 <__gnu_unwind_execute+0x60>
 8009e86:	4628      	mov	r0, r5
 8009e88:	f7ff ff1a 	bl	8009cc0 <next_unwind_byte>
 8009e8c:	0302      	lsls	r2, r0, #12
 8009e8e:	f000 000f 	and.w	r0, r0, #15
 8009e92:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
 8009e96:	3001      	adds	r0, #1
 8009e98:	4302      	orrs	r2, r0
 8009e9a:	e766      	b.n	8009d6a <__gnu_unwind_execute+0x52>
 8009e9c:	f1b8 0f00 	cmp.w	r8, #0
 8009ea0:	d06e      	beq.n	8009f80 <__gnu_unwind_execute+0x268>
 8009ea2:	2000      	movs	r0, #0
 8009ea4:	e769      	b.n	8009d7a <__gnu_unwind_execute+0x62>
 8009ea6:	4628      	mov	r0, r5
 8009ea8:	f7ff ff0a 	bl	8009cc0 <next_unwind_byte>
 8009eac:	4602      	mov	r2, r0
 8009eae:	2800      	cmp	r0, #0
 8009eb0:	f43f af62 	beq.w	8009d78 <__gnu_unwind_execute+0x60>
 8009eb4:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
 8009eb8:	d0b9      	beq.n	8009e2e <__gnu_unwind_execute+0x116>
 8009eba:	e75d      	b.n	8009d78 <__gnu_unwind_execute+0x60>
 8009ebc:	2300      	movs	r3, #0
 8009ebe:	f10d 090c 	add.w	r9, sp, #12
 8009ec2:	220d      	movs	r2, #13
 8009ec4:	4619      	mov	r1, r3
 8009ec6:	f8cd 9000 	str.w	r9, [sp]
 8009eca:	4630      	mov	r0, r6
 8009ecc:	f7ff fb00 	bl	80094d0 <_Unwind_VRS_Get>
 8009ed0:	4628      	mov	r0, r5
 8009ed2:	f7ff fef5 	bl	8009cc0 <next_unwind_byte>
 8009ed6:	0602      	lsls	r2, r0, #24
 8009ed8:	f04f 0402 	mov.w	r4, #2
 8009edc:	d50c      	bpl.n	8009ef8 <__gnu_unwind_execute+0x1e0>
 8009ede:	9b03      	ldr	r3, [sp, #12]
 8009ee0:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8009ee4:	40a0      	lsls	r0, r4
 8009ee6:	4403      	add	r3, r0
 8009ee8:	4628      	mov	r0, r5
 8009eea:	9303      	str	r3, [sp, #12]
 8009eec:	f7ff fee8 	bl	8009cc0 <next_unwind_byte>
 8009ef0:	0603      	lsls	r3, r0, #24
 8009ef2:	f104 0407 	add.w	r4, r4, #7
 8009ef6:	d4f2      	bmi.n	8009ede <__gnu_unwind_execute+0x1c6>
 8009ef8:	9b03      	ldr	r3, [sp, #12]
 8009efa:	f8cd 9000 	str.w	r9, [sp]
 8009efe:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8009f02:	fa00 f204 	lsl.w	r2, r0, r4
 8009f06:	f503 7401 	add.w	r4, r3, #516	; 0x204
 8009f0a:	2300      	movs	r3, #0
 8009f0c:	4414      	add	r4, r2
 8009f0e:	4619      	mov	r1, r3
 8009f10:	220d      	movs	r2, #13
 8009f12:	4630      	mov	r0, r6
 8009f14:	9403      	str	r4, [sp, #12]
 8009f16:	f7ff fb01 	bl	800951c <_Unwind_VRS_Set>
 8009f1a:	e704      	b.n	8009d26 <__gnu_unwind_execute+0xe>
 8009f1c:	4628      	mov	r0, r5
 8009f1e:	f7ff fecf 	bl	8009cc0 <next_unwind_byte>
 8009f22:	0301      	lsls	r1, r0, #12
 8009f24:	f000 000f 	and.w	r0, r0, #15
 8009f28:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
 8009f2c:	1c42      	adds	r2, r0, #1
 8009f2e:	2301      	movs	r3, #1
 8009f30:	430a      	orrs	r2, r1
 8009f32:	e77c      	b.n	8009e2e <__gnu_unwind_execute+0x116>
 8009f34:	4628      	mov	r0, r5
 8009f36:	f7ff fec3 	bl	8009cc0 <next_unwind_byte>
 8009f3a:	0301      	lsls	r1, r0, #12
 8009f3c:	f000 000f 	and.w	r0, r0, #15
 8009f40:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
 8009f44:	1c42      	adds	r2, r0, #1
 8009f46:	2303      	movs	r3, #3
 8009f48:	430a      	orrs	r2, r1
 8009f4a:	e770      	b.n	8009e2e <__gnu_unwind_execute+0x116>
 8009f4c:	4628      	mov	r0, r5
 8009f4e:	f7ff feb7 	bl	8009cc0 <next_unwind_byte>
 8009f52:	4602      	mov	r2, r0
 8009f54:	2800      	cmp	r0, #0
 8009f56:	f43f af0f 	beq.w	8009d78 <__gnu_unwind_execute+0x60>
 8009f5a:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
 8009f5e:	f47f af0b 	bne.w	8009d78 <__gnu_unwind_execute+0x60>
 8009f62:	2104      	movs	r1, #4
 8009f64:	4630      	mov	r0, r6
 8009f66:	f7ff fcad 	bl	80098c4 <_Unwind_VRS_Pop>
 8009f6a:	2800      	cmp	r0, #0
 8009f6c:	f47f af04 	bne.w	8009d78 <__gnu_unwind_execute+0x60>
 8009f70:	e6d9      	b.n	8009d26 <__gnu_unwind_execute+0xe>
 8009f72:	f000 020f 	and.w	r2, r0, #15
 8009f76:	3201      	adds	r2, #1
 8009f78:	2303      	movs	r3, #3
 8009f7a:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
 8009f7e:	e756      	b.n	8009e2e <__gnu_unwind_execute+0x116>
 8009f80:	ac03      	add	r4, sp, #12
 8009f82:	4643      	mov	r3, r8
 8009f84:	220e      	movs	r2, #14
 8009f86:	4641      	mov	r1, r8
 8009f88:	9400      	str	r4, [sp, #0]
 8009f8a:	4630      	mov	r0, r6
 8009f8c:	f7ff faa0 	bl	80094d0 <_Unwind_VRS_Get>
 8009f90:	9400      	str	r4, [sp, #0]
 8009f92:	4630      	mov	r0, r6
 8009f94:	4643      	mov	r3, r8
 8009f96:	220f      	movs	r2, #15
 8009f98:	4641      	mov	r1, r8
 8009f9a:	f7ff fabf 	bl	800951c <_Unwind_VRS_Set>
 8009f9e:	4640      	mov	r0, r8
 8009fa0:	e6eb      	b.n	8009d7a <__gnu_unwind_execute+0x62>
 8009fa2:	4628      	mov	r0, r5
 8009fa4:	f7ff fe8c 	bl	8009cc0 <next_unwind_byte>
 8009fa8:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
 8009fac:	f000 030f 	and.w	r3, r0, #15
 8009fb0:	3210      	adds	r2, #16
 8009fb2:	3301      	adds	r3, #1
 8009fb4:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
 8009fb8:	e6d7      	b.n	8009d6a <__gnu_unwind_execute+0x52>
 8009fba:	bf00      	nop

08009fbc <__gnu_unwind_frame>:
 8009fbc:	b510      	push	{r4, lr}
 8009fbe:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8009fc0:	b084      	sub	sp, #16
 8009fc2:	685a      	ldr	r2, [r3, #4]
 8009fc4:	2003      	movs	r0, #3
 8009fc6:	f88d 000c 	strb.w	r0, [sp, #12]
 8009fca:	79dc      	ldrb	r4, [r3, #7]
 8009fcc:	f88d 400d 	strb.w	r4, [sp, #13]
 8009fd0:	0212      	lsls	r2, r2, #8
 8009fd2:	3308      	adds	r3, #8
 8009fd4:	4608      	mov	r0, r1
 8009fd6:	a901      	add	r1, sp, #4
 8009fd8:	9201      	str	r2, [sp, #4]
 8009fda:	9302      	str	r3, [sp, #8]
 8009fdc:	f7ff fe9c 	bl	8009d18 <__gnu_unwind_execute>
 8009fe0:	b004      	add	sp, #16
 8009fe2:	bd10      	pop	{r4, pc}

08009fe4 <_Unwind_GetRegionStart>:
 8009fe4:	b508      	push	{r3, lr}
 8009fe6:	f7ff fe95 	bl	8009d14 <unwind_UCB_from_context>
 8009fea:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8009fec:	bd08      	pop	{r3, pc}
 8009fee:	bf00      	nop

08009ff0 <_Unwind_GetLanguageSpecificData>:
 8009ff0:	b508      	push	{r3, lr}
 8009ff2:	f7ff fe8f 	bl	8009d14 <unwind_UCB_from_context>
 8009ff6:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8009ff8:	79d8      	ldrb	r0, [r3, #7]
 8009ffa:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8009ffe:	3008      	adds	r0, #8
 800a000:	bd08      	pop	{r3, pc}
 800a002:	bf00      	nop

0800a004 <_Unwind_GetTextRelBase>:
 800a004:	b508      	push	{r3, lr}
 800a006:	f002 fda1 	bl	800cb4c <abort>
 800a00a:	bf00      	nop

0800a00c <_Unwind_GetDataRelBase>:
 800a00c:	b508      	push	{r3, lr}
 800a00e:	f7ff fff9 	bl	800a004 <_Unwind_GetTextRelBase>
 800a012:	bf00      	nop

0800a014 <__aeabi_idiv0>:
 800a014:	4770      	bx	lr
 800a016:	bf00      	nop

0800a018 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 800a018:	f8df d034 	ldr.w	sp, [pc, #52]	; 800a050 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 800a01c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800a01e:	e003      	b.n	800a028 <LoopCopyDataInit>

0800a020 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800a020:	4b0c      	ldr	r3, [pc, #48]	; (800a054 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800a022:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 800a024:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800a026:	3104      	adds	r1, #4

0800a028 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800a028:	480b      	ldr	r0, [pc, #44]	; (800a058 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800a02a:	4b0c      	ldr	r3, [pc, #48]	; (800a05c <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 800a02c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 800a02e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 800a030:	d3f6      	bcc.n	800a020 <CopyDataInit>
  ldr  r2, =_sbss
 800a032:	4a0b      	ldr	r2, [pc, #44]	; (800a060 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 800a034:	e002      	b.n	800a03c <LoopFillZerobss>

0800a036 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800a036:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800a038:	f842 3b04 	str.w	r3, [r2], #4

0800a03c <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 800a03c:	4b09      	ldr	r3, [pc, #36]	; (800a064 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 800a03e:	429a      	cmp	r2, r3
  bcc  FillZerobss
 800a040:	d3f9      	bcc.n	800a036 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 800a042:	f000 fb87 	bl	800a754 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800a046:	f002 ff93 	bl	800cf70 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800a04a:	f000 f91b 	bl	800a284 <main>
  bx  lr    
 800a04e:	4770      	bx	lr

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 800a050:	20020000 	.word	0x20020000
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
  b  LoopCopyDataInit

CopyDataInit:
  ldr  r3, =_sidata
 800a054:	08011d6c 	.word	0x08011d6c
  ldr  r3, [r3, r1]
  str  r3, [r0, r1]
  adds  r1, r1, #4
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800a058:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 800a05c:	20000548 	.word	0x20000548
  adds  r2, r0, r1
  cmp  r2, r3
  bcc  CopyDataInit
  ldr  r2, =_sbss
 800a060:	20000548 	.word	0x20000548
FillZerobss:
  movs  r3, #0
  str  r3, [r2], #4
    
LoopFillZerobss:
  ldr  r3, = _ebss
 800a064:	200006c4 	.word	0x200006c4

0800a068 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800a068:	e7fe      	b.n	800a068 <ADC_IRQHandler>
	...

0800a06c <MX_ADC1_Init>:

ADC_HandleTypeDef hadc1;

/* ADC1 init function */
void MX_ADC1_Init(void)
{
 800a06c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  ADC_ChannelConfTypeDef sConfig;

    /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion) 
    */
  hadc1.Instance = ADC1;
 800a06e:	4814      	ldr	r0, [pc, #80]	; (800a0c0 <MX_ADC1_Init+0x54>)
 800a070:	4b14      	ldr	r3, [pc, #80]	; (800a0c4 <MX_ADC1_Init+0x58>)
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  hadc1.Init.ScanConvMode = DISABLE;
  hadc1.Init.ContinuousConvMode = DISABLE;
  hadc1.Init.DiscontinuousConvMode = DISABLE;
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800a072:	4a15      	ldr	r2, [pc, #84]	; (800a0c8 <MX_ADC1_Init+0x5c>)
{
  ADC_ChannelConfTypeDef sConfig;

    /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion) 
    */
  hadc1.Instance = ADC1;
 800a074:	6003      	str	r3, [r0, #0]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  hadc1.Init.ScanConvMode = DISABLE;
  hadc1.Init.ContinuousConvMode = DISABLE;
  hadc1.Init.DiscontinuousConvMode = DISABLE;
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800a076:	6282      	str	r2, [r0, #40]	; 0x28
  ADC_ChannelConfTypeDef sConfig;

    /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion) 
    */
  hadc1.Instance = ADC1;
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 800a078:	2300      	movs	r3, #0
  hadc1.Init.ContinuousConvMode = DISABLE;
  hadc1.Init.DiscontinuousConvMode = DISABLE;
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  hadc1.Init.NbrOfConversion = 1;
 800a07a:	2201      	movs	r2, #1
  ADC_ChannelConfTypeDef sConfig;

    /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion) 
    */
  hadc1.Instance = ADC1;
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 800a07c:	6043      	str	r3, [r0, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 800a07e:	6083      	str	r3, [r0, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 800a080:	6103      	str	r3, [r0, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 800a082:	6183      	str	r3, [r0, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 800a084:	6203      	str	r3, [r0, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800a086:	62c3      	str	r3, [r0, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800a088:	60c3      	str	r3, [r0, #12]
  hadc1.Init.NbrOfConversion = 1;
 800a08a:	61c2      	str	r2, [r0, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 800a08c:	6303      	str	r3, [r0, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800a08e:	6142      	str	r2, [r0, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800a090:	f000 fbc2 	bl	800a818 <HAL_ADC_Init>
 800a094:	b118      	cbz	r0, 800a09e <MX_ADC1_Init+0x32>
  {
    _Error_Handler(__FILE__, __LINE__);
 800a096:	2148      	movs	r1, #72	; 0x48
 800a098:	480c      	ldr	r0, [pc, #48]	; (800a0cc <MX_ADC1_Init+0x60>)
 800a09a:	f000 f995 	bl	800a3c8 <_Error_Handler>

    /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time. 
    */
  sConfig.Channel = ADC_CHANNEL_4;
  sConfig.Rank = 1;
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 800a09e:	2104      	movs	r1, #4
 800a0a0:	2201      	movs	r2, #1
 800a0a2:	2300      	movs	r3, #0
 800a0a4:	e88d 000e 	stmia.w	sp, {r1, r2, r3}
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800a0a8:	4805      	ldr	r0, [pc, #20]	; (800a0c0 <MX_ADC1_Init+0x54>)
 800a0aa:	4669      	mov	r1, sp
 800a0ac:	f000 fc58 	bl	800a960 <HAL_ADC_ConfigChannel>
 800a0b0:	b118      	cbz	r0, 800a0ba <MX_ADC1_Init+0x4e>
  {
    _Error_Handler(__FILE__, __LINE__);
 800a0b2:	2152      	movs	r1, #82	; 0x52
 800a0b4:	4805      	ldr	r0, [pc, #20]	; (800a0cc <MX_ADC1_Init+0x60>)
 800a0b6:	f000 f987 	bl	800a3c8 <_Error_Handler>
  }

}
 800a0ba:	b005      	add	sp, #20
 800a0bc:	f85d fb04 	ldr.w	pc, [sp], #4
 800a0c0:	200005bc 	.word	0x200005bc
 800a0c4:	40012000 	.word	0x40012000
 800a0c8:	0f000001 	.word	0x0f000001
 800a0cc:	08010e20 	.word	0x08010e20

0800a0d0 <HAL_ADC_MspInit>:

void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
{
 800a0d0:	b530      	push	{r4, r5, lr}

  GPIO_InitTypeDef GPIO_InitStruct;
  if(adcHandle->Instance==ADC1)
 800a0d2:	6802      	ldr	r2, [r0, #0]
 800a0d4:	4b11      	ldr	r3, [pc, #68]	; (800a11c <HAL_ADC_MspInit+0x4c>)
 800a0d6:	429a      	cmp	r2, r3
  }

}

void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
{
 800a0d8:	b087      	sub	sp, #28

  GPIO_InitTypeDef GPIO_InitStruct;
  if(adcHandle->Instance==ADC1)
 800a0da:	d11c      	bne.n	800a116 <HAL_ADC_MspInit+0x46>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* ADC1 clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 800a0dc:	2400      	movs	r4, #0
 800a0de:	f503 338c 	add.w	r3, r3, #71680	; 0x11800
 800a0e2:	9400      	str	r4, [sp, #0]
 800a0e4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    PA5     ------> ADC1_IN5 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800a0e6:	480e      	ldr	r0, [pc, #56]	; (800a120 <HAL_ADC_MspInit+0x50>)
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* ADC1 clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 800a0e8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a0ec:	645a      	str	r2, [r3, #68]	; 0x44
 800a0ee:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    PA4     ------> ADC1_IN4
    PA5     ------> ADC1_IN5 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800a0f0:	9403      	str	r4, [sp, #12]
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* ADC1 clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 800a0f2:	f403 7380 	and.w	r3, r3, #256	; 0x100
    PC0     ------> ADC1_IN10
    PC1     ------> ADC1_IN11
    PA4     ------> ADC1_IN4
    PA5     ------> ADC1_IN5 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800a0f6:	2503      	movs	r5, #3
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* ADC1 clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 800a0f8:	9300      	str	r3, [sp, #0]
    PA5     ------> ADC1_IN5 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800a0fa:	a901      	add	r1, sp, #4
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* ADC1 clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 800a0fc:	9b00      	ldr	r3, [sp, #0]
    PC0     ------> ADC1_IN10
    PC1     ------> ADC1_IN11
    PA4     ------> ADC1_IN4
    PA5     ------> ADC1_IN5 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800a0fe:	9501      	str	r5, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800a100:	9502      	str	r5, [sp, #8]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800a102:	f000 fd3d 	bl	800ab80 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = bat_vol_Pin|curr_sen1_Pin;
 800a106:	2330      	movs	r3, #48	; 0x30
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800a108:	a901      	add	r1, sp, #4
 800a10a:	4806      	ldr	r0, [pc, #24]	; (800a124 <HAL_ADC_MspInit+0x54>)
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);

    GPIO_InitStruct.Pin = bat_vol_Pin|curr_sen1_Pin;
 800a10c:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800a10e:	9502      	str	r5, [sp, #8]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800a110:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800a112:	f000 fd35 	bl	800ab80 <HAL_GPIO_Init>

  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }
}
 800a116:	b007      	add	sp, #28
 800a118:	bd30      	pop	{r4, r5, pc}
 800a11a:	bf00      	nop
 800a11c:	40012000 	.word	0x40012000
 800a120:	40020800 	.word	0x40020800
 800a124:	40020000 	.word	0x40020000

0800a128 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 800a128:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a12c:	b08c      	sub	sp, #48	; 0x30

  GPIO_InitTypeDef GPIO_InitStruct;

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800a12e:	2400      	movs	r4, #0
 800a130:	4b4e      	ldr	r3, [pc, #312]	; (800a26c <MX_GPIO_Init+0x144>)
 800a132:	9401      	str	r4, [sp, #4]
 800a134:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  __HAL_RCC_GPIOA_CLK_ENABLE();
  __HAL_RCC_GPIOB_CLK_ENABLE();
  __HAL_RCC_GPIOD_CLK_ENABLE();

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOE, led1_Pin|led2_Pin, GPIO_PIN_RESET);
 800a136:	f8df 8148 	ldr.w	r8, [pc, #328]	; 800a280 <MX_GPIO_Init+0x158>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, P_HA_Pin|P_HB_Pin|P_HC_Pin|en_gate_Pin, GPIO_PIN_RESET);
 800a13a:	4f4d      	ldr	r7, [pc, #308]	; (800a270 <MX_GPIO_Init+0x148>)

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, dc_cal_out_Pin|m_ob_out_Pin|mpem_out_Pin, GPIO_PIN_RESET);
 800a13c:	4d4d      	ldr	r5, [pc, #308]	; (800a274 <MX_GPIO_Init+0x14c>)
{

  GPIO_InitTypeDef GPIO_InitStruct;

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800a13e:	f042 0210 	orr.w	r2, r2, #16
 800a142:	631a      	str	r2, [r3, #48]	; 0x30
 800a144:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a146:	f002 0210 	and.w	r2, r2, #16
 800a14a:	9201      	str	r2, [sp, #4]
 800a14c:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800a14e:	9402      	str	r4, [sp, #8]
 800a150:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a152:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800a156:	631a      	str	r2, [r3, #48]	; 0x30
 800a158:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a15a:	f002 0280 	and.w	r2, r2, #128	; 0x80
 800a15e:	9202      	str	r2, [sp, #8]
 800a160:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800a162:	9403      	str	r4, [sp, #12]
 800a164:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a166:	f042 0204 	orr.w	r2, r2, #4
 800a16a:	631a      	str	r2, [r3, #48]	; 0x30
 800a16c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a16e:	f002 0204 	and.w	r2, r2, #4
 800a172:	9203      	str	r2, [sp, #12]
 800a174:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800a176:	9404      	str	r4, [sp, #16]
 800a178:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a17a:	f042 0201 	orr.w	r2, r2, #1
 800a17e:	631a      	str	r2, [r3, #48]	; 0x30
 800a180:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a182:	f002 0201 	and.w	r2, r2, #1
 800a186:	9204      	str	r2, [sp, #16]
 800a188:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800a18a:	9405      	str	r4, [sp, #20]
 800a18c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a18e:	f042 0202 	orr.w	r2, r2, #2
 800a192:	631a      	str	r2, [r3, #48]	; 0x30
 800a194:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a196:	f002 0202 	and.w	r2, r2, #2
 800a19a:	9205      	str	r2, [sp, #20]
 800a19c:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800a19e:	9406      	str	r4, [sp, #24]
 800a1a0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a1a2:	f042 0208 	orr.w	r2, r2, #8
 800a1a6:	631a      	str	r2, [r3, #48]	; 0x30
 800a1a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a1aa:	f003 0308 	and.w	r3, r3, #8
 800a1ae:	9306      	str	r3, [sp, #24]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOE, led1_Pin|led2_Pin, GPIO_PIN_RESET);
 800a1b0:	4622      	mov	r2, r4
 800a1b2:	4640      	mov	r0, r8
 800a1b4:	210c      	movs	r1, #12
  __HAL_RCC_GPIOE_CLK_ENABLE();
  __HAL_RCC_GPIOH_CLK_ENABLE();
  __HAL_RCC_GPIOC_CLK_ENABLE();
  __HAL_RCC_GPIOA_CLK_ENABLE();
  __HAL_RCC_GPIOB_CLK_ENABLE();
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800a1b6:	9b06      	ldr	r3, [sp, #24]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOE, led1_Pin|led2_Pin, GPIO_PIN_RESET);
 800a1b8:	f000 fdc2 	bl	800ad40 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, P_HA_Pin|P_HB_Pin|P_HC_Pin|en_gate_Pin, GPIO_PIN_RESET);
 800a1bc:	4622      	mov	r2, r4
 800a1be:	4638      	mov	r0, r7
 800a1c0:	f240 1107 	movw	r1, #263	; 0x107
 800a1c4:	f000 fdbc 	bl	800ad40 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, dc_cal_out_Pin|m_ob_out_Pin|mpem_out_Pin, GPIO_PIN_RESET);
 800a1c8:	4622      	mov	r2, r4
 800a1ca:	4628      	mov	r0, r5
 800a1cc:	210d      	movs	r1, #13
 800a1ce:	f000 fdb7 	bl	800ad40 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PEPin PEPin */
  GPIO_InitStruct.Pin = led1_Pin|led2_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800a1d2:	2601      	movs	r6, #1

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, dc_cal_out_Pin|m_ob_out_Pin|mpem_out_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pins : PEPin PEPin */
  GPIO_InitStruct.Pin = led1_Pin|led2_Pin;
 800a1d4:	230c      	movs	r3, #12
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800a1d6:	a907      	add	r1, sp, #28
 800a1d8:	4640      	mov	r0, r8

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, dc_cal_out_Pin|m_ob_out_Pin|mpem_out_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pins : PEPin PEPin */
  GPIO_InitStruct.Pin = led1_Pin|led2_Pin;
 800a1da:	9307      	str	r3, [sp, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800a1dc:	9608      	str	r6, [sp, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800a1de:	9409      	str	r4, [sp, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800a1e0:	940a      	str	r4, [sp, #40]	; 0x28
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800a1e2:	f000 fccd 	bl	800ab80 <HAL_GPIO_Init>

  /*Configure GPIO pins : PBPin PBPin PBPin PBPin */
  GPIO_InitStruct.Pin = P_HA_Pin|P_HB_Pin|P_HC_Pin|en_gate_Pin;
 800a1e6:	f240 1307 	movw	r3, #263	; 0x107
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800a1ea:	a907      	add	r1, sp, #28
 800a1ec:	4638      	mov	r0, r7
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);

  /*Configure GPIO pins : PBPin PBPin PBPin PBPin */
  GPIO_InitStruct.Pin = P_HA_Pin|P_HB_Pin|P_HC_Pin|en_gate_Pin;
 800a1ee:	9307      	str	r3, [sp, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800a1f0:	9608      	str	r6, [sp, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800a1f2:	9409      	str	r4, [sp, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800a1f4:	940a      	str	r4, [sp, #40]	; 0x28
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800a1f6:	f000 fcc3 	bl	800ab80 <HAL_GPIO_Init>

  /*Configure GPIO pins : PDPin PDPin PDPin */
  GPIO_InitStruct.Pin = fault_in_Pin|octw_in_Pin|gain_in_Pin;
 800a1fa:	f248 1302 	movw	r3, #33026	; 0x8102
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800a1fe:	a907      	add	r1, sp, #28
 800a200:	4628      	mov	r0, r5
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);

  /*Configure GPIO pins : PDPin PDPin PDPin */
  GPIO_InitStruct.Pin = fault_in_Pin|octw_in_Pin|gain_in_Pin;
 800a202:	9307      	str	r3, [sp, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800a204:	9408      	str	r4, [sp, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800a206:	9409      	str	r4, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800a208:	f000 fcba 	bl	800ab80 <HAL_GPIO_Init>

  /*Configure GPIO pins : PDPin PDPin PDPin */
  GPIO_InitStruct.Pin = hall1_exti9_Pin|hall2_exti10_Pin|hall3_exti11_Pin;
 800a20c:	f44f 6360 	mov.w	r3, #3584	; 0xe00
 800a210:	9307      	str	r3, [sp, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800a212:	a907      	add	r1, sp, #28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);

  /*Configure GPIO pins : PDPin PDPin PDPin */
  GPIO_InitStruct.Pin = hall1_exti9_Pin|hall2_exti10_Pin|hall3_exti11_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 800a214:	4b18      	ldr	r3, [pc, #96]	; (800a278 <MX_GPIO_Init+0x150>)
 800a216:	9308      	str	r3, [sp, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800a218:	4628      	mov	r0, r5
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);

  /*Configure GPIO pins : PDPin PDPin PDPin */
  GPIO_InitStruct.Pin = hall1_exti9_Pin|hall2_exti10_Pin|hall3_exti11_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800a21a:	9409      	str	r4, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800a21c:	f000 fcb0 	bl	800ab80 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = PWRGD_in_Pin;
 800a220:	f44f 6300 	mov.w	r3, #2048	; 0x800
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(PWRGD_in_GPIO_Port, &GPIO_InitStruct);
 800a224:	a907      	add	r1, sp, #28
 800a226:	4815      	ldr	r0, [pc, #84]	; (800a27c <MX_GPIO_Init+0x154>)
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = PWRGD_in_Pin;
 800a228:	9307      	str	r3, [sp, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800a22a:	9408      	str	r4, [sp, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800a22c:	9409      	str	r4, [sp, #36]	; 0x24
  HAL_GPIO_Init(PWRGD_in_GPIO_Port, &GPIO_InitStruct);
 800a22e:	f000 fca7 	bl	800ab80 <HAL_GPIO_Init>

  /*Configure GPIO pins : PDPin PDPin PDPin */
  GPIO_InitStruct.Pin = dc_cal_out_Pin|m_ob_out_Pin|mpem_out_Pin;
 800a232:	230d      	movs	r3, #13
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800a234:	a907      	add	r1, sp, #28
 800a236:	4628      	mov	r0, r5
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(PWRGD_in_GPIO_Port, &GPIO_InitStruct);

  /*Configure GPIO pins : PDPin PDPin PDPin */
  GPIO_InitStruct.Pin = dc_cal_out_Pin|m_ob_out_Pin|mpem_out_Pin;
 800a238:	9307      	str	r3, [sp, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800a23a:	9608      	str	r6, [sp, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800a23c:	9409      	str	r4, [sp, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800a23e:	940a      	str	r4, [sp, #40]	; 0x28
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800a240:	f000 fc9e 	bl	800ab80 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 800a244:	4622      	mov	r2, r4
 800a246:	4621      	mov	r1, r4
 800a248:	2017      	movs	r0, #23
 800a24a:	f000 fc31 	bl	800aab0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 800a24e:	2017      	movs	r0, #23
 800a250:	f000 fc62 	bl	800ab18 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 800a254:	4622      	mov	r2, r4
 800a256:	4621      	mov	r1, r4
 800a258:	2028      	movs	r0, #40	; 0x28
 800a25a:	f000 fc29 	bl	800aab0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 800a25e:	2028      	movs	r0, #40	; 0x28
 800a260:	f000 fc5a 	bl	800ab18 <HAL_NVIC_EnableIRQ>

}
 800a264:	b00c      	add	sp, #48	; 0x30
 800a266:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a26a:	bf00      	nop
 800a26c:	40023800 	.word	0x40023800
 800a270:	40020400 	.word	0x40020400
 800a274:	40020c00 	.word	0x40020c00
 800a278:	10310000 	.word	0x10310000
 800a27c:	40020000 	.word	0x40020000
 800a280:	40021000 	.word	0x40021000

0800a284 <main>:
/* USER CODE BEGIN 0 */

/* USER CODE END 0 */

int main(void)
{
 800a284:	b580      	push	{r7, lr}
 800a286:	b082      	sub	sp, #8
 800a288:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN 1 */
	//HallEncoder<uint16_t,GPIO_TypeDef*> motor_hall(GPIOD,hall1_exti9_Pin,GPIOD,hall2_exti10_Pin,GPIOD,hall3_exti11_Pin);
	//HallEncoder<uint16_t,uint16_t> motor_hall(1,1,1,1,1,1);
	HallEncoder<int> motor_hall;
 800a28a:	1d3b      	adds	r3, r7, #4
 800a28c:	4618      	mov	r0, r3
 800a28e:	f000 f8a1 	bl	800a3d4 <_ZN11HallEncoderIiEC1Ev>
	motor_hall.dummy(3);
 800a292:	1d3b      	adds	r3, r7, #4
 800a294:	2103      	movs	r1, #3
 800a296:	4618      	mov	r0, r3
 800a298:	f000 f8b4 	bl	800a404 <_ZN11HallEncoderIiE5dummyEi>
  /* USER CODE END 1 */

  /* MCU Configuration----------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800a29c:	f000 fa94 	bl	800a7c8 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800a2a0:	f000 f812 	bl	800a2c8 <_Z18SystemClock_Configv>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800a2a4:	f7ff ff40 	bl	800a128 <MX_GPIO_Init>
  MX_ADC1_Init();
 800a2a8:	f7ff fee0 	bl	800a06c <MX_ADC1_Init>
  MX_TIM3_Init();
 800a2ac:	f000 f90e 	bl	800a4cc <MX_TIM3_Init>
  MX_TIM4_Init();
 800a2b0:	f000 f9a0 	bl	800a5f4 <MX_TIM4_Init>
  MX_USART3_UART_Init();
 800a2b4:	f000 fa04 	bl	800a6c0 <MX_USART3_UART_Init>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 800a2b8:	e7fe      	b.n	800a2b8 <main+0x34>
{

  /* USER CODE BEGIN 1 */
	//HallEncoder<uint16_t,GPIO_TypeDef*> motor_hall(GPIOD,hall1_exti9_Pin,GPIOD,hall2_exti10_Pin,GPIOD,hall3_exti11_Pin);
	//HallEncoder<uint16_t,uint16_t> motor_hall(1,1,1,1,1,1);
	HallEncoder<int> motor_hall;
 800a2ba:	1d3b      	adds	r3, r7, #4
 800a2bc:	4618      	mov	r0, r3
 800a2be:	f000 f895 	bl	800a3ec <_ZN11HallEncoderIiED1Ev>
 800a2c2:	f001 fbcd 	bl	800ba60 <__cxa_end_cleanup>
 800a2c6:	bf00      	nop

0800a2c8 <_Z18SystemClock_Configv>:
}

/** System Clock Configuration
*/
void SystemClock_Config(void)
{
 800a2c8:	b580      	push	{r7, lr}
 800a2ca:	b094      	sub	sp, #80	; 0x50
 800a2cc:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct;
  RCC_ClkInitTypeDef RCC_ClkInitStruct;

    /**Configure the main internal regulator output voltage 
    */
  __HAL_RCC_PWR_CLK_ENABLE();
 800a2ce:	2300      	movs	r3, #0
 800a2d0:	60bb      	str	r3, [r7, #8]
 800a2d2:	4a39      	ldr	r2, [pc, #228]	; (800a3b8 <_Z18SystemClock_Configv+0xf0>)
 800a2d4:	4b38      	ldr	r3, [pc, #224]	; (800a3b8 <_Z18SystemClock_Configv+0xf0>)
 800a2d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a2d8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800a2dc:	6413      	str	r3, [r2, #64]	; 0x40
 800a2de:	4b36      	ldr	r3, [pc, #216]	; (800a3b8 <_Z18SystemClock_Configv+0xf0>)
 800a2e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a2e2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800a2e6:	60bb      	str	r3, [r7, #8]
 800a2e8:	68bb      	ldr	r3, [r7, #8]

  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800a2ea:	2300      	movs	r3, #0
 800a2ec:	607b      	str	r3, [r7, #4]
 800a2ee:	4a33      	ldr	r2, [pc, #204]	; (800a3bc <_Z18SystemClock_Configv+0xf4>)
 800a2f0:	4b32      	ldr	r3, [pc, #200]	; (800a3bc <_Z18SystemClock_Configv+0xf4>)
 800a2f2:	681b      	ldr	r3, [r3, #0]
 800a2f4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800a2f8:	6013      	str	r3, [r2, #0]
 800a2fa:	4b30      	ldr	r3, [pc, #192]	; (800a3bc <_Z18SystemClock_Configv+0xf4>)
 800a2fc:	681b      	ldr	r3, [r3, #0]
 800a2fe:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800a302:	607b      	str	r3, [r7, #4]
 800a304:	687b      	ldr	r3, [r7, #4]

    /**Initializes the CPU, AHB and APB busses clocks 
    */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800a306:	2301      	movs	r3, #1
 800a308:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800a30a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800a30e:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800a310:	2302      	movs	r3, #2
 800a312:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800a314:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 800a318:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 4;
 800a31a:	2304      	movs	r3, #4
 800a31c:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 160;
 800a31e:	23a0      	movs	r3, #160	; 0xa0
 800a320:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800a322:	2302      	movs	r3, #2
 800a324:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 800a326:	2304      	movs	r3, #4
 800a328:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800a32a:	f107 0320 	add.w	r3, r7, #32
 800a32e:	4618      	mov	r0, r3
 800a330:	f000 fd18 	bl	800ad64 <HAL_RCC_OscConfig>
 800a334:	4603      	mov	r3, r0
 800a336:	2b00      	cmp	r3, #0
 800a338:	bf14      	ite	ne
 800a33a:	2301      	movne	r3, #1
 800a33c:	2300      	moveq	r3, #0
 800a33e:	b2db      	uxtb	r3, r3
 800a340:	2b00      	cmp	r3, #0
 800a342:	d003      	beq.n	800a34c <_Z18SystemClock_Configv+0x84>
  {
    _Error_Handler(__FILE__, __LINE__);
 800a344:	2194      	movs	r1, #148	; 0x94
 800a346:	481e      	ldr	r0, [pc, #120]	; (800a3c0 <_Z18SystemClock_Configv+0xf8>)
 800a348:	f000 f83e 	bl	800a3c8 <_Error_Handler>
  }

    /**Initializes the CPU, AHB and APB busses clocks 
    */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 800a34c:	230f      	movs	r3, #15
 800a34e:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800a350:	2302      	movs	r3, #2
 800a352:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800a354:	2300      	movs	r3, #0
 800a356:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV16;
 800a358:	f44f 53e0 	mov.w	r3, #7168	; 0x1c00
 800a35c:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV16;
 800a35e:	f44f 53e0 	mov.w	r3, #7168	; 0x1c00
 800a362:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800a364:	f107 030c 	add.w	r3, r7, #12
 800a368:	2105      	movs	r1, #5
 800a36a:	4618      	mov	r0, r3
 800a36c:	f000 fe94 	bl	800b098 <HAL_RCC_ClockConfig>
 800a370:	4603      	mov	r3, r0
 800a372:	2b00      	cmp	r3, #0
 800a374:	bf14      	ite	ne
 800a376:	2301      	movne	r3, #1
 800a378:	2300      	moveq	r3, #0
 800a37a:	b2db      	uxtb	r3, r3
 800a37c:	2b00      	cmp	r3, #0
 800a37e:	d003      	beq.n	800a388 <_Z18SystemClock_Configv+0xc0>
  {
    _Error_Handler(__FILE__, __LINE__);
 800a380:	21a2      	movs	r1, #162	; 0xa2
 800a382:	480f      	ldr	r0, [pc, #60]	; (800a3c0 <_Z18SystemClock_Configv+0xf8>)
 800a384:	f000 f820 	bl	800a3c8 <_Error_Handler>
  }

    /**Configure the Systick interrupt time 
    */
  HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 800a388:	f000 ff1e 	bl	800b1c8 <HAL_RCC_GetHCLKFreq>
 800a38c:	4602      	mov	r2, r0
 800a38e:	4b0d      	ldr	r3, [pc, #52]	; (800a3c4 <_Z18SystemClock_Configv+0xfc>)
 800a390:	fba3 2302 	umull	r2, r3, r3, r2
 800a394:	099b      	lsrs	r3, r3, #6
 800a396:	4618      	mov	r0, r3
 800a398:	f000 fbca 	bl	800ab30 <HAL_SYSTICK_Config>

    /**Configure the Systick 
    */
  HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 800a39c:	2004      	movs	r0, #4
 800a39e:	f000 fbdd 	bl	800ab5c <HAL_SYSTICK_CLKSourceConfig>

  /* SysTick_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 800a3a2:	2200      	movs	r2, #0
 800a3a4:	2100      	movs	r1, #0
 800a3a6:	f04f 30ff 	mov.w	r0, #4294967295
 800a3aa:	f000 fb81 	bl	800aab0 <HAL_NVIC_SetPriority>
}
 800a3ae:	bf00      	nop
 800a3b0:	3750      	adds	r7, #80	; 0x50
 800a3b2:	46bd      	mov	sp, r7
 800a3b4:	bd80      	pop	{r7, pc}
 800a3b6:	bf00      	nop
 800a3b8:	40023800 	.word	0x40023800
 800a3bc:	40007000 	.word	0x40007000
 800a3c0:	080106d0 	.word	0x080106d0
 800a3c4:	10624dd3 	.word	0x10624dd3

0800a3c8 <_Error_Handler>:
  * @brief  This function is executed in case of error occurrence.
  * @param  None
  * @retval None
  */
void _Error_Handler(char * file, int line)
{
 800a3c8:	b480      	push	{r7}
 800a3ca:	b083      	sub	sp, #12
 800a3cc:	af00      	add	r7, sp, #0
 800a3ce:	6078      	str	r0, [r7, #4]
 800a3d0:	6039      	str	r1, [r7, #0]
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  while(1) 
 800a3d2:	e7fe      	b.n	800a3d2 <_Error_Handler+0xa>

0800a3d4 <_ZN11HallEncoderIiEC1Ev>:
	/*
	HallEncoder(PORT H0_GPIO_PORT, PIN H0_GPIO_PIN,
				PORT H1_GPIO_PORT, PIN H1_GPIO_PIN,
				PORT H2_GPIO_PORT, PIN H2_GPIO_PIN);
				*/
	HallEncoder(){};
 800a3d4:	b480      	push	{r7}
 800a3d6:	b083      	sub	sp, #12
 800a3d8:	af00      	add	r7, sp, #0
 800a3da:	6078      	str	r0, [r7, #4]
 800a3dc:	687b      	ldr	r3, [r7, #4]
 800a3de:	4618      	mov	r0, r3
 800a3e0:	370c      	adds	r7, #12
 800a3e2:	46bd      	mov	sp, r7
 800a3e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3e8:	4770      	bx	lr
 800a3ea:	bf00      	nop

0800a3ec <_ZN11HallEncoderIiED1Ev>:
	~HallEncoder(){};
 800a3ec:	b480      	push	{r7}
 800a3ee:	b083      	sub	sp, #12
 800a3f0:	af00      	add	r7, sp, #0
 800a3f2:	6078      	str	r0, [r7, #4]
 800a3f4:	687b      	ldr	r3, [r7, #4]
 800a3f6:	4618      	mov	r0, r3
 800a3f8:	370c      	adds	r7, #12
 800a3fa:	46bd      	mov	sp, r7
 800a3fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a400:	4770      	bx	lr
 800a402:	bf00      	nop

0800a404 <_ZN11HallEncoderIiE5dummyEi>:
	int somethingstupid(int in){return in;};
	void dummy(int a);
 800a404:	b480      	push	{r7}
 800a406:	b083      	sub	sp, #12
 800a408:	af00      	add	r7, sp, #0
 800a40a:	6078      	str	r0, [r7, #4]
 800a40c:	6039      	str	r1, [r7, #0]
 800a40e:	bf00      	nop
 800a410:	370c      	adds	r7, #12
 800a412:	46bd      	mov	sp, r7
 800a414:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a418:	4770      	bx	lr
 800a41a:	bf00      	nop

0800a41c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800a41c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800a41e:	2003      	movs	r0, #3
 800a420:	f000 fb34 	bl	800aa8c <HAL_NVIC_SetPriorityGrouping>

  /* System interrupt init*/
  /* MemoryManagement_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(MemoryManagement_IRQn, 0, 0);
 800a424:	2200      	movs	r2, #0
 800a426:	4611      	mov	r1, r2
 800a428:	f06f 000b 	mvn.w	r0, #11
 800a42c:	f000 fb40 	bl	800aab0 <HAL_NVIC_SetPriority>
  /* BusFault_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(BusFault_IRQn, 0, 0);
 800a430:	2200      	movs	r2, #0
 800a432:	4611      	mov	r1, r2
 800a434:	f06f 000a 	mvn.w	r0, #10
 800a438:	f000 fb3a 	bl	800aab0 <HAL_NVIC_SetPriority>
  /* UsageFault_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(UsageFault_IRQn, 0, 0);
 800a43c:	2200      	movs	r2, #0
 800a43e:	4611      	mov	r1, r2
 800a440:	f06f 0009 	mvn.w	r0, #9
 800a444:	f000 fb34 	bl	800aab0 <HAL_NVIC_SetPriority>
  /* SVCall_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(SVCall_IRQn, 0, 0);
 800a448:	2200      	movs	r2, #0
 800a44a:	4611      	mov	r1, r2
 800a44c:	f06f 0004 	mvn.w	r0, #4
 800a450:	f000 fb2e 	bl	800aab0 <HAL_NVIC_SetPriority>
  /* DebugMonitor_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DebugMonitor_IRQn, 0, 0);
 800a454:	2200      	movs	r2, #0
 800a456:	4611      	mov	r1, r2
 800a458:	f06f 0003 	mvn.w	r0, #3
 800a45c:	f000 fb28 	bl	800aab0 <HAL_NVIC_SetPriority>
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 0, 0);
 800a460:	2200      	movs	r2, #0
 800a462:	4611      	mov	r1, r2
 800a464:	f06f 0001 	mvn.w	r0, #1
 800a468:	f000 fb22 	bl	800aab0 <HAL_NVIC_SetPriority>
  /* SysTick_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 800a46c:	2200      	movs	r2, #0
 800a46e:	4611      	mov	r1, r2
 800a470:	f04f 30ff 	mov.w	r0, #4294967295
 800a474:	f000 fb1c 	bl	800aab0 <HAL_NVIC_SetPriority>

  /* Peripheral interrupt init */
  /* RCC_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(RCC_IRQn, 0, 0);
 800a478:	2200      	movs	r2, #0
 800a47a:	2005      	movs	r0, #5
 800a47c:	4611      	mov	r1, r2
 800a47e:	f000 fb17 	bl	800aab0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(RCC_IRQn);
 800a482:	2005      	movs	r0, #5

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800a484:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);

  /* Peripheral interrupt init */
  /* RCC_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(RCC_IRQn, 0, 0);
  HAL_NVIC_EnableIRQ(RCC_IRQn);
 800a488:	f000 bb46 	b.w	800ab18 <HAL_NVIC_EnableIRQ>

0800a48c <NMI_Handler>:
 800a48c:	4770      	bx	lr

0800a48e <HardFault_Handler>:

/**
* @brief This function handles Hard fault interrupt.
*/
void HardFault_Handler(void)
{
 800a48e:	e7fe      	b.n	800a48e <HardFault_Handler>

0800a490 <MemManage_Handler>:

/**
* @brief This function handles Memory management fault.
*/
void MemManage_Handler(void)
{
 800a490:	e7fe      	b.n	800a490 <MemManage_Handler>

0800a492 <BusFault_Handler>:

/**
* @brief This function handles Pre-fetch fault, memory access fault.
*/
void BusFault_Handler(void)
{
 800a492:	e7fe      	b.n	800a492 <BusFault_Handler>

0800a494 <UsageFault_Handler>:

/**
* @brief This function handles Undefined instruction or illegal state.
*/
void UsageFault_Handler(void)
{
 800a494:	e7fe      	b.n	800a494 <UsageFault_Handler>

0800a496 <SVC_Handler>:
 800a496:	4770      	bx	lr

0800a498 <DebugMon_Handler>:
 800a498:	4770      	bx	lr

0800a49a <PendSV_Handler>:
 800a49a:	4770      	bx	lr

0800a49c <SysTick_Handler>:

/**
* @brief This function handles System tick timer.
*/
void SysTick_Handler(void)
{
 800a49c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800a49e:	f000 f9ad 	bl	800a7fc <HAL_IncTick>
  HAL_SYSTICK_IRQHandler();
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800a4a2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
{
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
  HAL_SYSTICK_IRQHandler();
 800a4a6:	f000 bb66 	b.w	800ab76 <HAL_SYSTICK_IRQHandler>

0800a4aa <RCC_IRQHandler>:

/**
* @brief This function handles RCC global interrupt.
*/
void RCC_IRQHandler(void)
{
 800a4aa:	4770      	bx	lr

0800a4ac <EXTI9_5_IRQHandler>:
void EXTI9_5_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_9);
 800a4ac:	f44f 7000 	mov.w	r0, #512	; 0x200
 800a4b0:	f000 bc4c 	b.w	800ad4c <HAL_GPIO_EXTI_IRQHandler>

0800a4b4 <EXTI15_10_IRQHandler>:

/**
* @brief This function handles EXTI line[15:10] interrupts.
*/
void EXTI15_10_IRQHandler(void)
{
 800a4b4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_10);
 800a4b6:	f44f 6080 	mov.w	r0, #1024	; 0x400
 800a4ba:	f000 fc47 	bl	800ad4c <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_11);
 800a4be:	f44f 6000 	mov.w	r0, #2048	; 0x800
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 800a4c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
{
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_10);
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_11);
 800a4c6:	f000 bc41 	b.w	800ad4c <HAL_GPIO_EXTI_IRQHandler>
	...

0800a4cc <MX_TIM3_Init>:
TIM_HandleTypeDef htim3;
TIM_HandleTypeDef htim4;

/* TIM3 init function */
void MX_TIM3_Init(void)
{
 800a4cc:	b510      	push	{r4, lr}
  TIM_Encoder_InitTypeDef sConfig;
  TIM_MasterConfigTypeDef sMasterConfig;

  htim3.Instance = TIM3;
 800a4ce:	4814      	ldr	r0, [pc, #80]	; (800a520 <MX_TIM3_Init+0x54>)
  htim3.Init.Prescaler = 0;
 800a4d0:	4b14      	ldr	r3, [pc, #80]	; (800a524 <MX_TIM3_Init+0x58>)
TIM_HandleTypeDef htim3;
TIM_HandleTypeDef htim4;

/* TIM3 init function */
void MX_TIM3_Init(void)
{
 800a4d2:	b08c      	sub	sp, #48	; 0x30
  TIM_Encoder_InitTypeDef sConfig;
  TIM_MasterConfigTypeDef sMasterConfig;

  htim3.Instance = TIM3;
  htim3.Init.Prescaler = 0;
 800a4d4:	2400      	movs	r4, #0
 800a4d6:	e880 0018 	stmia.w	r0, {r3, r4}
  sConfig.IC1Filter = 0;
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
  sConfig.IC2Filter = 0;
  if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
 800a4da:	a903      	add	r1, sp, #12
  htim3.Instance = TIM3;
  htim3.Init.Prescaler = 0;
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim3.Init.Period = 0;
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 800a4dc:	2301      	movs	r3, #1
  TIM_Encoder_InitTypeDef sConfig;
  TIM_MasterConfigTypeDef sMasterConfig;

  htim3.Instance = TIM3;
  htim3.Init.Prescaler = 0;
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800a4de:	6084      	str	r4, [r0, #8]
  htim3.Init.Period = 0;
 800a4e0:	60c4      	str	r4, [r0, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800a4e2:	6104      	str	r4, [r0, #16]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 800a4e4:	9303      	str	r3, [sp, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 800a4e6:	9404      	str	r4, [sp, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 800a4e8:	9305      	str	r3, [sp, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 800a4ea:	9406      	str	r4, [sp, #24]
  sConfig.IC1Filter = 0;
 800a4ec:	9407      	str	r4, [sp, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 800a4ee:	9408      	str	r4, [sp, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 800a4f0:	9309      	str	r3, [sp, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 800a4f2:	940a      	str	r4, [sp, #40]	; 0x28
  sConfig.IC2Filter = 0;
 800a4f4:	940b      	str	r4, [sp, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
 800a4f6:	f001 f865 	bl	800b5c4 <HAL_TIM_Encoder_Init>
 800a4fa:	b118      	cbz	r0, 800a504 <MX_TIM3_Init+0x38>
  {
    _Error_Handler(__FILE__, __LINE__);
 800a4fc:	214a      	movs	r1, #74	; 0x4a
 800a4fe:	480a      	ldr	r0, [pc, #40]	; (800a528 <MX_TIM3_Init+0x5c>)
 800a500:	f7ff ff62 	bl	800a3c8 <_Error_Handler>
  }

  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800a504:	a901      	add	r1, sp, #4
 800a506:	4806      	ldr	r0, [pc, #24]	; (800a520 <MX_TIM3_Init+0x54>)
  if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
  {
    _Error_Handler(__FILE__, __LINE__);
  }

  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800a508:	9401      	str	r4, [sp, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800a50a:	9402      	str	r4, [sp, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800a50c:	f001 f939 	bl	800b782 <HAL_TIMEx_MasterConfigSynchronization>
 800a510:	b118      	cbz	r0, 800a51a <MX_TIM3_Init+0x4e>
  {
    _Error_Handler(__FILE__, __LINE__);
 800a512:	2151      	movs	r1, #81	; 0x51
 800a514:	4804      	ldr	r0, [pc, #16]	; (800a528 <MX_TIM3_Init+0x5c>)
 800a516:	f7ff ff57 	bl	800a3c8 <_Error_Handler>
  }

}
 800a51a:	b00c      	add	sp, #48	; 0x30
 800a51c:	bd10      	pop	{r4, pc}
 800a51e:	bf00      	nop
 800a520:	20000640 	.word	0x20000640
 800a524:	40000400 	.word	0x40000400
 800a528:	08010e33 	.word	0x08010e33

0800a52c <HAL_TIM_Encoder_MspInit>:
  HAL_TIM_MspPostInit(&htim4);

}

void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* tim_encoderHandle)
{
 800a52c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}

  GPIO_InitTypeDef GPIO_InitStruct;
  if(tim_encoderHandle->Instance==TIM3)
 800a52e:	6802      	ldr	r2, [r0, #0]
 800a530:	4b0e      	ldr	r3, [pc, #56]	; (800a56c <HAL_TIM_Encoder_MspInit+0x40>)
 800a532:	429a      	cmp	r2, r3
 800a534:	d116      	bne.n	800a564 <HAL_TIM_Encoder_MspInit+0x38>
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* TIM3 clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 800a536:	2300      	movs	r3, #0
 800a538:	4a0d      	ldr	r2, [pc, #52]	; (800a570 <HAL_TIM_Encoder_MspInit+0x44>)
 800a53a:	9300      	str	r3, [sp, #0]
 800a53c:	6c11      	ldr	r1, [r2, #64]	; 0x40
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800a53e:	480d      	ldr	r0, [pc, #52]	; (800a574 <HAL_TIM_Encoder_MspInit+0x48>)
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* TIM3 clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 800a540:	f041 0102 	orr.w	r1, r1, #2
 800a544:	6411      	str	r1, [r2, #64]	; 0x40
 800a546:	6c12      	ldr	r2, [r2, #64]	; 0x40
    PC6     ------> TIM3_CH1
    PC7     ------> TIM3_CH2 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800a548:	9303      	str	r3, [sp, #12]
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* TIM3 clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 800a54a:	f002 0202 	and.w	r2, r2, #2
 800a54e:	9200      	str	r2, [sp, #0]
 800a550:	9a00      	ldr	r2, [sp, #0]
    PC7     ------> TIM3_CH2 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800a552:	9304      	str	r3, [sp, #16]
  
    /**TIM3 GPIO Configuration    
    PC6     ------> TIM3_CH1
    PC7     ------> TIM3_CH2 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800a554:	22c0      	movs	r2, #192	; 0xc0
 800a556:	9201      	str	r2, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800a558:	a901      	add	r1, sp, #4
    /**TIM3 GPIO Configuration    
    PC6     ------> TIM3_CH1
    PC7     ------> TIM3_CH2 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800a55a:	2202      	movs	r2, #2
 800a55c:	9202      	str	r2, [sp, #8]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 800a55e:	9205      	str	r2, [sp, #20]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800a560:	f000 fb0e 	bl	800ab80 <HAL_GPIO_Init>

  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }
}
 800a564:	b007      	add	sp, #28
 800a566:	f85d fb04 	ldr.w	pc, [sp], #4
 800a56a:	bf00      	nop
 800a56c:	40000400 	.word	0x40000400
 800a570:	40023800 	.word	0x40023800
 800a574:	40020800 	.word	0x40020800

0800a578 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{

  if(tim_baseHandle->Instance==TIM4)
 800a578:	6802      	ldr	r2, [r0, #0]
 800a57a:	4b09      	ldr	r3, [pc, #36]	; (800a5a0 <HAL_TIM_Base_MspInit+0x28>)
 800a57c:	429a      	cmp	r2, r3
  /* USER CODE END TIM3_MspInit 1 */
  }
}

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 800a57e:	b082      	sub	sp, #8

  if(tim_baseHandle->Instance==TIM4)
 800a580:	d10b      	bne.n	800a59a <HAL_TIM_Base_MspInit+0x22>
  {
  /* USER CODE BEGIN TIM4_MspInit 0 */

  /* USER CODE END TIM4_MspInit 0 */
    /* TIM4 clock enable */
    __HAL_RCC_TIM4_CLK_ENABLE();
 800a582:	2300      	movs	r3, #0
 800a584:	9301      	str	r3, [sp, #4]
 800a586:	4b07      	ldr	r3, [pc, #28]	; (800a5a4 <HAL_TIM_Base_MspInit+0x2c>)
 800a588:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800a58a:	f042 0204 	orr.w	r2, r2, #4
 800a58e:	641a      	str	r2, [r3, #64]	; 0x40
 800a590:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a592:	f003 0304 	and.w	r3, r3, #4
 800a596:	9301      	str	r3, [sp, #4]
 800a598:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }
}
 800a59a:	b002      	add	sp, #8
 800a59c:	4770      	bx	lr
 800a59e:	bf00      	nop
 800a5a0:	40000800 	.word	0x40000800
 800a5a4:	40023800 	.word	0x40023800

0800a5a8 <HAL_TIM_MspPostInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 800a5a8:	b530      	push	{r4, r5, lr}

  GPIO_InitTypeDef GPIO_InitStruct;
  if(timHandle->Instance==TIM4)
 800a5aa:	6802      	ldr	r2, [r0, #0]
 800a5ac:	4b0e      	ldr	r3, [pc, #56]	; (800a5e8 <HAL_TIM_MspPostInit+0x40>)
 800a5ae:	429a      	cmp	r2, r3

  /* USER CODE END TIM4_MspInit 1 */
  }
}
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 800a5b0:	b087      	sub	sp, #28

  GPIO_InitTypeDef GPIO_InitStruct;
  if(timHandle->Instance==TIM4)
 800a5b2:	d116      	bne.n	800a5e2 <HAL_TIM_MspPostInit+0x3a>
    PD14     ------> TIM4_CH3
    PB6     ------> TIM4_CH1
    PB7     ------> TIM4_CH2 
    */
    GPIO_InitStruct.Pin = P_LC_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800a5b4:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800a5b6:	2500      	movs	r5, #0
    /**TIM4 GPIO Configuration    
    PD14     ------> TIM4_CH3
    PB6     ------> TIM4_CH1
    PB7     ------> TIM4_CH2 
    */
    GPIO_InitStruct.Pin = P_LC_Pin;
 800a5b8:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
    HAL_GPIO_Init(P_LC_GPIO_Port, &GPIO_InitStruct);
 800a5bc:	a901      	add	r1, sp, #4
 800a5be:	480b      	ldr	r0, [pc, #44]	; (800a5ec <HAL_TIM_MspPostInit+0x44>)
    /**TIM4 GPIO Configuration    
    PD14     ------> TIM4_CH3
    PB6     ------> TIM4_CH1
    PB7     ------> TIM4_CH2 
    */
    GPIO_InitStruct.Pin = P_LC_Pin;
 800a5c0:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800a5c2:	9402      	str	r4, [sp, #8]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800a5c4:	9503      	str	r5, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800a5c6:	9504      	str	r5, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 800a5c8:	9405      	str	r4, [sp, #20]
    HAL_GPIO_Init(P_LC_GPIO_Port, &GPIO_InitStruct);
 800a5ca:	f000 fad9 	bl	800ab80 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = P_LA_Pin|P_LB_Pin;
 800a5ce:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800a5d0:	a901      	add	r1, sp, #4
 800a5d2:	4807      	ldr	r0, [pc, #28]	; (800a5f0 <HAL_TIM_MspPostInit+0x48>)
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
    HAL_GPIO_Init(P_LC_GPIO_Port, &GPIO_InitStruct);

    GPIO_InitStruct.Pin = P_LA_Pin|P_LB_Pin;
 800a5d4:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800a5d6:	9402      	str	r4, [sp, #8]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800a5d8:	9503      	str	r5, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800a5da:	9504      	str	r5, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 800a5dc:	9405      	str	r4, [sp, #20]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800a5de:	f000 facf 	bl	800ab80 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM4_MspPostInit 1 */

  /* USER CODE END TIM4_MspPostInit 1 */
  }

}
 800a5e2:	b007      	add	sp, #28
 800a5e4:	bd30      	pop	{r4, r5, pc}
 800a5e6:	bf00      	nop
 800a5e8:	40000800 	.word	0x40000800
 800a5ec:	40020c00 	.word	0x40020c00
 800a5f0:	40020400 	.word	0x40020400

0800a5f4 <MX_TIM4_Init>:
  }

}
/* TIM4 init function */
void MX_TIM4_Init(void)
{
 800a5f4:	b500      	push	{lr}
  TIM_ClockConfigTypeDef sClockSourceConfig;
  TIM_MasterConfigTypeDef sMasterConfig;
  TIM_OC_InitTypeDef sConfigOC;

  htim4.Instance = TIM4;
 800a5f6:	482f      	ldr	r0, [pc, #188]	; (800a6b4 <MX_TIM4_Init+0xc0>)
  htim4.Init.Prescaler = 100;
 800a5f8:	4b2f      	ldr	r3, [pc, #188]	; (800a6b8 <MX_TIM4_Init+0xc4>)
 800a5fa:	f04f 0e64 	mov.w	lr, #100	; 0x64
 800a5fe:	e880 4008 	stmia.w	r0, {r3, lr}
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 800a602:	2300      	movs	r3, #0
  }

}
/* TIM4 init function */
void MX_TIM4_Init(void)
{
 800a604:	b08f      	sub	sp, #60	; 0x3c
  TIM_MasterConfigTypeDef sMasterConfig;
  TIM_OC_InitTypeDef sConfigOC;

  htim4.Instance = TIM4;
  htim4.Init.Prescaler = 100;
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 800a606:	6083      	str	r3, [r0, #8]
  htim4.Init.Period = 0;
 800a608:	60c3      	str	r3, [r0, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV4;
 800a60a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a60e:	6103      	str	r3, [r0, #16]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 800a610:	f000 ffa4 	bl	800b55c <HAL_TIM_Base_Init>
 800a614:	b118      	cbz	r0, 800a61e <MX_TIM4_Init+0x2a>
  {
    _Error_Handler(__FILE__, __LINE__);
 800a616:	2163      	movs	r1, #99	; 0x63
 800a618:	4828      	ldr	r0, [pc, #160]	; (800a6bc <MX_TIM4_Init+0xc8>)
 800a61a:	f7ff fed5 	bl	800a3c8 <_Error_Handler>
  }

  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800a61e:	a90e      	add	r1, sp, #56	; 0x38
 800a620:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800a624:	f841 3d2c 	str.w	r3, [r1, #-44]!
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 800a628:	4822      	ldr	r0, [pc, #136]	; (800a6b4 <MX_TIM4_Init+0xc0>)
 800a62a:	f000 fe78 	bl	800b31e <HAL_TIM_ConfigClockSource>
 800a62e:	b118      	cbz	r0, 800a638 <MX_TIM4_Init+0x44>
  {
    _Error_Handler(__FILE__, __LINE__);
 800a630:	2169      	movs	r1, #105	; 0x69
 800a632:	4822      	ldr	r0, [pc, #136]	; (800a6bc <MX_TIM4_Init+0xc8>)
 800a634:	f7ff fec8 	bl	800a3c8 <_Error_Handler>
  }

  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 800a638:	481e      	ldr	r0, [pc, #120]	; (800a6b4 <MX_TIM4_Init+0xc0>)
 800a63a:	f000 ffa9 	bl	800b590 <HAL_TIM_PWM_Init>
 800a63e:	b118      	cbz	r0, 800a648 <MX_TIM4_Init+0x54>
  {
    _Error_Handler(__FILE__, __LINE__);
 800a640:	216e      	movs	r1, #110	; 0x6e
 800a642:	481e      	ldr	r0, [pc, #120]	; (800a6bc <MX_TIM4_Init+0xc8>)
 800a644:	f7ff fec0 	bl	800a3c8 <_Error_Handler>
  }

  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800a648:	2300      	movs	r3, #0
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 800a64a:	a901      	add	r1, sp, #4
 800a64c:	4819      	ldr	r0, [pc, #100]	; (800a6b4 <MX_TIM4_Init+0xc0>)
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
  {
    _Error_Handler(__FILE__, __LINE__);
  }

  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800a64e:	9301      	str	r3, [sp, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800a650:	9302      	str	r3, [sp, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 800a652:	f001 f896 	bl	800b782 <HAL_TIMEx_MasterConfigSynchronization>
 800a656:	b118      	cbz	r0, 800a660 <MX_TIM4_Init+0x6c>
  {
    _Error_Handler(__FILE__, __LINE__);
 800a658:	2175      	movs	r1, #117	; 0x75
 800a65a:	4818      	ldr	r0, [pc, #96]	; (800a6bc <MX_TIM4_Init+0xc8>)
 800a65c:	f7ff feb4 	bl	800a3c8 <_Error_Handler>
  }

  sConfigOC.OCMode = TIM_OCMODE_PWM1;
  sConfigOC.Pulse = 0;
 800a660:	2200      	movs	r2, #0
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
  {
    _Error_Handler(__FILE__, __LINE__);
  }

  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800a662:	2360      	movs	r3, #96	; 0x60
  sConfigOC.Pulse = 0;
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800a664:	a907      	add	r1, sp, #28
 800a666:	4813      	ldr	r0, [pc, #76]	; (800a6b4 <MX_TIM4_Init+0xc0>)
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
  {
    _Error_Handler(__FILE__, __LINE__);
  }

  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800a668:	9307      	str	r3, [sp, #28]
  sConfigOC.Pulse = 0;
 800a66a:	9208      	str	r2, [sp, #32]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800a66c:	9209      	str	r2, [sp, #36]	; 0x24
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800a66e:	920b      	str	r2, [sp, #44]	; 0x2c
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800a670:	f001 f824 	bl	800b6bc <HAL_TIM_PWM_ConfigChannel>
 800a674:	b118      	cbz	r0, 800a67e <MX_TIM4_Init+0x8a>
  {
    _Error_Handler(__FILE__, __LINE__);
 800a676:	217e      	movs	r1, #126	; 0x7e
 800a678:	4810      	ldr	r0, [pc, #64]	; (800a6bc <MX_TIM4_Init+0xc8>)
 800a67a:	f7ff fea5 	bl	800a3c8 <_Error_Handler>
  }

  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 800a67e:	2204      	movs	r2, #4
 800a680:	a907      	add	r1, sp, #28
 800a682:	480c      	ldr	r0, [pc, #48]	; (800a6b4 <MX_TIM4_Init+0xc0>)
 800a684:	f001 f81a 	bl	800b6bc <HAL_TIM_PWM_ConfigChannel>
 800a688:	b118      	cbz	r0, 800a692 <MX_TIM4_Init+0x9e>
  {
    _Error_Handler(__FILE__, __LINE__);
 800a68a:	2183      	movs	r1, #131	; 0x83
 800a68c:	480b      	ldr	r0, [pc, #44]	; (800a6bc <MX_TIM4_Init+0xc8>)
 800a68e:	f7ff fe9b 	bl	800a3c8 <_Error_Handler>
  }

  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 800a692:	2208      	movs	r2, #8
 800a694:	a907      	add	r1, sp, #28
 800a696:	4807      	ldr	r0, [pc, #28]	; (800a6b4 <MX_TIM4_Init+0xc0>)
 800a698:	f001 f810 	bl	800b6bc <HAL_TIM_PWM_ConfigChannel>
 800a69c:	b118      	cbz	r0, 800a6a6 <MX_TIM4_Init+0xb2>
  {
    _Error_Handler(__FILE__, __LINE__);
 800a69e:	2188      	movs	r1, #136	; 0x88
 800a6a0:	4806      	ldr	r0, [pc, #24]	; (800a6bc <MX_TIM4_Init+0xc8>)
 800a6a2:	f7ff fe91 	bl	800a3c8 <_Error_Handler>
  }

  HAL_TIM_MspPostInit(&htim4);
 800a6a6:	4803      	ldr	r0, [pc, #12]	; (800a6b4 <MX_TIM4_Init+0xc0>)
 800a6a8:	f7ff ff7e 	bl	800a5a8 <HAL_TIM_MspPostInit>

}
 800a6ac:	b00f      	add	sp, #60	; 0x3c
 800a6ae:	f85d fb04 	ldr.w	pc, [sp], #4
 800a6b2:	bf00      	nop
 800a6b4:	20000604 	.word	0x20000604
 800a6b8:	40000800 	.word	0x40000800
 800a6bc:	08010e33 	.word	0x08010e33

0800a6c0 <MX_USART3_UART_Init>:
UART_HandleTypeDef huart3;

/* USART3 init function */

void MX_USART3_UART_Init(void)
{
 800a6c0:	b508      	push	{r3, lr}

  huart3.Instance = USART3;
 800a6c2:	480c      	ldr	r0, [pc, #48]	; (800a6f4 <MX_USART3_UART_Init+0x34>)
  huart3.Init.BaudRate = 115200;
 800a6c4:	4b0c      	ldr	r3, [pc, #48]	; (800a6f8 <MX_USART3_UART_Init+0x38>)
 800a6c6:	f44f 3ee1 	mov.w	lr, #115200	; 0x1c200
 800a6ca:	e880 4008 	stmia.w	r0, {r3, lr}
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
  huart3.Init.StopBits = UART_STOPBITS_1;
  huart3.Init.Parity = UART_PARITY_NONE;
  huart3.Init.Mode = UART_MODE_TX_RX;
 800a6ce:	220c      	movs	r2, #12
void MX_USART3_UART_Init(void)
{

  huart3.Instance = USART3;
  huart3.Init.BaudRate = 115200;
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 800a6d0:	2300      	movs	r3, #0
 800a6d2:	6083      	str	r3, [r0, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 800a6d4:	60c3      	str	r3, [r0, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 800a6d6:	6103      	str	r3, [r0, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 800a6d8:	6142      	str	r2, [r0, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800a6da:	6183      	str	r3, [r0, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 800a6dc:	61c3      	str	r3, [r0, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 800a6de:	f001 f991 	bl	800ba04 <HAL_UART_Init>
 800a6e2:	b128      	cbz	r0, 800a6f0 <MX_USART3_UART_Init+0x30>
  {
    _Error_Handler(__FILE__, __LINE__);
 800a6e4:	2142      	movs	r1, #66	; 0x42
 800a6e6:	4805      	ldr	r0, [pc, #20]	; (800a6fc <MX_USART3_UART_Init+0x3c>)
  }

}
 800a6e8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  huart3.Init.Mode = UART_MODE_TX_RX;
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
  if (HAL_UART_Init(&huart3) != HAL_OK)
  {
    _Error_Handler(__FILE__, __LINE__);
 800a6ec:	f7ff be6c 	b.w	800a3c8 <_Error_Handler>
 800a6f0:	bd08      	pop	{r3, pc}
 800a6f2:	bf00      	nop
 800a6f4:	2000067c 	.word	0x2000067c
 800a6f8:	40004800 	.word	0x40004800
 800a6fc:	08010e46 	.word	0x08010e46

0800a700 <HAL_UART_MspInit>:
  }

}

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 800a700:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}

  GPIO_InitTypeDef GPIO_InitStruct;
  if(uartHandle->Instance==USART3)
 800a702:	6802      	ldr	r2, [r0, #0]
 800a704:	4b10      	ldr	r3, [pc, #64]	; (800a748 <HAL_UART_MspInit+0x48>)
 800a706:	429a      	cmp	r2, r3
 800a708:	d11a      	bne.n	800a740 <HAL_UART_MspInit+0x40>
  {
  /* USER CODE BEGIN USART3_MspInit 0 */

  /* USER CODE END USART3_MspInit 0 */
    /* USART3 clock enable */
    __HAL_RCC_USART3_CLK_ENABLE();
 800a70a:	2300      	movs	r3, #0
 800a70c:	9300      	str	r3, [sp, #0]
 800a70e:	4b0f      	ldr	r3, [pc, #60]	; (800a74c <HAL_UART_MspInit+0x4c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800a710:	480f      	ldr	r0, [pc, #60]	; (800a750 <HAL_UART_MspInit+0x50>)
  {
  /* USER CODE BEGIN USART3_MspInit 0 */

  /* USER CODE END USART3_MspInit 0 */
    /* USART3 clock enable */
    __HAL_RCC_USART3_CLK_ENABLE();
 800a712:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800a714:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800a718:	641a      	str	r2, [r3, #64]	; 0x40
 800a71a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a71c:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800a720:	9300      	str	r3, [sp, #0]
 800a722:	9b00      	ldr	r3, [sp, #0]
  
    /**USART3 GPIO Configuration    
    PB10     ------> USART3_TX
    PB11     ------> USART3_RX 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 800a724:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 800a728:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800a72a:	2302      	movs	r3, #2
 800a72c:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 800a72e:	2301      	movs	r3, #1
 800a730:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800a732:	2303      	movs	r3, #3
 800a734:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800a736:	a901      	add	r1, sp, #4
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 800a738:	2307      	movs	r3, #7
 800a73a:	9305      	str	r3, [sp, #20]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800a73c:	f000 fa20 	bl	800ab80 <HAL_GPIO_Init>

  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }
}
 800a740:	b007      	add	sp, #28
 800a742:	f85d fb04 	ldr.w	pc, [sp], #4
 800a746:	bf00      	nop
 800a748:	40004800 	.word	0x40004800
 800a74c:	40023800 	.word	0x40023800
 800a750:	40020400 	.word	0x40020400

0800a754 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800a754:	490f      	ldr	r1, [pc, #60]	; (800a794 <SystemInit+0x40>)
 800a756:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
 800a75a:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800a75e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 800a762:	4b0d      	ldr	r3, [pc, #52]	; (800a798 <SystemInit+0x44>)
 800a764:	681a      	ldr	r2, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 800a766:	2000      	movs	r0, #0
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 800a768:	f042 0201 	orr.w	r2, r2, #1
 800a76c:	601a      	str	r2, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 800a76e:	6098      	str	r0, [r3, #8]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 800a770:	681a      	ldr	r2, [r3, #0]
 800a772:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 800a776:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800a77a:	601a      	str	r2, [r3, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
 800a77c:	4a07      	ldr	r2, [pc, #28]	; (800a79c <SystemInit+0x48>)
 800a77e:	605a      	str	r2, [r3, #4]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 800a780:	681a      	ldr	r2, [r3, #0]
 800a782:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800a786:	601a      	str	r2, [r3, #0]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 800a788:	60d8      	str	r0, [r3, #12]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800a78a:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 800a78e:	608b      	str	r3, [r1, #8]
 800a790:	4770      	bx	lr
 800a792:	bf00      	nop
 800a794:	e000ed00 	.word	0xe000ed00
 800a798:	40023800 	.word	0x40023800
 800a79c:	24003010 	.word	0x24003010

0800a7a0 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800a7a0:	b510      	push	{r4, lr}
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  HAL_SYSTICK_Config(SystemCoreClock/1000U);
 800a7a2:	4b08      	ldr	r3, [pc, #32]	; (800a7c4 <HAL_InitTick+0x24>)
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800a7a4:	4604      	mov	r4, r0
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  HAL_SYSTICK_Config(SystemCoreClock/1000U);
 800a7a6:	6818      	ldr	r0, [r3, #0]
 800a7a8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800a7ac:	fbb0 f0f3 	udiv	r0, r0, r3
 800a7b0:	f000 f9be 	bl	800ab30 <HAL_SYSTICK_Config>

  /*Configure the SysTick IRQ priority */
  HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 800a7b4:	2200      	movs	r2, #0
 800a7b6:	4621      	mov	r1, r4
 800a7b8:	f04f 30ff 	mov.w	r0, #4294967295
 800a7bc:	f000 f978 	bl	800aab0 <HAL_NVIC_SetPriority>

  /* Return function status */
  return HAL_OK;
}
 800a7c0:	2000      	movs	r0, #0
 800a7c2:	bd10      	pop	{r4, pc}
 800a7c4:	20000000 	.word	0x20000000

0800a7c8 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800a7c8:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
   __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800a7ca:	4b0b      	ldr	r3, [pc, #44]	; (800a7f8 <HAL_Init+0x30>)
 800a7cc:	681a      	ldr	r2, [r3, #0]
 800a7ce:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a7d2:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
   __HAL_FLASH_DATA_CACHE_ENABLE();
 800a7d4:	681a      	ldr	r2, [r3, #0]
 800a7d6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a7da:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800a7dc:	681a      	ldr	r2, [r3, #0]
 800a7de:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a7e2:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800a7e4:	2003      	movs	r0, #3
 800a7e6:	f000 f951 	bl	800aa8c <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800a7ea:	2000      	movs	r0, #0
 800a7ec:	f7ff ffd8 	bl	800a7a0 <HAL_InitTick>
  
  /* Init the low level hardware */
  HAL_MspInit();
 800a7f0:	f7ff fe14 	bl	800a41c <HAL_MspInit>
  
  /* Return function status */
  return HAL_OK;
}
 800a7f4:	2000      	movs	r0, #0
 800a7f6:	bd08      	pop	{r3, pc}
 800a7f8:	40023c00 	.word	0x40023c00

0800a7fc <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick++;
 800a7fc:	4a02      	ldr	r2, [pc, #8]	; (800a808 <HAL_IncTick+0xc>)
 800a7fe:	6813      	ldr	r3, [r2, #0]
 800a800:	3301      	adds	r3, #1
 800a802:	6013      	str	r3, [r2, #0]
 800a804:	4770      	bx	lr
 800a806:	bf00      	nop
 800a808:	200006bc 	.word	0x200006bc

0800a80c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800a80c:	4b01      	ldr	r3, [pc, #4]	; (800a814 <HAL_GetTick+0x8>)
 800a80e:	6818      	ldr	r0, [r3, #0]
}
 800a810:	4770      	bx	lr
 800a812:	bf00      	nop
 800a814:	200006bc 	.word	0x200006bc

0800a818 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 800a818:	b510      	push	{r4, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  
  /* Check ADC handle */
  if(hadc == NULL)
 800a81a:	4604      	mov	r4, r0
 800a81c:	2800      	cmp	r0, #0
 800a81e:	f000 8098 	beq.w	800a952 <HAL_ADC_Init+0x13a>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 800a822:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a824:	b923      	cbnz	r3, 800a830 <HAL_ADC_Init+0x18>
  {
    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 800a826:	6443      	str	r3, [r0, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 800a828:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
    
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 800a82c:	f7ff fc50 	bl	800a0d0 <HAL_ADC_MspInit>
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 800a830:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a832:	06db      	lsls	r3, r3, #27
 800a834:	f100 8088 	bmi.w	800a948 <HAL_ADC_Init+0x130>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 800a838:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a83a:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 800a83e:	f023 0302 	bic.w	r3, r3, #2
 800a842:	f043 0302 	orr.w	r3, r3, #2
 800a846:	6423      	str	r3, [r4, #64]	; 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 800a848:	4b43      	ldr	r3, [pc, #268]	; (800a958 <HAL_ADC_Init+0x140>)
 800a84a:	685a      	ldr	r2, [r3, #4]
 800a84c:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 800a850:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 800a852:	6859      	ldr	r1, [r3, #4]
 800a854:	6862      	ldr	r2, [r4, #4]
 800a856:	430a      	orrs	r2, r1
 800a858:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 800a85a:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 800a85c:	6921      	ldr	r1, [r4, #16]
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 800a85e:	685a      	ldr	r2, [r3, #4]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 800a860:	6aa0      	ldr	r0, [r4, #40]	; 0x28
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 800a862:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800a866:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 800a868:	685a      	ldr	r2, [r3, #4]
 800a86a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800a86e:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800a870:	685a      	ldr	r2, [r3, #4]
 800a872:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 800a876:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 800a878:	6859      	ldr	r1, [r3, #4]
 800a87a:	68a2      	ldr	r2, [r4, #8]
 800a87c:	430a      	orrs	r2, r1
 800a87e:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 800a880:	689a      	ldr	r2, [r3, #8]
 800a882:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a886:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 800a888:	6899      	ldr	r1, [r3, #8]
 800a88a:	68e2      	ldr	r2, [r4, #12]
 800a88c:	430a      	orrs	r2, r1
 800a88e:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 800a890:	4a32      	ldr	r2, [pc, #200]	; (800a95c <HAL_ADC_Init+0x144>)
 800a892:	4290      	cmp	r0, r2
 800a894:	d00e      	beq.n	800a8b4 <HAL_ADC_Init+0x9c>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 800a896:	6899      	ldr	r1, [r3, #8]
 800a898:	f021 6170 	bic.w	r1, r1, #251658240	; 0xf000000
 800a89c:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 800a89e:	689a      	ldr	r2, [r3, #8]
 800a8a0:	4302      	orrs	r2, r0
 800a8a2:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800a8a4:	689a      	ldr	r2, [r3, #8]
 800a8a6:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 800a8aa:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 800a8ac:	6899      	ldr	r1, [r3, #8]
 800a8ae:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a8b0:	430a      	orrs	r2, r1
 800a8b2:	e006      	b.n	800a8c2 <HAL_ADC_Init+0xaa>
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 800a8b4:	689a      	ldr	r2, [r3, #8]
 800a8b6:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 800a8ba:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800a8bc:	689a      	ldr	r2, [r3, #8]
 800a8be:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 800a8c2:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 800a8c4:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS(hadc->Init.ContinuousConvMode);
 800a8c6:	69a1      	ldr	r1, [r4, #24]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 800a8c8:	f022 0202 	bic.w	r2, r2, #2
 800a8cc:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS(hadc->Init.ContinuousConvMode);
 800a8ce:	689a      	ldr	r2, [r3, #8]
 800a8d0:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 800a8d4:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 800a8d6:	6a22      	ldr	r2, [r4, #32]
 800a8d8:	b16a      	cbz	r2, 800a8f6 <HAL_ADC_Init+0xde>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 800a8da:	685a      	ldr	r2, [r3, #4]
 800a8dc:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a8e0:	605a      	str	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 800a8e2:	685a      	ldr	r2, [r3, #4]
 800a8e4:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 800a8e8:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 800a8ea:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a8ec:	6859      	ldr	r1, [r3, #4]
 800a8ee:	3a01      	subs	r2, #1
 800a8f0:	ea41 3242 	orr.w	r2, r1, r2, lsl #13
 800a8f4:	e002      	b.n	800a8fc <HAL_ADC_Init+0xe4>
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 800a8f6:	685a      	ldr	r2, [r3, #4]
 800a8f8:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a8fc:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 800a8fe:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a900:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 800a904:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 800a906:	69e2      	ldr	r2, [r4, #28]
 800a908:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800a90a:	3a01      	subs	r2, #1
 800a90c:	ea41 5202 	orr.w	r2, r1, r2, lsl #20
 800a910:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 800a912:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq(hadc->Init.DMAContinuousRequests);
 800a914:	6b21      	ldr	r1, [r4, #48]	; 0x30
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 800a916:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800a91a:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq(hadc->Init.DMAContinuousRequests);
 800a91c:	689a      	ldr	r2, [r3, #8]
 800a91e:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 800a922:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 800a924:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 800a926:	6961      	ldr	r1, [r4, #20]
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq(hadc->Init.DMAContinuousRequests);
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 800a928:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a92c:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 800a92e:	689a      	ldr	r2, [r3, #8]
    
    /* Set ADC parameters */
    ADC_Init(hadc);
    
    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 800a930:	2000      	movs	r0, #0
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq(hadc->Init.DMAContinuousRequests);
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 800a932:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 800a936:	609a      	str	r2, [r3, #8]
    
    /* Set ADC parameters */
    ADC_Init(hadc);
    
    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 800a938:	6460      	str	r0, [r4, #68]	; 0x44
    
    /* Set the ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 800a93a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a93c:	f023 0303 	bic.w	r3, r3, #3
 800a940:	f043 0301 	orr.w	r3, r3, #1
 800a944:	6423      	str	r3, [r4, #64]	; 0x40
 800a946:	e000      	b.n	800a94a <HAL_ADC_Init+0x132>
                      HAL_ADC_STATE_BUSY_INTERNAL,
                      HAL_ADC_STATE_READY);
  }
  else
  {
    tmp_hal_status = HAL_ERROR;
 800a948:	2001      	movs	r0, #1
  }
  
  /* Release Lock */
  __HAL_UNLOCK(hadc);
 800a94a:	2300      	movs	r3, #0
 800a94c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c

  /* Return function status */
  return tmp_hal_status;
 800a950:	bd10      	pop	{r4, pc}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  
  /* Check ADC handle */
  if(hadc == NULL)
  {
    return HAL_ERROR;
 800a952:	2001      	movs	r0, #1
  /* Release Lock */
  __HAL_UNLOCK(hadc);

  /* Return function status */
  return tmp_hal_status;
}
 800a954:	bd10      	pop	{r4, pc}
 800a956:	bf00      	nop
 800a958:	40012300 	.word	0x40012300
 800a95c:	0f000001 	.word	0x0f000001

0800a960 <HAL_ADC_ConfigChannel>:
  *         the configuration information for the specified ADC.
  * @param  sConfig ADC configuration structure. 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
{
 800a960:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 800a962:	2300      	movs	r3, #0
 800a964:	9301      	str	r3, [sp, #4]
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
  
  /* Process locked */
  __HAL_LOCK(hadc);
 800a966:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800a96a:	2b01      	cmp	r3, #1
 800a96c:	d069      	beq.n	800aa42 <HAL_ADC_ConfigChannel+0xe2>
    
  /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
  if (sConfig->Channel > ADC_CHANNEL_9)
 800a96e:	680d      	ldr	r5, [r1, #0]
 800a970:	6804      	ldr	r4, [r0, #0]
 800a972:	688f      	ldr	r7, [r1, #8]
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
  
  /* Process locked */
  __HAL_LOCK(hadc);
 800a974:	2301      	movs	r3, #1
    
  /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
  if (sConfig->Channel > ADC_CHANNEL_9)
 800a976:	2d09      	cmp	r5, #9
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
  
  /* Process locked */
  __HAL_LOCK(hadc);
 800a978:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
 800a97c:	b2ae      	uxth	r6, r5
    
  /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
  if (sConfig->Channel > ADC_CHANNEL_9)
 800a97e:	d910      	bls.n	800a9a2 <HAL_ADC_ConfigChannel+0x42>
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800a980:	eb06 0246 	add.w	r2, r6, r6, lsl #1
 800a984:	f8d4 e00c 	ldr.w	lr, [r4, #12]
 800a988:	f1a2 031e 	sub.w	r3, r2, #30
 800a98c:	2207      	movs	r2, #7
 800a98e:	409a      	lsls	r2, r3
 800a990:	ea2e 0202 	bic.w	r2, lr, r2
 800a994:	60e2      	str	r2, [r4, #12]
    
    /* Set the new sample time */
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 800a996:	68e2      	ldr	r2, [r4, #12]
 800a998:	fa07 f303 	lsl.w	r3, r7, r3
 800a99c:	4313      	orrs	r3, r2
 800a99e:	60e3      	str	r3, [r4, #12]
 800a9a0:	e00e      	b.n	800a9c0 <HAL_ADC_ConfigChannel+0x60>
  }
  else /* ADC_Channel include in ADC_Channel_[0..9] */
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 800a9a2:	6922      	ldr	r2, [r4, #16]
 800a9a4:	eb05 0345 	add.w	r3, r5, r5, lsl #1
 800a9a8:	f04f 0e07 	mov.w	lr, #7
 800a9ac:	fa0e fe03 	lsl.w	lr, lr, r3
 800a9b0:	ea22 020e 	bic.w	r2, r2, lr
 800a9b4:	6122      	str	r2, [r4, #16]
    
    /* Set the new sample time */
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 800a9b6:	6922      	ldr	r2, [r4, #16]
 800a9b8:	fa07 f303 	lsl.w	r3, r7, r3
 800a9bc:	4313      	orrs	r3, r2
 800a9be:	6123      	str	r3, [r4, #16]
  }
  
  /* For Rank 1 to 6 */
  if (sConfig->Rank < 7U)
 800a9c0:	684b      	ldr	r3, [r1, #4]
 800a9c2:	2b06      	cmp	r3, #6
 800a9c4:	ea4f 0283 	mov.w	r2, r3, lsl #2
 800a9c8:	d80d      	bhi.n	800a9e6 <HAL_ADC_ConfigChannel+0x86>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 800a9ca:	4413      	add	r3, r2
 800a9cc:	6b67      	ldr	r7, [r4, #52]	; 0x34
 800a9ce:	1f59      	subs	r1, r3, #5
 800a9d0:	231f      	movs	r3, #31
 800a9d2:	408b      	lsls	r3, r1
 800a9d4:	ea27 0303 	bic.w	r3, r7, r3
 800a9d8:	6363      	str	r3, [r4, #52]	; 0x34
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 800a9da:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800a9dc:	fa06 f101 	lsl.w	r1, r6, r1
 800a9e0:	4311      	orrs	r1, r2
 800a9e2:	6361      	str	r1, [r4, #52]	; 0x34
 800a9e4:	e01d      	b.n	800aa22 <HAL_ADC_ConfigChannel+0xc2>
  }
  /* For Rank 7 to 12 */
  else if (sConfig->Rank < 13U)
 800a9e6:	2b0c      	cmp	r3, #12
 800a9e8:	d80e      	bhi.n	800aa08 <HAL_ADC_ConfigChannel+0xa8>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 800a9ea:	4413      	add	r3, r2
 800a9ec:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800a9ee:	f1a3 0223 	sub.w	r2, r3, #35	; 0x23
 800a9f2:	231f      	movs	r3, #31
 800a9f4:	4093      	lsls	r3, r2
 800a9f6:	ea21 0303 	bic.w	r3, r1, r3
 800a9fa:	6323      	str	r3, [r4, #48]	; 0x30
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 800a9fc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a9fe:	fa06 f202 	lsl.w	r2, r6, r2
 800aa02:	431a      	orrs	r2, r3
 800aa04:	6322      	str	r2, [r4, #48]	; 0x30
 800aa06:	e00c      	b.n	800aa22 <HAL_ADC_ConfigChannel+0xc2>
  }
  /* For Rank 13 to 16 */
  else
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 800aa08:	4413      	add	r3, r2
 800aa0a:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800aa0c:	3b41      	subs	r3, #65	; 0x41
 800aa0e:	221f      	movs	r2, #31
 800aa10:	409a      	lsls	r2, r3
 800aa12:	ea27 0202 	bic.w	r2, r7, r2
 800aa16:	62e2      	str	r2, [r4, #44]	; 0x2c
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 800aa18:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800aa1a:	fa06 f203 	lsl.w	r2, r6, r3
 800aa1e:	430a      	orrs	r2, r1
 800aa20:	62e2      	str	r2, [r4, #44]	; 0x2c
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);

  /* if ADC1 Channel_18 is selected enable VBAT Channel */
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 800aa22:	4b16      	ldr	r3, [pc, #88]	; (800aa7c <HAL_ADC_ConfigChannel+0x11c>)
 800aa24:	429c      	cmp	r4, r3
 800aa26:	d004      	beq.n	800aa32 <HAL_ADC_ConfigChannel+0xd2>
      }
    }
  }
  
  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 800aa28:	2300      	movs	r3, #0
 800aa2a:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  
  /* Return function status */
  return HAL_OK;
 800aa2e:	4618      	mov	r0, r3
 800aa30:	e022      	b.n	800aa78 <HAL_ADC_ConfigChannel+0x118>
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);

  /* if ADC1 Channel_18 is selected enable VBAT Channel */
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 800aa32:	2d12      	cmp	r5, #18
 800aa34:	d107      	bne.n	800aa46 <HAL_ADC_ConfigChannel+0xe6>
  {
    /* Enable the VBAT channel*/
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 800aa36:	4a12      	ldr	r2, [pc, #72]	; (800aa80 <HAL_ADC_ConfigChannel+0x120>)
 800aa38:	6853      	ldr	r3, [r2, #4]
 800aa3a:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 800aa3e:	6053      	str	r3, [r2, #4]
 800aa40:	e001      	b.n	800aa46 <HAL_ADC_ConfigChannel+0xe6>
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
  
  /* Process locked */
  __HAL_LOCK(hadc);
 800aa42:	2002      	movs	r0, #2
 800aa44:	e018      	b.n	800aa78 <HAL_ADC_ConfigChannel+0x118>
    /* Enable the VBAT channel*/
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
  }
  
  /* if ADC1 Channel_16 or Channel_17 is selected enable TSVREFE Channel(Temperature sensor and VREFINT) */
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 800aa46:	f1a5 0310 	sub.w	r3, r5, #16
 800aa4a:	2b01      	cmp	r3, #1
 800aa4c:	d8ec      	bhi.n	800aa28 <HAL_ADC_ConfigChannel+0xc8>
  {
    /* Enable the TSVREFE channel*/
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 800aa4e:	4a0c      	ldr	r2, [pc, #48]	; (800aa80 <HAL_ADC_ConfigChannel+0x120>)
 800aa50:	6853      	ldr	r3, [r2, #4]
    
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 800aa52:	2d10      	cmp	r5, #16
  
  /* if ADC1 Channel_16 or Channel_17 is selected enable TSVREFE Channel(Temperature sensor and VREFINT) */
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
  {
    /* Enable the TSVREFE channel*/
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 800aa54:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800aa58:	6053      	str	r3, [r2, #4]
    
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 800aa5a:	d1e5      	bne.n	800aa28 <HAL_ADC_ConfigChannel+0xc8>
    {
      /* Delay for temperature sensor stabilization time */
      /* Compute number of CPU cycles to wait for */
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 800aa5c:	4b09      	ldr	r3, [pc, #36]	; (800aa84 <HAL_ADC_ConfigChannel+0x124>)
 800aa5e:	4a0a      	ldr	r2, [pc, #40]	; (800aa88 <HAL_ADC_ConfigChannel+0x128>)
 800aa60:	681b      	ldr	r3, [r3, #0]
 800aa62:	fbb3 f2f2 	udiv	r2, r3, r2
 800aa66:	230a      	movs	r3, #10
 800aa68:	4353      	muls	r3, r2
      while(counter != 0U)
      {
        counter--;
 800aa6a:	9301      	str	r3, [sp, #4]
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
    {
      /* Delay for temperature sensor stabilization time */
      /* Compute number of CPU cycles to wait for */
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
      while(counter != 0U)
 800aa6c:	9b01      	ldr	r3, [sp, #4]
 800aa6e:	2b00      	cmp	r3, #0
 800aa70:	d0da      	beq.n	800aa28 <HAL_ADC_ConfigChannel+0xc8>
      {
        counter--;
 800aa72:	9b01      	ldr	r3, [sp, #4]
 800aa74:	3b01      	subs	r3, #1
 800aa76:	e7f8      	b.n	800aa6a <HAL_ADC_ConfigChannel+0x10a>
  /* Process unlocked */
  __HAL_UNLOCK(hadc);
  
  /* Return function status */
  return HAL_OK;
}
 800aa78:	b003      	add	sp, #12
 800aa7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aa7c:	40012000 	.word	0x40012000
 800aa80:	40012300 	.word	0x40012300
 800aa84:	20000000 	.word	0x20000000
 800aa88:	000f4240 	.word	0x000f4240

0800aa8c <HAL_NVIC_SetPriorityGrouping>:
__STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800aa8c:	4a07      	ldr	r2, [pc, #28]	; (800aaac <HAL_NVIC_SetPriorityGrouping+0x20>)
 800aa8e:	68d3      	ldr	r3, [r2, #12]
 800aa90:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800aa94:	041b      	lsls	r3, r3, #16
 800aa96:	0c1b      	lsrs	r3, r3, #16
 800aa98:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
  reg_value  =  (reg_value                                   |
 800aa9c:	0200      	lsls	r0, r0, #8
 800aa9e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800aaa2:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
 800aaa6:	4303      	orrs	r3, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << 8U)                      );              /* Insert write key and priorty group */
  SCB->AIRCR =  reg_value;
 800aaa8:	60d3      	str	r3, [r2, #12]
 800aaaa:	4770      	bx	lr
 800aaac:	e000ed00 	.word	0xe000ed00

0800aab0 <HAL_NVIC_SetPriority>:
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800aab0:	4b17      	ldr	r3, [pc, #92]	; (800ab10 <HAL_NVIC_SetPriority+0x60>)
 800aab2:	68db      	ldr	r3, [r3, #12]
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 800aab4:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800aab8:	b530      	push	{r4, r5, lr}
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800aaba:	f1c3 0407 	rsb	r4, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800aabe:	1d1d      	adds	r5, r3, #4
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800aac0:	2c04      	cmp	r4, #4
 800aac2:	bf28      	it	cs
 800aac4:	2404      	movcs	r4, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800aac6:	2d06      	cmp	r5, #6

  return (
 800aac8:	f04f 0501 	mov.w	r5, #1
 800aacc:	fa05 f404 	lsl.w	r4, r5, r4
 800aad0:	f104 34ff 	add.w	r4, r4, #4294967295
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800aad4:	bf8c      	ite	hi
 800aad6:	3b03      	subhi	r3, #3
 800aad8:	2300      	movls	r3, #0

  return (
 800aada:	400c      	ands	r4, r1
 800aadc:	409c      	lsls	r4, r3
 800aade:	fa05 f303 	lsl.w	r3, r5, r3
 800aae2:	3b01      	subs	r3, #1
 800aae4:	401a      	ands	r2, r3
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) < 0)
 800aae6:	2800      	cmp	r0, #0
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));

  return (
 800aae8:	ea42 0204 	orr.w	r2, r2, r4
 800aaec:	ea4f 1202 	mov.w	r2, r2, lsl #4
  {
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
  else
  {
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800aaf0:	bfaf      	iteee	ge
 800aaf2:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) < 0)
  {
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800aaf6:	f000 000f 	andlt.w	r0, r0, #15
 800aafa:	4b06      	ldrlt	r3, [pc, #24]	; (800ab14 <HAL_NVIC_SetPriority+0x64>)
 800aafc:	b2d2      	uxtblt	r2, r2
  }
  else
  {
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800aafe:	bfa5      	ittet	ge
 800ab00:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
 800ab04:	b2d2      	uxtbge	r2, r2
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) < 0)
  {
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800ab06:	541a      	strblt	r2, [r3, r0]
  }
  else
  {
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800ab08:	f880 2300 	strbge.w	r2, [r0, #768]	; 0x300
 800ab0c:	bd30      	pop	{r4, r5, pc}
 800ab0e:	bf00      	nop
 800ab10:	e000ed00 	.word	0xe000ed00
 800ab14:	e000ed14 	.word	0xe000ed14

0800ab18 <HAL_NVIC_EnableIRQ>:
  \details Enables a device-specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 800ab18:	0942      	lsrs	r2, r0, #5
 800ab1a:	2301      	movs	r3, #1
 800ab1c:	f000 001f 	and.w	r0, r0, #31
 800ab20:	fa03 f000 	lsl.w	r0, r3, r0
 800ab24:	4b01      	ldr	r3, [pc, #4]	; (800ab2c <HAL_NVIC_EnableIRQ+0x14>)
 800ab26:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 800ab2a:	4770      	bx	lr
 800ab2c:	e000e100 	.word	0xe000e100

0800ab30 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 800ab30:	3801      	subs	r0, #1
 800ab32:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 800ab36:	d20a      	bcs.n	800ab4e <HAL_SYSTICK_Config+0x1e>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800ab38:	4b06      	ldr	r3, [pc, #24]	; (800ab54 <HAL_SYSTICK_Config+0x24>)
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) < 0)
  {
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800ab3a:	4a07      	ldr	r2, [pc, #28]	; (800ab58 <HAL_SYSTICK_Config+0x28>)
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800ab3c:	6058      	str	r0, [r3, #4]
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) < 0)
  {
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800ab3e:	21f0      	movs	r1, #240	; 0xf0
 800ab40:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800ab44:	2000      	movs	r0, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800ab46:	2207      	movs	r2, #7
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800ab48:	6098      	str	r0, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800ab4a:	601a      	str	r2, [r3, #0]
 800ab4c:	4770      	bx	lr
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
  {
    return (1UL);                                                   /* Reload value impossible */
 800ab4e:	2001      	movs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 800ab50:	4770      	bx	lr
 800ab52:	bf00      	nop
 800ab54:	e000e010 	.word	0xe000e010
 800ab58:	e000ed00 	.word	0xe000ed00

0800ab5c <HAL_SYSTICK_CLKSourceConfig>:
  *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock source.
  *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
  * @retval None
  */
void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
{
 800ab5c:	4b04      	ldr	r3, [pc, #16]	; (800ab70 <HAL_SYSTICK_CLKSourceConfig+0x14>)
  /* Check the parameters */
  assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
  if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
  {
    SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 800ab5e:	681a      	ldr	r2, [r3, #0]
  */
void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
{
  /* Check the parameters */
  assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
  if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 800ab60:	2804      	cmp	r0, #4
  {
    SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 800ab62:	bf0c      	ite	eq
 800ab64:	f042 0204 	orreq.w	r2, r2, #4
  }
  else
  {
    SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 800ab68:	f022 0204 	bicne.w	r2, r2, #4
 800ab6c:	601a      	str	r2, [r3, #0]
 800ab6e:	4770      	bx	lr
 800ab70:	e000e010 	.word	0xe000e010

0800ab74 <HAL_SYSTICK_Callback>:
/**
  * @brief  SYSTICK callback.
  * @retval None
  */
__weak void HAL_SYSTICK_Callback(void)
{
 800ab74:	4770      	bx	lr

0800ab76 <HAL_SYSTICK_IRQHandler>:
/**
  * @brief  This function handles SYSTICK interrupt request.
  * @retval None
  */
void HAL_SYSTICK_IRQHandler(void)
{
 800ab76:	b508      	push	{r3, lr}
  HAL_SYSTICK_Callback();
 800ab78:	f7ff fffc 	bl	800ab74 <HAL_SYSTICK_Callback>
 800ab7c:	bd08      	pop	{r3, pc}
	...

0800ab80 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800ab80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800ab84:	4f6a      	ldr	r7, [pc, #424]	; (800ad30 <HAL_GPIO_Init+0x1b0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800ab86:	680b      	ldr	r3, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800ab88:	f8df c1ac 	ldr.w	ip, [pc, #428]	; 800ad38 <HAL_GPIO_Init+0x1b8>

        temp = SYSCFG->EXTICR[position >> 2U];
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800ab8c:	f8df 81ac 	ldr.w	r8, [pc, #428]	; 800ad3c <HAL_GPIO_Init+0x1bc>
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800ab90:	b085      	sub	sp, #20
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 800ab92:	2200      	movs	r2, #0
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800ab94:	9301      	str	r3, [sp, #4]
 800ab96:	46be      	mov	lr, r7

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 800ab98:	2401      	movs	r4, #1
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;

    if(iocurrent == ioposition)
 800ab9a:	9b01      	ldr	r3, [sp, #4]

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 800ab9c:	4094      	lsls	r4, r2
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;

    if(iocurrent == ioposition)
 800ab9e:	ea34 0303 	bics.w	r3, r4, r3
 800aba2:	f040 80bd 	bne.w	800ad20 <HAL_GPIO_Init+0x1a0>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 800aba6:	684d      	ldr	r5, [r1, #4]
 800aba8:	f025 0a10 	bic.w	sl, r5, #16
 800abac:	f1ba 0f02 	cmp.w	sl, #2
 800abb0:	d114      	bne.n	800abdc <HAL_GPIO_Init+0x5c>
 800abb2:	ea4f 09d2 	mov.w	r9, r2, lsr #3
 800abb6:	eb00 0989 	add.w	r9, r0, r9, lsl #2
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800abba:	f002 0b07 	and.w	fp, r2, #7
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 800abbe:	f8d9 6020 	ldr.w	r6, [r9, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800abc2:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800abc6:	230f      	movs	r3, #15
 800abc8:	fa03 f30b 	lsl.w	r3, r3, fp
 800abcc:	ea26 0603 	bic.w	r6, r6, r3
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800abd0:	690b      	ldr	r3, [r1, #16]
 800abd2:	fa03 f30b 	lsl.w	r3, r3, fp
 800abd6:	4333      	orrs	r3, r6
        GPIOx->AFR[position >> 3U] = temp;
 800abd8:	f8c9 3020 	str.w	r3, [r9, #32]
 800abdc:	ea4f 0b42 	mov.w	fp, r2, lsl #1
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800abe0:	f04f 0903 	mov.w	r9, #3
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
        GPIOx->AFR[position >> 3U] = temp;
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 800abe4:	6803      	ldr	r3, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800abe6:	fa09 f90b 	lsl.w	r9, r9, fp
 800abea:	ea6f 0909 	mvn.w	r9, r9
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800abee:	f005 0603 	and.w	r6, r5, #3
        GPIOx->AFR[position >> 3U] = temp;
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800abf2:	ea03 0309 	and.w	r3, r3, r9
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800abf6:	fa06 f60b 	lsl.w	r6, r6, fp
      GPIOx->MODER = temp;

      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800abfa:	f10a 3aff 	add.w	sl, sl, #4294967295
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800abfe:	4333      	orrs	r3, r6
      GPIOx->MODER = temp;

      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800ac00:	f1ba 0f01 	cmp.w	sl, #1

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
      GPIOx->MODER = temp;
 800ac04:	6003      	str	r3, [r0, #0]

      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800ac06:	d80f      	bhi.n	800ac28 <HAL_GPIO_Init+0xa8>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 800ac08:	6883      	ldr	r3, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
        temp |= (GPIO_Init->Speed << (position * 2U));
 800ac0a:	68ce      	ldr	r6, [r1, #12]
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800ac0c:	ea09 0303 	and.w	r3, r9, r3
        temp |= (GPIO_Init->Speed << (position * 2U));
 800ac10:	fa06 f60b 	lsl.w	r6, r6, fp
 800ac14:	431e      	orrs	r6, r3
        GPIOx->OSPEEDR = temp;
 800ac16:	6086      	str	r6, [r0, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 800ac18:	6843      	ldr	r3, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 800ac1a:	f3c5 1600 	ubfx	r6, r5, #4, #1
        temp |= (GPIO_Init->Speed << (position * 2U));
        GPIOx->OSPEEDR = temp;

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800ac1e:	ea23 0304 	bic.w	r3, r3, r4
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 800ac22:	4096      	lsls	r6, r2
 800ac24:	4333      	orrs	r3, r6
        GPIOx->OTYPER = temp;
 800ac26:	6043      	str	r3, [r0, #4]
      }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 800ac28:	68c3      	ldr	r3, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800ac2a:	ea09 0903 	and.w	r9, r9, r3
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 800ac2e:	688b      	ldr	r3, [r1, #8]
 800ac30:	fa03 f30b 	lsl.w	r3, r3, fp
 800ac34:	ea43 0309 	orr.w	r3, r3, r9
      GPIOx->PUPDR = temp;
 800ac38:	60c3      	str	r3, [r0, #12]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800ac3a:	00eb      	lsls	r3, r5, #3
 800ac3c:	d570      	bpl.n	800ad20 <HAL_GPIO_Init+0x1a0>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800ac3e:	2300      	movs	r3, #0
 800ac40:	9303      	str	r3, [sp, #12]
 800ac42:	f8dc 6044 	ldr.w	r6, [ip, #68]	; 0x44

        temp = SYSCFG->EXTICR[position >> 2U];
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800ac46:	4b3b      	ldr	r3, [pc, #236]	; (800ad34 <HAL_GPIO_Init+0x1b4>)
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800ac48:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 800ac4c:	f8cc 6044 	str.w	r6, [ip, #68]	; 0x44
 800ac50:	f8dc 6044 	ldr.w	r6, [ip, #68]	; 0x44
 800ac54:	f022 0903 	bic.w	r9, r2, #3
 800ac58:	f109 4980 	add.w	r9, r9, #1073741824	; 0x40000000
 800ac5c:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 800ac60:	f509 399c 	add.w	r9, r9, #79872	; 0x13800
 800ac64:	9603      	str	r6, [sp, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800ac66:	f002 0a03 	and.w	sl, r2, #3
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800ac6a:	9e03      	ldr	r6, [sp, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 800ac6c:	f8d9 b008 	ldr.w	fp, [r9, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800ac70:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 800ac74:	260f      	movs	r6, #15
 800ac76:	fa06 f60a 	lsl.w	r6, r6, sl
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800ac7a:	4298      	cmp	r0, r3
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();

        temp = SYSCFG->EXTICR[position >> 2U];
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800ac7c:	ea2b 0606 	bic.w	r6, fp, r6
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800ac80:	d01c      	beq.n	800acbc <HAL_GPIO_Init+0x13c>
 800ac82:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800ac86:	4298      	cmp	r0, r3
 800ac88:	d01a      	beq.n	800acc0 <HAL_GPIO_Init+0x140>
 800ac8a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800ac8e:	4298      	cmp	r0, r3
 800ac90:	d018      	beq.n	800acc4 <HAL_GPIO_Init+0x144>
 800ac92:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800ac96:	4298      	cmp	r0, r3
 800ac98:	d016      	beq.n	800acc8 <HAL_GPIO_Init+0x148>
 800ac9a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800ac9e:	4298      	cmp	r0, r3
 800aca0:	d014      	beq.n	800accc <HAL_GPIO_Init+0x14c>
 800aca2:	4540      	cmp	r0, r8
 800aca4:	d014      	beq.n	800acd0 <HAL_GPIO_Init+0x150>
 800aca6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800acaa:	4298      	cmp	r0, r3
 800acac:	d012      	beq.n	800acd4 <HAL_GPIO_Init+0x154>
 800acae:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800acb2:	4298      	cmp	r0, r3
 800acb4:	bf14      	ite	ne
 800acb6:	2308      	movne	r3, #8
 800acb8:	2307      	moveq	r3, #7
 800acba:	e00c      	b.n	800acd6 <HAL_GPIO_Init+0x156>
 800acbc:	2300      	movs	r3, #0
 800acbe:	e00a      	b.n	800acd6 <HAL_GPIO_Init+0x156>
 800acc0:	2301      	movs	r3, #1
 800acc2:	e008      	b.n	800acd6 <HAL_GPIO_Init+0x156>
 800acc4:	2302      	movs	r3, #2
 800acc6:	e006      	b.n	800acd6 <HAL_GPIO_Init+0x156>
 800acc8:	2303      	movs	r3, #3
 800acca:	e004      	b.n	800acd6 <HAL_GPIO_Init+0x156>
 800accc:	2304      	movs	r3, #4
 800acce:	e002      	b.n	800acd6 <HAL_GPIO_Init+0x156>
 800acd0:	2305      	movs	r3, #5
 800acd2:	e000      	b.n	800acd6 <HAL_GPIO_Init+0x156>
 800acd4:	2306      	movs	r3, #6
 800acd6:	fa03 f30a 	lsl.w	r3, r3, sl
 800acda:	4333      	orrs	r3, r6
        SYSCFG->EXTICR[position >> 2U] = temp;
 800acdc:	f8c9 3008 	str.w	r3, [r9, #8]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800ace0:	683b      	ldr	r3, [r7, #0]
        temp &= ~((uint32_t)iocurrent);
 800ace2:	43e6      	mvns	r6, r4
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 800ace4:	f415 3f80 	tst.w	r5, #65536	; 0x10000
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
        temp &= ~((uint32_t)iocurrent);
 800ace8:	bf0c      	ite	eq
 800acea:	4033      	andeq	r3, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
        {
          temp |= iocurrent;
 800acec:	4323      	orrne	r3, r4
        }
        EXTI->IMR = temp;
 800acee:	f8ce 3000 	str.w	r3, [lr]

        temp = EXTI->EMR;
 800acf2:	f8de 3004 	ldr.w	r3, [lr, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 800acf6:	f415 3f00 	tst.w	r5, #131072	; 0x20000
          temp |= iocurrent;
        }
        EXTI->IMR = temp;

        temp = EXTI->EMR;
        temp &= ~((uint32_t)iocurrent);
 800acfa:	bf0c      	ite	eq
 800acfc:	4033      	andeq	r3, r6
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
        {
          temp |= iocurrent;
 800acfe:	4323      	orrne	r3, r4
        }
        EXTI->EMR = temp;
 800ad00:	607b      	str	r3, [r7, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800ad02:	68bb      	ldr	r3, [r7, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 800ad04:	f415 1f80 	tst.w	r5, #1048576	; 0x100000
        }
        EXTI->EMR = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
        temp &= ~((uint32_t)iocurrent);
 800ad08:	bf0c      	ite	eq
 800ad0a:	4033      	andeq	r3, r6
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
        {
          temp |= iocurrent;
 800ad0c:	4323      	orrne	r3, r4
        }
        EXTI->RTSR = temp;
 800ad0e:	f8ce 3008 	str.w	r3, [lr, #8]

        temp = EXTI->FTSR;
 800ad12:	f8de 300c 	ldr.w	r3, [lr, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 800ad16:	02ad      	lsls	r5, r5, #10
          temp |= iocurrent;
        }
        EXTI->RTSR = temp;

        temp = EXTI->FTSR;
        temp &= ~((uint32_t)iocurrent);
 800ad18:	bf54      	ite	pl
 800ad1a:	4033      	andpl	r3, r6
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
        {
          temp |= iocurrent;
 800ad1c:	4323      	orrmi	r3, r4
        }
        EXTI->FTSR = temp;
 800ad1e:	60fb      	str	r3, [r7, #12]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 800ad20:	3201      	adds	r2, #1
 800ad22:	2a10      	cmp	r2, #16
 800ad24:	f47f af38 	bne.w	800ab98 <HAL_GPIO_Init+0x18>
        }
        EXTI->FTSR = temp;
      }
    }
  }
}
 800ad28:	b005      	add	sp, #20
 800ad2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ad2e:	bf00      	nop
 800ad30:	40013c00 	.word	0x40013c00
 800ad34:	40020000 	.word	0x40020000
 800ad38:	40023800 	.word	0x40023800
 800ad3c:	40021400 	.word	0x40021400

0800ad40 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800ad40:	b902      	cbnz	r2, 800ad44 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800ad42:	0409      	lsls	r1, r1, #16
 800ad44:	6181      	str	r1, [r0, #24]
 800ad46:	4770      	bx	lr

0800ad48 <HAL_GPIO_EXTI_Callback>:
  * @brief  EXTI line detection callbacks.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
__weak void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 800ad48:	4770      	bx	lr
	...

0800ad4c <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 800ad4c:	b508      	push	{r3, lr}
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800ad4e:	4b04      	ldr	r3, [pc, #16]	; (800ad60 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800ad50:	6959      	ldr	r1, [r3, #20]
 800ad52:	4201      	tst	r1, r0
 800ad54:	d002      	beq.n	800ad5c <HAL_GPIO_EXTI_IRQHandler+0x10>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800ad56:	6158      	str	r0, [r3, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800ad58:	f7ff fff6 	bl	800ad48 <HAL_GPIO_EXTI_Callback>
 800ad5c:	bd08      	pop	{r3, pc}
 800ad5e:	bf00      	nop
 800ad60:	40013c00 	.word	0x40013c00

0800ad64 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800ad64:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800ad68:	4604      	mov	r4, r0
 800ad6a:	b908      	cbnz	r0, 800ad70 <HAL_RCC_OscConfig+0xc>
  {
    return HAL_ERROR;
 800ad6c:	2001      	movs	r0, #1
 800ad6e:	e161      	b.n	800b034 <HAL_RCC_OscConfig+0x2d0>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800ad70:	6803      	ldr	r3, [r0, #0]
 800ad72:	07d8      	lsls	r0, r3, #31
 800ad74:	d403      	bmi.n	800ad7e <HAL_RCC_OscConfig+0x1a>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800ad76:	6823      	ldr	r3, [r4, #0]
 800ad78:	0799      	lsls	r1, r3, #30
 800ad7a:	d44a      	bmi.n	800ae12 <HAL_RCC_OscConfig+0xae>
 800ad7c:	e08e      	b.n	800ae9c <HAL_RCC_OscConfig+0x138>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800ad7e:	4ba2      	ldr	r3, [pc, #648]	; (800b008 <HAL_RCC_OscConfig+0x2a4>)
 800ad80:	689a      	ldr	r2, [r3, #8]
 800ad82:	f002 020c 	and.w	r2, r2, #12
 800ad86:	2a04      	cmp	r2, #4
 800ad88:	d007      	beq.n	800ad9a <HAL_RCC_OscConfig+0x36>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800ad8a:	689a      	ldr	r2, [r3, #8]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800ad8c:	f002 020c 	and.w	r2, r2, #12
 800ad90:	2a08      	cmp	r2, #8
 800ad92:	d10a      	bne.n	800adaa <HAL_RCC_OscConfig+0x46>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800ad94:	685b      	ldr	r3, [r3, #4]
 800ad96:	025a      	lsls	r2, r3, #9
 800ad98:	d507      	bpl.n	800adaa <HAL_RCC_OscConfig+0x46>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800ad9a:	4b9b      	ldr	r3, [pc, #620]	; (800b008 <HAL_RCC_OscConfig+0x2a4>)
 800ad9c:	681b      	ldr	r3, [r3, #0]
 800ad9e:	039b      	lsls	r3, r3, #14
 800ada0:	d5e9      	bpl.n	800ad76 <HAL_RCC_OscConfig+0x12>
 800ada2:	6863      	ldr	r3, [r4, #4]
 800ada4:	2b00      	cmp	r3, #0
 800ada6:	d1e6      	bne.n	800ad76 <HAL_RCC_OscConfig+0x12>
 800ada8:	e7e0      	b.n	800ad6c <HAL_RCC_OscConfig+0x8>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800adaa:	6863      	ldr	r3, [r4, #4]
 800adac:	4d96      	ldr	r5, [pc, #600]	; (800b008 <HAL_RCC_OscConfig+0x2a4>)
 800adae:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800adb2:	d006      	beq.n	800adc2 <HAL_RCC_OscConfig+0x5e>
 800adb4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800adb8:	d108      	bne.n	800adcc <HAL_RCC_OscConfig+0x68>
 800adba:	682b      	ldr	r3, [r5, #0]
 800adbc:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800adc0:	602b      	str	r3, [r5, #0]
 800adc2:	682b      	ldr	r3, [r5, #0]
 800adc4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800adc8:	602b      	str	r3, [r5, #0]
 800adca:	e008      	b.n	800adde <HAL_RCC_OscConfig+0x7a>
 800adcc:	682a      	ldr	r2, [r5, #0]
 800adce:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800add2:	602a      	str	r2, [r5, #0]
 800add4:	682a      	ldr	r2, [r5, #0]
 800add6:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800adda:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800addc:	b16b      	cbz	r3, 800adfa <HAL_RCC_OscConfig+0x96>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800adde:	f7ff fd15 	bl	800a80c <HAL_GetTick>

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800ade2:	4d89      	ldr	r5, [pc, #548]	; (800b008 <HAL_RCC_OscConfig+0x2a4>)

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800ade4:	4606      	mov	r6, r0

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800ade6:	682b      	ldr	r3, [r5, #0]
 800ade8:	039f      	lsls	r7, r3, #14
 800adea:	d4c4      	bmi.n	800ad76 <HAL_RCC_OscConfig+0x12>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800adec:	f7ff fd0e 	bl	800a80c <HAL_GetTick>
 800adf0:	1b80      	subs	r0, r0, r6
 800adf2:	2864      	cmp	r0, #100	; 0x64
 800adf4:	d9f7      	bls.n	800ade6 <HAL_RCC_OscConfig+0x82>
          {
            return HAL_TIMEOUT;
 800adf6:	2003      	movs	r0, #3
 800adf8:	e11c      	b.n	800b034 <HAL_RCC_OscConfig+0x2d0>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800adfa:	f7ff fd07 	bl	800a80c <HAL_GetTick>
 800adfe:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800ae00:	682b      	ldr	r3, [r5, #0]
 800ae02:	0398      	lsls	r0, r3, #14
 800ae04:	d5b7      	bpl.n	800ad76 <HAL_RCC_OscConfig+0x12>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800ae06:	f7ff fd01 	bl	800a80c <HAL_GetTick>
 800ae0a:	1b80      	subs	r0, r0, r6
 800ae0c:	2864      	cmp	r0, #100	; 0x64
 800ae0e:	d9f7      	bls.n	800ae00 <HAL_RCC_OscConfig+0x9c>
 800ae10:	e7f1      	b.n	800adf6 <HAL_RCC_OscConfig+0x92>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800ae12:	4b7d      	ldr	r3, [pc, #500]	; (800b008 <HAL_RCC_OscConfig+0x2a4>)
 800ae14:	689a      	ldr	r2, [r3, #8]
 800ae16:	f012 0f0c 	tst.w	r2, #12
 800ae1a:	d007      	beq.n	800ae2c <HAL_RCC_OscConfig+0xc8>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800ae1c:	689a      	ldr	r2, [r3, #8]
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800ae1e:	f002 020c 	and.w	r2, r2, #12
 800ae22:	2a08      	cmp	r2, #8
 800ae24:	d111      	bne.n	800ae4a <HAL_RCC_OscConfig+0xe6>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800ae26:	685b      	ldr	r3, [r3, #4]
 800ae28:	0259      	lsls	r1, r3, #9
 800ae2a:	d40e      	bmi.n	800ae4a <HAL_RCC_OscConfig+0xe6>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800ae2c:	4b76      	ldr	r3, [pc, #472]	; (800b008 <HAL_RCC_OscConfig+0x2a4>)
 800ae2e:	681a      	ldr	r2, [r3, #0]
 800ae30:	0792      	lsls	r2, r2, #30
 800ae32:	d502      	bpl.n	800ae3a <HAL_RCC_OscConfig+0xd6>
 800ae34:	68e2      	ldr	r2, [r4, #12]
 800ae36:	2a01      	cmp	r2, #1
 800ae38:	d198      	bne.n	800ad6c <HAL_RCC_OscConfig+0x8>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800ae3a:	681a      	ldr	r2, [r3, #0]
 800ae3c:	6921      	ldr	r1, [r4, #16]
 800ae3e:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800ae42:	ea42 02c1 	orr.w	r2, r2, r1, lsl #3
 800ae46:	601a      	str	r2, [r3, #0]
    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800ae48:	e028      	b.n	800ae9c <HAL_RCC_OscConfig+0x138>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800ae4a:	68e2      	ldr	r2, [r4, #12]
 800ae4c:	4b6f      	ldr	r3, [pc, #444]	; (800b00c <HAL_RCC_OscConfig+0x2a8>)
 800ae4e:	b1ba      	cbz	r2, 800ae80 <HAL_RCC_OscConfig+0x11c>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800ae50:	2201      	movs	r2, #1
 800ae52:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800ae54:	f7ff fcda 	bl	800a80c <HAL_GetTick>

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800ae58:	4d6b      	ldr	r5, [pc, #428]	; (800b008 <HAL_RCC_OscConfig+0x2a4>)
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800ae5a:	4606      	mov	r6, r0

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800ae5c:	682b      	ldr	r3, [r5, #0]
 800ae5e:	4a6a      	ldr	r2, [pc, #424]	; (800b008 <HAL_RCC_OscConfig+0x2a4>)
 800ae60:	079b      	lsls	r3, r3, #30
 800ae62:	d405      	bmi.n	800ae70 <HAL_RCC_OscConfig+0x10c>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800ae64:	f7ff fcd2 	bl	800a80c <HAL_GetTick>
 800ae68:	1b80      	subs	r0, r0, r6
 800ae6a:	2802      	cmp	r0, #2
 800ae6c:	d9f6      	bls.n	800ae5c <HAL_RCC_OscConfig+0xf8>
 800ae6e:	e7c2      	b.n	800adf6 <HAL_RCC_OscConfig+0x92>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800ae70:	6813      	ldr	r3, [r2, #0]
 800ae72:	6921      	ldr	r1, [r4, #16]
 800ae74:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800ae78:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800ae7c:	6013      	str	r3, [r2, #0]
 800ae7e:	e00d      	b.n	800ae9c <HAL_RCC_OscConfig+0x138>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 800ae80:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800ae82:	f7ff fcc3 	bl	800a80c <HAL_GetTick>

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800ae86:	4d60      	ldr	r5, [pc, #384]	; (800b008 <HAL_RCC_OscConfig+0x2a4>)
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800ae88:	4606      	mov	r6, r0

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800ae8a:	682b      	ldr	r3, [r5, #0]
 800ae8c:	079f      	lsls	r7, r3, #30
 800ae8e:	d505      	bpl.n	800ae9c <HAL_RCC_OscConfig+0x138>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800ae90:	f7ff fcbc 	bl	800a80c <HAL_GetTick>
 800ae94:	1b80      	subs	r0, r0, r6
 800ae96:	2802      	cmp	r0, #2
 800ae98:	d9f7      	bls.n	800ae8a <HAL_RCC_OscConfig+0x126>
 800ae9a:	e7ac      	b.n	800adf6 <HAL_RCC_OscConfig+0x92>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800ae9c:	6823      	ldr	r3, [r4, #0]
 800ae9e:	071e      	lsls	r6, r3, #28
 800aea0:	d403      	bmi.n	800aeaa <HAL_RCC_OscConfig+0x146>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800aea2:	6823      	ldr	r3, [r4, #0]
 800aea4:	075d      	lsls	r5, r3, #29
 800aea6:	d548      	bpl.n	800af3a <HAL_RCC_OscConfig+0x1d6>
 800aea8:	e01f      	b.n	800aeea <HAL_RCC_OscConfig+0x186>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800aeaa:	6962      	ldr	r2, [r4, #20]
 800aeac:	4b58      	ldr	r3, [pc, #352]	; (800b010 <HAL_RCC_OscConfig+0x2ac>)
 800aeae:	b172      	cbz	r2, 800aece <HAL_RCC_OscConfig+0x16a>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 800aeb0:	2201      	movs	r2, #1
 800aeb2:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800aeb4:	f7ff fcaa 	bl	800a80c <HAL_GetTick>

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800aeb8:	4d53      	ldr	r5, [pc, #332]	; (800b008 <HAL_RCC_OscConfig+0x2a4>)
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800aeba:	4606      	mov	r6, r0

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800aebc:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 800aebe:	0798      	lsls	r0, r3, #30
 800aec0:	d4ef      	bmi.n	800aea2 <HAL_RCC_OscConfig+0x13e>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800aec2:	f7ff fca3 	bl	800a80c <HAL_GetTick>
 800aec6:	1b80      	subs	r0, r0, r6
 800aec8:	2802      	cmp	r0, #2
 800aeca:	d9f7      	bls.n	800aebc <HAL_RCC_OscConfig+0x158>
 800aecc:	e793      	b.n	800adf6 <HAL_RCC_OscConfig+0x92>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 800aece:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800aed0:	f7ff fc9c 	bl	800a80c <HAL_GetTick>

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800aed4:	4d4c      	ldr	r5, [pc, #304]	; (800b008 <HAL_RCC_OscConfig+0x2a4>)
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800aed6:	4606      	mov	r6, r0

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800aed8:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 800aeda:	0799      	lsls	r1, r3, #30
 800aedc:	d5e1      	bpl.n	800aea2 <HAL_RCC_OscConfig+0x13e>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800aede:	f7ff fc95 	bl	800a80c <HAL_GetTick>
 800aee2:	1b80      	subs	r0, r0, r6
 800aee4:	2802      	cmp	r0, #2
 800aee6:	d9f7      	bls.n	800aed8 <HAL_RCC_OscConfig+0x174>
 800aee8:	e785      	b.n	800adf6 <HAL_RCC_OscConfig+0x92>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Enable Power Clock */
    __HAL_RCC_PWR_CLK_ENABLE();
 800aeea:	2300      	movs	r3, #0
 800aeec:	9301      	str	r3, [sp, #4]
 800aeee:	4b46      	ldr	r3, [pc, #280]	; (800b008 <HAL_RCC_OscConfig+0x2a4>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 800aef0:	4d48      	ldr	r5, [pc, #288]	; (800b014 <HAL_RCC_OscConfig+0x2b0>)
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Enable Power Clock */
    __HAL_RCC_PWR_CLK_ENABLE();
 800aef2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800aef4:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800aef8:	641a      	str	r2, [r3, #64]	; 0x40
 800aefa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800aefc:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800af00:	9301      	str	r3, [sp, #4]
 800af02:	9b01      	ldr	r3, [sp, #4]

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 800af04:	682b      	ldr	r3, [r5, #0]
 800af06:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800af0a:	602b      	str	r3, [r5, #0]

    /* Wait for Backup domain Write protection enable */
    tickstart = HAL_GetTick();
 800af0c:	f7ff fc7e 	bl	800a80c <HAL_GetTick>
 800af10:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 800af12:	682b      	ldr	r3, [r5, #0]
 800af14:	05da      	lsls	r2, r3, #23
 800af16:	d513      	bpl.n	800af40 <HAL_RCC_OscConfig+0x1dc>
        return HAL_TIMEOUT;
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800af18:	68a3      	ldr	r3, [r4, #8]
 800af1a:	4d3b      	ldr	r5, [pc, #236]	; (800b008 <HAL_RCC_OscConfig+0x2a4>)
 800af1c:	2b01      	cmp	r3, #1
 800af1e:	d115      	bne.n	800af4c <HAL_RCC_OscConfig+0x1e8>
 800af20:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800af22:	f043 0301 	orr.w	r3, r3, #1
 800af26:	672b      	str	r3, [r5, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800af28:	f7ff fc70 	bl	800a80c <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800af2c:	4d36      	ldr	r5, [pc, #216]	; (800b008 <HAL_RCC_OscConfig+0x2a4>)
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800af2e:	4606      	mov	r6, r0

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800af30:	f241 3788 	movw	r7, #5000	; 0x1388
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800af34:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800af36:	079b      	lsls	r3, r3, #30
 800af38:	d519      	bpl.n	800af6e <HAL_RCC_OscConfig+0x20a>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800af3a:	69a2      	ldr	r2, [r4, #24]
 800af3c:	bb5a      	cbnz	r2, 800af96 <HAL_RCC_OscConfig+0x232>
 800af3e:	e054      	b.n	800afea <HAL_RCC_OscConfig+0x286>
    /* Wait for Backup domain Write protection enable */
    tickstart = HAL_GetTick();

    while((PWR->CR & PWR_CR_DBP) == RESET)
    {
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800af40:	f7ff fc64 	bl	800a80c <HAL_GetTick>
 800af44:	1b80      	subs	r0, r0, r6
 800af46:	2802      	cmp	r0, #2
 800af48:	d9e3      	bls.n	800af12 <HAL_RCC_OscConfig+0x1ae>
 800af4a:	e754      	b.n	800adf6 <HAL_RCC_OscConfig+0x92>
        return HAL_TIMEOUT;
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800af4c:	2b05      	cmp	r3, #5
 800af4e:	d104      	bne.n	800af5a <HAL_RCC_OscConfig+0x1f6>
 800af50:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800af52:	f043 0304 	orr.w	r3, r3, #4
 800af56:	672b      	str	r3, [r5, #112]	; 0x70
 800af58:	e7e2      	b.n	800af20 <HAL_RCC_OscConfig+0x1bc>
 800af5a:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800af5c:	f022 0201 	bic.w	r2, r2, #1
 800af60:	672a      	str	r2, [r5, #112]	; 0x70
 800af62:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800af64:	f022 0204 	bic.w	r2, r2, #4
 800af68:	672a      	str	r2, [r5, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800af6a:	b133      	cbz	r3, 800af7a <HAL_RCC_OscConfig+0x216>
 800af6c:	e7dc      	b.n	800af28 <HAL_RCC_OscConfig+0x1c4>
      tickstart = HAL_GetTick();

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800af6e:	f7ff fc4d 	bl	800a80c <HAL_GetTick>
 800af72:	1b80      	subs	r0, r0, r6
 800af74:	42b8      	cmp	r0, r7
 800af76:	d9dd      	bls.n	800af34 <HAL_RCC_OscConfig+0x1d0>
 800af78:	e73d      	b.n	800adf6 <HAL_RCC_OscConfig+0x92>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800af7a:	f7ff fc47 	bl	800a80c <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800af7e:	f241 3788 	movw	r7, #5000	; 0x1388
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800af82:	4606      	mov	r6, r0

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800af84:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800af86:	0798      	lsls	r0, r3, #30
 800af88:	d5d7      	bpl.n	800af3a <HAL_RCC_OscConfig+0x1d6>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800af8a:	f7ff fc3f 	bl	800a80c <HAL_GetTick>
 800af8e:	1b80      	subs	r0, r0, r6
 800af90:	42b8      	cmp	r0, r7
 800af92:	d9f7      	bls.n	800af84 <HAL_RCC_OscConfig+0x220>
 800af94:	e72f      	b.n	800adf6 <HAL_RCC_OscConfig+0x92>
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800af96:	4d1c      	ldr	r5, [pc, #112]	; (800b008 <HAL_RCC_OscConfig+0x2a4>)
 800af98:	68ab      	ldr	r3, [r5, #8]
 800af9a:	f003 030c 	and.w	r3, r3, #12
 800af9e:	2b08      	cmp	r3, #8
 800afa0:	f43f aee4 	beq.w	800ad6c <HAL_RCC_OscConfig+0x8>
 800afa4:	4e1c      	ldr	r6, [pc, #112]	; (800b018 <HAL_RCC_OscConfig+0x2b4>)
 800afa6:	2300      	movs	r3, #0
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800afa8:	2a02      	cmp	r2, #2
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800afaa:	6033      	str	r3, [r6, #0]
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800afac:	d136      	bne.n	800b01c <HAL_RCC_OscConfig+0x2b8>

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800afae:	f7ff fc2d 	bl	800a80c <HAL_GetTick>
 800afb2:	4680      	mov	r8, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800afb4:	682b      	ldr	r3, [r5, #0]
 800afb6:	4f14      	ldr	r7, [pc, #80]	; (800b008 <HAL_RCC_OscConfig+0x2a4>)
 800afb8:	0199      	lsls	r1, r3, #6
 800afba:	d418      	bmi.n	800afee <HAL_RCC_OscConfig+0x28a>
            return HAL_TIMEOUT;
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800afbc:	69e2      	ldr	r2, [r4, #28]
 800afbe:	6a23      	ldr	r3, [r4, #32]
 800afc0:	4313      	orrs	r3, r2
 800afc2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800afc4:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800afc8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800afca:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 800afce:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800afd0:	085b      	lsrs	r3, r3, #1
 800afd2:	3b01      	subs	r3, #1
 800afd4:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 800afd8:	607b      	str	r3, [r7, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 800afda:	2301      	movs	r3, #1
 800afdc:	6033      	str	r3, [r6, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800afde:	f7ff fc15 	bl	800a80c <HAL_GetTick>
 800afe2:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800afe4:	683b      	ldr	r3, [r7, #0]
 800afe6:	019a      	lsls	r2, r3, #6
 800afe8:	d508      	bpl.n	800affc <HAL_RCC_OscConfig+0x298>
    else
    {
      return HAL_ERROR;
    }
  }
  return HAL_OK;
 800afea:	2000      	movs	r0, #0
 800afec:	e022      	b.n	800b034 <HAL_RCC_OscConfig+0x2d0>
        tickstart = HAL_GetTick();

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800afee:	f7ff fc0d 	bl	800a80c <HAL_GetTick>
 800aff2:	ebc8 0000 	rsb	r0, r8, r0
 800aff6:	2802      	cmp	r0, #2
 800aff8:	d9dc      	bls.n	800afb4 <HAL_RCC_OscConfig+0x250>
 800affa:	e6fc      	b.n	800adf6 <HAL_RCC_OscConfig+0x92>
        tickstart = HAL_GetTick();

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800affc:	f7ff fc06 	bl	800a80c <HAL_GetTick>
 800b000:	1b00      	subs	r0, r0, r4
 800b002:	2802      	cmp	r0, #2
 800b004:	d9ee      	bls.n	800afe4 <HAL_RCC_OscConfig+0x280>
 800b006:	e6f6      	b.n	800adf6 <HAL_RCC_OscConfig+0x92>
 800b008:	40023800 	.word	0x40023800
 800b00c:	42470000 	.word	0x42470000
 800b010:	42470e80 	.word	0x42470e80
 800b014:	40007000 	.word	0x40007000
 800b018:	42470060 	.word	0x42470060
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b01c:	f7ff fbf6 	bl	800a80c <HAL_GetTick>
 800b020:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b022:	682b      	ldr	r3, [r5, #0]
 800b024:	019b      	lsls	r3, r3, #6
 800b026:	d5e0      	bpl.n	800afea <HAL_RCC_OscConfig+0x286>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b028:	f7ff fbf0 	bl	800a80c <HAL_GetTick>
 800b02c:	1b00      	subs	r0, r0, r4
 800b02e:	2802      	cmp	r0, #2
 800b030:	d9f7      	bls.n	800b022 <HAL_RCC_OscConfig+0x2be>
 800b032:	e6e0      	b.n	800adf6 <HAL_RCC_OscConfig+0x92>
    {
      return HAL_ERROR;
    }
  }
  return HAL_OK;
}
 800b034:	b002      	add	sp, #8
 800b036:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b03a:	bf00      	nop

0800b03c <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b03c:	4913      	ldr	r1, [pc, #76]	; (800b08c <HAL_RCC_GetSysClockFreq+0x50>)
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 800b03e:	b508      	push	{r3, lr}
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b040:	688b      	ldr	r3, [r1, #8]
 800b042:	f003 030c 	and.w	r3, r3, #12
 800b046:	2b04      	cmp	r3, #4
 800b048:	d01c      	beq.n	800b084 <HAL_RCC_GetSysClockFreq+0x48>
 800b04a:	2b08      	cmp	r3, #8
 800b04c:	d11c      	bne.n	800b088 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b04e:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b050:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b052:	6849      	ldr	r1, [r1, #4]
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b054:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b058:	bf14      	ite	ne
 800b05a:	480d      	ldrne	r0, [pc, #52]	; (800b090 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b05c:	480d      	ldreq	r0, [pc, #52]	; (800b094 <HAL_RCC_GetSysClockFreq+0x58>)
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b05e:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b062:	bf18      	it	ne
 800b064:	2300      	movne	r3, #0
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b066:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b06a:	fba1 0100 	umull	r0, r1, r1, r0
 800b06e:	f7fd fed9 	bl	8008e24 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800b072:	4b06      	ldr	r3, [pc, #24]	; (800b08c <HAL_RCC_GetSysClockFreq+0x50>)
 800b074:	685b      	ldr	r3, [r3, #4]

      sysclockfreq = pllvco/pllp;
 800b076:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800b07a:	3301      	adds	r3, #1
 800b07c:	005b      	lsls	r3, r3, #1
 800b07e:	fbb0 f0f3 	udiv	r0, r0, r3
 800b082:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
       break;
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 800b084:	4802      	ldr	r0, [pc, #8]	; (800b090 <HAL_RCC_GetSysClockFreq+0x54>)
 800b086:	bd08      	pop	{r3, pc}
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 800b088:	4802      	ldr	r0, [pc, #8]	; (800b094 <HAL_RCC_GetSysClockFreq+0x58>)
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800b08a:	bd08      	pop	{r3, pc}
 800b08c:	40023800 	.word	0x40023800
 800b090:	007a1200 	.word	0x007a1200
 800b094:	00f42400 	.word	0x00f42400

0800b098 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 800b098:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b09c:	460d      	mov	r5, r1
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 800b09e:	4604      	mov	r4, r0
 800b0a0:	b910      	cbnz	r0, 800b0a8 <HAL_RCC_ClockConfig+0x10>
  {
    return HAL_ERROR;
 800b0a2:	2001      	movs	r0, #1
 800b0a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b0a8:	4b43      	ldr	r3, [pc, #268]	; (800b1b8 <HAL_RCC_ClockConfig+0x120>)
 800b0aa:	681a      	ldr	r2, [r3, #0]
 800b0ac:	f002 020f 	and.w	r2, r2, #15
 800b0b0:	428a      	cmp	r2, r1
 800b0b2:	d317      	bcc.n	800b0e4 <HAL_RCC_ClockConfig+0x4c>
      return HAL_ERROR;
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800b0b4:	6822      	ldr	r2, [r4, #0]
 800b0b6:	0796      	lsls	r6, r2, #30
 800b0b8:	d51c      	bpl.n	800b0f4 <HAL_RCC_ClockConfig+0x5c>
 800b0ba:	4b40      	ldr	r3, [pc, #256]	; (800b1bc <HAL_RCC_ClockConfig+0x124>)
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b0bc:	f012 0f04 	tst.w	r2, #4
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800b0c0:	bf1e      	ittt	ne
 800b0c2:	6899      	ldrne	r1, [r3, #8]
 800b0c4:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 800b0c8:	6099      	strne	r1, [r3, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b0ca:	0710      	lsls	r0, r2, #28
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800b0cc:	bf42      	ittt	mi
 800b0ce:	6899      	ldrmi	r1, [r3, #8]
 800b0d0:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 800b0d4:	6099      	strmi	r1, [r3, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800b0d6:	6899      	ldr	r1, [r3, #8]
 800b0d8:	f021 00f0 	bic.w	r0, r1, #240	; 0xf0
 800b0dc:	68a1      	ldr	r1, [r4, #8]
 800b0de:	4301      	orrs	r1, r0
 800b0e0:	6099      	str	r1, [r3, #8]
 800b0e2:	e007      	b.n	800b0f4 <HAL_RCC_ClockConfig+0x5c>

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b0e4:	b2ca      	uxtb	r2, r1
 800b0e6:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b0e8:	681b      	ldr	r3, [r3, #0]
 800b0ea:	f003 030f 	and.w	r3, r3, #15
 800b0ee:	4299      	cmp	r1, r3
 800b0f0:	d1d7      	bne.n	800b0a2 <HAL_RCC_ClockConfig+0xa>
 800b0f2:	e7df      	b.n	800b0b4 <HAL_RCC_ClockConfig+0x1c>
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800b0f4:	07d1      	lsls	r1, r2, #31
 800b0f6:	d406      	bmi.n	800b106 <HAL_RCC_ClockConfig+0x6e>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800b0f8:	4b2f      	ldr	r3, [pc, #188]	; (800b1b8 <HAL_RCC_ClockConfig+0x120>)
 800b0fa:	681a      	ldr	r2, [r3, #0]
 800b0fc:	f002 020f 	and.w	r2, r2, #15
 800b100:	4295      	cmp	r5, r2
 800b102:	d32c      	bcc.n	800b15e <HAL_RCC_ClockConfig+0xc6>
 800b104:	e032      	b.n	800b16c <HAL_RCC_ClockConfig+0xd4>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800b106:	6863      	ldr	r3, [r4, #4]
 800b108:	4a2c      	ldr	r2, [pc, #176]	; (800b1bc <HAL_RCC_ClockConfig+0x124>)
 800b10a:	2b01      	cmp	r3, #1
 800b10c:	d103      	bne.n	800b116 <HAL_RCC_ClockConfig+0x7e>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b10e:	6812      	ldr	r2, [r2, #0]
 800b110:	f412 3f00 	tst.w	r2, #131072	; 0x20000
 800b114:	e008      	b.n	800b128 <HAL_RCC_ClockConfig+0x90>
      {
        return HAL_ERROR;
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b116:	1e99      	subs	r1, r3, #2
 800b118:	2901      	cmp	r1, #1
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b11a:	6812      	ldr	r2, [r2, #0]
      {
        return HAL_ERROR;
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b11c:	d802      	bhi.n	800b124 <HAL_RCC_ClockConfig+0x8c>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b11e:	f012 7f00 	tst.w	r2, #33554432	; 0x2000000
 800b122:	e001      	b.n	800b128 <HAL_RCC_ClockConfig+0x90>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b124:	f012 0f02 	tst.w	r2, #2
 800b128:	d0bb      	beq.n	800b0a2 <HAL_RCC_ClockConfig+0xa>
      {
        return HAL_ERROR;
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800b12a:	4e24      	ldr	r6, [pc, #144]	; (800b1bc <HAL_RCC_ClockConfig+0x124>)
 800b12c:	68b2      	ldr	r2, [r6, #8]
 800b12e:	f022 0203 	bic.w	r2, r2, #3
 800b132:	4313      	orrs	r3, r2
 800b134:	60b3      	str	r3, [r6, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 800b136:	f7ff fb69 	bl	800a80c <HAL_GetTick>

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b13a:	f241 3888 	movw	r8, #5000	; 0x1388
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 800b13e:	4607      	mov	r7, r0

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b140:	68b3      	ldr	r3, [r6, #8]
 800b142:	6862      	ldr	r2, [r4, #4]
 800b144:	f003 030c 	and.w	r3, r3, #12
 800b148:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800b14c:	d0d4      	beq.n	800b0f8 <HAL_RCC_ClockConfig+0x60>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b14e:	f7ff fb5d 	bl	800a80c <HAL_GetTick>
 800b152:	1bc0      	subs	r0, r0, r7
 800b154:	4540      	cmp	r0, r8
 800b156:	d9f3      	bls.n	800b140 <HAL_RCC_ClockConfig+0xa8>
      {
        return HAL_TIMEOUT;
 800b158:	2003      	movs	r0, #3

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (TICK_INT_PRIORITY);

  return HAL_OK;
}
 800b15a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b15e:	b2ea      	uxtb	r2, r5
 800b160:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b162:	681b      	ldr	r3, [r3, #0]
 800b164:	f003 030f 	and.w	r3, r3, #15
 800b168:	429d      	cmp	r5, r3
 800b16a:	d19a      	bne.n	800b0a2 <HAL_RCC_ClockConfig+0xa>
      return HAL_ERROR;
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b16c:	6821      	ldr	r1, [r4, #0]
 800b16e:	074a      	lsls	r2, r1, #29
 800b170:	d506      	bpl.n	800b180 <HAL_RCC_ClockConfig+0xe8>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800b172:	4812      	ldr	r0, [pc, #72]	; (800b1bc <HAL_RCC_ClockConfig+0x124>)
 800b174:	6883      	ldr	r3, [r0, #8]
 800b176:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 800b17a:	68e3      	ldr	r3, [r4, #12]
 800b17c:	4313      	orrs	r3, r2
 800b17e:	6083      	str	r3, [r0, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b180:	070b      	lsls	r3, r1, #28
 800b182:	d507      	bpl.n	800b194 <HAL_RCC_ClockConfig+0xfc>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800b184:	4a0d      	ldr	r2, [pc, #52]	; (800b1bc <HAL_RCC_ClockConfig+0x124>)
 800b186:	6921      	ldr	r1, [r4, #16]
 800b188:	6893      	ldr	r3, [r2, #8]
 800b18a:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800b18e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800b192:	6093      	str	r3, [r2, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b194:	f7ff ff52 	bl	800b03c <HAL_RCC_GetSysClockFreq>
 800b198:	4b08      	ldr	r3, [pc, #32]	; (800b1bc <HAL_RCC_ClockConfig+0x124>)
 800b19a:	4a09      	ldr	r2, [pc, #36]	; (800b1c0 <HAL_RCC_ClockConfig+0x128>)
 800b19c:	689b      	ldr	r3, [r3, #8]
 800b19e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800b1a2:	5cd3      	ldrb	r3, [r2, r3]
 800b1a4:	40d8      	lsrs	r0, r3
 800b1a6:	4b07      	ldr	r3, [pc, #28]	; (800b1c4 <HAL_RCC_ClockConfig+0x12c>)
 800b1a8:	6018      	str	r0, [r3, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (TICK_INT_PRIORITY);
 800b1aa:	2000      	movs	r0, #0
 800b1ac:	f7ff faf8 	bl	800a7a0 <HAL_InitTick>

  return HAL_OK;
 800b1b0:	2000      	movs	r0, #0
 800b1b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b1b6:	bf00      	nop
 800b1b8:	40023c00 	.word	0x40023c00
 800b1bc:	40023800 	.word	0x40023800
 800b1c0:	08010e5b 	.word	0x08010e5b
 800b1c4:	20000000 	.word	0x20000000

0800b1c8 <HAL_RCC_GetHCLKFreq>:
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
  return SystemCoreClock;
}
 800b1c8:	4b01      	ldr	r3, [pc, #4]	; (800b1d0 <HAL_RCC_GetHCLKFreq+0x8>)
 800b1ca:	6818      	ldr	r0, [r3, #0]
 800b1cc:	4770      	bx	lr
 800b1ce:	bf00      	nop
 800b1d0:	20000000 	.word	0x20000000

0800b1d4 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800b1d4:	4b04      	ldr	r3, [pc, #16]	; (800b1e8 <HAL_RCC_GetPCLK1Freq+0x14>)
 800b1d6:	4a05      	ldr	r2, [pc, #20]	; (800b1ec <HAL_RCC_GetPCLK1Freq+0x18>)
 800b1d8:	689b      	ldr	r3, [r3, #8]
 800b1da:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800b1de:	5cd3      	ldrb	r3, [r2, r3]
 800b1e0:	4a03      	ldr	r2, [pc, #12]	; (800b1f0 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800b1e2:	6810      	ldr	r0, [r2, #0]
}
 800b1e4:	40d8      	lsrs	r0, r3
 800b1e6:	4770      	bx	lr
 800b1e8:	40023800 	.word	0x40023800
 800b1ec:	08010e6b 	.word	0x08010e6b
 800b1f0:	20000000 	.word	0x20000000

0800b1f4 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 800b1f4:	4b04      	ldr	r3, [pc, #16]	; (800b208 <HAL_RCC_GetPCLK2Freq+0x14>)
 800b1f6:	4a05      	ldr	r2, [pc, #20]	; (800b20c <HAL_RCC_GetPCLK2Freq+0x18>)
 800b1f8:	689b      	ldr	r3, [r3, #8]
 800b1fa:	f3c3 3342 	ubfx	r3, r3, #13, #3
 800b1fe:	5cd3      	ldrb	r3, [r2, r3]
 800b200:	4a03      	ldr	r2, [pc, #12]	; (800b210 <HAL_RCC_GetPCLK2Freq+0x1c>)
 800b202:	6810      	ldr	r0, [r2, #0]
}
 800b204:	40d8      	lsrs	r0, r3
 800b206:	4770      	bx	lr
 800b208:	40023800 	.word	0x40023800
 800b20c:	08010e6b 	.word	0x08010e6b
 800b210:	20000000 	.word	0x20000000

0800b214 <TIM_OC1_SetConfig>:
  uint32_t tmpccmrx = 0U;
  uint32_t tmpccer = 0U;
  uint32_t tmpcr2 = 0U;  

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800b214:	6a03      	ldr	r3, [r0, #32]
 800b216:	f023 0301 	bic.w	r3, r3, #1
 800b21a:	6203      	str	r3, [r0, #32]
  
  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800b21c:	6a03      	ldr	r3, [r0, #32]
  /* Get the TIMx CR2 register value */
  tmpcr2 = TIMx->CR2;
 800b21e:	6842      	ldr	r2, [r0, #4]
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 800b220:	b570      	push	{r4, r5, r6, lr}
  tmpccer = TIMx->CCER;
  /* Get the TIMx CR2 register value */
  tmpcr2 = TIMx->CR2;
  
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 800b222:	6984      	ldr	r4, [r0, #24]
    
  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
  tmpccmrx &= ~TIM_CCMR1_CC1S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800b224:	680d      	ldr	r5, [r1, #0]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
    
  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800b226:	f024 0473 	bic.w	r4, r4, #115	; 0x73
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800b22a:	4325      	orrs	r5, r4
  
  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 800b22c:	f023 0402 	bic.w	r4, r3, #2
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 800b230:	688b      	ldr	r3, [r1, #8]
 800b232:	4323      	orrs	r3, r4

    
  if(IS_TIM_ADVANCED_INSTANCE(TIMx) != RESET)
 800b234:	4c0c      	ldr	r4, [pc, #48]	; (800b268 <TIM_OC1_SetConfig+0x54>)
 800b236:	42a0      	cmp	r0, r4
 800b238:	d009      	beq.n	800b24e <TIM_OC1_SetConfig+0x3a>
 800b23a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800b23e:	42a0      	cmp	r0, r4
 800b240:	d005      	beq.n	800b24e <TIM_OC1_SetConfig+0x3a>
    tmpcr2 |= OC_Config->OCIdleState;
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800b242:	6042      	str	r2, [r0, #4]
  
  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
  
  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 800b244:	684a      	ldr	r2, [r1, #4]
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
  
  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 800b246:	6185      	str	r5, [r0, #24]
  
  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 800b248:	6342      	str	r2, [r0, #52]	; 0x34
  
  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;  
 800b24a:	6203      	str	r3, [r0, #32]
} 
 800b24c:	bd70      	pop	{r4, r5, r6, pc}
  if(IS_TIM_ADVANCED_INSTANCE(TIMx) != RESET)
  {   
    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 800b24e:	68cc      	ldr	r4, [r1, #12]
    tmpcr2 &= ~TIM_CR2_OIS1;
    tmpcr2 &= ~TIM_CR2_OIS1N;
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 800b250:	694e      	ldr	r6, [r1, #20]

    
  if(IS_TIM_ADVANCED_INSTANCE(TIMx) != RESET)
  {   
    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 800b252:	f023 0308 	bic.w	r3, r3, #8
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 800b256:	4323      	orrs	r3, r4
    tmpcr2 &= ~TIM_CR2_OIS1;
    tmpcr2 &= ~TIM_CR2_OIS1N;
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 800b258:	698c      	ldr	r4, [r1, #24]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
    
    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
    tmpcr2 &= ~TIM_CR2_OIS1N;
 800b25a:	f422 7240 	bic.w	r2, r2, #768	; 0x300
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 800b25e:	4334      	orrs	r4, r6
    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 800b260:	f023 0304 	bic.w	r3, r3, #4
    tmpcr2 &= ~TIM_CR2_OIS1;
    tmpcr2 &= ~TIM_CR2_OIS1N;
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 800b264:	4322      	orrs	r2, r4
 800b266:	e7ec      	b.n	800b242 <TIM_OC1_SetConfig+0x2e>
 800b268:	40010000 	.word	0x40010000

0800b26c <TIM_OC3_SetConfig>:
  uint32_t tmpccmrx = 0U;
  uint32_t tmpccer = 0U;
  uint32_t tmpcr2 = 0U;   

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 800b26c:	6a03      	ldr	r3, [r0, #32]
 800b26e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800b272:	6203      	str	r3, [r0, #32]
  
  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800b274:	6a03      	ldr	r3, [r0, #32]
  /* Get the TIMx CR2 register value */
  tmpcr2 = TIMx->CR2;
 800b276:	6842      	ldr	r2, [r0, #4]
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 800b278:	b530      	push	{r4, r5, lr}
  tmpccer = TIMx->CCER;
  /* Get the TIMx CR2 register value */
  tmpcr2 = TIMx->CR2;
  
  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800b27a:	69c4      	ldr	r4, [r0, #28]
    
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
  tmpccmrx &= ~TIM_CCMR2_CC3S;  
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800b27c:	680d      	ldr	r5, [r1, #0]
  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
    
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
  tmpccmrx &= ~TIM_CCMR2_CC3S;  
 800b27e:	f024 0473 	bic.w	r4, r4, #115	; 0x73
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800b282:	432c      	orrs	r4, r5
  
  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800b284:	688d      	ldr	r5, [r1, #8]
  tmpccmrx &= ~TIM_CCMR2_CC3S;  
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
  
  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 800b286:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800b28a:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    
  if(IS_TIM_ADVANCED_INSTANCE(TIMx) != RESET)
 800b28e:	4d0e      	ldr	r5, [pc, #56]	; (800b2c8 <TIM_OC3_SetConfig+0x5c>)
 800b290:	42a8      	cmp	r0, r5
 800b292:	d009      	beq.n	800b2a8 <TIM_OC3_SetConfig+0x3c>
 800b294:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800b298:	42a8      	cmp	r0, r5
 800b29a:	d005      	beq.n	800b2a8 <TIM_OC3_SetConfig+0x3c>
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800b29c:	6042      	str	r2, [r0, #4]
  
  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
  
  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 800b29e:	684a      	ldr	r2, [r1, #4]
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
  
  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800b2a0:	61c4      	str	r4, [r0, #28]
  
  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 800b2a2:	63c2      	str	r2, [r0, #60]	; 0x3c
  
  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800b2a4:	6203      	str	r3, [r0, #32]
}
 800b2a6:	bd30      	pop	{r4, r5, pc}
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
    
    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800b2a8:	68cd      	ldr	r5, [r1, #12]
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
    
    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 800b2aa:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800b2ae:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    
    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
    tmpcr2 &= ~TIM_CR2_OIS3N;
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 800b2b2:	694d      	ldr	r5, [r1, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
    
    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
    tmpcr2 &= ~TIM_CR2_OIS3N;
 800b2b4:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 800b2b8:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800b2bc:	698d      	ldr	r5, [r1, #24]
    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 800b2be:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
    tmpcr2 &= ~TIM_CR2_OIS3;
    tmpcr2 &= ~TIM_CR2_OIS3N;
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800b2c2:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
 800b2c6:	e7e9      	b.n	800b29c <TIM_OC3_SetConfig+0x30>
 800b2c8:	40010000 	.word	0x40010000

0800b2cc <TIM_OC4_SetConfig>:
  uint32_t tmpccmrx = 0U;
  uint32_t tmpccer = 0U;
  uint32_t tmpcr2 = 0U;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800b2cc:	6a03      	ldr	r3, [r0, #32]
 800b2ce:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800b2d2:	6203      	str	r3, [r0, #32]
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 800b2d4:	b530      	push	{r4, r5, lr}

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
  
  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800b2d6:	6a04      	ldr	r4, [r0, #32]
  /* Get the TIMx CR2 register value */
  tmpcr2 = TIMx->CR2;
 800b2d8:	6843      	ldr	r3, [r0, #4]
  
  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800b2da:	69c2      	ldr	r2, [r0, #28]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;
  
  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800b2dc:	680d      	ldr	r5, [r1, #0]
  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
    
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800b2de:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  
  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800b2e2:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  
  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800b2e6:	688d      	ldr	r5, [r1, #8]
  
  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
  
  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 800b2e8:	f424 5400 	bic.w	r4, r4, #8192	; 0x2000
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800b2ec:	ea44 3405 	orr.w	r4, r4, r5, lsl #12
   
  /*if((TIMx == TIM1) || (TIMx == TIM8))*/
  if(IS_TIM_ADVANCED_INSTANCE(TIMx) != RESET)
 800b2f0:	4d09      	ldr	r5, [pc, #36]	; (800b318 <TIM_OC4_SetConfig+0x4c>)
 800b2f2:	42a8      	cmp	r0, r5
 800b2f4:	d009      	beq.n	800b30a <TIM_OC4_SetConfig+0x3e>
 800b2f6:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800b2fa:	42a8      	cmp	r0, r5
 800b2fc:	d005      	beq.n	800b30a <TIM_OC4_SetConfig+0x3e>
    tmpcr2 &= ~TIM_CR2_OIS4;
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800b2fe:	6043      	str	r3, [r0, #4]
  
  /* Write to TIMx CCMR2 */  
  TIMx->CCMR2 = tmpccmrx;
    
  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 800b300:	684b      	ldr	r3, [r1, #4]
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
  
  /* Write to TIMx CCMR2 */  
  TIMx->CCMR2 = tmpccmrx;
 800b302:	61c2      	str	r2, [r0, #28]
    
  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 800b304:	6403      	str	r3, [r0, #64]	; 0x40
  
  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800b306:	6204      	str	r4, [r0, #32]
}
 800b308:	bd30      	pop	{r4, r5, pc}
  {
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800b30a:	694d      	ldr	r5, [r1, #20]
  /*if((TIMx == TIM1) || (TIMx == TIM8))*/
  if(IS_TIM_ADVANCED_INSTANCE(TIMx) != RESET)
  {
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 800b30c:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800b310:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 800b314:	e7f3      	b.n	800b2fe <TIM_OC4_SetConfig+0x32>
 800b316:	bf00      	nop
 800b318:	40010000 	.word	0x40010000

0800b31c <HAL_TIM_PWM_MspInit>:
 800b31c:	4770      	bx	lr

0800b31e <HAL_TIM_ConfigClockSource>:
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, TIM_ClockConfigTypeDef * sClockSourceConfig)    
{
  uint32_t tmpsmcr = 0U;
    
  /* Process Locked */
  __HAL_LOCK(htim);
 800b31e:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800b322:	2b01      	cmp	r3, #1
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral. 
  * @retval HAL status
  */ 
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, TIM_ClockConfigTypeDef * sClockSourceConfig)    
{
 800b324:	b570      	push	{r4, r5, r6, lr}
 800b326:	f04f 0302 	mov.w	r3, #2
  uint32_t tmpsmcr = 0U;
    
  /* Process Locked */
  __HAL_LOCK(htim);
 800b32a:	f000 80b0 	beq.w	800b48e <HAL_TIM_ConfigClockSource+0x170>
  
  htim->State = HAL_TIM_STATE_BUSY;
 800b32e:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  
  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));
  
  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 800b332:	6803      	ldr	r3, [r0, #0]
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, TIM_ClockConfigTypeDef * sClockSourceConfig)    
{
  uint32_t tmpsmcr = 0U;
    
  /* Process Locked */
  __HAL_LOCK(htim);
 800b334:	2201      	movs	r2, #1
 800b336:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  
  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));
  
  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 800b33a:	689a      	ldr	r2, [r3, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800b33c:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800b340:	f022 0277 	bic.w	r2, r2, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800b344:	609a      	str	r2, [r3, #8]
  
  switch (sClockSourceConfig->ClockSource)
 800b346:	680a      	ldr	r2, [r1, #0]
 800b348:	2a40      	cmp	r2, #64	; 0x40
 800b34a:	d077      	beq.n	800b43c <HAL_TIM_ConfigClockSource+0x11e>
 800b34c:	d818      	bhi.n	800b380 <HAL_TIM_ConfigClockSource+0x62>
 800b34e:	2a10      	cmp	r2, #16
 800b350:	f000 808b 	beq.w	800b46a <HAL_TIM_ConfigClockSource+0x14c>
 800b354:	d808      	bhi.n	800b368 <HAL_TIM_ConfigClockSource+0x4a>
 800b356:	2a00      	cmp	r2, #0
 800b358:	f040 8093 	bne.w	800b482 <HAL_TIM_ConfigClockSource+0x164>
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint16_t TIM_ITRx)
{
  uint32_t tmpsmcr = 0U;
  
   /* Get the TIMx SMCR register value */
   tmpsmcr = TIMx->SMCR;
 800b35c:	689a      	ldr	r2, [r3, #8]
   /* Reset the TS Bits */
   tmpsmcr &= ~TIM_SMCR_TS;
 800b35e:	f022 0270 	bic.w	r2, r2, #112	; 0x70
   /* Set the Input Trigger source and the slave mode*/
   tmpsmcr |= TIM_ITRx | TIM_SLAVEMODE_EXTERNAL1;
 800b362:	f042 0207 	orr.w	r2, r2, #7
 800b366:	e08b      	b.n	800b480 <HAL_TIM_ConfigClockSource+0x162>
  tmpsmcr = htim->Instance->SMCR;
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
  htim->Instance->SMCR = tmpsmcr;
  
  switch (sClockSourceConfig->ClockSource)
 800b368:	2a20      	cmp	r2, #32
 800b36a:	f000 8084 	beq.w	800b476 <HAL_TIM_ConfigClockSource+0x158>
 800b36e:	2a30      	cmp	r2, #48	; 0x30
 800b370:	f040 8087 	bne.w	800b482 <HAL_TIM_ConfigClockSource+0x164>
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint16_t TIM_ITRx)
{
  uint32_t tmpsmcr = 0U;
  
   /* Get the TIMx SMCR register value */
   tmpsmcr = TIMx->SMCR;
 800b374:	689a      	ldr	r2, [r3, #8]
   /* Reset the TS Bits */
   tmpsmcr &= ~TIM_SMCR_TS;
 800b376:	f022 0270 	bic.w	r2, r2, #112	; 0x70
   /* Set the Input Trigger source and the slave mode*/
   tmpsmcr |= TIM_ITRx | TIM_SLAVEMODE_EXTERNAL1;
 800b37a:	f042 0237 	orr.w	r2, r2, #55	; 0x37
 800b37e:	e07f      	b.n	800b480 <HAL_TIM_ConfigClockSource+0x162>
  tmpsmcr = htim->Instance->SMCR;
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
  htim->Instance->SMCR = tmpsmcr;
  
  switch (sClockSourceConfig->ClockSource)
 800b380:	2a70      	cmp	r2, #112	; 0x70
 800b382:	d035      	beq.n	800b3f0 <HAL_TIM_ConfigClockSource+0xd2>
 800b384:	d81b      	bhi.n	800b3be <HAL_TIM_ConfigClockSource+0xa0>
 800b386:	2a50      	cmp	r2, #80	; 0x50
 800b388:	d041      	beq.n	800b40e <HAL_TIM_ConfigClockSource+0xf0>
 800b38a:	2a60      	cmp	r2, #96	; 0x60
 800b38c:	d179      	bne.n	800b482 <HAL_TIM_ConfigClockSource+0x164>
{
  uint32_t tmpccmr1 = 0U;
  uint32_t tmpccer = 0U;
  
  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800b38e:	6a1c      	ldr	r4, [r3, #32]

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance, 
 800b390:	684d      	ldr	r5, [r1, #4]
 800b392:	68ce      	ldr	r6, [r1, #12]
{
  uint32_t tmpccmr1 = 0U;
  uint32_t tmpccer = 0U;
  
  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800b394:	f024 0410 	bic.w	r4, r4, #16
 800b398:	621c      	str	r4, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 800b39a:	6999      	ldr	r1, [r3, #24]
  tmpccer = TIMx->CCER;
 800b39c:	6a1a      	ldr	r2, [r3, #32]
  
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800b39e:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccmr1 |= (TIM_ICFilter << 12U);

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800b3a2:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800b3a6:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
  tmpccmr1 = TIMx->CCMR1;
  tmpccer = TIMx->CCER;
  
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800b3aa:	ea41 3106 	orr.w	r1, r1, r6, lsl #12
  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
  tmpccer |= (TIM_ICPolarity << 4U);

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 800b3ae:	6199      	str	r1, [r3, #24]
  TIMx->CCER = tmpccer;
 800b3b0:	621a      	str	r2, [r3, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint16_t TIM_ITRx)
{
  uint32_t tmpsmcr = 0U;
  
   /* Get the TIMx SMCR register value */
   tmpsmcr = TIMx->SMCR;
 800b3b2:	689a      	ldr	r2, [r3, #8]
   /* Reset the TS Bits */
   tmpsmcr &= ~TIM_SMCR_TS;
 800b3b4:	f022 0270 	bic.w	r2, r2, #112	; 0x70
   /* Set the Input Trigger source and the slave mode*/
   tmpsmcr |= TIM_ITRx | TIM_SLAVEMODE_EXTERNAL1;
 800b3b8:	f042 0267 	orr.w	r2, r2, #103	; 0x67
 800b3bc:	e060      	b.n	800b480 <HAL_TIM_ConfigClockSource+0x162>
  tmpsmcr = htim->Instance->SMCR;
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
  htim->Instance->SMCR = tmpsmcr;
  
  switch (sClockSourceConfig->ClockSource)
 800b3be:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
 800b3c2:	d011      	beq.n	800b3e8 <HAL_TIM_ConfigClockSource+0xca>
 800b3c4:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800b3c8:	d15b      	bne.n	800b482 <HAL_TIM_ConfigClockSource+0x164>
static void TIM_ETR_SetConfig(TIM_TypeDef* TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
  uint32_t tmpsmcr = 0U;

  tmpsmcr = TIMx->SMCR;
 800b3ca:	689c      	ldr	r4, [r3, #8]
 800b3cc:	688d      	ldr	r5, [r1, #8]
 800b3ce:	684a      	ldr	r2, [r1, #4]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8)));
 800b3d0:	68c9      	ldr	r1, [r1, #12]
 800b3d2:	432a      	orrs	r2, r5
 800b3d4:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
 800b3d8:	4322      	orrs	r2, r4
 800b3da:	ea42 2201 	orr.w	r2, r2, r1, lsl #8

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800b3de:	609a      	str	r2, [r3, #8]
      TIM_ETR_SetConfig(htim->Instance, 
                        sClockSourceConfig->ClockPrescaler, 
                        sClockSourceConfig->ClockPolarity,
                        sClockSourceConfig->ClockFilter);
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800b3e0:	689a      	ldr	r2, [r3, #8]
 800b3e2:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800b3e6:	e04b      	b.n	800b480 <HAL_TIM_ConfigClockSource+0x162>
    case TIM_CLOCKSOURCE_INTERNAL:
    { 
      assert_param(IS_TIM_INSTANCE(htim->Instance));
      
      /* Disable slave mode to clock the prescaler directly with the internal clock */
      htim->Instance->SMCR &= ~TIM_SMCR_SMS;
 800b3e8:	689a      	ldr	r2, [r3, #8]
 800b3ea:	f022 0207 	bic.w	r2, r2, #7
 800b3ee:	e047      	b.n	800b480 <HAL_TIM_ConfigClockSource+0x162>
static void TIM_ETR_SetConfig(TIM_TypeDef* TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
  uint32_t tmpsmcr = 0U;

  tmpsmcr = TIMx->SMCR;
 800b3f0:	689c      	ldr	r4, [r3, #8]
 800b3f2:	688d      	ldr	r5, [r1, #8]
 800b3f4:	684a      	ldr	r2, [r1, #4]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8)));
 800b3f6:	68c9      	ldr	r1, [r1, #12]
 800b3f8:	432a      	orrs	r2, r5
 800b3fa:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
 800b3fe:	4322      	orrs	r2, r4
 800b400:	ea42 2201 	orr.w	r2, r2, r1, lsl #8

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800b404:	609a      	str	r2, [r3, #8]
      TIM_ETR_SetConfig(htim->Instance, 
                        sClockSourceConfig->ClockPrescaler, 
                        sClockSourceConfig->ClockPolarity, 
                        sClockSourceConfig->ClockFilter);
      /* Get the TIMx SMCR register value */
      tmpsmcr = htim->Instance->SMCR;
 800b406:	689a      	ldr	r2, [r3, #8]
      /* Reset the SMS and TS Bits */
      tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800b408:	f042 0277 	orr.w	r2, r2, #119	; 0x77
 800b40c:	e038      	b.n	800b480 <HAL_TIM_ConfigClockSource+0x162>
{
  uint32_t tmpccmr1 = 0U;
  uint32_t tmpccer = 0U;
  
  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800b40e:	6a1a      	ldr	r2, [r3, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800b410:	6a1c      	ldr	r4, [r3, #32]

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance, 
 800b412:	684d      	ldr	r5, [r1, #4]
 800b414:	68ce      	ldr	r6, [r1, #12]
  uint32_t tmpccmr1 = 0U;
  uint32_t tmpccer = 0U;
  
  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800b416:	f024 0401 	bic.w	r4, r4, #1
 800b41a:	621c      	str	r4, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;    
 800b41c:	6999      	ldr	r1, [r3, #24]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);
  
  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800b41e:	f022 020a 	bic.w	r2, r2, #10
  tmpccer = TIMx->CCER;
  TIMx->CCER &= ~TIM_CCER_CC1E;
  tmpccmr1 = TIMx->CCMR1;    
  
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800b422:	f021 01f0 	bic.w	r1, r1, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
  
  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
  tmpccer |= TIM_ICPolarity;
 800b426:	432a      	orrs	r2, r5
  TIMx->CCER &= ~TIM_CCER_CC1E;
  tmpccmr1 = TIMx->CCMR1;    
  
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800b428:	ea41 1106 	orr.w	r1, r1, r6, lsl #4
  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
  tmpccer |= TIM_ICPolarity;
  
  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800b42c:	6199      	str	r1, [r3, #24]
  TIMx->CCER = tmpccer;
 800b42e:	621a      	str	r2, [r3, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint16_t TIM_ITRx)
{
  uint32_t tmpsmcr = 0U;
  
   /* Get the TIMx SMCR register value */
   tmpsmcr = TIMx->SMCR;
 800b430:	689a      	ldr	r2, [r3, #8]
   /* Reset the TS Bits */
   tmpsmcr &= ~TIM_SMCR_TS;
 800b432:	f022 0270 	bic.w	r2, r2, #112	; 0x70
   /* Set the Input Trigger source and the slave mode*/
   tmpsmcr |= TIM_ITRx | TIM_SLAVEMODE_EXTERNAL1;
 800b436:	f042 0257 	orr.w	r2, r2, #87	; 0x57
 800b43a:	e021      	b.n	800b480 <HAL_TIM_ConfigClockSource+0x162>
{
  uint32_t tmpccmr1 = 0U;
  uint32_t tmpccer = 0U;
  
  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800b43c:	6a1a      	ldr	r2, [r3, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800b43e:	6a1c      	ldr	r4, [r3, #32]

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance, 
 800b440:	684d      	ldr	r5, [r1, #4]
 800b442:	68ce      	ldr	r6, [r1, #12]
  uint32_t tmpccmr1 = 0U;
  uint32_t tmpccer = 0U;
  
  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800b444:	f024 0401 	bic.w	r4, r4, #1
 800b448:	621c      	str	r4, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;    
 800b44a:	6999      	ldr	r1, [r3, #24]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);
  
  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800b44c:	f022 020a 	bic.w	r2, r2, #10
  tmpccer = TIMx->CCER;
  TIMx->CCER &= ~TIM_CCER_CC1E;
  tmpccmr1 = TIMx->CCMR1;    
  
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800b450:	f021 01f0 	bic.w	r1, r1, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
  
  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
  tmpccer |= TIM_ICPolarity;
 800b454:	432a      	orrs	r2, r5
  TIMx->CCER &= ~TIM_CCER_CC1E;
  tmpccmr1 = TIMx->CCMR1;    
  
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800b456:	ea41 1106 	orr.w	r1, r1, r6, lsl #4
  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
  tmpccer |= TIM_ICPolarity;
  
  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800b45a:	6199      	str	r1, [r3, #24]
  TIMx->CCER = tmpccer;
 800b45c:	621a      	str	r2, [r3, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint16_t TIM_ITRx)
{
  uint32_t tmpsmcr = 0U;
  
   /* Get the TIMx SMCR register value */
   tmpsmcr = TIMx->SMCR;
 800b45e:	689a      	ldr	r2, [r3, #8]
   /* Reset the TS Bits */
   tmpsmcr &= ~TIM_SMCR_TS;
 800b460:	f022 0270 	bic.w	r2, r2, #112	; 0x70
   /* Set the Input Trigger source and the slave mode*/
   tmpsmcr |= TIM_ITRx | TIM_SLAVEMODE_EXTERNAL1;
 800b464:	f042 0247 	orr.w	r2, r2, #71	; 0x47
 800b468:	e00a      	b.n	800b480 <HAL_TIM_ConfigClockSource+0x162>
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint16_t TIM_ITRx)
{
  uint32_t tmpsmcr = 0U;
  
   /* Get the TIMx SMCR register value */
   tmpsmcr = TIMx->SMCR;
 800b46a:	689a      	ldr	r2, [r3, #8]
   /* Reset the TS Bits */
   tmpsmcr &= ~TIM_SMCR_TS;
 800b46c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
   /* Set the Input Trigger source and the slave mode*/
   tmpsmcr |= TIM_ITRx | TIM_SLAVEMODE_EXTERNAL1;
 800b470:	f042 0217 	orr.w	r2, r2, #23
 800b474:	e004      	b.n	800b480 <HAL_TIM_ConfigClockSource+0x162>
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint16_t TIM_ITRx)
{
  uint32_t tmpsmcr = 0U;
  
   /* Get the TIMx SMCR register value */
   tmpsmcr = TIMx->SMCR;
 800b476:	689a      	ldr	r2, [r3, #8]
   /* Reset the TS Bits */
   tmpsmcr &= ~TIM_SMCR_TS;
 800b478:	f022 0270 	bic.w	r2, r2, #112	; 0x70
   /* Set the Input Trigger source and the slave mode*/
   tmpsmcr |= TIM_ITRx | TIM_SLAVEMODE_EXTERNAL1;
 800b47c:	f042 0227 	orr.w	r2, r2, #39	; 0x27
   /* Write to TIMx SMCR */
   TIMx->SMCR = tmpsmcr;
 800b480:	609a      	str	r2, [r3, #8]
    break;
    
    default:
    break;    
  }
  htim->State = HAL_TIM_STATE_READY;
 800b482:	2301      	movs	r3, #1
 800b484:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  
  __HAL_UNLOCK(htim);
 800b488:	2300      	movs	r3, #0
 800b48a:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, TIM_ClockConfigTypeDef * sClockSourceConfig)    
{
  uint32_t tmpsmcr = 0U;
    
  /* Process Locked */
  __HAL_LOCK(htim);
 800b48e:	4618      	mov	r0, r3
  htim->State = HAL_TIM_STATE_READY;
  
  __HAL_UNLOCK(htim);
  
  return HAL_OK;
}
 800b490:	bd70      	pop	{r4, r5, r6, pc}
	...

0800b494 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1 = 0U;
  tmpcr1 = TIMx->CR1;
  
  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if(IS_TIM_CC3_INSTANCE(TIMx) != RESET)   
 800b494:	4a2e      	ldr	r2, [pc, #184]	; (800b550 <TIM_Base_SetConfig+0xbc>)
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, TIM_Base_InitTypeDef *Structure)
{
  uint32_t tmpcr1 = 0U;
  tmpcr1 = TIMx->CR1;
 800b496:	6803      	ldr	r3, [r0, #0]
  
  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if(IS_TIM_CC3_INSTANCE(TIMx) != RESET)   
 800b498:	4290      	cmp	r0, r2
 800b49a:	d012      	beq.n	800b4c2 <TIM_Base_SetConfig+0x2e>
 800b49c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800b4a0:	d00f      	beq.n	800b4c2 <TIM_Base_SetConfig+0x2e>
 800b4a2:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800b4a6:	4290      	cmp	r0, r2
 800b4a8:	d00b      	beq.n	800b4c2 <TIM_Base_SetConfig+0x2e>
 800b4aa:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800b4ae:	4290      	cmp	r0, r2
 800b4b0:	d007      	beq.n	800b4c2 <TIM_Base_SetConfig+0x2e>
 800b4b2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800b4b6:	4290      	cmp	r0, r2
 800b4b8:	d003      	beq.n	800b4c2 <TIM_Base_SetConfig+0x2e>
 800b4ba:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800b4be:	4290      	cmp	r0, r2
 800b4c0:	d118      	bne.n	800b4f4 <TIM_Base_SetConfig+0x60>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 800b4c2:	684a      	ldr	r2, [r1, #4]
  
  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if(IS_TIM_CC3_INSTANCE(TIMx) != RESET)   
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800b4c4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800b4c8:	4313      	orrs	r3, r2
  }
 
  if(IS_TIM_CC1_INSTANCE(TIMx) != RESET)  
 800b4ca:	4a21      	ldr	r2, [pc, #132]	; (800b550 <TIM_Base_SetConfig+0xbc>)
 800b4cc:	4290      	cmp	r0, r2
 800b4ce:	d037      	beq.n	800b540 <TIM_Base_SetConfig+0xac>
 800b4d0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800b4d4:	d034      	beq.n	800b540 <TIM_Base_SetConfig+0xac>
 800b4d6:	4a1f      	ldr	r2, [pc, #124]	; (800b554 <TIM_Base_SetConfig+0xc0>)
 800b4d8:	4290      	cmp	r0, r2
 800b4da:	d031      	beq.n	800b540 <TIM_Base_SetConfig+0xac>
 800b4dc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800b4e0:	4290      	cmp	r0, r2
 800b4e2:	d02d      	beq.n	800b540 <TIM_Base_SetConfig+0xac>
 800b4e4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800b4e8:	4290      	cmp	r0, r2
 800b4ea:	d029      	beq.n	800b540 <TIM_Base_SetConfig+0xac>
 800b4ec:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800b4f0:	4290      	cmp	r0, r2
 800b4f2:	d025      	beq.n	800b540 <TIM_Base_SetConfig+0xac>
 800b4f4:	4a18      	ldr	r2, [pc, #96]	; (800b558 <TIM_Base_SetConfig+0xc4>)
 800b4f6:	4290      	cmp	r0, r2
 800b4f8:	d022      	beq.n	800b540 <TIM_Base_SetConfig+0xac>
 800b4fa:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800b4fe:	4290      	cmp	r0, r2
 800b500:	d01e      	beq.n	800b540 <TIM_Base_SetConfig+0xac>
 800b502:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800b506:	4290      	cmp	r0, r2
 800b508:	d01a      	beq.n	800b540 <TIM_Base_SetConfig+0xac>
 800b50a:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 800b50e:	4290      	cmp	r0, r2
 800b510:	d016      	beq.n	800b540 <TIM_Base_SetConfig+0xac>
 800b512:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800b516:	4290      	cmp	r0, r2
 800b518:	d012      	beq.n	800b540 <TIM_Base_SetConfig+0xac>
 800b51a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800b51e:	4290      	cmp	r0, r2
 800b520:	d00e      	beq.n	800b540 <TIM_Base_SetConfig+0xac>
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  TIMx->CR1 = tmpcr1;
 800b522:	6003      	str	r3, [r0, #0]

  /* Set the Auto-reload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800b524:	688b      	ldr	r3, [r1, #8]
 800b526:	62c3      	str	r3, [r0, #44]	; 0x2c
 
  /* Set the Prescaler value */
  TIMx->PSC = (uint32_t)Structure->Prescaler;
 800b528:	680b      	ldr	r3, [r1, #0]
 800b52a:	6283      	str	r3, [r0, #40]	; 0x28
    
  if(IS_TIM_ADVANCED_INSTANCE(TIMx) != RESET)  
 800b52c:	4b08      	ldr	r3, [pc, #32]	; (800b550 <TIM_Base_SetConfig+0xbc>)
 800b52e:	4298      	cmp	r0, r3
 800b530:	d00b      	beq.n	800b54a <TIM_Base_SetConfig+0xb6>
 800b532:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800b536:	4298      	cmp	r0, r3
 800b538:	d007      	beq.n	800b54a <TIM_Base_SetConfig+0xb6>
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler 
     and the repetition counter(only for TIM1 and TIM8) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800b53a:	2301      	movs	r3, #1
 800b53c:	6143      	str	r3, [r0, #20]
}
 800b53e:	4770      	bx	lr
 
  if(IS_TIM_CC1_INSTANCE(TIMx) != RESET)  
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800b540:	68ca      	ldr	r2, [r1, #12]
  }
 
  if(IS_TIM_CC1_INSTANCE(TIMx) != RESET)  
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 800b542:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800b546:	4313      	orrs	r3, r2
 800b548:	e7eb      	b.n	800b522 <TIM_Base_SetConfig+0x8e>
  TIMx->PSC = (uint32_t)Structure->Prescaler;
    
  if(IS_TIM_ADVANCED_INSTANCE(TIMx) != RESET)  
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800b54a:	690b      	ldr	r3, [r1, #16]
 800b54c:	6303      	str	r3, [r0, #48]	; 0x30
 800b54e:	e7f4      	b.n	800b53a <TIM_Base_SetConfig+0xa6>
 800b550:	40010000 	.word	0x40010000
 800b554:	40000400 	.word	0x40000400
 800b558:	40014000 	.word	0x40014000

0800b55c <HAL_TIM_Base_Init>:
  * @param  htim pointer to a TIM_HandleTypeDef structure that contains
  *                the configuration information for TIM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{ 
 800b55c:	b510      	push	{r4, lr}
  /* Check the TIM handle allocation */
  if(htim == NULL)
 800b55e:	4604      	mov	r4, r0
 800b560:	b1a0      	cbz	r0, 800b58c <HAL_TIM_Base_Init+0x30>
  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance)); 
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  
  if(htim->State == HAL_TIM_STATE_RESET)
 800b562:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800b566:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b56a:	b91b      	cbnz	r3, 800b574 <HAL_TIM_Base_Init+0x18>
  {  
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 800b56c:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 800b570:	f7ff f802 	bl	800a578 <HAL_TIM_Base_MspInit>
  }
  
  /* Set the TIM state */
  htim->State= HAL_TIM_STATE_BUSY;
 800b574:	2302      	movs	r3, #2
 800b576:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  
  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init); 
 800b57a:	6820      	ldr	r0, [r4, #0]
 800b57c:	1d21      	adds	r1, r4, #4
 800b57e:	f7ff ff89 	bl	800b494 <TIM_Base_SetConfig>
  
  /* Initialize the TIM state*/
  htim->State= HAL_TIM_STATE_READY;
 800b582:	2301      	movs	r3, #1
 800b584:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  
  return HAL_OK;
 800b588:	2000      	movs	r0, #0
 800b58a:	bd10      	pop	{r4, pc}
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{ 
  /* Check the TIM handle allocation */
  if(htim == NULL)
  {
    return HAL_ERROR;
 800b58c:	2001      	movs	r0, #1
  
  /* Initialize the TIM state*/
  htim->State= HAL_TIM_STATE_READY;
  
  return HAL_OK;
}
 800b58e:	bd10      	pop	{r4, pc}

0800b590 <HAL_TIM_PWM_Init>:
  * @param  htim pointer to a TIM_HandleTypeDef structure that contains
  *                the configuration information for TIM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 800b590:	b510      	push	{r4, lr}
  /* Check the TIM handle allocation */
  if(htim == NULL)
 800b592:	4604      	mov	r4, r0
 800b594:	b1a0      	cbz	r0, 800b5c0 <HAL_TIM_PWM_Init+0x30>
  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));

  if(htim->State == HAL_TIM_STATE_RESET)
 800b596:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800b59a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b59e:	b91b      	cbnz	r3, 800b5a8 <HAL_TIM_PWM_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 800b5a0:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 800b5a4:	f7ff feba 	bl	800b31c <HAL_TIM_PWM_MspInit>
  }

  /* Set the TIM state */
  htim->State= HAL_TIM_STATE_BUSY;  
 800b5a8:	2302      	movs	r3, #2
 800b5aa:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  
  /* Init the base time for the PWM */  
  TIM_Base_SetConfig(htim->Instance, &htim->Init); 
 800b5ae:	6820      	ldr	r0, [r4, #0]
 800b5b0:	1d21      	adds	r1, r4, #4
 800b5b2:	f7ff ff6f 	bl	800b494 <TIM_Base_SetConfig>
   
  /* Initialize the TIM state*/
  htim->State= HAL_TIM_STATE_READY;
 800b5b6:	2301      	movs	r3, #1
 800b5b8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  
  return HAL_OK;
 800b5bc:	2000      	movs	r0, #0
 800b5be:	bd10      	pop	{r4, pc}
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if(htim == NULL)
  {
    return HAL_ERROR;
 800b5c0:	2001      	movs	r0, #1
   
  /* Initialize the TIM state*/
  htim->State= HAL_TIM_STATE_READY;
  
  return HAL_OK;
}  
 800b5c2:	bd10      	pop	{r4, pc}

0800b5c4 <HAL_TIM_Encoder_Init>:
  *                the configuration information for TIM module.
  * @param  sConfig TIM Encoder Interface configuration structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Encoder_Init(TIM_HandleTypeDef *htim,  TIM_Encoder_InitTypeDef* sConfig)
{
 800b5c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b5c6:	460c      	mov	r4, r1
  uint32_t tmpsmcr = 0U;
  uint32_t tmpccmr1 = 0U;
  uint32_t tmpccer = 0U;
  
  /* Check the TIM handle allocation */
  if(htim == NULL)
 800b5c8:	4605      	mov	r5, r0
 800b5ca:	2800      	cmp	r0, #0
 800b5cc:	d041      	beq.n	800b652 <HAL_TIM_Encoder_Init+0x8e>
  assert_param(IS_TIM_IC_PRESCALER(sConfig->IC1Prescaler));
  assert_param(IS_TIM_IC_PRESCALER(sConfig->IC2Prescaler));
  assert_param(IS_TIM_IC_FILTER(sConfig->IC1Filter));
  assert_param(IS_TIM_IC_FILTER(sConfig->IC2Filter));

  if(htim->State == HAL_TIM_STATE_RESET)
 800b5ce:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800b5d2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b5d6:	b91b      	cbnz	r3, 800b5e0 <HAL_TIM_Encoder_Init+0x1c>
  { 
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 800b5d8:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_Encoder_MspInit(htim);
 800b5dc:	f7fe ffa6 	bl	800a52c <HAL_TIM_Encoder_MspInit>
  
  /* Set the TIM state */
  htim->State= HAL_TIM_STATE_BUSY;   
    
  /* Reset the SMS bits */
  htim->Instance->SMCR &= ~TIM_SMCR_SMS;
 800b5e0:	4629      	mov	r1, r5
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_Encoder_MspInit(htim);
  }
  
  /* Set the TIM state */
  htim->State= HAL_TIM_STATE_BUSY;   
 800b5e2:	2302      	movs	r3, #2
    
  /* Reset the SMS bits */
  htim->Instance->SMCR &= ~TIM_SMCR_SMS;
 800b5e4:	f851 0b04 	ldr.w	r0, [r1], #4
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_Encoder_MspInit(htim);
  }
  
  /* Set the TIM state */
  htim->State= HAL_TIM_STATE_BUSY;   
 800b5e8:	f885 3039 	strb.w	r3, [r5, #57]	; 0x39
    
  /* Reset the SMS bits */
  htim->Instance->SMCR &= ~TIM_SMCR_SMS;
 800b5ec:	6883      	ldr	r3, [r0, #8]
 800b5ee:	f023 0307 	bic.w	r3, r3, #7
 800b5f2:	6083      	str	r3, [r0, #8]
  
  /* Configure the Time base in the Encoder Mode */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);  
 800b5f4:	f7ff ff4e 	bl	800b494 <TIM_Base_SetConfig>
  
  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 800b5f8:	6828      	ldr	r0, [r5, #0]

  /* Get the TIMx CCER register value */
  tmpccer = htim->Instance->CCER;

  /* Set the encoder Mode */
  tmpsmcr |= sConfig->EncoderMode;
 800b5fa:	6823      	ldr	r3, [r4, #0]
  
  /* Configure the Time base in the Encoder Mode */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);  
  
  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 800b5fc:	6887      	ldr	r7, [r0, #8]

  /* Get the TIMx CCMR1 register value */
  tmpccmr1 = htim->Instance->CCMR1;
 800b5fe:	6981      	ldr	r1, [r0, #24]
 800b600:	69a2      	ldr	r2, [r4, #24]

  /* Get the TIMx CCER register value */
  tmpccer = htim->Instance->CCER;
 800b602:	6a06      	ldr	r6, [r0, #32]

  /* Set the encoder Mode */
  tmpsmcr |= sConfig->EncoderMode;
 800b604:	431f      	orrs	r7, r3
 800b606:	f421 7340 	bic.w	r3, r1, #768	; 0x300
 800b60a:	f023 0303 	bic.w	r3, r3, #3
 800b60e:	ea43 2202 	orr.w	r2, r3, r2, lsl #8

  /* Select the Capture Compare 1 and the Capture Compare 2 as input */
  tmpccmr1 &= ~(TIM_CCMR1_CC1S | TIM_CCMR1_CC2S);
  tmpccmr1 |= (sConfig->IC1Selection | (sConfig->IC2Selection << 8U));
 800b612:	68a3      	ldr	r3, [r4, #8]
  
  /* Set the Capture Compare 1 and the Capture Compare 2 prescalers and filters */
  tmpccmr1 &= ~(TIM_CCMR1_IC1PSC | TIM_CCMR1_IC2PSC);
  tmpccmr1 &= ~(TIM_CCMR1_IC1F | TIM_CCMR1_IC2F);
  tmpccmr1 |= sConfig->IC1Prescaler | (sConfig->IC2Prescaler << 8U);
  tmpccmr1 |= (sConfig->IC1Filter << 4U) | (sConfig->IC2Filter << 12U);
 800b614:	6921      	ldr	r1, [r4, #16]
  /* Set the encoder Mode */
  tmpsmcr |= sConfig->EncoderMode;

  /* Select the Capture Compare 1 and the Capture Compare 2 as input */
  tmpccmr1 &= ~(TIM_CCMR1_CC1S | TIM_CCMR1_CC2S);
  tmpccmr1 |= (sConfig->IC1Selection | (sConfig->IC2Selection << 8U));
 800b616:	4313      	orrs	r3, r2
  
  /* Set the Capture Compare 1 and the Capture Compare 2 prescalers and filters */
  tmpccmr1 &= ~(TIM_CCMR1_IC1PSC | TIM_CCMR1_IC2PSC);
  tmpccmr1 &= ~(TIM_CCMR1_IC1F | TIM_CCMR1_IC2F);
  tmpccmr1 |= sConfig->IC1Prescaler | (sConfig->IC2Prescaler << 8U);
  tmpccmr1 |= (sConfig->IC1Filter << 4U) | (sConfig->IC2Filter << 12U);
 800b618:	69e2      	ldr	r2, [r4, #28]
 800b61a:	0109      	lsls	r1, r1, #4
 800b61c:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 800b620:	68e2      	ldr	r2, [r4, #12]
 800b622:	430a      	orrs	r2, r1
 800b624:	6a21      	ldr	r1, [r4, #32]
  tmpccmr1 &= ~(TIM_CCMR1_CC1S | TIM_CCMR1_CC2S);
  tmpccmr1 |= (sConfig->IC1Selection | (sConfig->IC2Selection << 8U));
  
  /* Set the Capture Compare 1 and the Capture Compare 2 prescalers and filters */
  tmpccmr1 &= ~(TIM_CCMR1_IC1PSC | TIM_CCMR1_IC2PSC);
  tmpccmr1 &= ~(TIM_CCMR1_IC1F | TIM_CCMR1_IC2F);
 800b626:	f423 437c 	bic.w	r3, r3, #64512	; 0xfc00
  tmpccmr1 |= sConfig->IC1Prescaler | (sConfig->IC2Prescaler << 8U);
  tmpccmr1 |= (sConfig->IC1Filter << 4U) | (sConfig->IC2Filter << 12U);
 800b62a:	ea42 3201 	orr.w	r2, r2, r1, lsl #12
  tmpccmr1 &= ~(TIM_CCMR1_CC1S | TIM_CCMR1_CC2S);
  tmpccmr1 |= (sConfig->IC1Selection | (sConfig->IC2Selection << 8U));
  
  /* Set the Capture Compare 1 and the Capture Compare 2 prescalers and filters */
  tmpccmr1 &= ~(TIM_CCMR1_IC1PSC | TIM_CCMR1_IC2PSC);
  tmpccmr1 &= ~(TIM_CCMR1_IC1F | TIM_CCMR1_IC2F);
 800b62e:	f023 03fc 	bic.w	r3, r3, #252	; 0xfc
 800b632:	6961      	ldr	r1, [r4, #20]
  tmpccmr1 |= sConfig->IC1Prescaler | (sConfig->IC2Prescaler << 8U);
  tmpccmr1 |= (sConfig->IC1Filter << 4U) | (sConfig->IC2Filter << 12U);
 800b634:	4313      	orrs	r3, r2
 800b636:	f026 02aa 	bic.w	r2, r6, #170	; 0xaa
 800b63a:	ea42 1201 	orr.w	r2, r2, r1, lsl #4

  /* Set the TI1 and the TI2 Polarities */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC2P);
  tmpccer &= ~(TIM_CCER_CC1NP | TIM_CCER_CC2NP);
  tmpccer |= sConfig->IC1Polarity | (sConfig->IC2Polarity << 4U);
 800b63e:	6861      	ldr	r1, [r4, #4]
  
  /* Write to TIMx SMCR */
  htim->Instance->SMCR = tmpsmcr;
 800b640:	6087      	str	r7, [r0, #8]
  tmpccmr1 |= (sConfig->IC1Filter << 4U) | (sConfig->IC2Filter << 12U);

  /* Set the TI1 and the TI2 Polarities */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC2P);
  tmpccer &= ~(TIM_CCER_CC1NP | TIM_CCER_CC2NP);
  tmpccer |= sConfig->IC1Polarity | (sConfig->IC2Polarity << 4U);
 800b642:	430a      	orrs	r2, r1
  
  /* Write to TIMx SMCR */
  htim->Instance->SMCR = tmpsmcr;

  /* Write to TIMx CCMR1 */
  htim->Instance->CCMR1 = tmpccmr1;
 800b644:	6183      	str	r3, [r0, #24]

  /* Write to TIMx CCER */
  htim->Instance->CCER = tmpccer;
  
  /* Initialize the TIM state*/
  htim->State= HAL_TIM_STATE_READY;
 800b646:	2301      	movs	r3, #1

  /* Write to TIMx CCMR1 */
  htim->Instance->CCMR1 = tmpccmr1;

  /* Write to TIMx CCER */
  htim->Instance->CCER = tmpccer;
 800b648:	6202      	str	r2, [r0, #32]
  
  /* Initialize the TIM state*/
  htim->State= HAL_TIM_STATE_READY;
 800b64a:	f885 3039 	strb.w	r3, [r5, #57]	; 0x39
  
  return HAL_OK;
 800b64e:	2000      	movs	r0, #0
 800b650:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  uint32_t tmpccer = 0U;
  
  /* Check the TIM handle allocation */
  if(htim == NULL)
  {
    return HAL_ERROR;
 800b652:	2001      	movs	r0, #1
  
  /* Initialize the TIM state*/
  htim->State= HAL_TIM_STATE_READY;
  
  return HAL_OK;
}
 800b654:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800b658 <TIM_OC2_SetConfig>:
  uint32_t tmpccmrx = 0U;
  uint32_t tmpccer = 0U;
  uint32_t tmpcr2 = 0U;
   
  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800b658:	6a03      	ldr	r3, [r0, #32]
 800b65a:	f023 0310 	bic.w	r3, r3, #16
 800b65e:	6203      	str	r3, [r0, #32]
  
  /* Get the TIMx CCER register value */  
  tmpccer = TIMx->CCER;
 800b660:	6a03      	ldr	r3, [r0, #32]
  /* Get the TIMx CR2 register value */
  tmpcr2 = TIMx->CR2;
 800b662:	6842      	ldr	r2, [r0, #4]
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 800b664:	b530      	push	{r4, r5, lr}
  tmpccer = TIMx->CCER;
  /* Get the TIMx CR2 register value */
  tmpcr2 = TIMx->CR2;
  
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 800b666:	6984      	ldr	r4, [r0, #24]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
  tmpccmrx &= ~TIM_CCMR1_CC2S;
  
  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800b668:	680d      	ldr	r5, [r1, #0]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
    
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800b66a:	f424 44e6 	bic.w	r4, r4, #29440	; 0x7300
  
  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800b66e:	ea44 2405 	orr.w	r4, r4, r5, lsl #8
  
  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800b672:	688d      	ldr	r5, [r1, #8]
  
  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
  
  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 800b674:	f023 0320 	bic.w	r3, r3, #32
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800b678:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
    
  if(IS_TIM_ADVANCED_INSTANCE(TIMx) != RESET)
 800b67c:	4d0e      	ldr	r5, [pc, #56]	; (800b6b8 <TIM_OC2_SetConfig+0x60>)
 800b67e:	42a8      	cmp	r0, r5
 800b680:	d009      	beq.n	800b696 <TIM_OC2_SetConfig+0x3e>
 800b682:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800b686:	42a8      	cmp	r0, r5
 800b688:	d005      	beq.n	800b696 <TIM_OC2_SetConfig+0x3e>
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800b68a:	6042      	str	r2, [r0, #4]
  
  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
  
  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 800b68c:	684a      	ldr	r2, [r1, #4]
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
  
  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 800b68e:	6184      	str	r4, [r0, #24]
  
  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 800b690:	6382      	str	r2, [r0, #56]	; 0x38
  
  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800b692:	6203      	str	r3, [r0, #32]
}
 800b694:	bd30      	pop	{r4, r5, pc}
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));
    
    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800b696:	68cd      	ldr	r5, [r1, #12]
  if(IS_TIM_ADVANCED_INSTANCE(TIMx) != RESET)
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));
    
    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 800b698:	f023 0380 	bic.w	r3, r3, #128	; 0x80
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800b69c:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
    
    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
    tmpcr2 &= ~TIM_CR2_OIS2N;
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 800b6a0:	694d      	ldr	r5, [r1, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
    
    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
    tmpcr2 &= ~TIM_CR2_OIS2N;
 800b6a2:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 800b6a6:	ea42 0285 	orr.w	r2, r2, r5, lsl #2
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800b6aa:	698d      	ldr	r5, [r1, #24]
    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 800b6ac:	f023 0340 	bic.w	r3, r3, #64	; 0x40
    tmpcr2 &= ~TIM_CR2_OIS2;
    tmpcr2 &= ~TIM_CR2_OIS2N;
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800b6b0:	ea42 0285 	orr.w	r2, r2, r5, lsl #2
 800b6b4:	e7e9      	b.n	800b68a <TIM_OC2_SetConfig+0x32>
 800b6b6:	bf00      	nop
 800b6b8:	40010000 	.word	0x40010000

0800b6bc <HAL_TIM_PWM_ConfigChannel>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim, TIM_OC_InitTypeDef* sConfig, uint32_t Channel)
{
 800b6bc:	b538      	push	{r3, r4, r5, lr}
  __HAL_LOCK(htim);
 800b6be:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800b6c2:	2b01      	cmp	r3, #1
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim, TIM_OC_InitTypeDef* sConfig, uint32_t Channel)
{
 800b6c4:	4604      	mov	r4, r0
 800b6c6:	460d      	mov	r5, r1
 800b6c8:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(htim);
 800b6cc:	d058      	beq.n	800b780 <HAL_TIM_PWM_ConfigChannel+0xc4>
 800b6ce:	2301      	movs	r3, #1
 800b6d0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
  assert_param(IS_TIM_CHANNELS(Channel)); 
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  htim->State = HAL_TIM_STATE_BUSY;
 800b6d4:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
    
  switch (Channel)
 800b6d8:	2a0c      	cmp	r2, #12
 800b6da:	d84b      	bhi.n	800b774 <HAL_TIM_PWM_ConfigChannel+0xb8>
 800b6dc:	e8df f002 	tbb	[pc, r2]
 800b6e0:	4a4a4a07 	.word	0x4a4a4a07
 800b6e4:	4a4a4a17 	.word	0x4a4a4a17
 800b6e8:	4a4a4a29 	.word	0x4a4a4a29
 800b6ec:	39          	.byte	0x39
 800b6ed:	00          	.byte	0x00
  {
    case TIM_CHANNEL_1:
    {
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 800b6ee:	6820      	ldr	r0, [r4, #0]
 800b6f0:	f7ff fd90 	bl	800b214 <TIM_OC1_SetConfig>
      
      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800b6f4:	6823      	ldr	r3, [r4, #0]
 800b6f6:	699a      	ldr	r2, [r3, #24]
 800b6f8:	f042 0208 	orr.w	r2, r2, #8
 800b6fc:	619a      	str	r2, [r3, #24]
      
      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800b6fe:	699a      	ldr	r2, [r3, #24]
 800b700:	f022 0204 	bic.w	r2, r2, #4
 800b704:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800b706:	6999      	ldr	r1, [r3, #24]
 800b708:	692a      	ldr	r2, [r5, #16]
 800b70a:	430a      	orrs	r2, r1
 800b70c:	e00f      	b.n	800b72e <HAL_TIM_PWM_ConfigChannel+0x72>
    
    case TIM_CHANNEL_2:
    {
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800b70e:	6820      	ldr	r0, [r4, #0]
 800b710:	f7ff ffa2 	bl	800b658 <TIM_OC2_SetConfig>
      
      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800b714:	6823      	ldr	r3, [r4, #0]
      
      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800b716:	6909      	ldr	r1, [r1, #16]
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
      
      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800b718:	699a      	ldr	r2, [r3, #24]
 800b71a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b71e:	619a      	str	r2, [r3, #24]
      
      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800b720:	699a      	ldr	r2, [r3, #24]
 800b722:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b726:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800b728:	699a      	ldr	r2, [r3, #24]
 800b72a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800b72e:	619a      	str	r2, [r3, #24]
    }
    break;
 800b730:	e020      	b.n	800b774 <HAL_TIM_PWM_ConfigChannel+0xb8>
    
    case TIM_CHANNEL_3:
    {
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));
      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800b732:	6820      	ldr	r0, [r4, #0]
 800b734:	f7ff fd9a 	bl	800b26c <TIM_OC3_SetConfig>
      
      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800b738:	6823      	ldr	r3, [r4, #0]
 800b73a:	69da      	ldr	r2, [r3, #28]
 800b73c:	f042 0208 	orr.w	r2, r2, #8
 800b740:	61da      	str	r2, [r3, #28]
      
     /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800b742:	69da      	ldr	r2, [r3, #28]
 800b744:	f022 0204 	bic.w	r2, r2, #4
 800b748:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;  
 800b74a:	69d9      	ldr	r1, [r3, #28]
 800b74c:	692a      	ldr	r2, [r5, #16]
 800b74e:	430a      	orrs	r2, r1
 800b750:	e00f      	b.n	800b772 <HAL_TIM_PWM_ConfigChannel+0xb6>
    
    case TIM_CHANNEL_4:
    {
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));
      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800b752:	6820      	ldr	r0, [r4, #0]
 800b754:	f7ff fdba 	bl	800b2cc <TIM_OC4_SetConfig>
      
      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800b758:	6823      	ldr	r3, [r4, #0]
      
     /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;  
 800b75a:	6909      	ldr	r1, [r1, #16]
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));
      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
      
      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800b75c:	69da      	ldr	r2, [r3, #28]
 800b75e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b762:	61da      	str	r2, [r3, #28]
      
     /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800b764:	69da      	ldr	r2, [r3, #28]
 800b766:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b76a:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;  
 800b76c:	69da      	ldr	r2, [r3, #28]
 800b76e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800b772:	61da      	str	r2, [r3, #28]
    
    default:
    break;    
  }
  
  htim->State = HAL_TIM_STATE_READY;
 800b774:	2301      	movs	r3, #1
    
  __HAL_UNLOCK(htim);
 800b776:	2000      	movs	r0, #0
    
    default:
    break;    
  }
  
  htim->State = HAL_TIM_STATE_READY;
 800b778:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
    
  __HAL_UNLOCK(htim);
 800b77c:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
  
  return HAL_OK;
}
 800b780:	bd38      	pop	{r3, r4, r5, pc}

0800b782 <HAL_TIMEx_MasterConfigSynchronization>:
  /* Check the parameters */
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));
  
  __HAL_LOCK(htim);
 800b782:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800b786:	2b01      	cmp	r3, #1
  *         contains the selected trigger output (TRGO) and the Master/Slave 
  *         mode. 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim, TIM_MasterConfigTypeDef * sMasterConfig)
{
 800b788:	b510      	push	{r4, lr}
 800b78a:	f04f 0302 	mov.w	r3, #2
  /* Check the parameters */
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));
  
  __HAL_LOCK(htim);
 800b78e:	d018      	beq.n	800b7c2 <HAL_TIMEx_MasterConfigSynchronization+0x40>
  
  htim->State = HAL_TIM_STATE_BUSY;
 800b790:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Reset the MMS Bits */
  htim->Instance->CR2 &= ~TIM_CR2_MMS;
 800b794:	6803      	ldr	r3, [r0, #0]
 800b796:	685a      	ldr	r2, [r3, #4]
 800b798:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 800b79c:	605a      	str	r2, [r3, #4]
  /* Select the TRGO source */
  htim->Instance->CR2 |= sMasterConfig->MasterOutputTrigger;
 800b79e:	685c      	ldr	r4, [r3, #4]
 800b7a0:	680a      	ldr	r2, [r1, #0]
 800b7a2:	4322      	orrs	r2, r4
 800b7a4:	605a      	str	r2, [r3, #4]

  /* Reset the MSM Bit */
  htim->Instance->SMCR &= ~TIM_SMCR_MSM;
 800b7a6:	689a      	ldr	r2, [r3, #8]
 800b7a8:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800b7ac:	609a      	str	r2, [r3, #8]
  /* Set or Reset the MSM Bit */
  htim->Instance->SMCR |= sMasterConfig->MasterSlaveMode;
 800b7ae:	689c      	ldr	r4, [r3, #8]
 800b7b0:	684a      	ldr	r2, [r1, #4]
 800b7b2:	4322      	orrs	r2, r4
 800b7b4:	609a      	str	r2, [r3, #8]
  
  htim->State = HAL_TIM_STATE_READY;
 800b7b6:	2301      	movs	r3, #1
 800b7b8:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  
  __HAL_UNLOCK(htim);
 800b7bc:	2300      	movs	r3, #0
 800b7be:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  /* Check the parameters */
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));
  
  __HAL_LOCK(htim);
 800b7c2:	4618      	mov	r0, r3
  htim->State = HAL_TIM_STATE_READY;
  
  __HAL_UNLOCK(htim);
  
  return HAL_OK;
} 
 800b7c4:	bd10      	pop	{r4, pc}
	...

0800b7c8 <UART_SetConfig>:
  * @param  huart pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 800b7c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
  assert_param(IS_UART_PARITY(huart->Init.Parity));
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  tmpreg = huart->Instance->CR2;
 800b7cc:	6807      	ldr	r7, [r0, #0]
 800b7ce:	693b      	ldr	r3, [r7, #16]
  * @param  huart pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 800b7d0:	4604      	mov	r4, r0

  /*-------------------------- USART CR2 Configuration -----------------------*/
  tmpreg = huart->Instance->CR2;

  /* Clear STOP[13:12] bits */
  tmpreg &= (uint32_t)~((uint32_t)USART_CR2_STOP);
 800b7d2:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000

  /* Configure the UART Stop Bits: Set STOP[13:12] bits according to huart->Init.StopBits value */
  tmpreg |= (uint32_t)huart->Init.StopBits;
 800b7d6:	68c3      	ldr	r3, [r0, #12]
  /* Configure the UART Word Length, Parity and mode: 
     Set the M bits according to huart->Init.WordLength value 
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800b7d8:	68a1      	ldr	r1, [r4, #8]
 800b7da:	69c0      	ldr	r0, [r0, #28]

  /* Clear STOP[13:12] bits */
  tmpreg &= (uint32_t)~((uint32_t)USART_CR2_STOP);

  /* Configure the UART Stop Bits: Set STOP[13:12] bits according to huart->Init.StopBits value */
  tmpreg |= (uint32_t)huart->Init.StopBits;
 800b7dc:	4313      	orrs	r3, r2
  /* Configure the UART Word Length, Parity and mode: 
     Set the M bits according to huart->Init.WordLength value 
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800b7de:	6922      	ldr	r2, [r4, #16]

  /* Configure the UART Stop Bits: Set STOP[13:12] bits according to huart->Init.StopBits value */
  tmpreg |= (uint32_t)huart->Init.StopBits;
  
  /* Write to USART CR2 */
  WRITE_REG(huart->Instance->CR2, (uint32_t)tmpreg);
 800b7e0:	613b      	str	r3, [r7, #16]

  /*-------------------------- USART CR1 Configuration -----------------------*/
  tmpreg = huart->Instance->CR1;
 800b7e2:	68fb      	ldr	r3, [r7, #12]
  /* Configure the UART Word Length, Parity and mode: 
     Set the M bits according to huart->Init.WordLength value 
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800b7e4:	4311      	orrs	r1, r2
 800b7e6:	6962      	ldr	r2, [r4, #20]

  /*-------------------------- USART CR1 Configuration -----------------------*/
  tmpreg = huart->Instance->CR1;

  /* Clear M, PCE, PS, TE and RE bits */
  tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | \
 800b7e8:	f423 4316 	bic.w	r3, r3, #38400	; 0x9600
  /* Configure the UART Word Length, Parity and mode: 
     Set the M bits according to huart->Init.WordLength value 
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800b7ec:	430a      	orrs	r2, r1
 800b7ee:	4302      	orrs	r2, r0

  /*-------------------------- USART CR1 Configuration -----------------------*/
  tmpreg = huart->Instance->CR1;

  /* Clear M, PCE, PS, TE and RE bits */
  tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | \
 800b7f0:	f023 030c 	bic.w	r3, r3, #12
  /* Configure the UART Word Length, Parity and mode: 
     Set the M bits according to huart->Init.WordLength value 
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800b7f4:	4313      	orrs	r3, r2
  
  /* Write to USART CR1 */
  WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 800b7f6:	60fb      	str	r3, [r7, #12]
  
  /*-------------------------- USART CR3 Configuration -----------------------*/  
  tmpreg = huart->Instance->CR3;
 800b7f8:	697b      	ldr	r3, [r7, #20]
  
  /* Clear CTSE and RTSE bits */
  tmpreg &= (uint32_t)~((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE));
 800b7fa:	f423 7240 	bic.w	r2, r3, #768	; 0x300
  
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  tmpreg |= huart->Init.HwFlowCtl;
 800b7fe:	69a3      	ldr	r3, [r4, #24]
  
  /* Write to USART CR3 */
  WRITE_REG(huart->Instance->CR3, (uint32_t)tmpreg);
  
  /* Check the Over Sampling */
  if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800b800:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
  
  /* Clear CTSE and RTSE bits */
  tmpreg &= (uint32_t)~((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE));
  
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  tmpreg |= huart->Init.HwFlowCtl;
 800b804:	ea43 0302 	orr.w	r3, r3, r2
  
  /* Write to USART CR3 */
  WRITE_REG(huart->Instance->CR3, (uint32_t)tmpreg);
 800b808:	617b      	str	r3, [r7, #20]
 800b80a:	4b7c      	ldr	r3, [pc, #496]	; (800b9fc <UART_SetConfig+0x234>)
  
  /* Check the Over Sampling */
  if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800b80c:	d17c      	bne.n	800b908 <UART_SetConfig+0x140>
  {
    /*-------------------------- USART BRR Configuration ---------------------*/
#if defined(USART6) 
    if((huart->Instance == USART1) || (huart->Instance == USART6))
 800b80e:	429f      	cmp	r7, r3
 800b810:	d003      	beq.n	800b81a <UART_SetConfig+0x52>
 800b812:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800b816:	429f      	cmp	r7, r3
 800b818:	d131      	bne.n	800b87e <UART_SetConfig+0xb6>
    {
      huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 800b81a:	f7ff fceb 	bl	800b1f4 <HAL_RCC_GetPCLK2Freq>
 800b81e:	6863      	ldr	r3, [r4, #4]
 800b820:	2519      	movs	r5, #25
 800b822:	ea4f 0843 	mov.w	r8, r3, lsl #1
 800b826:	4368      	muls	r0, r5
 800b828:	fbb0 f8f8 	udiv	r8, r0, r8
 800b82c:	f7ff fce2 	bl	800b1f4 <HAL_RCC_GetPCLK2Freq>
 800b830:	6866      	ldr	r6, [r4, #4]
 800b832:	4368      	muls	r0, r5
 800b834:	0076      	lsls	r6, r6, #1
 800b836:	fbb0 f6f6 	udiv	r6, r0, r6
 800b83a:	f7ff fcdb 	bl	800b1f4 <HAL_RCC_GetPCLK2Freq>
 800b83e:	6863      	ldr	r3, [r4, #4]
 800b840:	f04f 0964 	mov.w	r9, #100	; 0x64
 800b844:	005b      	lsls	r3, r3, #1
 800b846:	4368      	muls	r0, r5
 800b848:	fbb0 f0f3 	udiv	r0, r0, r3
 800b84c:	fbb0 f0f9 	udiv	r0, r0, r9
 800b850:	fb09 6610 	mls	r6, r9, r0, r6
 800b854:	f7ff fcce 	bl	800b1f4 <HAL_RCC_GetPCLK2Freq>
 800b858:	fbb8 f8f9 	udiv	r8, r8, r9
 800b85c:	6861      	ldr	r1, [r4, #4]
 800b85e:	00f6      	lsls	r6, r6, #3
 800b860:	3632      	adds	r6, #50	; 0x32
 800b862:	fbb6 f6f9 	udiv	r6, r6, r9
 800b866:	0076      	lsls	r6, r6, #1
 800b868:	4368      	muls	r0, r5
 800b86a:	0049      	lsls	r1, r1, #1
 800b86c:	ea4f 1808 	mov.w	r8, r8, lsl #4
 800b870:	f406 76f8 	and.w	r6, r6, #496	; 0x1f0
 800b874:	fbb0 faf1 	udiv	sl, r0, r1
 800b878:	f7ff fcbc 	bl	800b1f4 <HAL_RCC_GetPCLK2Freq>
 800b87c:	e030      	b.n	800b8e0 <UART_SetConfig+0x118>
      huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
    }	
#endif /* USART6 */
    else
    {
      huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 800b87e:	f7ff fca9 	bl	800b1d4 <HAL_RCC_GetPCLK1Freq>
 800b882:	6863      	ldr	r3, [r4, #4]
 800b884:	2519      	movs	r5, #25
 800b886:	ea4f 0843 	mov.w	r8, r3, lsl #1
 800b88a:	4368      	muls	r0, r5
 800b88c:	fbb0 f8f8 	udiv	r8, r0, r8
 800b890:	f7ff fca0 	bl	800b1d4 <HAL_RCC_GetPCLK1Freq>
 800b894:	6866      	ldr	r6, [r4, #4]
 800b896:	4368      	muls	r0, r5
 800b898:	0076      	lsls	r6, r6, #1
 800b89a:	fbb0 f6f6 	udiv	r6, r0, r6
 800b89e:	f7ff fc99 	bl	800b1d4 <HAL_RCC_GetPCLK1Freq>
 800b8a2:	6863      	ldr	r3, [r4, #4]
 800b8a4:	f04f 0964 	mov.w	r9, #100	; 0x64
 800b8a8:	005b      	lsls	r3, r3, #1
 800b8aa:	4368      	muls	r0, r5
 800b8ac:	fbb0 f0f3 	udiv	r0, r0, r3
 800b8b0:	fbb0 f0f9 	udiv	r0, r0, r9
 800b8b4:	fb09 6610 	mls	r6, r9, r0, r6
 800b8b8:	f7ff fc8c 	bl	800b1d4 <HAL_RCC_GetPCLK1Freq>
 800b8bc:	fbb8 f8f9 	udiv	r8, r8, r9
 800b8c0:	00f6      	lsls	r6, r6, #3
 800b8c2:	6861      	ldr	r1, [r4, #4]
 800b8c4:	3632      	adds	r6, #50	; 0x32
 800b8c6:	fbb6 f6f9 	udiv	r6, r6, r9
 800b8ca:	0076      	lsls	r6, r6, #1
 800b8cc:	4368      	muls	r0, r5
 800b8ce:	0049      	lsls	r1, r1, #1
 800b8d0:	ea4f 1808 	mov.w	r8, r8, lsl #4
 800b8d4:	f406 76f8 	and.w	r6, r6, #496	; 0x1f0
 800b8d8:	fbb0 faf1 	udiv	sl, r0, r1
 800b8dc:	f7ff fc7a 	bl	800b1d4 <HAL_RCC_GetPCLK1Freq>
 800b8e0:	4345      	muls	r5, r0
 800b8e2:	6860      	ldr	r0, [r4, #4]
 800b8e4:	0040      	lsls	r0, r0, #1
 800b8e6:	fbb5 f0f0 	udiv	r0, r5, r0
 800b8ea:	fbb0 f0f9 	udiv	r0, r0, r9
 800b8ee:	fb09 a210 	mls	r2, r9, r0, sl
 800b8f2:	00d2      	lsls	r2, r2, #3
 800b8f4:	3232      	adds	r2, #50	; 0x32
 800b8f6:	fbb2 f3f9 	udiv	r3, r2, r9
 800b8fa:	f003 0307 	and.w	r3, r3, #7
 800b8fe:	4443      	add	r3, r8
 800b900:	441e      	add	r6, r3
 800b902:	60be      	str	r6, [r7, #8]
 800b904:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  }
  else
  {
    /*-------------------------- USART BRR Configuration ---------------------*/
#if defined(USART6) 
    if((huart->Instance == USART1) || (huart->Instance == USART6))
 800b908:	429f      	cmp	r7, r3
 800b90a:	d002      	beq.n	800b912 <UART_SetConfig+0x14a>
 800b90c:	4b3c      	ldr	r3, [pc, #240]	; (800ba00 <UART_SetConfig+0x238>)
 800b90e:	429f      	cmp	r7, r3
 800b910:	d130      	bne.n	800b974 <UART_SetConfig+0x1ac>
    {
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 800b912:	f7ff fc6f 	bl	800b1f4 <HAL_RCC_GetPCLK2Freq>
 800b916:	6863      	ldr	r3, [r4, #4]
 800b918:	2519      	movs	r5, #25
 800b91a:	ea4f 0883 	mov.w	r8, r3, lsl #2
 800b91e:	4368      	muls	r0, r5
 800b920:	fbb0 f8f8 	udiv	r8, r0, r8
 800b924:	f7ff fc66 	bl	800b1f4 <HAL_RCC_GetPCLK2Freq>
 800b928:	6866      	ldr	r6, [r4, #4]
 800b92a:	4368      	muls	r0, r5
 800b92c:	00b6      	lsls	r6, r6, #2
 800b92e:	fbb0 f6f6 	udiv	r6, r0, r6
 800b932:	f7ff fc5f 	bl	800b1f4 <HAL_RCC_GetPCLK2Freq>
 800b936:	6863      	ldr	r3, [r4, #4]
 800b938:	f04f 0964 	mov.w	r9, #100	; 0x64
 800b93c:	009b      	lsls	r3, r3, #2
 800b93e:	4368      	muls	r0, r5
 800b940:	fbb0 f0f3 	udiv	r0, r0, r3
 800b944:	fbb0 f0f9 	udiv	r0, r0, r9
 800b948:	fb09 6610 	mls	r6, r9, r0, r6
 800b94c:	f7ff fc52 	bl	800b1f4 <HAL_RCC_GetPCLK2Freq>
 800b950:	fbb8 f8f9 	udiv	r8, r8, r9
 800b954:	6861      	ldr	r1, [r4, #4]
 800b956:	0136      	lsls	r6, r6, #4
 800b958:	4368      	muls	r0, r5
 800b95a:	0089      	lsls	r1, r1, #2
 800b95c:	ea4f 1808 	mov.w	r8, r8, lsl #4
 800b960:	3632      	adds	r6, #50	; 0x32
 800b962:	fbb0 faf1 	udiv	sl, r0, r1
 800b966:	fbb6 f6f9 	udiv	r6, r6, r9
 800b96a:	f006 06f0 	and.w	r6, r6, #240	; 0xf0
 800b96e:	f7ff fc41 	bl	800b1f4 <HAL_RCC_GetPCLK2Freq>
 800b972:	e02f      	b.n	800b9d4 <UART_SetConfig+0x20c>
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
    }	
#endif /* USART6 */
    else
    {
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 800b974:	f7ff fc2e 	bl	800b1d4 <HAL_RCC_GetPCLK1Freq>
 800b978:	6863      	ldr	r3, [r4, #4]
 800b97a:	2519      	movs	r5, #25
 800b97c:	ea4f 0883 	mov.w	r8, r3, lsl #2
 800b980:	4368      	muls	r0, r5
 800b982:	fbb0 f8f8 	udiv	r8, r0, r8
 800b986:	f7ff fc25 	bl	800b1d4 <HAL_RCC_GetPCLK1Freq>
 800b98a:	6866      	ldr	r6, [r4, #4]
 800b98c:	4368      	muls	r0, r5
 800b98e:	00b6      	lsls	r6, r6, #2
 800b990:	fbb0 f6f6 	udiv	r6, r0, r6
 800b994:	f7ff fc1e 	bl	800b1d4 <HAL_RCC_GetPCLK1Freq>
 800b998:	6863      	ldr	r3, [r4, #4]
 800b99a:	f04f 0964 	mov.w	r9, #100	; 0x64
 800b99e:	009b      	lsls	r3, r3, #2
 800b9a0:	4368      	muls	r0, r5
 800b9a2:	fbb0 f0f3 	udiv	r0, r0, r3
 800b9a6:	fbb0 f0f9 	udiv	r0, r0, r9
 800b9aa:	fb09 6610 	mls	r6, r9, r0, r6
 800b9ae:	f7ff fc11 	bl	800b1d4 <HAL_RCC_GetPCLK1Freq>
 800b9b2:	fbb8 f8f9 	udiv	r8, r8, r9
 800b9b6:	6861      	ldr	r1, [r4, #4]
 800b9b8:	0136      	lsls	r6, r6, #4
 800b9ba:	3632      	adds	r6, #50	; 0x32
 800b9bc:	4368      	muls	r0, r5
 800b9be:	fbb6 f6f9 	udiv	r6, r6, r9
 800b9c2:	0089      	lsls	r1, r1, #2
 800b9c4:	ea4f 1808 	mov.w	r8, r8, lsl #4
 800b9c8:	f006 06f0 	and.w	r6, r6, #240	; 0xf0
 800b9cc:	fbb0 faf1 	udiv	sl, r0, r1
 800b9d0:	f7ff fc00 	bl	800b1d4 <HAL_RCC_GetPCLK1Freq>
 800b9d4:	4345      	muls	r5, r0
 800b9d6:	6860      	ldr	r0, [r4, #4]
 800b9d8:	0080      	lsls	r0, r0, #2
 800b9da:	fbb5 f0f0 	udiv	r0, r5, r0
 800b9de:	fbb0 f0f9 	udiv	r0, r0, r9
 800b9e2:	fb09 a210 	mls	r2, r9, r0, sl
 800b9e6:	0112      	lsls	r2, r2, #4
 800b9e8:	3232      	adds	r2, #50	; 0x32
 800b9ea:	fbb2 f3f9 	udiv	r3, r2, r9
 800b9ee:	f003 030f 	and.w	r3, r3, #15
 800b9f2:	4433      	add	r3, r6
 800b9f4:	4443      	add	r3, r8
 800b9f6:	60bb      	str	r3, [r7, #8]
 800b9f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b9fc:	40011000 	.word	0x40011000
 800ba00:	40011400 	.word	0x40011400

0800ba04 <HAL_UART_Init>:
  * @param  huart pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 800ba04:	b510      	push	{r4, lr}
  /* Check the UART handle allocation */
  if(huart == NULL)
 800ba06:	4604      	mov	r4, r0
 800ba08:	b340      	cbz	r0, 800ba5c <HAL_UART_Init+0x58>
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
  
  if(huart->gState == HAL_UART_STATE_RESET)
 800ba0a:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800ba0e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ba12:	b91b      	cbnz	r3, 800ba1c <HAL_UART_Init+0x18>
  {  
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 800ba14:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_UART_MspInit(huart);
 800ba18:	f7fe fe72 	bl	800a700 <HAL_UART_MspInit>
  }

  huart->gState = HAL_UART_STATE_BUSY;

  /* Disable the peripheral */
  __HAL_UART_DISABLE(huart);
 800ba1c:	6822      	ldr	r2, [r4, #0]
    huart->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_UART_MspInit(huart);
  }

  huart->gState = HAL_UART_STATE_BUSY;
 800ba1e:	2324      	movs	r3, #36	; 0x24
 800ba20:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  /* Disable the peripheral */
  __HAL_UART_DISABLE(huart);
 800ba24:	68d3      	ldr	r3, [r2, #12]
 800ba26:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800ba2a:	60d3      	str	r3, [r2, #12]
  
  /* Set the UART Communication parameters */
  UART_SetConfig(huart);
 800ba2c:	4620      	mov	r0, r4
 800ba2e:	f7ff fecb 	bl	800b7c8 <UART_SetConfig>
  
  /* In asynchronous mode, the following bits must be kept cleared: 
     - LINEN and CLKEN bits in the USART_CR2 register,
     - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800ba32:	6823      	ldr	r3, [r4, #0]
 800ba34:	691a      	ldr	r2, [r3, #16]
 800ba36:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800ba3a:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800ba3c:	695a      	ldr	r2, [r3, #20]
 800ba3e:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800ba42:	615a      	str	r2, [r3, #20]
  
  /* Enable the peripheral */
  __HAL_UART_ENABLE(huart);
 800ba44:	68da      	ldr	r2, [r3, #12]
 800ba46:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800ba4a:	60da      	str	r2, [r3, #12]
  
  /* Initialize the UART state */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800ba4c:	2000      	movs	r0, #0
  huart->gState= HAL_UART_STATE_READY;
 800ba4e:	2320      	movs	r3, #32
  
  /* Enable the peripheral */
  __HAL_UART_ENABLE(huart);
  
  /* Initialize the UART state */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800ba50:	63e0      	str	r0, [r4, #60]	; 0x3c
  huart->gState= HAL_UART_STATE_READY;
 800ba52:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  huart->RxState= HAL_UART_STATE_READY;
 800ba56:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
  
  return HAL_OK;
 800ba5a:	bd10      	pop	{r4, pc}
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
  /* Check the UART handle allocation */
  if(huart == NULL)
  {
    return HAL_ERROR;
 800ba5c:	2001      	movs	r0, #1
  huart->ErrorCode = HAL_UART_ERROR_NONE;
  huart->gState= HAL_UART_STATE_READY;
  huart->RxState= HAL_UART_STATE_READY;
  
  return HAL_OK;
}
 800ba5e:	bd10      	pop	{r4, pc}

0800ba60 <__cxa_end_cleanup>:
 800ba60:	b41e      	push	{r1, r2, r3, r4}
 800ba62:	f000 f88d 	bl	800bb80 <__gnu_end_cleanup>
 800ba66:	bc1e      	pop	{r1, r2, r3, r4}
 800ba68:	f7fe f8e2 	bl	8009c30 <_Unwind_Resume>

0800ba6c <__cxa_type_match>:
 800ba6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ba6e:	7802      	ldrb	r2, [r0, #0]
 800ba70:	2a47      	cmp	r2, #71	; 0x47
 800ba72:	b083      	sub	sp, #12
 800ba74:	460e      	mov	r6, r1
 800ba76:	461f      	mov	r7, r3
 800ba78:	d01a      	beq.n	800bab0 <__cxa_type_match+0x44>
 800ba7a:	2300      	movs	r3, #0
 800ba7c:	4c25      	ldr	r4, [pc, #148]	; (800bb14 <__cxa_type_match+0xa8>)
 800ba7e:	9301      	str	r3, [sp, #4]
 800ba80:	6823      	ldr	r3, [r4, #0]
 800ba82:	4620      	mov	r0, r4
 800ba84:	689b      	ldr	r3, [r3, #8]
 800ba86:	4798      	blx	r3
 800ba88:	b180      	cbz	r0, 800baac <__cxa_type_match+0x40>
 800ba8a:	9b01      	ldr	r3, [sp, #4]
 800ba8c:	681b      	ldr	r3, [r3, #0]
 800ba8e:	9301      	str	r3, [sp, #4]
 800ba90:	2502      	movs	r5, #2
 800ba92:	6833      	ldr	r3, [r6, #0]
 800ba94:	4621      	mov	r1, r4
 800ba96:	4630      	mov	r0, r6
 800ba98:	691c      	ldr	r4, [r3, #16]
 800ba9a:	aa01      	add	r2, sp, #4
 800ba9c:	2301      	movs	r3, #1
 800ba9e:	47a0      	blx	r4
 800baa0:	b110      	cbz	r0, 800baa8 <__cxa_type_match+0x3c>
 800baa2:	9b01      	ldr	r3, [sp, #4]
 800baa4:	603b      	str	r3, [r7, #0]
 800baa6:	4628      	mov	r0, r5
 800baa8:	b003      	add	sp, #12
 800baaa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800baac:	2501      	movs	r5, #1
 800baae:	e7f0      	b.n	800ba92 <__cxa_type_match+0x26>
 800bab0:	7843      	ldrb	r3, [r0, #1]
 800bab2:	2b4e      	cmp	r3, #78	; 0x4e
 800bab4:	d1e1      	bne.n	800ba7a <__cxa_type_match+0xe>
 800bab6:	7883      	ldrb	r3, [r0, #2]
 800bab8:	2b55      	cmp	r3, #85	; 0x55
 800baba:	d1de      	bne.n	800ba7a <__cxa_type_match+0xe>
 800babc:	78c3      	ldrb	r3, [r0, #3]
 800babe:	2b43      	cmp	r3, #67	; 0x43
 800bac0:	d019      	beq.n	800baf6 <__cxa_type_match+0x8a>
 800bac2:	78c3      	ldrb	r3, [r0, #3]
 800bac4:	2b43      	cmp	r3, #67	; 0x43
 800bac6:	d1d8      	bne.n	800ba7a <__cxa_type_match+0xe>
 800bac8:	7903      	ldrb	r3, [r0, #4]
 800baca:	2b43      	cmp	r3, #67	; 0x43
 800bacc:	d1d5      	bne.n	800ba7a <__cxa_type_match+0xe>
 800bace:	7943      	ldrb	r3, [r0, #5]
 800bad0:	2b2b      	cmp	r3, #43	; 0x2b
 800bad2:	d1d2      	bne.n	800ba7a <__cxa_type_match+0xe>
 800bad4:	7983      	ldrb	r3, [r0, #6]
 800bad6:	2b2b      	cmp	r3, #43	; 0x2b
 800bad8:	d1cf      	bne.n	800ba7a <__cxa_type_match+0xe>
 800bada:	79c3      	ldrb	r3, [r0, #7]
 800badc:	2b01      	cmp	r3, #1
 800bade:	d8cc      	bhi.n	800ba7a <__cxa_type_match+0xe>
 800bae0:	d004      	beq.n	800baec <__cxa_type_match+0x80>
 800bae2:	f850 4c20 	ldr.w	r4, [r0, #-32]
 800bae6:	3058      	adds	r0, #88	; 0x58
 800bae8:	9001      	str	r0, [sp, #4]
 800baea:	e7c9      	b.n	800ba80 <__cxa_type_match+0x14>
 800baec:	f850 0c20 	ldr.w	r0, [r0, #-32]
 800baf0:	f850 4c78 	ldr.w	r4, [r0, #-120]
 800baf4:	e7f8      	b.n	800bae8 <__cxa_type_match+0x7c>
 800baf6:	7903      	ldrb	r3, [r0, #4]
 800baf8:	2b46      	cmp	r3, #70	; 0x46
 800bafa:	d1e2      	bne.n	800bac2 <__cxa_type_match+0x56>
 800bafc:	7943      	ldrb	r3, [r0, #5]
 800bafe:	2b4f      	cmp	r3, #79	; 0x4f
 800bb00:	d1df      	bne.n	800bac2 <__cxa_type_match+0x56>
 800bb02:	7983      	ldrb	r3, [r0, #6]
 800bb04:	2b52      	cmp	r3, #82	; 0x52
 800bb06:	d1dc      	bne.n	800bac2 <__cxa_type_match+0x56>
 800bb08:	79c3      	ldrb	r3, [r0, #7]
 800bb0a:	2b00      	cmp	r3, #0
 800bb0c:	d1d9      	bne.n	800bac2 <__cxa_type_match+0x56>
 800bb0e:	9301      	str	r3, [sp, #4]
 800bb10:	4c01      	ldr	r4, [pc, #4]	; (800bb18 <__cxa_type_match+0xac>)
 800bb12:	e7b5      	b.n	800ba80 <__cxa_type_match+0x14>
 800bb14:	08010eec 	.word	0x08010eec
 800bb18:	08010e94 	.word	0x08010e94

0800bb1c <__cxa_begin_cleanup>:
 800bb1c:	b510      	push	{r4, lr}
 800bb1e:	4604      	mov	r4, r0
 800bb20:	f000 fba2 	bl	800c268 <__cxa_get_globals>
 800bb24:	7823      	ldrb	r3, [r4, #0]
 800bb26:	2b47      	cmp	r3, #71	; 0x47
 800bb28:	f1a4 0220 	sub.w	r2, r4, #32
 800bb2c:	d004      	beq.n	800bb38 <__cxa_begin_cleanup+0x1c>
 800bb2e:	6883      	ldr	r3, [r0, #8]
 800bb30:	bb23      	cbnz	r3, 800bb7c <__cxa_begin_cleanup+0x60>
 800bb32:	6082      	str	r2, [r0, #8]
 800bb34:	2001      	movs	r0, #1
 800bb36:	bd10      	pop	{r4, pc}
 800bb38:	7863      	ldrb	r3, [r4, #1]
 800bb3a:	2b4e      	cmp	r3, #78	; 0x4e
 800bb3c:	d1f7      	bne.n	800bb2e <__cxa_begin_cleanup+0x12>
 800bb3e:	78a3      	ldrb	r3, [r4, #2]
 800bb40:	2b55      	cmp	r3, #85	; 0x55
 800bb42:	d1f4      	bne.n	800bb2e <__cxa_begin_cleanup+0x12>
 800bb44:	78e3      	ldrb	r3, [r4, #3]
 800bb46:	2b43      	cmp	r3, #67	; 0x43
 800bb48:	d1f1      	bne.n	800bb2e <__cxa_begin_cleanup+0x12>
 800bb4a:	7923      	ldrb	r3, [r4, #4]
 800bb4c:	2b43      	cmp	r3, #67	; 0x43
 800bb4e:	d1ee      	bne.n	800bb2e <__cxa_begin_cleanup+0x12>
 800bb50:	7963      	ldrb	r3, [r4, #5]
 800bb52:	2b2b      	cmp	r3, #43	; 0x2b
 800bb54:	d1eb      	bne.n	800bb2e <__cxa_begin_cleanup+0x12>
 800bb56:	79a3      	ldrb	r3, [r4, #6]
 800bb58:	2b2b      	cmp	r3, #43	; 0x2b
 800bb5a:	d1e8      	bne.n	800bb2e <__cxa_begin_cleanup+0x12>
 800bb5c:	79e3      	ldrb	r3, [r4, #7]
 800bb5e:	2b01      	cmp	r3, #1
 800bb60:	d8e5      	bhi.n	800bb2e <__cxa_begin_cleanup+0x12>
 800bb62:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800bb66:	3301      	adds	r3, #1
 800bb68:	2b01      	cmp	r3, #1
 800bb6a:	f844 3c04 	str.w	r3, [r4, #-4]
 800bb6e:	d1e1      	bne.n	800bb34 <__cxa_begin_cleanup+0x18>
 800bb70:	6883      	ldr	r3, [r0, #8]
 800bb72:	f844 3c08 	str.w	r3, [r4, #-8]
 800bb76:	6082      	str	r2, [r0, #8]
 800bb78:	2001      	movs	r0, #1
 800bb7a:	bd10      	pop	{r4, pc}
 800bb7c:	f000 fc18 	bl	800c3b0 <_ZSt9terminatev>

0800bb80 <__gnu_end_cleanup>:
 800bb80:	b508      	push	{r3, lr}
 800bb82:	f000 fb71 	bl	800c268 <__cxa_get_globals>
 800bb86:	6883      	ldr	r3, [r0, #8]
 800bb88:	b383      	cbz	r3, 800bbec <__gnu_end_cleanup+0x6c>
 800bb8a:	f893 2020 	ldrb.w	r2, [r3, #32]
 800bb8e:	2a47      	cmp	r2, #71	; 0x47
 800bb90:	d004      	beq.n	800bb9c <__gnu_end_cleanup+0x1c>
 800bb92:	2200      	movs	r2, #0
 800bb94:	6082      	str	r2, [r0, #8]
 800bb96:	f103 0020 	add.w	r0, r3, #32
 800bb9a:	bd08      	pop	{r3, pc}
 800bb9c:	f893 2021 	ldrb.w	r2, [r3, #33]	; 0x21
 800bba0:	2a4e      	cmp	r2, #78	; 0x4e
 800bba2:	d1f6      	bne.n	800bb92 <__gnu_end_cleanup+0x12>
 800bba4:	f893 2022 	ldrb.w	r2, [r3, #34]	; 0x22
 800bba8:	2a55      	cmp	r2, #85	; 0x55
 800bbaa:	d1f2      	bne.n	800bb92 <__gnu_end_cleanup+0x12>
 800bbac:	f893 2023 	ldrb.w	r2, [r3, #35]	; 0x23
 800bbb0:	2a43      	cmp	r2, #67	; 0x43
 800bbb2:	d1ee      	bne.n	800bb92 <__gnu_end_cleanup+0x12>
 800bbb4:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
 800bbb8:	2a43      	cmp	r2, #67	; 0x43
 800bbba:	d1ea      	bne.n	800bb92 <__gnu_end_cleanup+0x12>
 800bbbc:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
 800bbc0:	2a2b      	cmp	r2, #43	; 0x2b
 800bbc2:	d1e6      	bne.n	800bb92 <__gnu_end_cleanup+0x12>
 800bbc4:	f893 2026 	ldrb.w	r2, [r3, #38]	; 0x26
 800bbc8:	2a2b      	cmp	r2, #43	; 0x2b
 800bbca:	d1e2      	bne.n	800bb92 <__gnu_end_cleanup+0x12>
 800bbcc:	f893 2027 	ldrb.w	r2, [r3, #39]	; 0x27
 800bbd0:	2a01      	cmp	r2, #1
 800bbd2:	d8de      	bhi.n	800bb92 <__gnu_end_cleanup+0x12>
 800bbd4:	69da      	ldr	r2, [r3, #28]
 800bbd6:	3a01      	subs	r2, #1
 800bbd8:	61da      	str	r2, [r3, #28]
 800bbda:	2a00      	cmp	r2, #0
 800bbdc:	d1db      	bne.n	800bb96 <__gnu_end_cleanup+0x16>
 800bbde:	699a      	ldr	r2, [r3, #24]
 800bbe0:	6082      	str	r2, [r0, #8]
 800bbe2:	2200      	movs	r2, #0
 800bbe4:	619a      	str	r2, [r3, #24]
 800bbe6:	f103 0020 	add.w	r0, r3, #32
 800bbea:	bd08      	pop	{r3, pc}
 800bbec:	f000 fbe0 	bl	800c3b0 <_ZSt9terminatev>

0800bbf0 <_ZL28read_encoded_value_with_basehjPKhPj>:
 800bbf0:	2850      	cmp	r0, #80	; 0x50
 800bbf2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bbf4:	d054      	beq.n	800bca0 <_ZL28read_encoded_value_with_basehjPKhPj+0xb0>
 800bbf6:	f000 040f 	and.w	r4, r0, #15
 800bbfa:	2c0c      	cmp	r4, #12
 800bbfc:	d84e      	bhi.n	800bc9c <_ZL28read_encoded_value_with_basehjPKhPj+0xac>
 800bbfe:	e8df f004 	tbb	[pc, r4]
 800bc02:	3907      	.short	0x3907
 800bc04:	4d170749 	.word	0x4d170749
 800bc08:	1f4d4d4d 	.word	0x1f4d4d4d
 800bc0c:	071b      	.short	0x071b
 800bc0e:	17          	.byte	0x17
 800bc0f:	00          	.byte	0x00
 800bc10:	4615      	mov	r5, r2
 800bc12:	f855 4b04 	ldr.w	r4, [r5], #4
 800bc16:	b144      	cbz	r4, 800bc2a <_ZL28read_encoded_value_with_basehjPKhPj+0x3a>
 800bc18:	f000 0670 	and.w	r6, r0, #112	; 0x70
 800bc1c:	2e10      	cmp	r6, #16
 800bc1e:	bf18      	it	ne
 800bc20:	460a      	movne	r2, r1
 800bc22:	4414      	add	r4, r2
 800bc24:	0602      	lsls	r2, r0, #24
 800bc26:	bf48      	it	mi
 800bc28:	6824      	ldrmi	r4, [r4, #0]
 800bc2a:	601c      	str	r4, [r3, #0]
 800bc2c:	4628      	mov	r0, r5
 800bc2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bc30:	4615      	mov	r5, r2
 800bc32:	f855 4b08 	ldr.w	r4, [r5], #8
 800bc36:	e7ee      	b.n	800bc16 <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800bc38:	4615      	mov	r5, r2
 800bc3a:	f935 4b02 	ldrsh.w	r4, [r5], #2
 800bc3e:	e7ea      	b.n	800bc16 <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800bc40:	2400      	movs	r4, #0
 800bc42:	4627      	mov	r7, r4
 800bc44:	4615      	mov	r5, r2
 800bc46:	f815 eb01 	ldrb.w	lr, [r5], #1
 800bc4a:	f00e 067f 	and.w	r6, lr, #127	; 0x7f
 800bc4e:	40be      	lsls	r6, r7
 800bc50:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800bc54:	ea44 0406 	orr.w	r4, r4, r6
 800bc58:	f107 0707 	add.w	r7, r7, #7
 800bc5c:	d1f3      	bne.n	800bc46 <_ZL28read_encoded_value_with_basehjPKhPj+0x56>
 800bc5e:	2f1f      	cmp	r7, #31
 800bc60:	d8d9      	bhi.n	800bc16 <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800bc62:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800bc66:	d0d6      	beq.n	800bc16 <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800bc68:	f04f 36ff 	mov.w	r6, #4294967295
 800bc6c:	fa06 f707 	lsl.w	r7, r6, r7
 800bc70:	433c      	orrs	r4, r7
 800bc72:	e7d1      	b.n	800bc18 <_ZL28read_encoded_value_with_basehjPKhPj+0x28>
 800bc74:	2400      	movs	r4, #0
 800bc76:	4627      	mov	r7, r4
 800bc78:	4615      	mov	r5, r2
 800bc7a:	f815 eb01 	ldrb.w	lr, [r5], #1
 800bc7e:	f00e 067f 	and.w	r6, lr, #127	; 0x7f
 800bc82:	40be      	lsls	r6, r7
 800bc84:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800bc88:	ea44 0406 	orr.w	r4, r4, r6
 800bc8c:	f107 0707 	add.w	r7, r7, #7
 800bc90:	d1f3      	bne.n	800bc7a <_ZL28read_encoded_value_with_basehjPKhPj+0x8a>
 800bc92:	e7c0      	b.n	800bc16 <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800bc94:	4615      	mov	r5, r2
 800bc96:	f835 4b02 	ldrh.w	r4, [r5], #2
 800bc9a:	e7bc      	b.n	800bc16 <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800bc9c:	f000 ff56 	bl	800cb4c <abort>
 800bca0:	3203      	adds	r2, #3
 800bca2:	f022 0503 	bic.w	r5, r2, #3
 800bca6:	f855 4b04 	ldr.w	r4, [r5], #4
 800bcaa:	601c      	str	r4, [r3, #0]
 800bcac:	4628      	mov	r0, r5
 800bcae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800bcb0 <_ZL21base_of_encoded_valuehP15_Unwind_Context>:
 800bcb0:	28ff      	cmp	r0, #255	; 0xff
 800bcb2:	d015      	beq.n	800bce0 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x30>
 800bcb4:	b508      	push	{r3, lr}
 800bcb6:	f000 0370 	and.w	r3, r0, #112	; 0x70
 800bcba:	2b20      	cmp	r3, #32
 800bcbc:	d012      	beq.n	800bce4 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x34>
 800bcbe:	d90a      	bls.n	800bcd6 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x26>
 800bcc0:	2b40      	cmp	r3, #64	; 0x40
 800bcc2:	d014      	beq.n	800bcee <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x3e>
 800bcc4:	2b50      	cmp	r3, #80	; 0x50
 800bcc6:	d017      	beq.n	800bcf8 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x48>
 800bcc8:	2b30      	cmp	r3, #48	; 0x30
 800bcca:	d107      	bne.n	800bcdc <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x2c>
 800bccc:	4608      	mov	r0, r1
 800bcce:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800bcd2:	f7fe b99b 	b.w	800a00c <_Unwind_GetDataRelBase>
 800bcd6:	b17b      	cbz	r3, 800bcf8 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x48>
 800bcd8:	2b10      	cmp	r3, #16
 800bcda:	d00d      	beq.n	800bcf8 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x48>
 800bcdc:	f000 ff36 	bl	800cb4c <abort>
 800bce0:	2000      	movs	r0, #0
 800bce2:	4770      	bx	lr
 800bce4:	4608      	mov	r0, r1
 800bce6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800bcea:	f7fe b98b 	b.w	800a004 <_Unwind_GetTextRelBase>
 800bcee:	4608      	mov	r0, r1
 800bcf0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800bcf4:	f7fe b976 	b.w	8009fe4 <_Unwind_GetRegionStart>
 800bcf8:	2000      	movs	r0, #0
 800bcfa:	bd08      	pop	{r3, pc}

0800bcfc <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
 800bcfc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bcfe:	460c      	mov	r4, r1
 800bd00:	4615      	mov	r5, r2
 800bd02:	4607      	mov	r7, r0
 800bd04:	2800      	cmp	r0, #0
 800bd06:	d044      	beq.n	800bd92 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x96>
 800bd08:	f7fe f96c 	bl	8009fe4 <_Unwind_GetRegionStart>
 800bd0c:	6028      	str	r0, [r5, #0]
 800bd0e:	7826      	ldrb	r6, [r4, #0]
 800bd10:	2eff      	cmp	r6, #255	; 0xff
 800bd12:	f104 0401 	add.w	r4, r4, #1
 800bd16:	d032      	beq.n	800bd7e <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x82>
 800bd18:	4639      	mov	r1, r7
 800bd1a:	4630      	mov	r0, r6
 800bd1c:	f7ff ffc8 	bl	800bcb0 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800bd20:	4622      	mov	r2, r4
 800bd22:	4601      	mov	r1, r0
 800bd24:	1d2b      	adds	r3, r5, #4
 800bd26:	4630      	mov	r0, r6
 800bd28:	f7ff ff62 	bl	800bbf0 <_ZL28read_encoded_value_with_basehjPKhPj>
 800bd2c:	4604      	mov	r4, r0
 800bd2e:	1c60      	adds	r0, r4, #1
 800bd30:	7823      	ldrb	r3, [r4, #0]
 800bd32:	752b      	strb	r3, [r5, #20]
 800bd34:	2bff      	cmp	r3, #255	; 0xff
 800bd36:	d029      	beq.n	800bd8c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x90>
 800bd38:	2310      	movs	r3, #16
 800bd3a:	2400      	movs	r4, #0
 800bd3c:	752b      	strb	r3, [r5, #20]
 800bd3e:	4622      	mov	r2, r4
 800bd40:	f810 1b01 	ldrb.w	r1, [r0], #1
 800bd44:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800bd48:	4093      	lsls	r3, r2
 800bd4a:	0609      	lsls	r1, r1, #24
 800bd4c:	ea44 0403 	orr.w	r4, r4, r3
 800bd50:	f102 0207 	add.w	r2, r2, #7
 800bd54:	d4f4      	bmi.n	800bd40 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x44>
 800bd56:	4404      	add	r4, r0
 800bd58:	60ec      	str	r4, [r5, #12]
 800bd5a:	7803      	ldrb	r3, [r0, #0]
 800bd5c:	756b      	strb	r3, [r5, #21]
 800bd5e:	2400      	movs	r4, #0
 800bd60:	3001      	adds	r0, #1
 800bd62:	4622      	mov	r2, r4
 800bd64:	f810 1b01 	ldrb.w	r1, [r0], #1
 800bd68:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800bd6c:	4093      	lsls	r3, r2
 800bd6e:	431c      	orrs	r4, r3
 800bd70:	060b      	lsls	r3, r1, #24
 800bd72:	f102 0207 	add.w	r2, r2, #7
 800bd76:	d4f5      	bmi.n	800bd64 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x68>
 800bd78:	4404      	add	r4, r0
 800bd7a:	612c      	str	r4, [r5, #16]
 800bd7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bd7e:	6068      	str	r0, [r5, #4]
 800bd80:	7823      	ldrb	r3, [r4, #0]
 800bd82:	752b      	strb	r3, [r5, #20]
 800bd84:	2bff      	cmp	r3, #255	; 0xff
 800bd86:	f104 0001 	add.w	r0, r4, #1
 800bd8a:	d1d5      	bne.n	800bd38 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x3c>
 800bd8c:	2300      	movs	r3, #0
 800bd8e:	60eb      	str	r3, [r5, #12]
 800bd90:	e7e3      	b.n	800bd5a <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x5e>
 800bd92:	e7bb      	b.n	800bd0c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x10>

0800bd94 <__gxx_personality_v0>:
 800bd94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bd98:	f000 0403 	and.w	r4, r0, #3
 800bd9c:	b097      	sub	sp, #92	; 0x5c
 800bd9e:	2300      	movs	r3, #0
 800bda0:	2c01      	cmp	r4, #1
 800bda2:	4689      	mov	r9, r1
 800bda4:	4690      	mov	r8, r2
 800bda6:	930a      	str	r3, [sp, #40]	; 0x28
 800bda8:	d021      	beq.n	800bdee <__gxx_personality_v0+0x5a>
 800bdaa:	d30e      	bcc.n	800bdca <__gxx_personality_v0+0x36>
 800bdac:	2c02      	cmp	r4, #2
 800bdae:	d10a      	bne.n	800bdc6 <__gxx_personality_v0+0x32>
 800bdb0:	4641      	mov	r1, r8
 800bdb2:	4648      	mov	r0, r9
 800bdb4:	f7fe f902 	bl	8009fbc <__gnu_unwind_frame>
 800bdb8:	2800      	cmp	r0, #0
 800bdba:	f000 80d4 	beq.w	800bf66 <__gxx_personality_v0+0x1d2>
 800bdbe:	2009      	movs	r0, #9
 800bdc0:	b017      	add	sp, #92	; 0x5c
 800bdc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bdc6:	f000 fec1 	bl	800cb4c <abort>
 800bdca:	f000 0008 	and.w	r0, r0, #8
 800bdce:	f000 03ff 	and.w	r3, r0, #255	; 0xff
 800bdd2:	2800      	cmp	r0, #0
 800bdd4:	d1ec      	bne.n	800bdb0 <__gxx_personality_v0+0x1c>
 800bdd6:	aa16      	add	r2, sp, #88	; 0x58
 800bdd8:	4640      	mov	r0, r8
 800bdda:	f842 1d2c 	str.w	r1, [r2, #-44]!
 800bdde:	4619      	mov	r1, r3
 800bde0:	9200      	str	r2, [sp, #0]
 800bde2:	220c      	movs	r2, #12
 800bde4:	f7fd fb9a 	bl	800951c <_Unwind_VRS_Set>
 800bde8:	2301      	movs	r3, #1
 800bdea:	9304      	str	r3, [sp, #16]
 800bdec:	e013      	b.n	800be16 <__gxx_personality_v0+0x82>
 800bdee:	f000 0008 	and.w	r0, r0, #8
 800bdf2:	f000 04ff 	and.w	r4, r0, #255	; 0xff
 800bdf6:	2800      	cmp	r0, #0
 800bdf8:	f000 80b9 	beq.w	800bf6e <__gxx_personality_v0+0x1da>
 800bdfc:	aa16      	add	r2, sp, #88	; 0x58
 800bdfe:	f044 0402 	orr.w	r4, r4, #2
 800be02:	f842 1d2c 	str.w	r1, [r2, #-44]!
 800be06:	b2e4      	uxtb	r4, r4
 800be08:	9200      	str	r2, [sp, #0]
 800be0a:	4619      	mov	r1, r3
 800be0c:	220c      	movs	r2, #12
 800be0e:	4640      	mov	r0, r8
 800be10:	9404      	str	r4, [sp, #16]
 800be12:	f7fd fb83 	bl	800951c <_Unwind_VRS_Set>
 800be16:	4640      	mov	r0, r8
 800be18:	f7fe f8ea 	bl	8009ff0 <_Unwind_GetLanguageSpecificData>
 800be1c:	9005      	str	r0, [sp, #20]
 800be1e:	2800      	cmp	r0, #0
 800be20:	d0c6      	beq.n	800bdb0 <__gxx_personality_v0+0x1c>
 800be22:	ab10      	add	r3, sp, #64	; 0x40
 800be24:	461a      	mov	r2, r3
 800be26:	9905      	ldr	r1, [sp, #20]
 800be28:	9306      	str	r3, [sp, #24]
 800be2a:	4640      	mov	r0, r8
 800be2c:	f7ff ff66 	bl	800bcfc <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 800be30:	4641      	mov	r1, r8
 800be32:	4604      	mov	r4, r0
 800be34:	f89d 0054 	ldrb.w	r0, [sp, #84]	; 0x54
 800be38:	f7ff ff3a 	bl	800bcb0 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800be3c:	f10d 0b3c 	add.w	fp, sp, #60	; 0x3c
 800be40:	2300      	movs	r3, #0
 800be42:	9012      	str	r0, [sp, #72]	; 0x48
 800be44:	4619      	mov	r1, r3
 800be46:	220f      	movs	r2, #15
 800be48:	f8cd b000 	str.w	fp, [sp]
 800be4c:	4640      	mov	r0, r8
 800be4e:	f7fd fb3f 	bl	80094d0 <_Unwind_VRS_Get>
 800be52:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800be54:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800be56:	f023 0301 	bic.w	r3, r3, #1
 800be5a:	4294      	cmp	r4, r2
 800be5c:	f103 36ff 	add.w	r6, r3, #4294967295
 800be60:	d243      	bcs.n	800beea <__gxx_personality_v0+0x156>
 800be62:	f10d 0a34 	add.w	sl, sp, #52	; 0x34
 800be66:	af0e      	add	r7, sp, #56	; 0x38
 800be68:	f89d 5055 	ldrb.w	r5, [sp, #85]	; 0x55
 800be6c:	2100      	movs	r1, #0
 800be6e:	4628      	mov	r0, r5
 800be70:	f7ff ff1e 	bl	800bcb0 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800be74:	4622      	mov	r2, r4
 800be76:	4653      	mov	r3, sl
 800be78:	4601      	mov	r1, r0
 800be7a:	4628      	mov	r0, r5
 800be7c:	f7ff feb8 	bl	800bbf0 <_ZL28read_encoded_value_with_basehjPKhPj>
 800be80:	f89d 4055 	ldrb.w	r4, [sp, #85]	; 0x55
 800be84:	4605      	mov	r5, r0
 800be86:	2100      	movs	r1, #0
 800be88:	4620      	mov	r0, r4
 800be8a:	f7ff ff11 	bl	800bcb0 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800be8e:	462a      	mov	r2, r5
 800be90:	463b      	mov	r3, r7
 800be92:	4601      	mov	r1, r0
 800be94:	4620      	mov	r0, r4
 800be96:	f7ff feab 	bl	800bbf0 <_ZL28read_encoded_value_with_basehjPKhPj>
 800be9a:	f89d 4055 	ldrb.w	r4, [sp, #85]	; 0x55
 800be9e:	4605      	mov	r5, r0
 800bea0:	2100      	movs	r1, #0
 800bea2:	4620      	mov	r0, r4
 800bea4:	f7ff ff04 	bl	800bcb0 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800bea8:	462a      	mov	r2, r5
 800beaa:	4601      	mov	r1, r0
 800beac:	465b      	mov	r3, fp
 800beae:	4620      	mov	r0, r4
 800beb0:	f7ff fe9e 	bl	800bbf0 <_ZL28read_encoded_value_with_basehjPKhPj>
 800beb4:	4604      	mov	r4, r0
 800beb6:	2000      	movs	r0, #0
 800beb8:	4602      	mov	r2, r0
 800beba:	f814 1b01 	ldrb.w	r1, [r4], #1
 800bebe:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800bec2:	4093      	lsls	r3, r2
 800bec4:	060d      	lsls	r5, r1, #24
 800bec6:	ea40 0003 	orr.w	r0, r0, r3
 800beca:	f102 0207 	add.w	r2, r2, #7
 800bece:	d4f4      	bmi.n	800beba <__gxx_personality_v0+0x126>
 800bed0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800bed2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bed4:	4413      	add	r3, r2
 800bed6:	429e      	cmp	r6, r3
 800bed8:	d307      	bcc.n	800beea <__gxx_personality_v0+0x156>
 800beda:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800bedc:	4413      	add	r3, r2
 800bede:	429e      	cmp	r6, r3
 800bee0:	f0c0 80ba 	bcc.w	800c058 <__gxx_personality_v0+0x2c4>
 800bee4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800bee6:	42a3      	cmp	r3, r4
 800bee8:	d8be      	bhi.n	800be68 <__gxx_personality_v0+0xd4>
 800beea:	2500      	movs	r5, #0
 800beec:	9503      	str	r5, [sp, #12]
 800beee:	2401      	movs	r4, #1
 800bef0:	9b04      	ldr	r3, [sp, #16]
 800bef2:	07db      	lsls	r3, r3, #31
 800bef4:	d456      	bmi.n	800bfa4 <__gxx_personality_v0+0x210>
 800bef6:	9b04      	ldr	r3, [sp, #16]
 800bef8:	0719      	lsls	r1, r3, #28
 800befa:	f140 80a8 	bpl.w	800c04e <__gxx_personality_v0+0x2ba>
 800befe:	2c01      	cmp	r4, #1
 800bf00:	f000 819d 	beq.w	800c23e <__gxx_personality_v0+0x4aa>
 800bf04:	f10d 0a34 	add.w	sl, sp, #52	; 0x34
 800bf08:	af0e      	add	r7, sp, #56	; 0x38
 800bf0a:	a916      	add	r1, sp, #88	; 0x58
 800bf0c:	2300      	movs	r3, #0
 800bf0e:	f841 9d28 	str.w	r9, [r1, #-40]!
 800bf12:	461a      	mov	r2, r3
 800bf14:	9100      	str	r1, [sp, #0]
 800bf16:	4640      	mov	r0, r8
 800bf18:	4619      	mov	r1, r3
 800bf1a:	f7fd faff 	bl	800951c <_Unwind_VRS_Set>
 800bf1e:	2300      	movs	r3, #0
 800bf20:	4619      	mov	r1, r3
 800bf22:	2201      	movs	r2, #1
 800bf24:	f8cd a000 	str.w	sl, [sp]
 800bf28:	4640      	mov	r0, r8
 800bf2a:	950d      	str	r5, [sp, #52]	; 0x34
 800bf2c:	f7fd faf6 	bl	800951c <_Unwind_VRS_Set>
 800bf30:	2300      	movs	r3, #0
 800bf32:	4619      	mov	r1, r3
 800bf34:	220f      	movs	r2, #15
 800bf36:	9700      	str	r7, [sp, #0]
 800bf38:	4640      	mov	r0, r8
 800bf3a:	f7fd fac9 	bl	80094d0 <_Unwind_VRS_Get>
 800bf3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800bf40:	9a03      	ldr	r2, [sp, #12]
 800bf42:	9700      	str	r7, [sp, #0]
 800bf44:	f003 0501 	and.w	r5, r3, #1
 800bf48:	2300      	movs	r3, #0
 800bf4a:	4315      	orrs	r5, r2
 800bf4c:	4640      	mov	r0, r8
 800bf4e:	4619      	mov	r1, r3
 800bf50:	220f      	movs	r2, #15
 800bf52:	950e      	str	r5, [sp, #56]	; 0x38
 800bf54:	f7fd fae2 	bl	800951c <_Unwind_VRS_Set>
 800bf58:	2c02      	cmp	r4, #2
 800bf5a:	f000 80f5 	beq.w	800c148 <__gxx_personality_v0+0x3b4>
 800bf5e:	2007      	movs	r0, #7
 800bf60:	b017      	add	sp, #92	; 0x5c
 800bf62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bf66:	2008      	movs	r0, #8
 800bf68:	b017      	add	sp, #92	; 0x5c
 800bf6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bf6e:	ab10      	add	r3, sp, #64	; 0x40
 800bf70:	9300      	str	r3, [sp, #0]
 800bf72:	9306      	str	r3, [sp, #24]
 800bf74:	220d      	movs	r2, #13
 800bf76:	4623      	mov	r3, r4
 800bf78:	4621      	mov	r1, r4
 800bf7a:	4640      	mov	r0, r8
 800bf7c:	f8d9 5020 	ldr.w	r5, [r9, #32]
 800bf80:	f7fd faa6 	bl	80094d0 <_Unwind_VRS_Get>
 800bf84:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800bf86:	429d      	cmp	r5, r3
 800bf88:	d024      	beq.n	800bfd4 <__gxx_personality_v0+0x240>
 800bf8a:	aa16      	add	r2, sp, #88	; 0x58
 800bf8c:	4623      	mov	r3, r4
 800bf8e:	f842 9d2c 	str.w	r9, [r2, #-44]!
 800bf92:	4621      	mov	r1, r4
 800bf94:	9200      	str	r2, [sp, #0]
 800bf96:	4640      	mov	r0, r8
 800bf98:	220c      	movs	r2, #12
 800bf9a:	f7fd fabf 	bl	800951c <_Unwind_VRS_Set>
 800bf9e:	2302      	movs	r3, #2
 800bfa0:	9304      	str	r3, [sp, #16]
 800bfa2:	e738      	b.n	800be16 <__gxx_personality_v0+0x82>
 800bfa4:	af0e      	add	r7, sp, #56	; 0x38
 800bfa6:	2300      	movs	r3, #0
 800bfa8:	4619      	mov	r1, r3
 800bfaa:	220d      	movs	r2, #13
 800bfac:	9700      	str	r7, [sp, #0]
 800bfae:	4640      	mov	r0, r8
 800bfb0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800bfb2:	f7fd fa8d 	bl	80094d0 <_Unwind_VRS_Get>
 800bfb6:	9a05      	ldr	r2, [sp, #20]
 800bfb8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800bfba:	f8c9 202c 	str.w	r2, [r9, #44]	; 0x2c
 800bfbe:	9a03      	ldr	r2, [sp, #12]
 800bfc0:	f8c9 4024 	str.w	r4, [r9, #36]	; 0x24
 800bfc4:	f8c9 5028 	str.w	r5, [r9, #40]	; 0x28
 800bfc8:	f8c9 2030 	str.w	r2, [r9, #48]	; 0x30
 800bfcc:	f8c9 3020 	str.w	r3, [r9, #32]
 800bfd0:	2006      	movs	r0, #6
 800bfd2:	e6f5      	b.n	800bdc0 <__gxx_personality_v0+0x2c>
 800bfd4:	aa16      	add	r2, sp, #88	; 0x58
 800bfd6:	4623      	mov	r3, r4
 800bfd8:	f842 9d2c 	str.w	r9, [r2, #-44]!
 800bfdc:	4621      	mov	r1, r4
 800bfde:	9200      	str	r2, [sp, #0]
 800bfe0:	4640      	mov	r0, r8
 800bfe2:	220c      	movs	r2, #12
 800bfe4:	f7fd fa9a 	bl	800951c <_Unwind_VRS_Set>
 800bfe8:	f8d9 3030 	ldr.w	r3, [r9, #48]	; 0x30
 800bfec:	9303      	str	r3, [sp, #12]
 800bfee:	b383      	cbz	r3, 800c052 <__gxx_personality_v0+0x2be>
 800bff0:	f8d9 302c 	ldr.w	r3, [r9, #44]	; 0x2c
 800bff4:	f8d9 5028 	ldr.w	r5, [r9, #40]	; 0x28
 800bff8:	9305      	str	r3, [sp, #20]
 800bffa:	2403      	movs	r4, #3
 800bffc:	f10d 0a34 	add.w	sl, sp, #52	; 0x34
 800c000:	af0e      	add	r7, sp, #56	; 0x38
 800c002:	2d00      	cmp	r5, #0
 800c004:	da81      	bge.n	800bf0a <__gxx_personality_v0+0x176>
 800c006:	9a06      	ldr	r2, [sp, #24]
 800c008:	9905      	ldr	r1, [sp, #20]
 800c00a:	4640      	mov	r0, r8
 800c00c:	f7ff fe76 	bl	800bcfc <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 800c010:	4641      	mov	r1, r8
 800c012:	f89d 0054 	ldrb.w	r0, [sp, #84]	; 0x54
 800c016:	f7ff fe4b 	bl	800bcb0 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800c01a:	00aa      	lsls	r2, r5, #2
 800c01c:	f082 0203 	eor.w	r2, r2, #3
 800c020:	43d2      	mvns	r2, r2
 800c022:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800c024:	9012      	str	r0, [sp, #72]	; 0x48
 800c026:	58b3      	ldr	r3, [r6, r2]
 800c028:	4416      	add	r6, r2
 800c02a:	b133      	cbz	r3, 800c03a <__gxx_personality_v0+0x2a6>
 800c02c:	4632      	mov	r2, r6
 800c02e:	2300      	movs	r3, #0
 800c030:	f852 1f04 	ldr.w	r1, [r2, #4]!
 800c034:	3301      	adds	r3, #1
 800c036:	2900      	cmp	r1, #0
 800c038:	d1fa      	bne.n	800c030 <__gxx_personality_v0+0x29c>
 800c03a:	2204      	movs	r2, #4
 800c03c:	f8c9 3028 	str.w	r3, [r9, #40]	; 0x28
 800c040:	f8c9 002c 	str.w	r0, [r9, #44]	; 0x2c
 800c044:	f8c9 6034 	str.w	r6, [r9, #52]	; 0x34
 800c048:	f8c9 2030 	str.w	r2, [r9, #48]	; 0x30
 800c04c:	e75d      	b.n	800bf0a <__gxx_personality_v0+0x176>
 800c04e:	2c01      	cmp	r4, #1
 800c050:	d1d4      	bne.n	800bffc <__gxx_personality_v0+0x268>
 800c052:	4648      	mov	r0, r9
 800c054:	f000 fa88 	bl	800c568 <__cxa_call_terminate>
 800c058:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800c05a:	2b00      	cmp	r3, #0
 800c05c:	f43f aea8 	beq.w	800bdb0 <__gxx_personality_v0+0x1c>
 800c060:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800c062:	4413      	add	r3, r2
 800c064:	9303      	str	r3, [sp, #12]
 800c066:	2800      	cmp	r0, #0
 800c068:	f000 80d6 	beq.w	800c218 <__gxx_personality_v0+0x484>
 800c06c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800c06e:	3801      	subs	r0, #1
 800c070:	4404      	add	r4, r0
 800c072:	2b00      	cmp	r3, #0
 800c074:	f43f ae9c 	beq.w	800bdb0 <__gxx_personality_v0+0x1c>
 800c078:	2c00      	cmp	r4, #0
 800c07a:	f000 80d1 	beq.w	800c220 <__gxx_personality_v0+0x48c>
 800c07e:	9b04      	ldr	r3, [sp, #16]
 800c080:	f013 0308 	ands.w	r3, r3, #8
 800c084:	9309      	str	r3, [sp, #36]	; 0x24
 800c086:	f000 80bd 	beq.w	800c204 <__gxx_personality_v0+0x470>
 800c08a:	2247      	movs	r2, #71	; 0x47
 800c08c:	234e      	movs	r3, #78	; 0x4e
 800c08e:	f889 2000 	strb.w	r2, [r9]
 800c092:	f889 3001 	strb.w	r3, [r9, #1]
 800c096:	2255      	movs	r2, #85	; 0x55
 800c098:	2343      	movs	r3, #67	; 0x43
 800c09a:	f889 2002 	strb.w	r2, [r9, #2]
 800c09e:	f889 3003 	strb.w	r3, [r9, #3]
 800c0a2:	2246      	movs	r2, #70	; 0x46
 800c0a4:	234f      	movs	r3, #79	; 0x4f
 800c0a6:	f889 2004 	strb.w	r2, [r9, #4]
 800c0aa:	f889 3005 	strb.w	r3, [r9, #5]
 800c0ae:	2252      	movs	r2, #82	; 0x52
 800c0b0:	2300      	movs	r3, #0
 800c0b2:	f889 2006 	strb.w	r2, [r9, #6]
 800c0b6:	f889 3007 	strb.w	r3, [r9, #7]
 800c0ba:	2300      	movs	r3, #0
 800c0bc:	9307      	str	r3, [sp, #28]
 800c0be:	f8cd 8020 	str.w	r8, [sp, #32]
 800c0c2:	2500      	movs	r5, #0
 800c0c4:	462a      	mov	r2, r5
 800c0c6:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c0ca:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800c0ce:	4093      	lsls	r3, r2
 800c0d0:	0608      	lsls	r0, r1, #24
 800c0d2:	ea45 0503 	orr.w	r5, r5, r3
 800c0d6:	f102 0207 	add.w	r2, r2, #7
 800c0da:	d4f4      	bmi.n	800c0c6 <__gxx_personality_v0+0x332>
 800c0dc:	2a1f      	cmp	r2, #31
 800c0de:	d805      	bhi.n	800c0ec <__gxx_personality_v0+0x358>
 800c0e0:	0649      	lsls	r1, r1, #25
 800c0e2:	d503      	bpl.n	800c0ec <__gxx_personality_v0+0x358>
 800c0e4:	2301      	movs	r3, #1
 800c0e6:	4093      	lsls	r3, r2
 800c0e8:	425b      	negs	r3, r3
 800c0ea:	431d      	orrs	r5, r3
 800c0ec:	2600      	movs	r6, #0
 800c0ee:	4632      	mov	r2, r6
 800c0f0:	4620      	mov	r0, r4
 800c0f2:	f810 1b01 	ldrb.w	r1, [r0], #1
 800c0f6:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800c0fa:	4093      	lsls	r3, r2
 800c0fc:	431e      	orrs	r6, r3
 800c0fe:	060b      	lsls	r3, r1, #24
 800c100:	f102 0207 	add.w	r2, r2, #7
 800c104:	d4f5      	bmi.n	800c0f2 <__gxx_personality_v0+0x35e>
 800c106:	2a1f      	cmp	r2, #31
 800c108:	d805      	bhi.n	800c116 <__gxx_personality_v0+0x382>
 800c10a:	0648      	lsls	r0, r1, #25
 800c10c:	d503      	bpl.n	800c116 <__gxx_personality_v0+0x382>
 800c10e:	2301      	movs	r3, #1
 800c110:	4093      	lsls	r3, r2
 800c112:	425b      	negs	r3, r3
 800c114:	431e      	orrs	r6, r3
 800c116:	2d00      	cmp	r5, #0
 800c118:	d03d      	beq.n	800c196 <__gxx_personality_v0+0x402>
 800c11a:	dd3f      	ble.n	800c19c <__gxx_personality_v0+0x408>
 800c11c:	f89d 0054 	ldrb.w	r0, [sp, #84]	; 0x54
 800c120:	28ff      	cmp	r0, #255	; 0xff
 800c122:	d06d      	beq.n	800c200 <__gxx_personality_v0+0x46c>
 800c124:	f000 0307 	and.w	r3, r0, #7
 800c128:	2b04      	cmp	r3, #4
 800c12a:	f63f ae4c 	bhi.w	800bdc6 <__gxx_personality_v0+0x32>
 800c12e:	a201      	add	r2, pc, #4	; (adr r2, 800c134 <__gxx_personality_v0+0x3a0>)
 800c130:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c134:	0800c17b 	.word	0x0800c17b
 800c138:	0800bdc7 	.word	0x0800bdc7
 800c13c:	0800c175 	.word	0x0800c175
 800c140:	0800c17b 	.word	0x0800c17b
 800c144:	0800c153 	.word	0x0800c153
 800c148:	4648      	mov	r0, r9
 800c14a:	f7ff fce7 	bl	800bb1c <__cxa_begin_cleanup>
 800c14e:	2007      	movs	r0, #7
 800c150:	e636      	b.n	800bdc0 <__gxx_personality_v0+0x2c>
 800c152:	00eb      	lsls	r3, r5, #3
 800c154:	425b      	negs	r3, r3
 800c156:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800c158:	9912      	ldr	r1, [sp, #72]	; 0x48
 800c15a:	441a      	add	r2, r3
 800c15c:	463b      	mov	r3, r7
 800c15e:	f7ff fd47 	bl	800bbf0 <_ZL28read_encoded_value_with_basehjPKhPj>
 800c162:	990e      	ldr	r1, [sp, #56]	; 0x38
 800c164:	b199      	cbz	r1, 800c18e <__gxx_personality_v0+0x3fa>
 800c166:	f1b9 0f00 	cmp.w	r9, #0
 800c16a:	d109      	bne.n	800c180 <__gxx_personality_v0+0x3ec>
 800c16c:	2e00      	cmp	r6, #0
 800c16e:	d05e      	beq.n	800c22e <__gxx_personality_v0+0x49a>
 800c170:	4434      	add	r4, r6
 800c172:	e7a6      	b.n	800c0c2 <__gxx_personality_v0+0x32e>
 800c174:	006b      	lsls	r3, r5, #1
 800c176:	425b      	negs	r3, r3
 800c178:	e7ed      	b.n	800c156 <__gxx_personality_v0+0x3c2>
 800c17a:	00ab      	lsls	r3, r5, #2
 800c17c:	425b      	negs	r3, r3
 800c17e:	e7ea      	b.n	800c156 <__gxx_personality_v0+0x3c2>
 800c180:	ab0a      	add	r3, sp, #40	; 0x28
 800c182:	2200      	movs	r2, #0
 800c184:	4648      	mov	r0, r9
 800c186:	f7ff fc71 	bl	800ba6c <__cxa_type_match>
 800c18a:	2800      	cmp	r0, #0
 800c18c:	d0ee      	beq.n	800c16c <__gxx_personality_v0+0x3d8>
 800c18e:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800c192:	2403      	movs	r4, #3
 800c194:	e6ac      	b.n	800bef0 <__gxx_personality_v0+0x15c>
 800c196:	2301      	movs	r3, #1
 800c198:	9307      	str	r3, [sp, #28]
 800c19a:	e7e7      	b.n	800c16c <__gxx_personality_v0+0x3d8>
 800c19c:	f1b9 0f00 	cmp.w	r9, #0
 800c1a0:	d001      	beq.n	800c1a6 <__gxx_personality_v0+0x412>
 800c1a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c1a4:	b193      	cbz	r3, 800c1cc <__gxx_personality_v0+0x438>
 800c1a6:	1c6b      	adds	r3, r5, #1
 800c1a8:	ebc3 7383 	rsb	r3, r3, r3, lsl #30
 800c1ac:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800c1ae:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800c1b2:	2b00      	cmp	r3, #0
 800c1b4:	d1da      	bne.n	800c16c <__gxx_personality_v0+0x3d8>
 800c1b6:	9b04      	ldr	r3, [sp, #16]
 800c1b8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800c1bc:	07da      	lsls	r2, r3, #31
 800c1be:	f53f aef2 	bmi.w	800bfa6 <__gxx_personality_v0+0x212>
 800c1c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c1c4:	2b00      	cmp	r3, #0
 800c1c6:	d03c      	beq.n	800c242 <__gxx_personality_v0+0x4ae>
 800c1c8:	f000 f900 	bl	800c3cc <_ZSt10unexpectedv>
 800c1cc:	f105 0801 	add.w	r8, r5, #1
 800c1d0:	ebc8 7388 	rsb	r3, r8, r8, lsl #30
 800c1d4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800c1d6:	980a      	ldr	r0, [sp, #40]	; 0x28
 800c1d8:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800c1dc:	900f      	str	r0, [sp, #60]	; 0x3c
 800c1de:	eb02 0883 	add.w	r8, r2, r3, lsl #2
 800c1e2:	b921      	cbnz	r1, 800c1ee <__gxx_personality_v0+0x45a>
 800c1e4:	e7e7      	b.n	800c1b6 <__gxx_personality_v0+0x422>
 800c1e6:	f858 1f04 	ldr.w	r1, [r8, #4]!
 800c1ea:	2900      	cmp	r1, #0
 800c1ec:	d0e3      	beq.n	800c1b6 <__gxx_personality_v0+0x422>
 800c1ee:	4441      	add	r1, r8
 800c1f0:	465b      	mov	r3, fp
 800c1f2:	2200      	movs	r2, #0
 800c1f4:	4648      	mov	r0, r9
 800c1f6:	f7ff fc39 	bl	800ba6c <__cxa_type_match>
 800c1fa:	2800      	cmp	r0, #0
 800c1fc:	d0f3      	beq.n	800c1e6 <__gxx_personality_v0+0x452>
 800c1fe:	e7b5      	b.n	800c16c <__gxx_personality_v0+0x3d8>
 800c200:	2300      	movs	r3, #0
 800c202:	e7a8      	b.n	800c156 <__gxx_personality_v0+0x3c2>
 800c204:	f899 3007 	ldrb.w	r3, [r9, #7]
 800c208:	2b01      	cmp	r3, #1
 800c20a:	bf0c      	ite	eq
 800c20c:	f859 3c20 	ldreq.w	r3, [r9, #-32]
 800c210:	f109 0358 	addne.w	r3, r9, #88	; 0x58
 800c214:	930a      	str	r3, [sp, #40]	; 0x28
 800c216:	e750      	b.n	800c0ba <__gxx_personality_v0+0x326>
 800c218:	9b03      	ldr	r3, [sp, #12]
 800c21a:	2b00      	cmp	r3, #0
 800c21c:	f43f adc8 	beq.w	800bdb0 <__gxx_personality_v0+0x1c>
 800c220:	9b04      	ldr	r3, [sp, #16]
 800c222:	f013 0501 	ands.w	r5, r3, #1
 800c226:	f47f adc3 	bne.w	800bdb0 <__gxx_personality_v0+0x1c>
 800c22a:	2402      	movs	r4, #2
 800c22c:	e663      	b.n	800bef6 <__gxx_personality_v0+0x162>
 800c22e:	9b07      	ldr	r3, [sp, #28]
 800c230:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800c234:	2b00      	cmp	r3, #0
 800c236:	d1f3      	bne.n	800c220 <__gxx_personality_v0+0x48c>
 800c238:	e5ba      	b.n	800bdb0 <__gxx_personality_v0+0x1c>
 800c23a:	f000 f819 	bl	800c270 <__cxa_begin_catch>
 800c23e:	f000 f8b7 	bl	800c3b0 <_ZSt9terminatev>
 800c242:	2403      	movs	r4, #3
 800c244:	e6dd      	b.n	800c002 <__gxx_personality_v0+0x26e>
 800c246:	bf00      	nop

0800c248 <_ZNSt13bad_exceptionD1Ev>:
 800c248:	4770      	bx	lr
 800c24a:	bf00      	nop

0800c24c <_ZNKSt13bad_exception4whatEv>:
 800c24c:	4800      	ldr	r0, [pc, #0]	; (800c250 <_ZNKSt13bad_exception4whatEv+0x4>)
 800c24e:	4770      	bx	lr
 800c250:	08010ed8 	.word	0x08010ed8

0800c254 <_ZNSt13bad_exceptionD0Ev>:
 800c254:	b510      	push	{r4, lr}
 800c256:	4604      	mov	r4, r0
 800c258:	f000 f966 	bl	800c528 <_ZdlPv>
 800c25c:	4620      	mov	r0, r4
 800c25e:	bd10      	pop	{r4, pc}

0800c260 <__cxa_get_globals_fast>:
 800c260:	4800      	ldr	r0, [pc, #0]	; (800c264 <__cxa_get_globals_fast+0x4>)
 800c262:	4770      	bx	lr
 800c264:	20000564 	.word	0x20000564

0800c268 <__cxa_get_globals>:
 800c268:	4800      	ldr	r0, [pc, #0]	; (800c26c <__cxa_get_globals+0x4>)
 800c26a:	4770      	bx	lr
 800c26c:	20000564 	.word	0x20000564

0800c270 <__cxa_begin_catch>:
 800c270:	b538      	push	{r3, r4, r5, lr}
 800c272:	4604      	mov	r4, r0
 800c274:	f7ff fff8 	bl	800c268 <__cxa_get_globals>
 800c278:	7822      	ldrb	r2, [r4, #0]
 800c27a:	6803      	ldr	r3, [r0, #0]
 800c27c:	2a47      	cmp	r2, #71	; 0x47
 800c27e:	f1a4 0120 	sub.w	r1, r4, #32
 800c282:	d005      	beq.n	800c290 <__cxa_begin_catch+0x20>
 800c284:	2b00      	cmp	r3, #0
 800c286:	d131      	bne.n	800c2ec <__cxa_begin_catch+0x7c>
 800c288:	461c      	mov	r4, r3
 800c28a:	6001      	str	r1, [r0, #0]
 800c28c:	4620      	mov	r0, r4
 800c28e:	bd38      	pop	{r3, r4, r5, pc}
 800c290:	7862      	ldrb	r2, [r4, #1]
 800c292:	2a4e      	cmp	r2, #78	; 0x4e
 800c294:	d1f6      	bne.n	800c284 <__cxa_begin_catch+0x14>
 800c296:	78a2      	ldrb	r2, [r4, #2]
 800c298:	2a55      	cmp	r2, #85	; 0x55
 800c29a:	d1f3      	bne.n	800c284 <__cxa_begin_catch+0x14>
 800c29c:	78e2      	ldrb	r2, [r4, #3]
 800c29e:	2a43      	cmp	r2, #67	; 0x43
 800c2a0:	d1f0      	bne.n	800c284 <__cxa_begin_catch+0x14>
 800c2a2:	7922      	ldrb	r2, [r4, #4]
 800c2a4:	2a43      	cmp	r2, #67	; 0x43
 800c2a6:	d1ed      	bne.n	800c284 <__cxa_begin_catch+0x14>
 800c2a8:	7962      	ldrb	r2, [r4, #5]
 800c2aa:	2a2b      	cmp	r2, #43	; 0x2b
 800c2ac:	d1ea      	bne.n	800c284 <__cxa_begin_catch+0x14>
 800c2ae:	79a2      	ldrb	r2, [r4, #6]
 800c2b0:	2a2b      	cmp	r2, #43	; 0x2b
 800c2b2:	d1e7      	bne.n	800c284 <__cxa_begin_catch+0x14>
 800c2b4:	79e2      	ldrb	r2, [r4, #7]
 800c2b6:	2a01      	cmp	r2, #1
 800c2b8:	d8e4      	bhi.n	800c284 <__cxa_begin_catch+0x14>
 800c2ba:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 800c2be:	2a00      	cmp	r2, #0
 800c2c0:	db11      	blt.n	800c2e6 <__cxa_begin_catch+0x76>
 800c2c2:	3201      	adds	r2, #1
 800c2c4:	6845      	ldr	r5, [r0, #4]
 800c2c6:	f844 2c0c 	str.w	r2, [r4, #-12]
 800c2ca:	428b      	cmp	r3, r1
 800c2cc:	f105 32ff 	add.w	r2, r5, #4294967295
 800c2d0:	6042      	str	r2, [r0, #4]
 800c2d2:	bf1c      	itt	ne
 800c2d4:	f844 3c10 	strne.w	r3, [r4, #-16]
 800c2d8:	6001      	strne	r1, [r0, #0]
 800c2da:	4620      	mov	r0, r4
 800c2dc:	6a64      	ldr	r4, [r4, #36]	; 0x24
 800c2de:	f7fd f8ef 	bl	80094c0 <_Unwind_Complete>
 800c2e2:	4620      	mov	r0, r4
 800c2e4:	bd38      	pop	{r3, r4, r5, pc}
 800c2e6:	f1c2 0201 	rsb	r2, r2, #1
 800c2ea:	e7eb      	b.n	800c2c4 <__cxa_begin_catch+0x54>
 800c2ec:	f000 f860 	bl	800c3b0 <_ZSt9terminatev>
 800c2f0:	3101      	adds	r1, #1
 800c2f2:	d001      	beq.n	800c2f8 <__cxa_begin_catch+0x88>
 800c2f4:	f7ff fbb4 	bl	800ba60 <__cxa_end_cleanup>
 800c2f8:	f000 f946 	bl	800c588 <__cxa_call_unexpected>

0800c2fc <__cxa_end_catch>:
 800c2fc:	b508      	push	{r3, lr}
 800c2fe:	f7ff ffaf 	bl	800c260 <__cxa_get_globals_fast>
 800c302:	4602      	mov	r2, r0
 800c304:	6800      	ldr	r0, [r0, #0]
 800c306:	2800      	cmp	r0, #0
 800c308:	d03d      	beq.n	800c386 <__cxa_end_catch+0x8a>
 800c30a:	f890 3020 	ldrb.w	r3, [r0, #32]
 800c30e:	2b47      	cmp	r3, #71	; 0x47
 800c310:	d006      	beq.n	800c320 <__cxa_end_catch+0x24>
 800c312:	2300      	movs	r3, #0
 800c314:	6013      	str	r3, [r2, #0]
 800c316:	3020      	adds	r0, #32
 800c318:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800c31c:	f7fd b8d2 	b.w	80094c4 <_Unwind_DeleteException>
 800c320:	f890 3021 	ldrb.w	r3, [r0, #33]	; 0x21
 800c324:	2b4e      	cmp	r3, #78	; 0x4e
 800c326:	d1f4      	bne.n	800c312 <__cxa_end_catch+0x16>
 800c328:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 800c32c:	2b55      	cmp	r3, #85	; 0x55
 800c32e:	d1f0      	bne.n	800c312 <__cxa_end_catch+0x16>
 800c330:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 800c334:	2b43      	cmp	r3, #67	; 0x43
 800c336:	d1ec      	bne.n	800c312 <__cxa_end_catch+0x16>
 800c338:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800c33c:	2b43      	cmp	r3, #67	; 0x43
 800c33e:	d1e8      	bne.n	800c312 <__cxa_end_catch+0x16>
 800c340:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800c344:	2b2b      	cmp	r3, #43	; 0x2b
 800c346:	d1e4      	bne.n	800c312 <__cxa_end_catch+0x16>
 800c348:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 800c34c:	2b2b      	cmp	r3, #43	; 0x2b
 800c34e:	d1e0      	bne.n	800c312 <__cxa_end_catch+0x16>
 800c350:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800c354:	2b01      	cmp	r3, #1
 800c356:	d8dc      	bhi.n	800c312 <__cxa_end_catch+0x16>
 800c358:	6943      	ldr	r3, [r0, #20]
 800c35a:	2b00      	cmp	r3, #0
 800c35c:	db05      	blt.n	800c36a <__cxa_end_catch+0x6e>
 800c35e:	3b01      	subs	r3, #1
 800c360:	d008      	beq.n	800c374 <__cxa_end_catch+0x78>
 800c362:	1c5a      	adds	r2, r3, #1
 800c364:	d00d      	beq.n	800c382 <__cxa_end_catch+0x86>
 800c366:	6143      	str	r3, [r0, #20]
 800c368:	bd08      	pop	{r3, pc}
 800c36a:	3301      	adds	r3, #1
 800c36c:	d1fb      	bne.n	800c366 <__cxa_end_catch+0x6a>
 800c36e:	6901      	ldr	r1, [r0, #16]
 800c370:	6011      	str	r1, [r2, #0]
 800c372:	e7f8      	b.n	800c366 <__cxa_end_catch+0x6a>
 800c374:	6903      	ldr	r3, [r0, #16]
 800c376:	6013      	str	r3, [r2, #0]
 800c378:	3020      	adds	r0, #32
 800c37a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800c37e:	f7fd b8a1 	b.w	80094c4 <_Unwind_DeleteException>
 800c382:	f000 f815 	bl	800c3b0 <_ZSt9terminatev>
 800c386:	bd08      	pop	{r3, pc}

0800c388 <_ZN10__cxxabiv111__terminateEPFvvE>:
 800c388:	b508      	push	{r3, lr}
 800c38a:	4780      	blx	r0
 800c38c:	f000 fbde 	bl	800cb4c <abort>
 800c390:	f7ff ff6e 	bl	800c270 <__cxa_begin_catch>
 800c394:	f000 fbda 	bl	800cb4c <abort>
 800c398:	460d      	mov	r5, r1
 800c39a:	4604      	mov	r4, r0
 800c39c:	f7ff ffae 	bl	800c2fc <__cxa_end_catch>
 800c3a0:	3501      	adds	r5, #1
 800c3a2:	d001      	beq.n	800c3a8 <_ZN10__cxxabiv111__terminateEPFvvE+0x20>
 800c3a4:	f7ff fb5c 	bl	800ba60 <__cxa_end_cleanup>
 800c3a8:	4620      	mov	r0, r4
 800c3aa:	f000 f8ed 	bl	800c588 <__cxa_call_unexpected>
 800c3ae:	bf00      	nop

0800c3b0 <_ZSt9terminatev>:
 800c3b0:	b508      	push	{r3, lr}
 800c3b2:	4b03      	ldr	r3, [pc, #12]	; (800c3c0 <_ZSt9terminatev+0x10>)
 800c3b4:	6818      	ldr	r0, [r3, #0]
 800c3b6:	f3bf 8f5f 	dmb	sy
 800c3ba:	f7ff ffe5 	bl	800c388 <_ZN10__cxxabiv111__terminateEPFvvE>
 800c3be:	bf00      	nop
 800c3c0:	20000004 	.word	0x20000004

0800c3c4 <_ZN10__cxxabiv112__unexpectedEPFvvE>:
 800c3c4:	b508      	push	{r3, lr}
 800c3c6:	4780      	blx	r0
 800c3c8:	f7ff fff2 	bl	800c3b0 <_ZSt9terminatev>

0800c3cc <_ZSt10unexpectedv>:
 800c3cc:	b508      	push	{r3, lr}
 800c3ce:	4b03      	ldr	r3, [pc, #12]	; (800c3dc <_ZSt10unexpectedv+0x10>)
 800c3d0:	6818      	ldr	r0, [r3, #0]
 800c3d2:	f3bf 8f5f 	dmb	sy
 800c3d6:	f7ff fff5 	bl	800c3c4 <_ZN10__cxxabiv112__unexpectedEPFvvE>
 800c3da:	bf00      	nop
 800c3dc:	20000008 	.word	0x20000008

0800c3e0 <_ZSt13get_terminatev>:
 800c3e0:	4b02      	ldr	r3, [pc, #8]	; (800c3ec <_ZSt13get_terminatev+0xc>)
 800c3e2:	6818      	ldr	r0, [r3, #0]
 800c3e4:	f3bf 8f5f 	dmb	sy
 800c3e8:	4770      	bx	lr
 800c3ea:	bf00      	nop
 800c3ec:	20000004 	.word	0x20000004

0800c3f0 <_ZSt14get_unexpectedv>:
 800c3f0:	4b02      	ldr	r3, [pc, #8]	; (800c3fc <_ZSt14get_unexpectedv+0xc>)
 800c3f2:	6818      	ldr	r0, [r3, #0]
 800c3f4:	f3bf 8f5f 	dmb	sy
 800c3f8:	4770      	bx	lr
 800c3fa:	bf00      	nop
 800c3fc:	20000008 	.word	0x20000008

0800c400 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
 800c400:	b510      	push	{r4, lr}
 800c402:	4b03      	ldr	r3, [pc, #12]	; (800c410 <_ZN10__cxxabiv120__si_class_type_infoD1Ev+0x10>)
 800c404:	6003      	str	r3, [r0, #0]
 800c406:	4604      	mov	r4, r0
 800c408:	f000 fb1e 	bl	800ca48 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 800c40c:	4620      	mov	r0, r4
 800c40e:	bd10      	pop	{r4, pc}
 800c410:	08010f40 	.word	0x08010f40

0800c414 <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
 800c414:	b510      	push	{r4, lr}
 800c416:	4b05      	ldr	r3, [pc, #20]	; (800c42c <_ZN10__cxxabiv120__si_class_type_infoD0Ev+0x18>)
 800c418:	6003      	str	r3, [r0, #0]
 800c41a:	4604      	mov	r4, r0
 800c41c:	f000 fb14 	bl	800ca48 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 800c420:	4620      	mov	r0, r4
 800c422:	f000 f881 	bl	800c528 <_ZdlPv>
 800c426:	4620      	mov	r0, r4
 800c428:	bd10      	pop	{r4, pc}
 800c42a:	bf00      	nop
 800c42c:	08010f40 	.word	0x08010f40

0800c430 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
 800c430:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c434:	b081      	sub	sp, #4
 800c436:	460e      	mov	r6, r1
 800c438:	4619      	mov	r1, r3
 800c43a:	461f      	mov	r7, r3
 800c43c:	4691      	mov	r9, r2
 800c43e:	4683      	mov	fp, r0
 800c440:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800c442:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 800c446:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800c44a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 800c44c:	f000 fb5a 	bl	800cb04 <_ZNKSt9type_infoeqERKS_>
 800c450:	b170      	cbz	r0, 800c470 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x40>
 800c452:	2e00      	cmp	r6, #0
 800c454:	602c      	str	r4, [r5, #0]
 800c456:	f885 9004 	strb.w	r9, [r5, #4]
 800c45a:	db1f      	blt.n	800c49c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x6c>
 800c45c:	4434      	add	r4, r6
 800c45e:	45a0      	cmp	r8, r4
 800c460:	bf0c      	ite	eq
 800c462:	2406      	moveq	r4, #6
 800c464:	2401      	movne	r4, #1
 800c466:	71ac      	strb	r4, [r5, #6]
 800c468:	2000      	movs	r0, #0
 800c46a:	b001      	add	sp, #4
 800c46c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c470:	4544      	cmp	r4, r8
 800c472:	d018      	beq.n	800c4a6 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x76>
 800c474:	f8db 0008 	ldr.w	r0, [fp, #8]
 800c478:	f8d0 e000 	ldr.w	lr, [r0]
 800c47c:	950d      	str	r5, [sp, #52]	; 0x34
 800c47e:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 800c482:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
 800c486:	940a      	str	r4, [sp, #40]	; 0x28
 800c488:	f8de 401c 	ldr.w	r4, [lr, #28]
 800c48c:	463b      	mov	r3, r7
 800c48e:	464a      	mov	r2, r9
 800c490:	4631      	mov	r1, r6
 800c492:	46a4      	mov	ip, r4
 800c494:	b001      	add	sp, #4
 800c496:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c49a:	4760      	bx	ip
 800c49c:	3602      	adds	r6, #2
 800c49e:	d1e3      	bne.n	800c468 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x38>
 800c4a0:	2301      	movs	r3, #1
 800c4a2:	71ab      	strb	r3, [r5, #6]
 800c4a4:	e7e0      	b.n	800c468 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x38>
 800c4a6:	4651      	mov	r1, sl
 800c4a8:	4658      	mov	r0, fp
 800c4aa:	f000 fb2b 	bl	800cb04 <_ZNKSt9type_infoeqERKS_>
 800c4ae:	2800      	cmp	r0, #0
 800c4b0:	d0e0      	beq.n	800c474 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x44>
 800c4b2:	2000      	movs	r0, #0
 800c4b4:	f885 9005 	strb.w	r9, [r5, #5]
 800c4b8:	b001      	add	sp, #4
 800c4ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c4be:	bf00      	nop

0800c4c0 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
 800c4c0:	b570      	push	{r4, r5, r6, lr}
 800c4c2:	b082      	sub	sp, #8
 800c4c4:	460d      	mov	r5, r1
 800c4c6:	9c06      	ldr	r4, [sp, #24]
 800c4c8:	4294      	cmp	r4, r2
 800c4ca:	4606      	mov	r6, r0
 800c4cc:	d009      	beq.n	800c4e2 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x22>
 800c4ce:	68b0      	ldr	r0, [r6, #8]
 800c4d0:	6806      	ldr	r6, [r0, #0]
 800c4d2:	9406      	str	r4, [sp, #24]
 800c4d4:	6a34      	ldr	r4, [r6, #32]
 800c4d6:	4629      	mov	r1, r5
 800c4d8:	46a4      	mov	ip, r4
 800c4da:	b002      	add	sp, #8
 800c4dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c4e0:	4760      	bx	ip
 800c4e2:	4619      	mov	r1, r3
 800c4e4:	9201      	str	r2, [sp, #4]
 800c4e6:	9300      	str	r3, [sp, #0]
 800c4e8:	f000 fb0c 	bl	800cb04 <_ZNKSt9type_infoeqERKS_>
 800c4ec:	9b00      	ldr	r3, [sp, #0]
 800c4ee:	9a01      	ldr	r2, [sp, #4]
 800c4f0:	2800      	cmp	r0, #0
 800c4f2:	d0ec      	beq.n	800c4ce <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xe>
 800c4f4:	2006      	movs	r0, #6
 800c4f6:	b002      	add	sp, #8
 800c4f8:	bd70      	pop	{r4, r5, r6, pc}
 800c4fa:	bf00      	nop

0800c4fc <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
 800c4fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c500:	4607      	mov	r7, r0
 800c502:	460c      	mov	r4, r1
 800c504:	4615      	mov	r5, r2
 800c506:	461e      	mov	r6, r3
 800c508:	f000 fab6 	bl	800ca78 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
 800c50c:	b108      	cbz	r0, 800c512 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x16>
 800c50e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c512:	68b8      	ldr	r0, [r7, #8]
 800c514:	6807      	ldr	r7, [r0, #0]
 800c516:	4621      	mov	r1, r4
 800c518:	69bc      	ldr	r4, [r7, #24]
 800c51a:	4633      	mov	r3, r6
 800c51c:	462a      	mov	r2, r5
 800c51e:	46a4      	mov	ip, r4
 800c520:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c524:	4760      	bx	ip
 800c526:	bf00      	nop

0800c528 <_ZdlPv>:
 800c528:	f000 bd50 	b.w	800cfcc <free>

0800c52c <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>:
 800c52c:	7803      	ldrb	r3, [r0, #0]
 800c52e:	2b47      	cmp	r3, #71	; 0x47
 800c530:	d001      	beq.n	800c536 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0xa>
 800c532:	2000      	movs	r0, #0
 800c534:	4770      	bx	lr
 800c536:	7843      	ldrb	r3, [r0, #1]
 800c538:	2b4e      	cmp	r3, #78	; 0x4e
 800c53a:	d1fa      	bne.n	800c532 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c53c:	7883      	ldrb	r3, [r0, #2]
 800c53e:	2b55      	cmp	r3, #85	; 0x55
 800c540:	d1f7      	bne.n	800c532 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c542:	78c3      	ldrb	r3, [r0, #3]
 800c544:	2b43      	cmp	r3, #67	; 0x43
 800c546:	d1f4      	bne.n	800c532 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c548:	7903      	ldrb	r3, [r0, #4]
 800c54a:	2b43      	cmp	r3, #67	; 0x43
 800c54c:	d1f1      	bne.n	800c532 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c54e:	7943      	ldrb	r3, [r0, #5]
 800c550:	2b2b      	cmp	r3, #43	; 0x2b
 800c552:	d1ee      	bne.n	800c532 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c554:	7983      	ldrb	r3, [r0, #6]
 800c556:	2b2b      	cmp	r3, #43	; 0x2b
 800c558:	d1eb      	bne.n	800c532 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c55a:	79c0      	ldrb	r0, [r0, #7]
 800c55c:	2801      	cmp	r0, #1
 800c55e:	bf8c      	ite	hi
 800c560:	2000      	movhi	r0, #0
 800c562:	2001      	movls	r0, #1
 800c564:	4770      	bx	lr
 800c566:	bf00      	nop

0800c568 <__cxa_call_terminate>:
 800c568:	b510      	push	{r4, lr}
 800c56a:	b130      	cbz	r0, 800c57a <__cxa_call_terminate+0x12>
 800c56c:	4604      	mov	r4, r0
 800c56e:	f7ff fe7f 	bl	800c270 <__cxa_begin_catch>
 800c572:	4620      	mov	r0, r4
 800c574:	f7ff ffda 	bl	800c52c <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 800c578:	b908      	cbnz	r0, 800c57e <__cxa_call_terminate+0x16>
 800c57a:	f7ff ff19 	bl	800c3b0 <_ZSt9terminatev>
 800c57e:	f854 0c14 	ldr.w	r0, [r4, #-20]
 800c582:	f7ff ff01 	bl	800c388 <_ZN10__cxxabiv111__terminateEPFvvE>
 800c586:	bf00      	nop

0800c588 <__cxa_call_unexpected>:
 800c588:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c58c:	b085      	sub	sp, #20
 800c58e:	4602      	mov	r2, r0
 800c590:	f7ff ffcc 	bl	800c52c <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 800c594:	b160      	cbz	r0, 800c5b0 <__cxa_call_unexpected+0x28>
 800c596:	f852 8c18 	ldr.w	r8, [r2, #-24]
 800c59a:	f852 5c14 	ldr.w	r5, [r2, #-20]
 800c59e:	6a96      	ldr	r6, [r2, #40]	; 0x28
 800c5a0:	6b17      	ldr	r7, [r2, #48]	; 0x30
 800c5a2:	6b54      	ldr	r4, [r2, #52]	; 0x34
 800c5a4:	4610      	mov	r0, r2
 800c5a6:	f7ff fe63 	bl	800c270 <__cxa_begin_catch>
 800c5aa:	4640      	mov	r0, r8
 800c5ac:	f7ff ff0a 	bl	800c3c4 <_ZN10__cxxabiv112__unexpectedEPFvvE>
 800c5b0:	4610      	mov	r0, r2
 800c5b2:	f7ff fe5d 	bl	800c270 <__cxa_begin_catch>
 800c5b6:	f7ff ff09 	bl	800c3cc <_ZSt10unexpectedv>
 800c5ba:	f7ff fe59 	bl	800c270 <__cxa_begin_catch>
 800c5be:	f7ff fef7 	bl	800c3b0 <_ZSt9terminatev>
 800c5c2:	f7ff fe55 	bl	800c270 <__cxa_begin_catch>
 800c5c6:	f7ff fe4b 	bl	800c260 <__cxa_get_globals_fast>
 800c5ca:	f8d0 8000 	ldr.w	r8, [r0]
 800c5ce:	f898 3027 	ldrb.w	r3, [r8, #39]	; 0x27
 800c5d2:	2b01      	cmp	r3, #1
 800c5d4:	d038      	beq.n	800c648 <__cxa_call_unexpected+0xc0>
 800c5d6:	f108 0378 	add.w	r3, r8, #120	; 0x78
 800c5da:	f10d 0a10 	add.w	sl, sp, #16
 800c5de:	f04f 0900 	mov.w	r9, #0
 800c5e2:	f84a 3d08 	str.w	r3, [sl, #-8]!
 800c5e6:	f027 0303 	bic.w	r3, r7, #3
 800c5ea:	9300      	str	r3, [sp, #0]
 800c5ec:	46cb      	mov	fp, r9
 800c5ee:	45b3      	cmp	fp, r6
 800c5f0:	da1e      	bge.n	800c630 <__cxa_call_unexpected+0xa8>
 800c5f2:	6827      	ldr	r7, [r4, #0]
 800c5f4:	b107      	cbz	r7, 800c5f8 <__cxa_call_unexpected+0x70>
 800c5f6:	4427      	add	r7, r4
 800c5f8:	4653      	mov	r3, sl
 800c5fa:	2200      	movs	r2, #0
 800c5fc:	4639      	mov	r1, r7
 800c5fe:	f108 0020 	add.w	r0, r8, #32
 800c602:	f7ff fa33 	bl	800ba6c <__cxa_type_match>
 800c606:	bb28      	cbnz	r0, 800c654 <__cxa_call_unexpected+0xcc>
 800c608:	683b      	ldr	r3, [r7, #0]
 800c60a:	4916      	ldr	r1, [pc, #88]	; (800c664 <__cxa_call_unexpected+0xdc>)
 800c60c:	691b      	ldr	r3, [r3, #16]
 800c60e:	9301      	str	r3, [sp, #4]
 800c610:	aa04      	add	r2, sp, #16
 800c612:	2301      	movs	r3, #1
 800c614:	f842 0d04 	str.w	r0, [r2, #-4]!
 800c618:	4638      	mov	r0, r7
 800c61a:	9f01      	ldr	r7, [sp, #4]
 800c61c:	47b8      	blx	r7
 800c61e:	9b00      	ldr	r3, [sp, #0]
 800c620:	2800      	cmp	r0, #0
 800c622:	bf18      	it	ne
 800c624:	f04f 0901 	movne.w	r9, #1
 800c628:	f10b 0b01 	add.w	fp, fp, #1
 800c62c:	441c      	add	r4, r3
 800c62e:	e7de      	b.n	800c5ee <__cxa_call_unexpected+0x66>
 800c630:	f1b9 0f00 	cmp.w	r9, #0
 800c634:	d00b      	beq.n	800c64e <__cxa_call_unexpected+0xc6>
 800c636:	2004      	movs	r0, #4
 800c638:	f000 f886 	bl	800c748 <__cxa_allocate_exception>
 800c63c:	4b0a      	ldr	r3, [pc, #40]	; (800c668 <__cxa_call_unexpected+0xe0>)
 800c63e:	6003      	str	r3, [r0, #0]
 800c640:	4a0a      	ldr	r2, [pc, #40]	; (800c66c <__cxa_call_unexpected+0xe4>)
 800c642:	4908      	ldr	r1, [pc, #32]	; (800c664 <__cxa_call_unexpected+0xdc>)
 800c644:	f000 f8de 	bl	800c804 <__cxa_throw>
 800c648:	f8d8 3000 	ldr.w	r3, [r8]
 800c64c:	e7c5      	b.n	800c5da <__cxa_call_unexpected+0x52>
 800c64e:	4628      	mov	r0, r5
 800c650:	f7ff fe9a 	bl	800c388 <_ZN10__cxxabiv111__terminateEPFvvE>
 800c654:	f000 f914 	bl	800c880 <__cxa_rethrow>
 800c658:	f7ff fe50 	bl	800c2fc <__cxa_end_catch>
 800c65c:	f7ff fe4e 	bl	800c2fc <__cxa_end_catch>
 800c660:	f7ff f9fe 	bl	800ba60 <__cxa_end_cleanup>
 800c664:	08010f2c 	.word	0x08010f2c
 800c668:	08010efc 	.word	0x08010efc
 800c66c:	0800c249 	.word	0x0800c249

0800c670 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>:
 800c670:	b4f0      	push	{r4, r5, r6, r7}
 800c672:	4c1b      	ldr	r4, [pc, #108]	; (800c6e0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x70>)
 800c674:	f850 7c08 	ldr.w	r7, [r0, #-8]
 800c678:	6861      	ldr	r1, [r4, #4]
 800c67a:	f1a0 0608 	sub.w	r6, r0, #8
 800c67e:	b1c9      	cbz	r1, 800c6b4 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x44>
 800c680:	19f5      	adds	r5, r6, r7
 800c682:	42a9      	cmp	r1, r5
 800c684:	d01b      	beq.n	800c6be <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x4e>
 800c686:	684a      	ldr	r2, [r1, #4]
 800c688:	b32a      	cbz	r2, 800c6d6 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x66>
 800c68a:	4295      	cmp	r5, r2
 800c68c:	d303      	bcc.n	800c696 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x26>
 800c68e:	e022      	b.n	800c6d6 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x66>
 800c690:	429d      	cmp	r5, r3
 800c692:	d205      	bcs.n	800c6a0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x30>
 800c694:	461a      	mov	r2, r3
 800c696:	6853      	ldr	r3, [r2, #4]
 800c698:	1d0c      	adds	r4, r1, #4
 800c69a:	4611      	mov	r1, r2
 800c69c:	2b00      	cmp	r3, #0
 800c69e:	d1f7      	bne.n	800c690 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x20>
 800c6a0:	6811      	ldr	r1, [r2, #0]
 800c6a2:	1855      	adds	r5, r2, r1
 800c6a4:	42ae      	cmp	r6, r5
 800c6a6:	d013      	beq.n	800c6d0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x60>
 800c6a8:	f840 3c04 	str.w	r3, [r0, #-4]
 800c6ac:	6823      	ldr	r3, [r4, #0]
 800c6ae:	605e      	str	r6, [r3, #4]
 800c6b0:	bcf0      	pop	{r4, r5, r6, r7}
 800c6b2:	4770      	bx	lr
 800c6b4:	f840 1c04 	str.w	r1, [r0, #-4]
 800c6b8:	6066      	str	r6, [r4, #4]
 800c6ba:	bcf0      	pop	{r4, r5, r6, r7}
 800c6bc:	4770      	bx	lr
 800c6be:	680b      	ldr	r3, [r1, #0]
 800c6c0:	684a      	ldr	r2, [r1, #4]
 800c6c2:	f840 2c04 	str.w	r2, [r0, #-4]
 800c6c6:	441f      	add	r7, r3
 800c6c8:	f840 7c08 	str.w	r7, [r0, #-8]
 800c6cc:	6066      	str	r6, [r4, #4]
 800c6ce:	e7ef      	b.n	800c6b0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x40>
 800c6d0:	4439      	add	r1, r7
 800c6d2:	6011      	str	r1, [r2, #0]
 800c6d4:	e7ec      	b.n	800c6b0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x40>
 800c6d6:	4613      	mov	r3, r2
 800c6d8:	3404      	adds	r4, #4
 800c6da:	460a      	mov	r2, r1
 800c6dc:	e7e0      	b.n	800c6a0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x30>
 800c6de:	bf00      	nop
 800c6e0:	20000570 	.word	0x20000570

0800c6e4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>:
 800c6e4:	b430      	push	{r4, r5}
 800c6e6:	4c17      	ldr	r4, [pc, #92]	; (800c744 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x60>)
 800c6e8:	f100 0308 	add.w	r3, r0, #8
 800c6ec:	2b07      	cmp	r3, #7
 800c6ee:	6863      	ldr	r3, [r4, #4]
 800c6f0:	bf86      	itte	hi
 800c6f2:	f100 010f 	addhi.w	r1, r0, #15
 800c6f6:	f021 0107 	bichi.w	r1, r1, #7
 800c6fa:	2108      	movls	r1, #8
 800c6fc:	b1eb      	cbz	r3, 800c73a <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x56>
 800c6fe:	681a      	ldr	r2, [r3, #0]
 800c700:	4291      	cmp	r1, r2
 800c702:	d804      	bhi.n	800c70e <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x2a>
 800c704:	e01b      	b.n	800c73e <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x5a>
 800c706:	6802      	ldr	r2, [r0, #0]
 800c708:	428a      	cmp	r2, r1
 800c70a:	d205      	bcs.n	800c718 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x34>
 800c70c:	4603      	mov	r3, r0
 800c70e:	6858      	ldr	r0, [r3, #4]
 800c710:	2800      	cmp	r0, #0
 800c712:	d1f8      	bne.n	800c706 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x22>
 800c714:	bc30      	pop	{r4, r5}
 800c716:	4770      	bx	lr
 800c718:	3304      	adds	r3, #4
 800c71a:	1a52      	subs	r2, r2, r1
 800c71c:	2a07      	cmp	r2, #7
 800c71e:	d909      	bls.n	800c734 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x50>
 800c720:	1844      	adds	r4, r0, r1
 800c722:	6845      	ldr	r5, [r0, #4]
 800c724:	6065      	str	r5, [r4, #4]
 800c726:	5042      	str	r2, [r0, r1]
 800c728:	6818      	ldr	r0, [r3, #0]
 800c72a:	6001      	str	r1, [r0, #0]
 800c72c:	601c      	str	r4, [r3, #0]
 800c72e:	3008      	adds	r0, #8
 800c730:	bc30      	pop	{r4, r5}
 800c732:	4770      	bx	lr
 800c734:	6842      	ldr	r2, [r0, #4]
 800c736:	601a      	str	r2, [r3, #0]
 800c738:	e7f9      	b.n	800c72e <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x4a>
 800c73a:	4618      	mov	r0, r3
 800c73c:	e7ea      	b.n	800c714 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x30>
 800c73e:	4618      	mov	r0, r3
 800c740:	1d23      	adds	r3, r4, #4
 800c742:	e7ea      	b.n	800c71a <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x36>
 800c744:	20000570 	.word	0x20000570

0800c748 <__cxa_allocate_exception>:
 800c748:	b538      	push	{r3, r4, r5, lr}
 800c74a:	f100 0580 	add.w	r5, r0, #128	; 0x80
 800c74e:	4628      	mov	r0, r5
 800c750:	f000 fc34 	bl	800cfbc <malloc>
 800c754:	4604      	mov	r4, r0
 800c756:	b138      	cbz	r0, 800c768 <__cxa_allocate_exception+0x20>
 800c758:	2280      	movs	r2, #128	; 0x80
 800c75a:	2100      	movs	r1, #0
 800c75c:	4620      	mov	r0, r4
 800c75e:	f000 fe92 	bl	800d486 <memset>
 800c762:	f104 0080 	add.w	r0, r4, #128	; 0x80
 800c766:	bd38      	pop	{r3, r4, r5, pc}
 800c768:	4628      	mov	r0, r5
 800c76a:	f7ff ffbb 	bl	800c6e4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>
 800c76e:	4604      	mov	r4, r0
 800c770:	2800      	cmp	r0, #0
 800c772:	d1f1      	bne.n	800c758 <__cxa_allocate_exception+0x10>
 800c774:	f7ff fe1c 	bl	800c3b0 <_ZSt9terminatev>

0800c778 <__cxa_free_exception>:
 800c778:	4a06      	ldr	r2, [pc, #24]	; (800c794 <__cxa_free_exception+0x1c>)
 800c77a:	6893      	ldr	r3, [r2, #8]
 800c77c:	3880      	subs	r0, #128	; 0x80
 800c77e:	4298      	cmp	r0, r3
 800c780:	d905      	bls.n	800c78e <__cxa_free_exception+0x16>
 800c782:	68d2      	ldr	r2, [r2, #12]
 800c784:	4413      	add	r3, r2
 800c786:	4298      	cmp	r0, r3
 800c788:	d201      	bcs.n	800c78e <__cxa_free_exception+0x16>
 800c78a:	f7ff bf71 	b.w	800c670 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>
 800c78e:	f000 bc1d 	b.w	800cfcc <free>
 800c792:	bf00      	nop
 800c794:	20000570 	.word	0x20000570

0800c798 <_GLOBAL__sub_I___cxa_allocate_exception>:
 800c798:	b538      	push	{r3, r4, r5, lr}
 800c79a:	4c08      	ldr	r4, [pc, #32]	; (800c7bc <_GLOBAL__sub_I___cxa_allocate_exception+0x24>)
 800c79c:	f44f 651e 	mov.w	r5, #2528	; 0x9e0
 800c7a0:	4628      	mov	r0, r5
 800c7a2:	60e5      	str	r5, [r4, #12]
 800c7a4:	f000 fc0a 	bl	800cfbc <malloc>
 800c7a8:	60a0      	str	r0, [r4, #8]
 800c7aa:	b120      	cbz	r0, 800c7b6 <_GLOBAL__sub_I___cxa_allocate_exception+0x1e>
 800c7ac:	2300      	movs	r3, #0
 800c7ae:	6060      	str	r0, [r4, #4]
 800c7b0:	6005      	str	r5, [r0, #0]
 800c7b2:	6043      	str	r3, [r0, #4]
 800c7b4:	bd38      	pop	{r3, r4, r5, pc}
 800c7b6:	60e0      	str	r0, [r4, #12]
 800c7b8:	6060      	str	r0, [r4, #4]
 800c7ba:	bd38      	pop	{r3, r4, r5, pc}
 800c7bc:	20000570 	.word	0x20000570

0800c7c0 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block>:
 800c7c0:	2801      	cmp	r0, #1
 800c7c2:	b510      	push	{r4, lr}
 800c7c4:	d81a      	bhi.n	800c7fc <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x3c>
 800c7c6:	f3bf 8f5f 	dmb	sy
 800c7ca:	f1a1 0328 	sub.w	r3, r1, #40	; 0x28
 800c7ce:	e853 2f00 	ldrex	r2, [r3]
 800c7d2:	3a01      	subs	r2, #1
 800c7d4:	e843 2000 	strex	r0, r2, [r3]
 800c7d8:	2800      	cmp	r0, #0
 800c7da:	d1f8      	bne.n	800c7ce <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0xe>
 800c7dc:	f3bf 8f5f 	dmb	sy
 800c7e0:	b95a      	cbnz	r2, 800c7fa <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x3a>
 800c7e2:	f851 3c1c 	ldr.w	r3, [r1, #-28]
 800c7e6:	f101 0458 	add.w	r4, r1, #88	; 0x58
 800c7ea:	b10b      	cbz	r3, 800c7f0 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x30>
 800c7ec:	4620      	mov	r0, r4
 800c7ee:	4798      	blx	r3
 800c7f0:	4620      	mov	r0, r4
 800c7f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c7f6:	f7ff bfbf 	b.w	800c778 <__cxa_free_exception>
 800c7fa:	bd10      	pop	{r4, pc}
 800c7fc:	f851 0c14 	ldr.w	r0, [r1, #-20]
 800c800:	f7ff fdc2 	bl	800c388 <_ZN10__cxxabiv111__terminateEPFvvE>

0800c804 <__cxa_throw>:
 800c804:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c806:	4604      	mov	r4, r0
 800c808:	460f      	mov	r7, r1
 800c80a:	4616      	mov	r6, r2
 800c80c:	f7ff fd2c 	bl	800c268 <__cxa_get_globals>
 800c810:	6843      	ldr	r3, [r0, #4]
 800c812:	2501      	movs	r5, #1
 800c814:	442b      	add	r3, r5
 800c816:	6043      	str	r3, [r0, #4]
 800c818:	f844 7c78 	str.w	r7, [r4, #-120]
 800c81c:	f844 6c74 	str.w	r6, [r4, #-116]
 800c820:	f844 5c80 	str.w	r5, [r4, #-128]
 800c824:	f7ff fde4 	bl	800c3f0 <_ZSt14get_unexpectedv>
 800c828:	f844 0c70 	str.w	r0, [r4, #-112]
 800c82c:	f7ff fdd8 	bl	800c3e0 <_ZSt13get_terminatev>
 800c830:	2347      	movs	r3, #71	; 0x47
 800c832:	2243      	movs	r2, #67	; 0x43
 800c834:	f04f 0e4e 	mov.w	lr, #78	; 0x4e
 800c838:	4910      	ldr	r1, [pc, #64]	; (800c87c <__cxa_throw+0x78>)
 800c83a:	f804 3c58 	strb.w	r3, [r4, #-88]
 800c83e:	f1a4 0558 	sub.w	r5, r4, #88	; 0x58
 800c842:	232b      	movs	r3, #43	; 0x2b
 800c844:	2755      	movs	r7, #85	; 0x55
 800c846:	2600      	movs	r6, #0
 800c848:	f844 0c6c 	str.w	r0, [r4, #-108]
 800c84c:	f804 ec57 	strb.w	lr, [r4, #-87]
 800c850:	f844 1c50 	str.w	r1, [r4, #-80]
 800c854:	f804 2c55 	strb.w	r2, [r4, #-85]
 800c858:	f804 2c54 	strb.w	r2, [r4, #-84]
 800c85c:	f804 3c53 	strb.w	r3, [r4, #-83]
 800c860:	f804 3c52 	strb.w	r3, [r4, #-82]
 800c864:	f804 7c56 	strb.w	r7, [r4, #-86]
 800c868:	f804 6c51 	strb.w	r6, [r4, #-81]
 800c86c:	4628      	mov	r0, r5
 800c86e:	f7fd f9cd 	bl	8009c0c <_Unwind_RaiseException>
 800c872:	4628      	mov	r0, r5
 800c874:	f7ff fcfc 	bl	800c270 <__cxa_begin_catch>
 800c878:	f7ff fd9a 	bl	800c3b0 <_ZSt9terminatev>
 800c87c:	0800c7c1 	.word	0x0800c7c1

0800c880 <__cxa_rethrow>:
 800c880:	b510      	push	{r4, lr}
 800c882:	f7ff fcf1 	bl	800c268 <__cxa_get_globals>
 800c886:	6842      	ldr	r2, [r0, #4]
 800c888:	6803      	ldr	r3, [r0, #0]
 800c88a:	3201      	adds	r2, #1
 800c88c:	6042      	str	r2, [r0, #4]
 800c88e:	b16b      	cbz	r3, 800c8ac <__cxa_rethrow+0x2c>
 800c890:	f893 2020 	ldrb.w	r2, [r3, #32]
 800c894:	2a47      	cmp	r2, #71	; 0x47
 800c896:	d00b      	beq.n	800c8b0 <__cxa_rethrow+0x30>
 800c898:	2200      	movs	r2, #0
 800c89a:	6002      	str	r2, [r0, #0]
 800c89c:	f103 0420 	add.w	r4, r3, #32
 800c8a0:	4620      	mov	r0, r4
 800c8a2:	f7fd f9d7 	bl	8009c54 <_Unwind_Resume_or_Rethrow>
 800c8a6:	4620      	mov	r0, r4
 800c8a8:	f7ff fce2 	bl	800c270 <__cxa_begin_catch>
 800c8ac:	f7ff fd80 	bl	800c3b0 <_ZSt9terminatev>
 800c8b0:	f893 2021 	ldrb.w	r2, [r3, #33]	; 0x21
 800c8b4:	2a4e      	cmp	r2, #78	; 0x4e
 800c8b6:	d1ef      	bne.n	800c898 <__cxa_rethrow+0x18>
 800c8b8:	f893 2022 	ldrb.w	r2, [r3, #34]	; 0x22
 800c8bc:	2a55      	cmp	r2, #85	; 0x55
 800c8be:	d1eb      	bne.n	800c898 <__cxa_rethrow+0x18>
 800c8c0:	f893 2023 	ldrb.w	r2, [r3, #35]	; 0x23
 800c8c4:	2a43      	cmp	r2, #67	; 0x43
 800c8c6:	d1e7      	bne.n	800c898 <__cxa_rethrow+0x18>
 800c8c8:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
 800c8cc:	2a43      	cmp	r2, #67	; 0x43
 800c8ce:	d1e3      	bne.n	800c898 <__cxa_rethrow+0x18>
 800c8d0:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
 800c8d4:	2a2b      	cmp	r2, #43	; 0x2b
 800c8d6:	d1df      	bne.n	800c898 <__cxa_rethrow+0x18>
 800c8d8:	f893 2026 	ldrb.w	r2, [r3, #38]	; 0x26
 800c8dc:	2a2b      	cmp	r2, #43	; 0x2b
 800c8de:	d1db      	bne.n	800c898 <__cxa_rethrow+0x18>
 800c8e0:	f893 2027 	ldrb.w	r2, [r3, #39]	; 0x27
 800c8e4:	2a01      	cmp	r2, #1
 800c8e6:	d8d7      	bhi.n	800c898 <__cxa_rethrow+0x18>
 800c8e8:	695a      	ldr	r2, [r3, #20]
 800c8ea:	4252      	negs	r2, r2
 800c8ec:	615a      	str	r2, [r3, #20]
 800c8ee:	e7d5      	b.n	800c89c <__cxa_rethrow+0x1c>

0800c8f0 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv>:
 800c8f0:	b570      	push	{r4, r5, r6, lr}
 800c8f2:	4b3d      	ldr	r3, [pc, #244]	; (800c9e8 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf8>)
 800c8f4:	781a      	ldrb	r2, [r3, #0]
 800c8f6:	b082      	sub	sp, #8
 800c8f8:	2a00      	cmp	r2, #0
 800c8fa:	d136      	bne.n	800c96a <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x7a>
 800c8fc:	2401      	movs	r4, #1
 800c8fe:	701c      	strb	r4, [r3, #0]
 800c900:	f000 f916 	bl	800cb30 <__cxa_current_exception_type>
 800c904:	2800      	cmp	r0, #0
 800c906:	d05c      	beq.n	800c9c2 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xd2>
 800c908:	6840      	ldr	r0, [r0, #4]
 800c90a:	4d38      	ldr	r5, [pc, #224]	; (800c9ec <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xfc>)
 800c90c:	7803      	ldrb	r3, [r0, #0]
 800c90e:	2b2a      	cmp	r3, #42	; 0x2a
 800c910:	ab02      	add	r3, sp, #8
 800c912:	f04f 32ff 	mov.w	r2, #4294967295
 800c916:	bf0c      	ite	eq
 800c918:	1904      	addeq	r4, r0, r4
 800c91a:	4604      	movne	r4, r0
 800c91c:	f843 2d04 	str.w	r2, [r3, #-4]!
 800c920:	2200      	movs	r2, #0
 800c922:	4611      	mov	r1, r2
 800c924:	4620      	mov	r0, r4
 800c926:	f7fb fd17 	bl	8008358 <__cxa_demangle>
 800c92a:	682b      	ldr	r3, [r5, #0]
 800c92c:	4606      	mov	r6, r0
 800c92e:	68db      	ldr	r3, [r3, #12]
 800c930:	482f      	ldr	r0, [pc, #188]	; (800c9f0 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x100>)
 800c932:	2230      	movs	r2, #48	; 0x30
 800c934:	2101      	movs	r1, #1
 800c936:	f000 fb0d 	bl	800cf54 <fwrite>
 800c93a:	9b01      	ldr	r3, [sp, #4]
 800c93c:	b17b      	cbz	r3, 800c95e <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x6e>
 800c93e:	682b      	ldr	r3, [r5, #0]
 800c940:	4620      	mov	r0, r4
 800c942:	68d9      	ldr	r1, [r3, #12]
 800c944:	f000 f970 	bl	800cc28 <fputs>
 800c948:	682b      	ldr	r3, [r5, #0]
 800c94a:	482a      	ldr	r0, [pc, #168]	; (800c9f4 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x104>)
 800c94c:	68db      	ldr	r3, [r3, #12]
 800c94e:	2202      	movs	r2, #2
 800c950:	2101      	movs	r1, #1
 800c952:	f000 faff 	bl	800cf54 <fwrite>
 800c956:	9b01      	ldr	r3, [sp, #4]
 800c958:	b18b      	cbz	r3, 800c97e <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x8e>
 800c95a:	f7ff ff91 	bl	800c880 <__cxa_rethrow>
 800c95e:	682b      	ldr	r3, [r5, #0]
 800c960:	4630      	mov	r0, r6
 800c962:	68d9      	ldr	r1, [r3, #12]
 800c964:	f000 f960 	bl	800cc28 <fputs>
 800c968:	e7ee      	b.n	800c948 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x58>
 800c96a:	4b20      	ldr	r3, [pc, #128]	; (800c9ec <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xfc>)
 800c96c:	4822      	ldr	r0, [pc, #136]	; (800c9f8 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x108>)
 800c96e:	681b      	ldr	r3, [r3, #0]
 800c970:	221d      	movs	r2, #29
 800c972:	68db      	ldr	r3, [r3, #12]
 800c974:	2101      	movs	r1, #1
 800c976:	f000 faed 	bl	800cf54 <fwrite>
 800c97a:	f000 f8e7 	bl	800cb4c <abort>
 800c97e:	4630      	mov	r0, r6
 800c980:	f000 fb24 	bl	800cfcc <free>
 800c984:	e7e9      	b.n	800c95a <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x6a>
 800c986:	2901      	cmp	r1, #1
 800c988:	460c      	mov	r4, r1
 800c98a:	d127      	bne.n	800c9dc <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xec>
 800c98c:	f7ff fc70 	bl	800c270 <__cxa_begin_catch>
 800c990:	6803      	ldr	r3, [r0, #0]
 800c992:	689b      	ldr	r3, [r3, #8]
 800c994:	4798      	blx	r3
 800c996:	682b      	ldr	r3, [r5, #0]
 800c998:	4606      	mov	r6, r0
 800c99a:	68db      	ldr	r3, [r3, #12]
 800c99c:	4817      	ldr	r0, [pc, #92]	; (800c9fc <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x10c>)
 800c99e:	4621      	mov	r1, r4
 800c9a0:	220b      	movs	r2, #11
 800c9a2:	f000 fad7 	bl	800cf54 <fwrite>
 800c9a6:	682b      	ldr	r3, [r5, #0]
 800c9a8:	4630      	mov	r0, r6
 800c9aa:	68d9      	ldr	r1, [r3, #12]
 800c9ac:	f000 f93c 	bl	800cc28 <fputs>
 800c9b0:	682b      	ldr	r3, [r5, #0]
 800c9b2:	200a      	movs	r0, #10
 800c9b4:	68d9      	ldr	r1, [r3, #12]
 800c9b6:	f000 f8f5 	bl	800cba4 <fputc>
 800c9ba:	f7ff fc9f 	bl	800c2fc <__cxa_end_catch>
 800c9be:	f000 f8c5 	bl	800cb4c <abort>
 800c9c2:	4b0a      	ldr	r3, [pc, #40]	; (800c9ec <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xfc>)
 800c9c4:	480e      	ldr	r0, [pc, #56]	; (800ca00 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x110>)
 800c9c6:	681b      	ldr	r3, [r3, #0]
 800c9c8:	4621      	mov	r1, r4
 800c9ca:	68db      	ldr	r3, [r3, #12]
 800c9cc:	222d      	movs	r2, #45	; 0x2d
 800c9ce:	f000 fac1 	bl	800cf54 <fwrite>
 800c9d2:	e7f4      	b.n	800c9be <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xce>
 800c9d4:	f7ff fc92 	bl	800c2fc <__cxa_end_catch>
 800c9d8:	f7ff f842 	bl	800ba60 <__cxa_end_cleanup>
 800c9dc:	f7ff fc48 	bl	800c270 <__cxa_begin_catch>
 800c9e0:	f7ff fc8c 	bl	800c2fc <__cxa_end_catch>
 800c9e4:	e7eb      	b.n	800c9be <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xce>
 800c9e6:	bf00      	nop
 800c9e8:	20000580 	.word	0x20000580
 800c9ec:	200000fc 	.word	0x200000fc
 800c9f0:	08010fb8 	.word	0x08010fb8
 800c9f4:	08010fec 	.word	0x08010fec
 800c9f8:	08010f98 	.word	0x08010f98
 800c9fc:	08011020 	.word	0x08011020
 800ca00:	08010ff0 	.word	0x08010ff0

0800ca04 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
 800ca04:	b570      	push	{r4, r5, r6, lr}
 800ca06:	6803      	ldr	r3, [r0, #0]
 800ca08:	b084      	sub	sp, #16
 800ca0a:	2400      	movs	r4, #0
 800ca0c:	699e      	ldr	r6, [r3, #24]
 800ca0e:	9400      	str	r4, [sp, #0]
 800ca10:	2310      	movs	r3, #16
 800ca12:	4615      	mov	r5, r2
 800ca14:	9302      	str	r3, [sp, #8]
 800ca16:	6812      	ldr	r2, [r2, #0]
 800ca18:	f88d 4004 	strb.w	r4, [sp, #4]
 800ca1c:	466b      	mov	r3, sp
 800ca1e:	9403      	str	r4, [sp, #12]
 800ca20:	47b0      	blx	r6
 800ca22:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800ca26:	f003 0306 	and.w	r3, r3, #6
 800ca2a:	2b06      	cmp	r3, #6
 800ca2c:	bf03      	ittte	eq
 800ca2e:	9b00      	ldreq	r3, [sp, #0]
 800ca30:	602b      	streq	r3, [r5, #0]
 800ca32:	2001      	moveq	r0, #1
 800ca34:	4620      	movne	r0, r4
 800ca36:	b004      	add	sp, #16
 800ca38:	bd70      	pop	{r4, r5, r6, pc}
 800ca3a:	bf00      	nop

0800ca3c <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
 800ca3c:	9800      	ldr	r0, [sp, #0]
 800ca3e:	4290      	cmp	r0, r2
 800ca40:	bf0c      	ite	eq
 800ca42:	2006      	moveq	r0, #6
 800ca44:	2001      	movne	r0, #1
 800ca46:	4770      	bx	lr

0800ca48 <_ZN10__cxxabiv117__class_type_infoD1Ev>:
 800ca48:	b510      	push	{r4, lr}
 800ca4a:	4b03      	ldr	r3, [pc, #12]	; (800ca58 <_ZN10__cxxabiv117__class_type_infoD1Ev+0x10>)
 800ca4c:	6003      	str	r3, [r0, #0]
 800ca4e:	4604      	mov	r4, r0
 800ca50:	f000 f854 	bl	800cafc <_ZNSt9type_infoD1Ev>
 800ca54:	4620      	mov	r0, r4
 800ca56:	bd10      	pop	{r4, pc}
 800ca58:	08011034 	.word	0x08011034

0800ca5c <_ZN10__cxxabiv117__class_type_infoD0Ev>:
 800ca5c:	b510      	push	{r4, lr}
 800ca5e:	4b05      	ldr	r3, [pc, #20]	; (800ca74 <_ZN10__cxxabiv117__class_type_infoD0Ev+0x18>)
 800ca60:	6003      	str	r3, [r0, #0]
 800ca62:	4604      	mov	r4, r0
 800ca64:	f000 f84a 	bl	800cafc <_ZNSt9type_infoD1Ev>
 800ca68:	4620      	mov	r0, r4
 800ca6a:	f7ff fd5d 	bl	800c528 <_ZdlPv>
 800ca6e:	4620      	mov	r0, r4
 800ca70:	bd10      	pop	{r4, pc}
 800ca72:	bf00      	nop
 800ca74:	08011034 	.word	0x08011034

0800ca78 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
 800ca78:	b538      	push	{r3, r4, r5, lr}
 800ca7a:	4615      	mov	r5, r2
 800ca7c:	461c      	mov	r4, r3
 800ca7e:	f000 f841 	bl	800cb04 <_ZNKSt9type_infoeqERKS_>
 800ca82:	b120      	cbz	r0, 800ca8e <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x16>
 800ca84:	2208      	movs	r2, #8
 800ca86:	2306      	movs	r3, #6
 800ca88:	6025      	str	r5, [r4, #0]
 800ca8a:	60e2      	str	r2, [r4, #12]
 800ca8c:	7123      	strb	r3, [r4, #4]
 800ca8e:	bd38      	pop	{r3, r4, r5, pc}

0800ca90 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
 800ca90:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ca92:	b083      	sub	sp, #12
 800ca94:	4617      	mov	r7, r2
 800ca96:	9d08      	ldr	r5, [sp, #32]
 800ca98:	990a      	ldr	r1, [sp, #40]	; 0x28
 800ca9a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800ca9c:	428d      	cmp	r5, r1
 800ca9e:	4606      	mov	r6, r0
 800caa0:	d00b      	beq.n	800caba <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x2a>
 800caa2:	4619      	mov	r1, r3
 800caa4:	4630      	mov	r0, r6
 800caa6:	f000 f82d 	bl	800cb04 <_ZNKSt9type_infoeqERKS_>
 800caaa:	b118      	cbz	r0, 800cab4 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x24>
 800caac:	2301      	movs	r3, #1
 800caae:	6025      	str	r5, [r4, #0]
 800cab0:	7127      	strb	r7, [r4, #4]
 800cab2:	71a3      	strb	r3, [r4, #6]
 800cab4:	2000      	movs	r0, #0
 800cab6:	b003      	add	sp, #12
 800cab8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800caba:	9909      	ldr	r1, [sp, #36]	; 0x24
 800cabc:	9301      	str	r3, [sp, #4]
 800cabe:	f000 f821 	bl	800cb04 <_ZNKSt9type_infoeqERKS_>
 800cac2:	b118      	cbz	r0, 800cacc <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x3c>
 800cac4:	2000      	movs	r0, #0
 800cac6:	7167      	strb	r7, [r4, #5]
 800cac8:	b003      	add	sp, #12
 800caca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cacc:	9b01      	ldr	r3, [sp, #4]
 800cace:	e7e8      	b.n	800caa2 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x12>

0800cad0 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
 800cad0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cad4:	4617      	mov	r7, r2
 800cad6:	461c      	mov	r4, r3
 800cad8:	4606      	mov	r6, r0
 800cada:	460d      	mov	r5, r1
 800cadc:	f000 f812 	bl	800cb04 <_ZNKSt9type_infoeqERKS_>
 800cae0:	b908      	cbnz	r0, 800cae6 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x16>
 800cae2:	2c03      	cmp	r4, #3
 800cae4:	d901      	bls.n	800caea <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x1a>
 800cae6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800caea:	682b      	ldr	r3, [r5, #0]
 800caec:	463a      	mov	r2, r7
 800caee:	4631      	mov	r1, r6
 800caf0:	4628      	mov	r0, r5
 800caf2:	695b      	ldr	r3, [r3, #20]
 800caf4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800caf8:	4718      	bx	r3
 800cafa:	bf00      	nop

0800cafc <_ZNSt9type_infoD1Ev>:
 800cafc:	4770      	bx	lr
 800cafe:	bf00      	nop

0800cb00 <_ZNKSt9type_info14__is_pointer_pEv>:
 800cb00:	2000      	movs	r0, #0
 800cb02:	4770      	bx	lr

0800cb04 <_ZNKSt9type_infoeqERKS_>:
 800cb04:	4281      	cmp	r1, r0
 800cb06:	d011      	beq.n	800cb2c <_ZNKSt9type_infoeqERKS_+0x28>
 800cb08:	b508      	push	{r3, lr}
 800cb0a:	6840      	ldr	r0, [r0, #4]
 800cb0c:	7803      	ldrb	r3, [r0, #0]
 800cb0e:	2b2a      	cmp	r3, #42	; 0x2a
 800cb10:	d00a      	beq.n	800cb28 <_ZNKSt9type_infoeqERKS_+0x24>
 800cb12:	6849      	ldr	r1, [r1, #4]
 800cb14:	780b      	ldrb	r3, [r1, #0]
 800cb16:	2b2a      	cmp	r3, #42	; 0x2a
 800cb18:	bf08      	it	eq
 800cb1a:	3101      	addeq	r1, #1
 800cb1c:	f7fb fce0 	bl	80084e0 <strcmp>
 800cb20:	fab0 f080 	clz	r0, r0
 800cb24:	0940      	lsrs	r0, r0, #5
 800cb26:	bd08      	pop	{r3, pc}
 800cb28:	2000      	movs	r0, #0
 800cb2a:	bd08      	pop	{r3, pc}
 800cb2c:	2001      	movs	r0, #1
 800cb2e:	4770      	bx	lr

0800cb30 <__cxa_current_exception_type>:
 800cb30:	b508      	push	{r3, lr}
 800cb32:	f7ff fb99 	bl	800c268 <__cxa_get_globals>
 800cb36:	6800      	ldr	r0, [r0, #0]
 800cb38:	b130      	cbz	r0, 800cb48 <__cxa_current_exception_type+0x18>
 800cb3a:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800cb3e:	2b01      	cmp	r3, #1
 800cb40:	bf04      	itt	eq
 800cb42:	6800      	ldreq	r0, [r0, #0]
 800cb44:	3878      	subeq	r0, #120	; 0x78
 800cb46:	6800      	ldr	r0, [r0, #0]
 800cb48:	bd08      	pop	{r3, pc}
 800cb4a:	bf00      	nop

0800cb4c <abort>:
 800cb4c:	b508      	push	{r3, lr}
 800cb4e:	2006      	movs	r0, #6
 800cb50:	f000 fec4 	bl	800d8dc <raise>
 800cb54:	2001      	movs	r0, #1
 800cb56:	f003 fdad 	bl	80106b4 <_exit>
	...

0800cb5c <_fputc_r>:
 800cb5c:	b570      	push	{r4, r5, r6, lr}
 800cb5e:	460e      	mov	r6, r1
 800cb60:	4614      	mov	r4, r2
 800cb62:	4605      	mov	r5, r0
 800cb64:	b118      	cbz	r0, 800cb6e <_fputc_r+0x12>
 800cb66:	6983      	ldr	r3, [r0, #24]
 800cb68:	b90b      	cbnz	r3, 800cb6e <_fputc_r+0x12>
 800cb6a:	f002 fed7 	bl	800f91c <__sinit>
 800cb6e:	4b0a      	ldr	r3, [pc, #40]	; (800cb98 <_fputc_r+0x3c>)
 800cb70:	429c      	cmp	r4, r3
 800cb72:	d101      	bne.n	800cb78 <_fputc_r+0x1c>
 800cb74:	686c      	ldr	r4, [r5, #4]
 800cb76:	e008      	b.n	800cb8a <_fputc_r+0x2e>
 800cb78:	4b08      	ldr	r3, [pc, #32]	; (800cb9c <_fputc_r+0x40>)
 800cb7a:	429c      	cmp	r4, r3
 800cb7c:	d101      	bne.n	800cb82 <_fputc_r+0x26>
 800cb7e:	68ac      	ldr	r4, [r5, #8]
 800cb80:	e003      	b.n	800cb8a <_fputc_r+0x2e>
 800cb82:	4b07      	ldr	r3, [pc, #28]	; (800cba0 <_fputc_r+0x44>)
 800cb84:	429c      	cmp	r4, r3
 800cb86:	bf08      	it	eq
 800cb88:	68ec      	ldreq	r4, [r5, #12]
 800cb8a:	4622      	mov	r2, r4
 800cb8c:	4631      	mov	r1, r6
 800cb8e:	4628      	mov	r0, r5
 800cb90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cb94:	f000 bc82 	b.w	800d49c <_putc_r>
 800cb98:	08011900 	.word	0x08011900
 800cb9c:	08011920 	.word	0x08011920
 800cba0:	08011940 	.word	0x08011940

0800cba4 <fputc>:
 800cba4:	4b02      	ldr	r3, [pc, #8]	; (800cbb0 <fputc+0xc>)
 800cba6:	460a      	mov	r2, r1
 800cba8:	4601      	mov	r1, r0
 800cbaa:	6818      	ldr	r0, [r3, #0]
 800cbac:	f7ff bfd6 	b.w	800cb5c <_fputc_r>
 800cbb0:	200000fc 	.word	0x200000fc

0800cbb4 <_fputs_r>:
 800cbb4:	b530      	push	{r4, r5, lr}
 800cbb6:	b087      	sub	sp, #28
 800cbb8:	4605      	mov	r5, r0
 800cbba:	4608      	mov	r0, r1
 800cbbc:	4614      	mov	r4, r2
 800cbbe:	9101      	str	r1, [sp, #4]
 800cbc0:	f7fb fc98 	bl	80084f4 <strlen>
 800cbc4:	ab01      	add	r3, sp, #4
 800cbc6:	9303      	str	r3, [sp, #12]
 800cbc8:	2301      	movs	r3, #1
 800cbca:	9005      	str	r0, [sp, #20]
 800cbcc:	9002      	str	r0, [sp, #8]
 800cbce:	9304      	str	r3, [sp, #16]
 800cbd0:	b125      	cbz	r5, 800cbdc <_fputs_r+0x28>
 800cbd2:	69ab      	ldr	r3, [r5, #24]
 800cbd4:	b913      	cbnz	r3, 800cbdc <_fputs_r+0x28>
 800cbd6:	4628      	mov	r0, r5
 800cbd8:	f002 fea0 	bl	800f91c <__sinit>
 800cbdc:	4b0f      	ldr	r3, [pc, #60]	; (800cc1c <_fputs_r+0x68>)
 800cbde:	429c      	cmp	r4, r3
 800cbe0:	d101      	bne.n	800cbe6 <_fputs_r+0x32>
 800cbe2:	686c      	ldr	r4, [r5, #4]
 800cbe4:	e008      	b.n	800cbf8 <_fputs_r+0x44>
 800cbe6:	4b0e      	ldr	r3, [pc, #56]	; (800cc20 <_fputs_r+0x6c>)
 800cbe8:	429c      	cmp	r4, r3
 800cbea:	d101      	bne.n	800cbf0 <_fputs_r+0x3c>
 800cbec:	68ac      	ldr	r4, [r5, #8]
 800cbee:	e003      	b.n	800cbf8 <_fputs_r+0x44>
 800cbf0:	4b0c      	ldr	r3, [pc, #48]	; (800cc24 <_fputs_r+0x70>)
 800cbf2:	429c      	cmp	r4, r3
 800cbf4:	bf08      	it	eq
 800cbf6:	68ec      	ldreq	r4, [r5, #12]
 800cbf8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800cbfc:	049a      	lsls	r2, r3, #18
 800cbfe:	d406      	bmi.n	800cc0e <_fputs_r+0x5a>
 800cc00:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800cc02:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800cc06:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800cc0a:	81a3      	strh	r3, [r4, #12]
 800cc0c:	6662      	str	r2, [r4, #100]	; 0x64
 800cc0e:	aa03      	add	r2, sp, #12
 800cc10:	4621      	mov	r1, r4
 800cc12:	4628      	mov	r0, r5
 800cc14:	f000 f810 	bl	800cc38 <__sfvwrite_r>
 800cc18:	b007      	add	sp, #28
 800cc1a:	bd30      	pop	{r4, r5, pc}
 800cc1c:	08011900 	.word	0x08011900
 800cc20:	08011920 	.word	0x08011920
 800cc24:	08011940 	.word	0x08011940

0800cc28 <fputs>:
 800cc28:	4b02      	ldr	r3, [pc, #8]	; (800cc34 <fputs+0xc>)
 800cc2a:	460a      	mov	r2, r1
 800cc2c:	4601      	mov	r1, r0
 800cc2e:	6818      	ldr	r0, [r3, #0]
 800cc30:	f7ff bfc0 	b.w	800cbb4 <_fputs_r>
 800cc34:	200000fc 	.word	0x200000fc

0800cc38 <__sfvwrite_r>:
 800cc38:	6893      	ldr	r3, [r2, #8]
 800cc3a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cc3e:	4606      	mov	r6, r0
 800cc40:	460c      	mov	r4, r1
 800cc42:	4690      	mov	r8, r2
 800cc44:	b90b      	cbnz	r3, 800cc4a <__sfvwrite_r+0x12>
 800cc46:	2000      	movs	r0, #0
 800cc48:	e13b      	b.n	800cec2 <__sfvwrite_r+0x28a>
 800cc4a:	898b      	ldrh	r3, [r1, #12]
 800cc4c:	0718      	lsls	r0, r3, #28
 800cc4e:	d50f      	bpl.n	800cc70 <__sfvwrite_r+0x38>
 800cc50:	690b      	ldr	r3, [r1, #16]
 800cc52:	b16b      	cbz	r3, 800cc70 <__sfvwrite_r+0x38>
 800cc54:	f8b4 900c 	ldrh.w	r9, [r4, #12]
 800cc58:	f8d8 b000 	ldr.w	fp, [r8]
 800cc5c:	f009 0502 	and.w	r5, r9, #2
 800cc60:	b2ad      	uxth	r5, r5
 800cc62:	b355      	cbz	r5, 800ccba <__sfvwrite_r+0x82>
 800cc64:	f04f 0900 	mov.w	r9, #0
 800cc68:	464f      	mov	r7, r9
 800cc6a:	f8df a25c 	ldr.w	sl, [pc, #604]	; 800cec8 <__sfvwrite_r+0x290>
 800cc6e:	e01b      	b.n	800cca8 <__sfvwrite_r+0x70>
 800cc70:	4621      	mov	r1, r4
 800cc72:	4630      	mov	r0, r6
 800cc74:	f001 feba 	bl	800e9ec <__swsetup_r>
 800cc78:	2800      	cmp	r0, #0
 800cc7a:	d0eb      	beq.n	800cc54 <__sfvwrite_r+0x1c>
 800cc7c:	e11f      	b.n	800cebe <__sfvwrite_r+0x286>
 800cc7e:	4557      	cmp	r7, sl
 800cc80:	463b      	mov	r3, r7
 800cc82:	464a      	mov	r2, r9
 800cc84:	bf28      	it	cs
 800cc86:	4653      	movcs	r3, sl
 800cc88:	6a21      	ldr	r1, [r4, #32]
 800cc8a:	6aa5      	ldr	r5, [r4, #40]	; 0x28
 800cc8c:	4630      	mov	r0, r6
 800cc8e:	47a8      	blx	r5
 800cc90:	2800      	cmp	r0, #0
 800cc92:	f340 8110 	ble.w	800ceb6 <__sfvwrite_r+0x27e>
 800cc96:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800cc9a:	4481      	add	r9, r0
 800cc9c:	1a3f      	subs	r7, r7, r0
 800cc9e:	1a18      	subs	r0, r3, r0
 800cca0:	f8c8 0008 	str.w	r0, [r8, #8]
 800cca4:	2800      	cmp	r0, #0
 800cca6:	d0ce      	beq.n	800cc46 <__sfvwrite_r+0xe>
 800cca8:	2f00      	cmp	r7, #0
 800ccaa:	d1e8      	bne.n	800cc7e <__sfvwrite_r+0x46>
 800ccac:	f8db 9000 	ldr.w	r9, [fp]
 800ccb0:	f8db 7004 	ldr.w	r7, [fp, #4]
 800ccb4:	f10b 0b08 	add.w	fp, fp, #8
 800ccb8:	e7f6      	b.n	800cca8 <__sfvwrite_r+0x70>
 800ccba:	f019 0901 	ands.w	r9, r9, #1
 800ccbe:	d003      	beq.n	800ccc8 <__sfvwrite_r+0x90>
 800ccc0:	9500      	str	r5, [sp, #0]
 800ccc2:	46a9      	mov	r9, r5
 800ccc4:	46aa      	mov	sl, r5
 800ccc6:	e0bd      	b.n	800ce44 <__sfvwrite_r+0x20c>
 800ccc8:	464f      	mov	r7, r9
 800ccca:	b937      	cbnz	r7, 800ccda <__sfvwrite_r+0xa2>
 800cccc:	f8db 9000 	ldr.w	r9, [fp]
 800ccd0:	f8db 7004 	ldr.w	r7, [fp, #4]
 800ccd4:	f10b 0b08 	add.w	fp, fp, #8
 800ccd8:	e7f7      	b.n	800ccca <__sfvwrite_r+0x92>
 800ccda:	89a2      	ldrh	r2, [r4, #12]
 800ccdc:	68a5      	ldr	r5, [r4, #8]
 800ccde:	0591      	lsls	r1, r2, #22
 800cce0:	d552      	bpl.n	800cd88 <__sfvwrite_r+0x150>
 800cce2:	42af      	cmp	r7, r5
 800cce4:	d342      	bcc.n	800cd6c <__sfvwrite_r+0x134>
 800cce6:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800ccea:	d03d      	beq.n	800cd68 <__sfvwrite_r+0x130>
 800ccec:	6921      	ldr	r1, [r4, #16]
 800ccee:	6823      	ldr	r3, [r4, #0]
 800ccf0:	1a5b      	subs	r3, r3, r1
 800ccf2:	9300      	str	r3, [sp, #0]
 800ccf4:	6963      	ldr	r3, [r4, #20]
 800ccf6:	2002      	movs	r0, #2
 800ccf8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800ccfc:	fb93 faf0 	sdiv	sl, r3, r0
 800cd00:	9b00      	ldr	r3, [sp, #0]
 800cd02:	3301      	adds	r3, #1
 800cd04:	443b      	add	r3, r7
 800cd06:	459a      	cmp	sl, r3
 800cd08:	bf38      	it	cc
 800cd0a:	469a      	movcc	sl, r3
 800cd0c:	0553      	lsls	r3, r2, #21
 800cd0e:	d510      	bpl.n	800cd32 <__sfvwrite_r+0xfa>
 800cd10:	4651      	mov	r1, sl
 800cd12:	4630      	mov	r0, r6
 800cd14:	f000 f962 	bl	800cfdc <_malloc_r>
 800cd18:	4605      	mov	r5, r0
 800cd1a:	b1c0      	cbz	r0, 800cd4e <__sfvwrite_r+0x116>
 800cd1c:	9a00      	ldr	r2, [sp, #0]
 800cd1e:	6921      	ldr	r1, [r4, #16]
 800cd20:	f000 fb8b 	bl	800d43a <memcpy>
 800cd24:	89a3      	ldrh	r3, [r4, #12]
 800cd26:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800cd2a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800cd2e:	81a3      	strh	r3, [r4, #12]
 800cd30:	e010      	b.n	800cd54 <__sfvwrite_r+0x11c>
 800cd32:	4652      	mov	r2, sl
 800cd34:	4630      	mov	r0, r6
 800cd36:	f000 fbef 	bl	800d518 <_realloc_r>
 800cd3a:	4605      	mov	r5, r0
 800cd3c:	b950      	cbnz	r0, 800cd54 <__sfvwrite_r+0x11c>
 800cd3e:	6921      	ldr	r1, [r4, #16]
 800cd40:	4630      	mov	r0, r6
 800cd42:	f002 feb3 	bl	800faac <_free_r>
 800cd46:	89a3      	ldrh	r3, [r4, #12]
 800cd48:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800cd4c:	81a3      	strh	r3, [r4, #12]
 800cd4e:	230c      	movs	r3, #12
 800cd50:	6033      	str	r3, [r6, #0]
 800cd52:	e0b0      	b.n	800ceb6 <__sfvwrite_r+0x27e>
 800cd54:	9b00      	ldr	r3, [sp, #0]
 800cd56:	6125      	str	r5, [r4, #16]
 800cd58:	441d      	add	r5, r3
 800cd5a:	ebc3 030a 	rsb	r3, r3, sl
 800cd5e:	6025      	str	r5, [r4, #0]
 800cd60:	f8c4 a014 	str.w	sl, [r4, #20]
 800cd64:	463d      	mov	r5, r7
 800cd66:	60a3      	str	r3, [r4, #8]
 800cd68:	42af      	cmp	r7, r5
 800cd6a:	d200      	bcs.n	800cd6e <__sfvwrite_r+0x136>
 800cd6c:	463d      	mov	r5, r7
 800cd6e:	462a      	mov	r2, r5
 800cd70:	4649      	mov	r1, r9
 800cd72:	6820      	ldr	r0, [r4, #0]
 800cd74:	f000 fb6c 	bl	800d450 <memmove>
 800cd78:	68a3      	ldr	r3, [r4, #8]
 800cd7a:	1b5b      	subs	r3, r3, r5
 800cd7c:	60a3      	str	r3, [r4, #8]
 800cd7e:	6823      	ldr	r3, [r4, #0]
 800cd80:	441d      	add	r5, r3
 800cd82:	6025      	str	r5, [r4, #0]
 800cd84:	463d      	mov	r5, r7
 800cd86:	e029      	b.n	800cddc <__sfvwrite_r+0x1a4>
 800cd88:	6820      	ldr	r0, [r4, #0]
 800cd8a:	6923      	ldr	r3, [r4, #16]
 800cd8c:	4298      	cmp	r0, r3
 800cd8e:	d802      	bhi.n	800cd96 <__sfvwrite_r+0x15e>
 800cd90:	6962      	ldr	r2, [r4, #20]
 800cd92:	4297      	cmp	r7, r2
 800cd94:	d213      	bcs.n	800cdbe <__sfvwrite_r+0x186>
 800cd96:	42bd      	cmp	r5, r7
 800cd98:	bf28      	it	cs
 800cd9a:	463d      	movcs	r5, r7
 800cd9c:	462a      	mov	r2, r5
 800cd9e:	4649      	mov	r1, r9
 800cda0:	f000 fb56 	bl	800d450 <memmove>
 800cda4:	68a3      	ldr	r3, [r4, #8]
 800cda6:	6822      	ldr	r2, [r4, #0]
 800cda8:	1b5b      	subs	r3, r3, r5
 800cdaa:	442a      	add	r2, r5
 800cdac:	60a3      	str	r3, [r4, #8]
 800cdae:	6022      	str	r2, [r4, #0]
 800cdb0:	b9a3      	cbnz	r3, 800cddc <__sfvwrite_r+0x1a4>
 800cdb2:	4621      	mov	r1, r4
 800cdb4:	4630      	mov	r0, r6
 800cdb6:	f002 fd47 	bl	800f848 <_fflush_r>
 800cdba:	b178      	cbz	r0, 800cddc <__sfvwrite_r+0x1a4>
 800cdbc:	e07b      	b.n	800ceb6 <__sfvwrite_r+0x27e>
 800cdbe:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800cdc2:	42bb      	cmp	r3, r7
 800cdc4:	bf28      	it	cs
 800cdc6:	463b      	movcs	r3, r7
 800cdc8:	6aa5      	ldr	r5, [r4, #40]	; 0x28
 800cdca:	fb93 f3f2 	sdiv	r3, r3, r2
 800cdce:	6a21      	ldr	r1, [r4, #32]
 800cdd0:	4353      	muls	r3, r2
 800cdd2:	4630      	mov	r0, r6
 800cdd4:	464a      	mov	r2, r9
 800cdd6:	47a8      	blx	r5
 800cdd8:	1e05      	subs	r5, r0, #0
 800cdda:	dd6c      	ble.n	800ceb6 <__sfvwrite_r+0x27e>
 800cddc:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800cde0:	44a9      	add	r9, r5
 800cde2:	1b7f      	subs	r7, r7, r5
 800cde4:	1b5d      	subs	r5, r3, r5
 800cde6:	f8c8 5008 	str.w	r5, [r8, #8]
 800cdea:	2d00      	cmp	r5, #0
 800cdec:	f47f af6d 	bne.w	800ccca <__sfvwrite_r+0x92>
 800cdf0:	e729      	b.n	800cc46 <__sfvwrite_r+0xe>
 800cdf2:	9b00      	ldr	r3, [sp, #0]
 800cdf4:	b383      	cbz	r3, 800ce58 <__sfvwrite_r+0x220>
 800cdf6:	6820      	ldr	r0, [r4, #0]
 800cdf8:	6921      	ldr	r1, [r4, #16]
 800cdfa:	6962      	ldr	r2, [r4, #20]
 800cdfc:	4555      	cmp	r5, sl
 800cdfe:	462b      	mov	r3, r5
 800ce00:	bf28      	it	cs
 800ce02:	4653      	movcs	r3, sl
 800ce04:	4288      	cmp	r0, r1
 800ce06:	d936      	bls.n	800ce76 <__sfvwrite_r+0x23e>
 800ce08:	68a7      	ldr	r7, [r4, #8]
 800ce0a:	4417      	add	r7, r2
 800ce0c:	42bb      	cmp	r3, r7
 800ce0e:	dd32      	ble.n	800ce76 <__sfvwrite_r+0x23e>
 800ce10:	4649      	mov	r1, r9
 800ce12:	463a      	mov	r2, r7
 800ce14:	f000 fb1c 	bl	800d450 <memmove>
 800ce18:	6823      	ldr	r3, [r4, #0]
 800ce1a:	443b      	add	r3, r7
 800ce1c:	6023      	str	r3, [r4, #0]
 800ce1e:	4621      	mov	r1, r4
 800ce20:	4630      	mov	r0, r6
 800ce22:	f002 fd11 	bl	800f848 <_fflush_r>
 800ce26:	2800      	cmp	r0, #0
 800ce28:	d145      	bne.n	800ceb6 <__sfvwrite_r+0x27e>
 800ce2a:	1bed      	subs	r5, r5, r7
 800ce2c:	d03c      	beq.n	800cea8 <__sfvwrite_r+0x270>
 800ce2e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800ce32:	44b9      	add	r9, r7
 800ce34:	ebc7 0a0a 	rsb	sl, r7, sl
 800ce38:	1bdf      	subs	r7, r3, r7
 800ce3a:	f8c8 7008 	str.w	r7, [r8, #8]
 800ce3e:	2f00      	cmp	r7, #0
 800ce40:	f43f af01 	beq.w	800cc46 <__sfvwrite_r+0xe>
 800ce44:	f1ba 0f00 	cmp.w	sl, #0
 800ce48:	d1d3      	bne.n	800cdf2 <__sfvwrite_r+0x1ba>
 800ce4a:	2300      	movs	r3, #0
 800ce4c:	e89b 0600 	ldmia.w	fp, {r9, sl}
 800ce50:	9300      	str	r3, [sp, #0]
 800ce52:	f10b 0b08 	add.w	fp, fp, #8
 800ce56:	e7f5      	b.n	800ce44 <__sfvwrite_r+0x20c>
 800ce58:	4652      	mov	r2, sl
 800ce5a:	210a      	movs	r1, #10
 800ce5c:	4648      	mov	r0, r9
 800ce5e:	f7fb faef 	bl	8008440 <memchr>
 800ce62:	b118      	cbz	r0, 800ce6c <__sfvwrite_r+0x234>
 800ce64:	3001      	adds	r0, #1
 800ce66:	ebc9 0500 	rsb	r5, r9, r0
 800ce6a:	e001      	b.n	800ce70 <__sfvwrite_r+0x238>
 800ce6c:	f10a 0501 	add.w	r5, sl, #1
 800ce70:	2301      	movs	r3, #1
 800ce72:	9300      	str	r3, [sp, #0]
 800ce74:	e7bf      	b.n	800cdf6 <__sfvwrite_r+0x1be>
 800ce76:	4293      	cmp	r3, r2
 800ce78:	db08      	blt.n	800ce8c <__sfvwrite_r+0x254>
 800ce7a:	6aa7      	ldr	r7, [r4, #40]	; 0x28
 800ce7c:	6a21      	ldr	r1, [r4, #32]
 800ce7e:	4613      	mov	r3, r2
 800ce80:	4630      	mov	r0, r6
 800ce82:	464a      	mov	r2, r9
 800ce84:	47b8      	blx	r7
 800ce86:	1e07      	subs	r7, r0, #0
 800ce88:	dccf      	bgt.n	800ce2a <__sfvwrite_r+0x1f2>
 800ce8a:	e014      	b.n	800ceb6 <__sfvwrite_r+0x27e>
 800ce8c:	461a      	mov	r2, r3
 800ce8e:	4649      	mov	r1, r9
 800ce90:	9301      	str	r3, [sp, #4]
 800ce92:	f000 fadd 	bl	800d450 <memmove>
 800ce96:	9b01      	ldr	r3, [sp, #4]
 800ce98:	68a2      	ldr	r2, [r4, #8]
 800ce9a:	1ad2      	subs	r2, r2, r3
 800ce9c:	60a2      	str	r2, [r4, #8]
 800ce9e:	6822      	ldr	r2, [r4, #0]
 800cea0:	441a      	add	r2, r3
 800cea2:	6022      	str	r2, [r4, #0]
 800cea4:	461f      	mov	r7, r3
 800cea6:	e7c0      	b.n	800ce2a <__sfvwrite_r+0x1f2>
 800cea8:	4621      	mov	r1, r4
 800ceaa:	4630      	mov	r0, r6
 800ceac:	f002 fccc 	bl	800f848 <_fflush_r>
 800ceb0:	b908      	cbnz	r0, 800ceb6 <__sfvwrite_r+0x27e>
 800ceb2:	9500      	str	r5, [sp, #0]
 800ceb4:	e7bb      	b.n	800ce2e <__sfvwrite_r+0x1f6>
 800ceb6:	89a3      	ldrh	r3, [r4, #12]
 800ceb8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800cebc:	81a3      	strh	r3, [r4, #12]
 800cebe:	f04f 30ff 	mov.w	r0, #4294967295
 800cec2:	b003      	add	sp, #12
 800cec4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cec8:	7ffffc00 	.word	0x7ffffc00

0800cecc <_fwrite_r>:
 800cecc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ced0:	b086      	sub	sp, #24
 800ced2:	fb02 f603 	mul.w	r6, r2, r3
 800ced6:	461d      	mov	r5, r3
 800ced8:	ab01      	add	r3, sp, #4
 800ceda:	9303      	str	r3, [sp, #12]
 800cedc:	2301      	movs	r3, #1
 800cede:	4690      	mov	r8, r2
 800cee0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800cee2:	9101      	str	r1, [sp, #4]
 800cee4:	9602      	str	r6, [sp, #8]
 800cee6:	9605      	str	r6, [sp, #20]
 800cee8:	9304      	str	r3, [sp, #16]
 800ceea:	4607      	mov	r7, r0
 800ceec:	b118      	cbz	r0, 800cef6 <_fwrite_r+0x2a>
 800ceee:	6983      	ldr	r3, [r0, #24]
 800cef0:	b90b      	cbnz	r3, 800cef6 <_fwrite_r+0x2a>
 800cef2:	f002 fd13 	bl	800f91c <__sinit>
 800cef6:	4b14      	ldr	r3, [pc, #80]	; (800cf48 <_fwrite_r+0x7c>)
 800cef8:	429c      	cmp	r4, r3
 800cefa:	d101      	bne.n	800cf00 <_fwrite_r+0x34>
 800cefc:	687c      	ldr	r4, [r7, #4]
 800cefe:	e008      	b.n	800cf12 <_fwrite_r+0x46>
 800cf00:	4b12      	ldr	r3, [pc, #72]	; (800cf4c <_fwrite_r+0x80>)
 800cf02:	429c      	cmp	r4, r3
 800cf04:	d101      	bne.n	800cf0a <_fwrite_r+0x3e>
 800cf06:	68bc      	ldr	r4, [r7, #8]
 800cf08:	e003      	b.n	800cf12 <_fwrite_r+0x46>
 800cf0a:	4b11      	ldr	r3, [pc, #68]	; (800cf50 <_fwrite_r+0x84>)
 800cf0c:	429c      	cmp	r4, r3
 800cf0e:	bf08      	it	eq
 800cf10:	68fc      	ldreq	r4, [r7, #12]
 800cf12:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800cf16:	049a      	lsls	r2, r3, #18
 800cf18:	d406      	bmi.n	800cf28 <_fwrite_r+0x5c>
 800cf1a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800cf1c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800cf20:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800cf24:	81a3      	strh	r3, [r4, #12]
 800cf26:	6662      	str	r2, [r4, #100]	; 0x64
 800cf28:	aa03      	add	r2, sp, #12
 800cf2a:	4621      	mov	r1, r4
 800cf2c:	4638      	mov	r0, r7
 800cf2e:	f7ff fe83 	bl	800cc38 <__sfvwrite_r>
 800cf32:	b120      	cbz	r0, 800cf3e <_fwrite_r+0x72>
 800cf34:	9805      	ldr	r0, [sp, #20]
 800cf36:	1a30      	subs	r0, r6, r0
 800cf38:	fbb0 f0f8 	udiv	r0, r0, r8
 800cf3c:	e000      	b.n	800cf40 <_fwrite_r+0x74>
 800cf3e:	4628      	mov	r0, r5
 800cf40:	b006      	add	sp, #24
 800cf42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cf46:	bf00      	nop
 800cf48:	08011900 	.word	0x08011900
 800cf4c:	08011920 	.word	0x08011920
 800cf50:	08011940 	.word	0x08011940

0800cf54 <fwrite>:
 800cf54:	b507      	push	{r0, r1, r2, lr}
 800cf56:	9300      	str	r3, [sp, #0]
 800cf58:	4613      	mov	r3, r2
 800cf5a:	460a      	mov	r2, r1
 800cf5c:	4601      	mov	r1, r0
 800cf5e:	4803      	ldr	r0, [pc, #12]	; (800cf6c <fwrite+0x18>)
 800cf60:	6800      	ldr	r0, [r0, #0]
 800cf62:	f7ff ffb3 	bl	800cecc <_fwrite_r>
 800cf66:	b003      	add	sp, #12
 800cf68:	f85d fb04 	ldr.w	pc, [sp], #4
 800cf6c:	200000fc 	.word	0x200000fc

0800cf70 <__libc_init_array>:
 800cf70:	b570      	push	{r4, r5, r6, lr}
 800cf72:	4b0e      	ldr	r3, [pc, #56]	; (800cfac <__libc_init_array+0x3c>)
 800cf74:	4c0e      	ldr	r4, [pc, #56]	; (800cfb0 <__libc_init_array+0x40>)
 800cf76:	1ae4      	subs	r4, r4, r3
 800cf78:	10a4      	asrs	r4, r4, #2
 800cf7a:	2500      	movs	r5, #0
 800cf7c:	461e      	mov	r6, r3
 800cf7e:	42a5      	cmp	r5, r4
 800cf80:	d004      	beq.n	800cf8c <__libc_init_array+0x1c>
 800cf82:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800cf86:	4798      	blx	r3
 800cf88:	3501      	adds	r5, #1
 800cf8a:	e7f8      	b.n	800cf7e <__libc_init_array+0xe>
 800cf8c:	f003 fb94 	bl	80106b8 <_init>
 800cf90:	4c08      	ldr	r4, [pc, #32]	; (800cfb4 <__libc_init_array+0x44>)
 800cf92:	4b09      	ldr	r3, [pc, #36]	; (800cfb8 <__libc_init_array+0x48>)
 800cf94:	1ae4      	subs	r4, r4, r3
 800cf96:	10a4      	asrs	r4, r4, #2
 800cf98:	2500      	movs	r5, #0
 800cf9a:	461e      	mov	r6, r3
 800cf9c:	42a5      	cmp	r5, r4
 800cf9e:	d004      	beq.n	800cfaa <__libc_init_array+0x3a>
 800cfa0:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800cfa4:	4798      	blx	r3
 800cfa6:	3501      	adds	r5, #1
 800cfa8:	e7f8      	b.n	800cf9c <__libc_init_array+0x2c>
 800cfaa:	bd70      	pop	{r4, r5, r6, pc}
 800cfac:	08011d60 	.word	0x08011d60
 800cfb0:	08011d60 	.word	0x08011d60
 800cfb4:	08011d68 	.word	0x08011d68
 800cfb8:	08011d60 	.word	0x08011d60

0800cfbc <malloc>:
 800cfbc:	4b02      	ldr	r3, [pc, #8]	; (800cfc8 <malloc+0xc>)
 800cfbe:	4601      	mov	r1, r0
 800cfc0:	6818      	ldr	r0, [r3, #0]
 800cfc2:	f000 b80b 	b.w	800cfdc <_malloc_r>
 800cfc6:	bf00      	nop
 800cfc8:	200000fc 	.word	0x200000fc

0800cfcc <free>:
 800cfcc:	4b02      	ldr	r3, [pc, #8]	; (800cfd8 <free+0xc>)
 800cfce:	4601      	mov	r1, r0
 800cfd0:	6818      	ldr	r0, [r3, #0]
 800cfd2:	f002 bd6b 	b.w	800faac <_free_r>
 800cfd6:	bf00      	nop
 800cfd8:	200000fc 	.word	0x200000fc

0800cfdc <_malloc_r>:
 800cfdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cfe0:	f101 040b 	add.w	r4, r1, #11
 800cfe4:	2c16      	cmp	r4, #22
 800cfe6:	b085      	sub	sp, #20
 800cfe8:	4681      	mov	r9, r0
 800cfea:	d903      	bls.n	800cff4 <_malloc_r+0x18>
 800cfec:	f034 0407 	bics.w	r4, r4, #7
 800cff0:	d501      	bpl.n	800cff6 <_malloc_r+0x1a>
 800cff2:	e002      	b.n	800cffa <_malloc_r+0x1e>
 800cff4:	2410      	movs	r4, #16
 800cff6:	428c      	cmp	r4, r1
 800cff8:	d203      	bcs.n	800d002 <_malloc_r+0x26>
 800cffa:	230c      	movs	r3, #12
 800cffc:	f8c9 3000 	str.w	r3, [r9]
 800d000:	e1ea      	b.n	800d3d8 <_malloc_r+0x3fc>
 800d002:	4648      	mov	r0, r9
 800d004:	f000 fa47 	bl	800d496 <__malloc_lock>
 800d008:	f5b4 7ffc 	cmp.w	r4, #504	; 0x1f8
 800d00c:	4d9e      	ldr	r5, [pc, #632]	; (800d288 <_malloc_r+0x2ac>)
 800d00e:	d217      	bcs.n	800d040 <_malloc_r+0x64>
 800d010:	f104 0208 	add.w	r2, r4, #8
 800d014:	442a      	add	r2, r5
 800d016:	f1a2 0108 	sub.w	r1, r2, #8
 800d01a:	6856      	ldr	r6, [r2, #4]
 800d01c:	428e      	cmp	r6, r1
 800d01e:	ea4f 03d4 	mov.w	r3, r4, lsr #3
 800d022:	d102      	bne.n	800d02a <_malloc_r+0x4e>
 800d024:	68d6      	ldr	r6, [r2, #12]
 800d026:	42b2      	cmp	r2, r6
 800d028:	d008      	beq.n	800d03c <_malloc_r+0x60>
 800d02a:	6873      	ldr	r3, [r6, #4]
 800d02c:	68f2      	ldr	r2, [r6, #12]
 800d02e:	68b1      	ldr	r1, [r6, #8]
 800d030:	f023 0303 	bic.w	r3, r3, #3
 800d034:	60ca      	str	r2, [r1, #12]
 800d036:	4433      	add	r3, r6
 800d038:	6091      	str	r1, [r2, #8]
 800d03a:	e02f      	b.n	800d09c <_malloc_r+0xc0>
 800d03c:	3302      	adds	r3, #2
 800d03e:	e03d      	b.n	800d0bc <_malloc_r+0xe0>
 800d040:	0a63      	lsrs	r3, r4, #9
 800d042:	d01a      	beq.n	800d07a <_malloc_r+0x9e>
 800d044:	2b04      	cmp	r3, #4
 800d046:	d802      	bhi.n	800d04e <_malloc_r+0x72>
 800d048:	09a3      	lsrs	r3, r4, #6
 800d04a:	3338      	adds	r3, #56	; 0x38
 800d04c:	e018      	b.n	800d080 <_malloc_r+0xa4>
 800d04e:	2b14      	cmp	r3, #20
 800d050:	d801      	bhi.n	800d056 <_malloc_r+0x7a>
 800d052:	335b      	adds	r3, #91	; 0x5b
 800d054:	e014      	b.n	800d080 <_malloc_r+0xa4>
 800d056:	2b54      	cmp	r3, #84	; 0x54
 800d058:	d802      	bhi.n	800d060 <_malloc_r+0x84>
 800d05a:	0b23      	lsrs	r3, r4, #12
 800d05c:	336e      	adds	r3, #110	; 0x6e
 800d05e:	e00f      	b.n	800d080 <_malloc_r+0xa4>
 800d060:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
 800d064:	d802      	bhi.n	800d06c <_malloc_r+0x90>
 800d066:	0be3      	lsrs	r3, r4, #15
 800d068:	3377      	adds	r3, #119	; 0x77
 800d06a:	e009      	b.n	800d080 <_malloc_r+0xa4>
 800d06c:	f240 5254 	movw	r2, #1364	; 0x554
 800d070:	4293      	cmp	r3, r2
 800d072:	d804      	bhi.n	800d07e <_malloc_r+0xa2>
 800d074:	0ca3      	lsrs	r3, r4, #18
 800d076:	337c      	adds	r3, #124	; 0x7c
 800d078:	e002      	b.n	800d080 <_malloc_r+0xa4>
 800d07a:	233f      	movs	r3, #63	; 0x3f
 800d07c:	e000      	b.n	800d080 <_malloc_r+0xa4>
 800d07e:	237e      	movs	r3, #126	; 0x7e
 800d080:	1c5a      	adds	r2, r3, #1
 800d082:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 800d086:	f1a2 0008 	sub.w	r0, r2, #8
 800d08a:	6856      	ldr	r6, [r2, #4]
 800d08c:	e00c      	b.n	800d0a8 <_malloc_r+0xcc>
 800d08e:	2900      	cmp	r1, #0
 800d090:	68f1      	ldr	r1, [r6, #12]
 800d092:	db08      	blt.n	800d0a6 <_malloc_r+0xca>
 800d094:	68b3      	ldr	r3, [r6, #8]
 800d096:	60d9      	str	r1, [r3, #12]
 800d098:	608b      	str	r3, [r1, #8]
 800d09a:	18b3      	adds	r3, r6, r2
 800d09c:	685a      	ldr	r2, [r3, #4]
 800d09e:	f042 0201 	orr.w	r2, r2, #1
 800d0a2:	605a      	str	r2, [r3, #4]
 800d0a4:	e1a3      	b.n	800d3ee <_malloc_r+0x412>
 800d0a6:	460e      	mov	r6, r1
 800d0a8:	4286      	cmp	r6, r0
 800d0aa:	d006      	beq.n	800d0ba <_malloc_r+0xde>
 800d0ac:	6872      	ldr	r2, [r6, #4]
 800d0ae:	f022 0203 	bic.w	r2, r2, #3
 800d0b2:	1b11      	subs	r1, r2, r4
 800d0b4:	290f      	cmp	r1, #15
 800d0b6:	ddea      	ble.n	800d08e <_malloc_r+0xb2>
 800d0b8:	3b01      	subs	r3, #1
 800d0ba:	3301      	adds	r3, #1
 800d0bc:	4a72      	ldr	r2, [pc, #456]	; (800d288 <_malloc_r+0x2ac>)
 800d0be:	692e      	ldr	r6, [r5, #16]
 800d0c0:	f102 0708 	add.w	r7, r2, #8
 800d0c4:	42be      	cmp	r6, r7
 800d0c6:	4639      	mov	r1, r7
 800d0c8:	d079      	beq.n	800d1be <_malloc_r+0x1e2>
 800d0ca:	6870      	ldr	r0, [r6, #4]
 800d0cc:	f020 0003 	bic.w	r0, r0, #3
 800d0d0:	ebc4 0e00 	rsb	lr, r4, r0
 800d0d4:	f1be 0f0f 	cmp.w	lr, #15
 800d0d8:	dd0d      	ble.n	800d0f6 <_malloc_r+0x11a>
 800d0da:	1933      	adds	r3, r6, r4
 800d0dc:	f044 0401 	orr.w	r4, r4, #1
 800d0e0:	6074      	str	r4, [r6, #4]
 800d0e2:	6153      	str	r3, [r2, #20]
 800d0e4:	6113      	str	r3, [r2, #16]
 800d0e6:	f04e 0201 	orr.w	r2, lr, #1
 800d0ea:	60df      	str	r7, [r3, #12]
 800d0ec:	609f      	str	r7, [r3, #8]
 800d0ee:	605a      	str	r2, [r3, #4]
 800d0f0:	f843 e00e 	str.w	lr, [r3, lr]
 800d0f4:	e17b      	b.n	800d3ee <_malloc_r+0x412>
 800d0f6:	f1be 0f00 	cmp.w	lr, #0
 800d0fa:	6157      	str	r7, [r2, #20]
 800d0fc:	6117      	str	r7, [r2, #16]
 800d0fe:	db05      	blt.n	800d10c <_malloc_r+0x130>
 800d100:	4430      	add	r0, r6
 800d102:	6843      	ldr	r3, [r0, #4]
 800d104:	f043 0301 	orr.w	r3, r3, #1
 800d108:	6043      	str	r3, [r0, #4]
 800d10a:	e170      	b.n	800d3ee <_malloc_r+0x412>
 800d10c:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 800d110:	d215      	bcs.n	800d13e <_malloc_r+0x162>
 800d112:	08c0      	lsrs	r0, r0, #3
 800d114:	ea4f 0ea0 	mov.w	lr, r0, asr #2
 800d118:	2701      	movs	r7, #1
 800d11a:	fa07 fe0e 	lsl.w	lr, r7, lr
 800d11e:	6857      	ldr	r7, [r2, #4]
 800d120:	3001      	adds	r0, #1
 800d122:	ea4e 0707 	orr.w	r7, lr, r7
 800d126:	6057      	str	r7, [r2, #4]
 800d128:	eb02 07c0 	add.w	r7, r2, r0, lsl #3
 800d12c:	f852 e030 	ldr.w	lr, [r2, r0, lsl #3]
 800d130:	f8c6 e008 	str.w	lr, [r6, #8]
 800d134:	3f08      	subs	r7, #8
 800d136:	60f7      	str	r7, [r6, #12]
 800d138:	f842 6030 	str.w	r6, [r2, r0, lsl #3]
 800d13c:	e03d      	b.n	800d1ba <_malloc_r+0x1de>
 800d13e:	0a42      	lsrs	r2, r0, #9
 800d140:	2a04      	cmp	r2, #4
 800d142:	d802      	bhi.n	800d14a <_malloc_r+0x16e>
 800d144:	0982      	lsrs	r2, r0, #6
 800d146:	3238      	adds	r2, #56	; 0x38
 800d148:	e015      	b.n	800d176 <_malloc_r+0x19a>
 800d14a:	2a14      	cmp	r2, #20
 800d14c:	d801      	bhi.n	800d152 <_malloc_r+0x176>
 800d14e:	325b      	adds	r2, #91	; 0x5b
 800d150:	e011      	b.n	800d176 <_malloc_r+0x19a>
 800d152:	2a54      	cmp	r2, #84	; 0x54
 800d154:	d802      	bhi.n	800d15c <_malloc_r+0x180>
 800d156:	0b02      	lsrs	r2, r0, #12
 800d158:	326e      	adds	r2, #110	; 0x6e
 800d15a:	e00c      	b.n	800d176 <_malloc_r+0x19a>
 800d15c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 800d160:	d802      	bhi.n	800d168 <_malloc_r+0x18c>
 800d162:	0bc2      	lsrs	r2, r0, #15
 800d164:	3277      	adds	r2, #119	; 0x77
 800d166:	e006      	b.n	800d176 <_malloc_r+0x19a>
 800d168:	f240 5754 	movw	r7, #1364	; 0x554
 800d16c:	42ba      	cmp	r2, r7
 800d16e:	bf9a      	itte	ls
 800d170:	0c82      	lsrls	r2, r0, #18
 800d172:	327c      	addls	r2, #124	; 0x7c
 800d174:	227e      	movhi	r2, #126	; 0x7e
 800d176:	1c57      	adds	r7, r2, #1
 800d178:	eb05 0ec2 	add.w	lr, r5, r2, lsl #3
 800d17c:	f855 7037 	ldr.w	r7, [r5, r7, lsl #3]
 800d180:	f8df c104 	ldr.w	ip, [pc, #260]	; 800d288 <_malloc_r+0x2ac>
 800d184:	45be      	cmp	lr, r7
 800d186:	d10d      	bne.n	800d1a4 <_malloc_r+0x1c8>
 800d188:	2001      	movs	r0, #1
 800d18a:	1092      	asrs	r2, r2, #2
 800d18c:	fa00 f202 	lsl.w	r2, r0, r2
 800d190:	f8dc 0004 	ldr.w	r0, [ip, #4]
 800d194:	4310      	orrs	r0, r2
 800d196:	f8cc 0004 	str.w	r0, [ip, #4]
 800d19a:	4672      	mov	r2, lr
 800d19c:	e009      	b.n	800d1b2 <_malloc_r+0x1d6>
 800d19e:	68bf      	ldr	r7, [r7, #8]
 800d1a0:	45be      	cmp	lr, r7
 800d1a2:	d004      	beq.n	800d1ae <_malloc_r+0x1d2>
 800d1a4:	687a      	ldr	r2, [r7, #4]
 800d1a6:	f022 0203 	bic.w	r2, r2, #3
 800d1aa:	4290      	cmp	r0, r2
 800d1ac:	d3f7      	bcc.n	800d19e <_malloc_r+0x1c2>
 800d1ae:	68fa      	ldr	r2, [r7, #12]
 800d1b0:	46be      	mov	lr, r7
 800d1b2:	60f2      	str	r2, [r6, #12]
 800d1b4:	f8c6 e008 	str.w	lr, [r6, #8]
 800d1b8:	6096      	str	r6, [r2, #8]
 800d1ba:	f8ce 600c 	str.w	r6, [lr, #12]
 800d1be:	2001      	movs	r0, #1
 800d1c0:	109a      	asrs	r2, r3, #2
 800d1c2:	fa00 f202 	lsl.w	r2, r0, r2
 800d1c6:	6868      	ldr	r0, [r5, #4]
 800d1c8:	4282      	cmp	r2, r0
 800d1ca:	d85f      	bhi.n	800d28c <_malloc_r+0x2b0>
 800d1cc:	4202      	tst	r2, r0
 800d1ce:	d106      	bne.n	800d1de <_malloc_r+0x202>
 800d1d0:	f023 0303 	bic.w	r3, r3, #3
 800d1d4:	0052      	lsls	r2, r2, #1
 800d1d6:	4202      	tst	r2, r0
 800d1d8:	f103 0304 	add.w	r3, r3, #4
 800d1dc:	d0fa      	beq.n	800d1d4 <_malloc_r+0x1f8>
 800d1de:	eb05 08c3 	add.w	r8, r5, r3, lsl #3
 800d1e2:	46c2      	mov	sl, r8
 800d1e4:	469c      	mov	ip, r3
 800d1e6:	f8da 600c 	ldr.w	r6, [sl, #12]
 800d1ea:	4556      	cmp	r6, sl
 800d1ec:	d02c      	beq.n	800d248 <_malloc_r+0x26c>
 800d1ee:	6870      	ldr	r0, [r6, #4]
 800d1f0:	68f7      	ldr	r7, [r6, #12]
 800d1f2:	f020 0003 	bic.w	r0, r0, #3
 800d1f6:	ebc4 0e00 	rsb	lr, r4, r0
 800d1fa:	f1be 0f0f 	cmp.w	lr, #15
 800d1fe:	dd11      	ble.n	800d224 <_malloc_r+0x248>
 800d200:	1933      	adds	r3, r6, r4
 800d202:	f044 0401 	orr.w	r4, r4, #1
 800d206:	6074      	str	r4, [r6, #4]
 800d208:	f856 2f08 	ldr.w	r2, [r6, #8]!
 800d20c:	60d7      	str	r7, [r2, #12]
 800d20e:	60ba      	str	r2, [r7, #8]
 800d210:	f04e 0201 	orr.w	r2, lr, #1
 800d214:	616b      	str	r3, [r5, #20]
 800d216:	612b      	str	r3, [r5, #16]
 800d218:	60d9      	str	r1, [r3, #12]
 800d21a:	6099      	str	r1, [r3, #8]
 800d21c:	605a      	str	r2, [r3, #4]
 800d21e:	f843 e00e 	str.w	lr, [r3, lr]
 800d222:	e00b      	b.n	800d23c <_malloc_r+0x260>
 800d224:	f1be 0f00 	cmp.w	lr, #0
 800d228:	db0c      	blt.n	800d244 <_malloc_r+0x268>
 800d22a:	1833      	adds	r3, r6, r0
 800d22c:	685a      	ldr	r2, [r3, #4]
 800d22e:	f042 0201 	orr.w	r2, r2, #1
 800d232:	605a      	str	r2, [r3, #4]
 800d234:	f856 3f08 	ldr.w	r3, [r6, #8]!
 800d238:	60df      	str	r7, [r3, #12]
 800d23a:	60bb      	str	r3, [r7, #8]
 800d23c:	4648      	mov	r0, r9
 800d23e:	f000 f92b 	bl	800d498 <__malloc_unlock>
 800d242:	e0d8      	b.n	800d3f6 <_malloc_r+0x41a>
 800d244:	463e      	mov	r6, r7
 800d246:	e7d0      	b.n	800d1ea <_malloc_r+0x20e>
 800d248:	f10c 0c01 	add.w	ip, ip, #1
 800d24c:	f01c 0f03 	tst.w	ip, #3
 800d250:	f10a 0a08 	add.w	sl, sl, #8
 800d254:	d1c7      	bne.n	800d1e6 <_malloc_r+0x20a>
 800d256:	0798      	lsls	r0, r3, #30
 800d258:	d104      	bne.n	800d264 <_malloc_r+0x288>
 800d25a:	686b      	ldr	r3, [r5, #4]
 800d25c:	ea23 0302 	bic.w	r3, r3, r2
 800d260:	606b      	str	r3, [r5, #4]
 800d262:	e005      	b.n	800d270 <_malloc_r+0x294>
 800d264:	f858 0908 	ldr.w	r0, [r8], #-8
 800d268:	4580      	cmp	r8, r0
 800d26a:	f103 33ff 	add.w	r3, r3, #4294967295
 800d26e:	d0f2      	beq.n	800d256 <_malloc_r+0x27a>
 800d270:	6868      	ldr	r0, [r5, #4]
 800d272:	0052      	lsls	r2, r2, #1
 800d274:	4282      	cmp	r2, r0
 800d276:	d809      	bhi.n	800d28c <_malloc_r+0x2b0>
 800d278:	b142      	cbz	r2, 800d28c <_malloc_r+0x2b0>
 800d27a:	4663      	mov	r3, ip
 800d27c:	4202      	tst	r2, r0
 800d27e:	d1ae      	bne.n	800d1de <_malloc_r+0x202>
 800d280:	3304      	adds	r3, #4
 800d282:	0052      	lsls	r2, r2, #1
 800d284:	e7fa      	b.n	800d27c <_malloc_r+0x2a0>
 800d286:	bf00      	nop
 800d288:	20000100 	.word	0x20000100
 800d28c:	f8d5 b008 	ldr.w	fp, [r5, #8]
 800d290:	f8db 6004 	ldr.w	r6, [fp, #4]
 800d294:	f026 0603 	bic.w	r6, r6, #3
 800d298:	42b4      	cmp	r4, r6
 800d29a:	d803      	bhi.n	800d2a4 <_malloc_r+0x2c8>
 800d29c:	1b33      	subs	r3, r6, r4
 800d29e:	2b0f      	cmp	r3, #15
 800d2a0:	f300 809c 	bgt.w	800d3dc <_malloc_r+0x400>
 800d2a4:	4a56      	ldr	r2, [pc, #344]	; (800d400 <_malloc_r+0x424>)
 800d2a6:	4957      	ldr	r1, [pc, #348]	; (800d404 <_malloc_r+0x428>)
 800d2a8:	6812      	ldr	r2, [r2, #0]
 800d2aa:	6808      	ldr	r0, [r1, #0]
 800d2ac:	9101      	str	r1, [sp, #4]
 800d2ae:	f102 0810 	add.w	r8, r2, #16
 800d2b2:	4a55      	ldr	r2, [pc, #340]	; (800d408 <_malloc_r+0x42c>)
 800d2b4:	9203      	str	r2, [sp, #12]
 800d2b6:	3001      	adds	r0, #1
 800d2b8:	bf18      	it	ne
 800d2ba:	f102 31ff 	addne.w	r1, r2, #4294967295
 800d2be:	44a0      	add	r8, r4
 800d2c0:	bf1e      	ittt	ne
 800d2c2:	4488      	addne	r8, r1
 800d2c4:	4251      	negne	r1, r2
 800d2c6:	ea01 0808 	andne.w	r8, r1, r8
 800d2ca:	eb0b 0306 	add.w	r3, fp, r6
 800d2ce:	4641      	mov	r1, r8
 800d2d0:	4648      	mov	r0, r9
 800d2d2:	9302      	str	r3, [sp, #8]
 800d2d4:	f000 fac8 	bl	800d868 <_sbrk_r>
 800d2d8:	1c42      	adds	r2, r0, #1
 800d2da:	4607      	mov	r7, r0
 800d2dc:	d06f      	beq.n	800d3be <_malloc_r+0x3e2>
 800d2de:	9b02      	ldr	r3, [sp, #8]
 800d2e0:	9a03      	ldr	r2, [sp, #12]
 800d2e2:	4283      	cmp	r3, r0
 800d2e4:	d901      	bls.n	800d2ea <_malloc_r+0x30e>
 800d2e6:	45ab      	cmp	fp, r5
 800d2e8:	d169      	bne.n	800d3be <_malloc_r+0x3e2>
 800d2ea:	f8df a128 	ldr.w	sl, [pc, #296]	; 800d414 <_malloc_r+0x438>
 800d2ee:	f8df c128 	ldr.w	ip, [pc, #296]	; 800d418 <_malloc_r+0x43c>
 800d2f2:	f8da 0000 	ldr.w	r0, [sl]
 800d2f6:	42bb      	cmp	r3, r7
 800d2f8:	4440      	add	r0, r8
 800d2fa:	f8ca 0000 	str.w	r0, [sl]
 800d2fe:	d108      	bne.n	800d312 <_malloc_r+0x336>
 800d300:	ea13 0f0c 	tst.w	r3, ip
 800d304:	d105      	bne.n	800d312 <_malloc_r+0x336>
 800d306:	68ab      	ldr	r3, [r5, #8]
 800d308:	4446      	add	r6, r8
 800d30a:	f046 0601 	orr.w	r6, r6, #1
 800d30e:	605e      	str	r6, [r3, #4]
 800d310:	e049      	b.n	800d3a6 <_malloc_r+0x3ca>
 800d312:	9901      	ldr	r1, [sp, #4]
 800d314:	f8d1 e000 	ldr.w	lr, [r1]
 800d318:	f1be 3fff 	cmp.w	lr, #4294967295
 800d31c:	bf15      	itete	ne
 800d31e:	1afb      	subne	r3, r7, r3
 800d320:	4b38      	ldreq	r3, [pc, #224]	; (800d404 <_malloc_r+0x428>)
 800d322:	181b      	addne	r3, r3, r0
 800d324:	601f      	streq	r7, [r3, #0]
 800d326:	bf18      	it	ne
 800d328:	f8ca 3000 	strne.w	r3, [sl]
 800d32c:	f017 0307 	ands.w	r3, r7, #7
 800d330:	bf1c      	itt	ne
 800d332:	f1c3 0308 	rsbne	r3, r3, #8
 800d336:	18ff      	addne	r7, r7, r3
 800d338:	44b8      	add	r8, r7
 800d33a:	441a      	add	r2, r3
 800d33c:	ea08 080c 	and.w	r8, r8, ip
 800d340:	ebc8 0802 	rsb	r8, r8, r2
 800d344:	4641      	mov	r1, r8
 800d346:	4648      	mov	r0, r9
 800d348:	f000 fa8e 	bl	800d868 <_sbrk_r>
 800d34c:	1c43      	adds	r3, r0, #1
 800d34e:	bf04      	itt	eq
 800d350:	4638      	moveq	r0, r7
 800d352:	f04f 0800 	moveq.w	r8, #0
 800d356:	f8da 3000 	ldr.w	r3, [sl]
 800d35a:	60af      	str	r7, [r5, #8]
 800d35c:	1bc2      	subs	r2, r0, r7
 800d35e:	4442      	add	r2, r8
 800d360:	4443      	add	r3, r8
 800d362:	f042 0201 	orr.w	r2, r2, #1
 800d366:	45ab      	cmp	fp, r5
 800d368:	f8ca 3000 	str.w	r3, [sl]
 800d36c:	607a      	str	r2, [r7, #4]
 800d36e:	d01a      	beq.n	800d3a6 <_malloc_r+0x3ca>
 800d370:	2e0f      	cmp	r6, #15
 800d372:	d802      	bhi.n	800d37a <_malloc_r+0x39e>
 800d374:	2301      	movs	r3, #1
 800d376:	607b      	str	r3, [r7, #4]
 800d378:	e021      	b.n	800d3be <_malloc_r+0x3e2>
 800d37a:	f8db 3004 	ldr.w	r3, [fp, #4]
 800d37e:	3e0c      	subs	r6, #12
 800d380:	f026 0607 	bic.w	r6, r6, #7
 800d384:	f003 0301 	and.w	r3, r3, #1
 800d388:	4333      	orrs	r3, r6
 800d38a:	f8cb 3004 	str.w	r3, [fp, #4]
 800d38e:	eb0b 0306 	add.w	r3, fp, r6
 800d392:	2205      	movs	r2, #5
 800d394:	2e0f      	cmp	r6, #15
 800d396:	605a      	str	r2, [r3, #4]
 800d398:	609a      	str	r2, [r3, #8]
 800d39a:	d904      	bls.n	800d3a6 <_malloc_r+0x3ca>
 800d39c:	f10b 0108 	add.w	r1, fp, #8
 800d3a0:	4648      	mov	r0, r9
 800d3a2:	f002 fb83 	bl	800faac <_free_r>
 800d3a6:	4a19      	ldr	r2, [pc, #100]	; (800d40c <_malloc_r+0x430>)
 800d3a8:	f8da 3000 	ldr.w	r3, [sl]
 800d3ac:	6811      	ldr	r1, [r2, #0]
 800d3ae:	428b      	cmp	r3, r1
 800d3b0:	bf88      	it	hi
 800d3b2:	6013      	strhi	r3, [r2, #0]
 800d3b4:	4a16      	ldr	r2, [pc, #88]	; (800d410 <_malloc_r+0x434>)
 800d3b6:	6811      	ldr	r1, [r2, #0]
 800d3b8:	428b      	cmp	r3, r1
 800d3ba:	bf88      	it	hi
 800d3bc:	6013      	strhi	r3, [r2, #0]
 800d3be:	68ab      	ldr	r3, [r5, #8]
 800d3c0:	685a      	ldr	r2, [r3, #4]
 800d3c2:	f022 0203 	bic.w	r2, r2, #3
 800d3c6:	4294      	cmp	r4, r2
 800d3c8:	eba2 0304 	sub.w	r3, r2, r4
 800d3cc:	d801      	bhi.n	800d3d2 <_malloc_r+0x3f6>
 800d3ce:	2b0f      	cmp	r3, #15
 800d3d0:	dc04      	bgt.n	800d3dc <_malloc_r+0x400>
 800d3d2:	4648      	mov	r0, r9
 800d3d4:	f000 f860 	bl	800d498 <__malloc_unlock>
 800d3d8:	2600      	movs	r6, #0
 800d3da:	e00c      	b.n	800d3f6 <_malloc_r+0x41a>
 800d3dc:	68ae      	ldr	r6, [r5, #8]
 800d3de:	f044 0201 	orr.w	r2, r4, #1
 800d3e2:	4434      	add	r4, r6
 800d3e4:	f043 0301 	orr.w	r3, r3, #1
 800d3e8:	6072      	str	r2, [r6, #4]
 800d3ea:	60ac      	str	r4, [r5, #8]
 800d3ec:	6063      	str	r3, [r4, #4]
 800d3ee:	4648      	mov	r0, r9
 800d3f0:	f000 f852 	bl	800d498 <__malloc_unlock>
 800d3f4:	3608      	adds	r6, #8
 800d3f6:	4630      	mov	r0, r6
 800d3f8:	b005      	add	sp, #20
 800d3fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d3fe:	bf00      	nop
 800d400:	2000058c 	.word	0x2000058c
 800d404:	2000050c 	.word	0x2000050c
 800d408:	00001000 	.word	0x00001000
 800d40c:	20000588 	.word	0x20000588
 800d410:	20000584 	.word	0x20000584
 800d414:	20000590 	.word	0x20000590
 800d418:	00000fff 	.word	0x00000fff

0800d41c <memcmp>:
 800d41c:	b510      	push	{r4, lr}
 800d41e:	3901      	subs	r1, #1
 800d420:	4402      	add	r2, r0
 800d422:	4290      	cmp	r0, r2
 800d424:	d007      	beq.n	800d436 <memcmp+0x1a>
 800d426:	f810 3b01 	ldrb.w	r3, [r0], #1
 800d42a:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800d42e:	42a3      	cmp	r3, r4
 800d430:	d0f7      	beq.n	800d422 <memcmp+0x6>
 800d432:	1b18      	subs	r0, r3, r4
 800d434:	bd10      	pop	{r4, pc}
 800d436:	2000      	movs	r0, #0
 800d438:	bd10      	pop	{r4, pc}

0800d43a <memcpy>:
 800d43a:	b510      	push	{r4, lr}
 800d43c:	1e43      	subs	r3, r0, #1
 800d43e:	440a      	add	r2, r1
 800d440:	4291      	cmp	r1, r2
 800d442:	d004      	beq.n	800d44e <memcpy+0x14>
 800d444:	f811 4b01 	ldrb.w	r4, [r1], #1
 800d448:	f803 4f01 	strb.w	r4, [r3, #1]!
 800d44c:	e7f8      	b.n	800d440 <memcpy+0x6>
 800d44e:	bd10      	pop	{r4, pc}

0800d450 <memmove>:
 800d450:	4288      	cmp	r0, r1
 800d452:	b510      	push	{r4, lr}
 800d454:	eb01 0302 	add.w	r3, r1, r2
 800d458:	d801      	bhi.n	800d45e <memmove+0xe>
 800d45a:	1e42      	subs	r2, r0, #1
 800d45c:	e00b      	b.n	800d476 <memmove+0x26>
 800d45e:	4298      	cmp	r0, r3
 800d460:	d2fb      	bcs.n	800d45a <memmove+0xa>
 800d462:	1881      	adds	r1, r0, r2
 800d464:	1ad2      	subs	r2, r2, r3
 800d466:	42d3      	cmn	r3, r2
 800d468:	d004      	beq.n	800d474 <memmove+0x24>
 800d46a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800d46e:	f801 4d01 	strb.w	r4, [r1, #-1]!
 800d472:	e7f8      	b.n	800d466 <memmove+0x16>
 800d474:	bd10      	pop	{r4, pc}
 800d476:	4299      	cmp	r1, r3
 800d478:	d004      	beq.n	800d484 <memmove+0x34>
 800d47a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800d47e:	f802 4f01 	strb.w	r4, [r2, #1]!
 800d482:	e7f8      	b.n	800d476 <memmove+0x26>
 800d484:	bd10      	pop	{r4, pc}

0800d486 <memset>:
 800d486:	4402      	add	r2, r0
 800d488:	4603      	mov	r3, r0
 800d48a:	4293      	cmp	r3, r2
 800d48c:	d002      	beq.n	800d494 <memset+0xe>
 800d48e:	f803 1b01 	strb.w	r1, [r3], #1
 800d492:	e7fa      	b.n	800d48a <memset+0x4>
 800d494:	4770      	bx	lr

0800d496 <__malloc_lock>:
 800d496:	4770      	bx	lr

0800d498 <__malloc_unlock>:
 800d498:	4770      	bx	lr
	...

0800d49c <_putc_r>:
 800d49c:	b570      	push	{r4, r5, r6, lr}
 800d49e:	460d      	mov	r5, r1
 800d4a0:	4614      	mov	r4, r2
 800d4a2:	4606      	mov	r6, r0
 800d4a4:	b118      	cbz	r0, 800d4ae <_putc_r+0x12>
 800d4a6:	6983      	ldr	r3, [r0, #24]
 800d4a8:	b90b      	cbnz	r3, 800d4ae <_putc_r+0x12>
 800d4aa:	f002 fa37 	bl	800f91c <__sinit>
 800d4ae:	4b13      	ldr	r3, [pc, #76]	; (800d4fc <_putc_r+0x60>)
 800d4b0:	429c      	cmp	r4, r3
 800d4b2:	d101      	bne.n	800d4b8 <_putc_r+0x1c>
 800d4b4:	6874      	ldr	r4, [r6, #4]
 800d4b6:	e008      	b.n	800d4ca <_putc_r+0x2e>
 800d4b8:	4b11      	ldr	r3, [pc, #68]	; (800d500 <_putc_r+0x64>)
 800d4ba:	429c      	cmp	r4, r3
 800d4bc:	d101      	bne.n	800d4c2 <_putc_r+0x26>
 800d4be:	68b4      	ldr	r4, [r6, #8]
 800d4c0:	e003      	b.n	800d4ca <_putc_r+0x2e>
 800d4c2:	4b10      	ldr	r3, [pc, #64]	; (800d504 <_putc_r+0x68>)
 800d4c4:	429c      	cmp	r4, r3
 800d4c6:	bf08      	it	eq
 800d4c8:	68f4      	ldreq	r4, [r6, #12]
 800d4ca:	68a3      	ldr	r3, [r4, #8]
 800d4cc:	3b01      	subs	r3, #1
 800d4ce:	2b00      	cmp	r3, #0
 800d4d0:	60a3      	str	r3, [r4, #8]
 800d4d2:	da0c      	bge.n	800d4ee <_putc_r+0x52>
 800d4d4:	69a2      	ldr	r2, [r4, #24]
 800d4d6:	4293      	cmp	r3, r2
 800d4d8:	db02      	blt.n	800d4e0 <_putc_r+0x44>
 800d4da:	b2eb      	uxtb	r3, r5
 800d4dc:	2b0a      	cmp	r3, #10
 800d4de:	d106      	bne.n	800d4ee <_putc_r+0x52>
 800d4e0:	4622      	mov	r2, r4
 800d4e2:	4629      	mov	r1, r5
 800d4e4:	4630      	mov	r0, r6
 800d4e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d4ea:	f001 ba0f 	b.w	800e90c <__swbuf_r>
 800d4ee:	6823      	ldr	r3, [r4, #0]
 800d4f0:	1c5a      	adds	r2, r3, #1
 800d4f2:	6022      	str	r2, [r4, #0]
 800d4f4:	701d      	strb	r5, [r3, #0]
 800d4f6:	b2e8      	uxtb	r0, r5
 800d4f8:	bd70      	pop	{r4, r5, r6, pc}
 800d4fa:	bf00      	nop
 800d4fc:	08011900 	.word	0x08011900
 800d500:	08011920 	.word	0x08011920
 800d504:	08011940 	.word	0x08011940

0800d508 <realloc>:
 800d508:	4b02      	ldr	r3, [pc, #8]	; (800d514 <realloc+0xc>)
 800d50a:	460a      	mov	r2, r1
 800d50c:	4601      	mov	r1, r0
 800d50e:	6818      	ldr	r0, [r3, #0]
 800d510:	f000 b802 	b.w	800d518 <_realloc_r>
 800d514:	200000fc 	.word	0x200000fc

0800d518 <_realloc_r>:
 800d518:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d51c:	4681      	mov	r9, r0
 800d51e:	460c      	mov	r4, r1
 800d520:	b929      	cbnz	r1, 800d52e <_realloc_r+0x16>
 800d522:	4611      	mov	r1, r2
 800d524:	b003      	add	sp, #12
 800d526:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d52a:	f7ff bd57 	b.w	800cfdc <_malloc_r>
 800d52e:	9201      	str	r2, [sp, #4]
 800d530:	f7ff ffb1 	bl	800d496 <__malloc_lock>
 800d534:	9a01      	ldr	r2, [sp, #4]
 800d536:	f854 ec04 	ldr.w	lr, [r4, #-4]
 800d53a:	f102 080b 	add.w	r8, r2, #11
 800d53e:	f1b8 0f16 	cmp.w	r8, #22
 800d542:	f1a4 0b08 	sub.w	fp, r4, #8
 800d546:	f02e 0503 	bic.w	r5, lr, #3
 800d54a:	d903      	bls.n	800d554 <_realloc_r+0x3c>
 800d54c:	f038 0807 	bics.w	r8, r8, #7
 800d550:	d502      	bpl.n	800d558 <_realloc_r+0x40>
 800d552:	e003      	b.n	800d55c <_realloc_r+0x44>
 800d554:	f04f 0810 	mov.w	r8, #16
 800d558:	4590      	cmp	r8, r2
 800d55a:	d204      	bcs.n	800d566 <_realloc_r+0x4e>
 800d55c:	230c      	movs	r3, #12
 800d55e:	f8c9 3000 	str.w	r3, [r9]
 800d562:	2000      	movs	r0, #0
 800d564:	e17d      	b.n	800d862 <_realloc_r+0x34a>
 800d566:	45a8      	cmp	r8, r5
 800d568:	f340 8150 	ble.w	800d80c <_realloc_r+0x2f4>
 800d56c:	4ba6      	ldr	r3, [pc, #664]	; (800d808 <_realloc_r+0x2f0>)
 800d56e:	6898      	ldr	r0, [r3, #8]
 800d570:	eb0b 0105 	add.w	r1, fp, r5
 800d574:	4281      	cmp	r1, r0
 800d576:	684f      	ldr	r7, [r1, #4]
 800d578:	d005      	beq.n	800d586 <_realloc_r+0x6e>
 800d57a:	f027 0601 	bic.w	r6, r7, #1
 800d57e:	440e      	add	r6, r1
 800d580:	6876      	ldr	r6, [r6, #4]
 800d582:	07f6      	lsls	r6, r6, #31
 800d584:	d426      	bmi.n	800d5d4 <_realloc_r+0xbc>
 800d586:	f027 0a03 	bic.w	sl, r7, #3
 800d58a:	4281      	cmp	r1, r0
 800d58c:	eb05 070a 	add.w	r7, r5, sl
 800d590:	d118      	bne.n	800d5c4 <_realloc_r+0xac>
 800d592:	f108 0610 	add.w	r6, r8, #16
 800d596:	42b7      	cmp	r7, r6
 800d598:	db1f      	blt.n	800d5da <_realloc_r+0xc2>
 800d59a:	eb0b 0008 	add.w	r0, fp, r8
 800d59e:	ebc8 0707 	rsb	r7, r8, r7
 800d5a2:	f047 0701 	orr.w	r7, r7, #1
 800d5a6:	6098      	str	r0, [r3, #8]
 800d5a8:	6047      	str	r7, [r0, #4]
 800d5aa:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800d5ae:	f003 0301 	and.w	r3, r3, #1
 800d5b2:	ea43 0308 	orr.w	r3, r3, r8
 800d5b6:	4648      	mov	r0, r9
 800d5b8:	f844 3c04 	str.w	r3, [r4, #-4]
 800d5bc:	f7ff ff6c 	bl	800d498 <__malloc_unlock>
 800d5c0:	4620      	mov	r0, r4
 800d5c2:	e14e      	b.n	800d862 <_realloc_r+0x34a>
 800d5c4:	45b8      	cmp	r8, r7
 800d5c6:	dc08      	bgt.n	800d5da <_realloc_r+0xc2>
 800d5c8:	68cb      	ldr	r3, [r1, #12]
 800d5ca:	688a      	ldr	r2, [r1, #8]
 800d5cc:	463d      	mov	r5, r7
 800d5ce:	60d3      	str	r3, [r2, #12]
 800d5d0:	609a      	str	r2, [r3, #8]
 800d5d2:	e11b      	b.n	800d80c <_realloc_r+0x2f4>
 800d5d4:	f04f 0a00 	mov.w	sl, #0
 800d5d8:	4651      	mov	r1, sl
 800d5da:	f01e 0f01 	tst.w	lr, #1
 800d5de:	f040 80c3 	bne.w	800d768 <_realloc_r+0x250>
 800d5e2:	f854 7c08 	ldr.w	r7, [r4, #-8]
 800d5e6:	ebc7 070b 	rsb	r7, r7, fp
 800d5ea:	687e      	ldr	r6, [r7, #4]
 800d5ec:	f026 0603 	bic.w	r6, r6, #3
 800d5f0:	442e      	add	r6, r5
 800d5f2:	2900      	cmp	r1, #0
 800d5f4:	f000 8083 	beq.w	800d6fe <_realloc_r+0x1e6>
 800d5f8:	4281      	cmp	r1, r0
 800d5fa:	44b2      	add	sl, r6
 800d5fc:	d147      	bne.n	800d68e <_realloc_r+0x176>
 800d5fe:	f108 0110 	add.w	r1, r8, #16
 800d602:	458a      	cmp	sl, r1
 800d604:	db7b      	blt.n	800d6fe <_realloc_r+0x1e6>
 800d606:	463e      	mov	r6, r7
 800d608:	68fa      	ldr	r2, [r7, #12]
 800d60a:	f856 1f08 	ldr.w	r1, [r6, #8]!
 800d60e:	60ca      	str	r2, [r1, #12]
 800d610:	6091      	str	r1, [r2, #8]
 800d612:	1f2a      	subs	r2, r5, #4
 800d614:	2a24      	cmp	r2, #36	; 0x24
 800d616:	d825      	bhi.n	800d664 <_realloc_r+0x14c>
 800d618:	2a13      	cmp	r2, #19
 800d61a:	d91b      	bls.n	800d654 <_realloc_r+0x13c>
 800d61c:	6821      	ldr	r1, [r4, #0]
 800d61e:	60b9      	str	r1, [r7, #8]
 800d620:	6861      	ldr	r1, [r4, #4]
 800d622:	60f9      	str	r1, [r7, #12]
 800d624:	2a1b      	cmp	r2, #27
 800d626:	d803      	bhi.n	800d630 <_realloc_r+0x118>
 800d628:	f107 0210 	add.w	r2, r7, #16
 800d62c:	3408      	adds	r4, #8
 800d62e:	e012      	b.n	800d656 <_realloc_r+0x13e>
 800d630:	68a1      	ldr	r1, [r4, #8]
 800d632:	6139      	str	r1, [r7, #16]
 800d634:	68e1      	ldr	r1, [r4, #12]
 800d636:	6179      	str	r1, [r7, #20]
 800d638:	2a24      	cmp	r2, #36	; 0x24
 800d63a:	bf01      	itttt	eq
 800d63c:	6922      	ldreq	r2, [r4, #16]
 800d63e:	61ba      	streq	r2, [r7, #24]
 800d640:	6961      	ldreq	r1, [r4, #20]
 800d642:	61f9      	streq	r1, [r7, #28]
 800d644:	bf19      	ittee	ne
 800d646:	f107 0218 	addne.w	r2, r7, #24
 800d64a:	3410      	addne	r4, #16
 800d64c:	f107 0220 	addeq.w	r2, r7, #32
 800d650:	3418      	addeq	r4, #24
 800d652:	e000      	b.n	800d656 <_realloc_r+0x13e>
 800d654:	4632      	mov	r2, r6
 800d656:	6821      	ldr	r1, [r4, #0]
 800d658:	6011      	str	r1, [r2, #0]
 800d65a:	6861      	ldr	r1, [r4, #4]
 800d65c:	6051      	str	r1, [r2, #4]
 800d65e:	68a1      	ldr	r1, [r4, #8]
 800d660:	6091      	str	r1, [r2, #8]
 800d662:	e005      	b.n	800d670 <_realloc_r+0x158>
 800d664:	4621      	mov	r1, r4
 800d666:	4630      	mov	r0, r6
 800d668:	9301      	str	r3, [sp, #4]
 800d66a:	f7ff fef1 	bl	800d450 <memmove>
 800d66e:	9b01      	ldr	r3, [sp, #4]
 800d670:	eb07 0208 	add.w	r2, r7, r8
 800d674:	ebc8 0a0a 	rsb	sl, r8, sl
 800d678:	609a      	str	r2, [r3, #8]
 800d67a:	f04a 0301 	orr.w	r3, sl, #1
 800d67e:	6053      	str	r3, [r2, #4]
 800d680:	687b      	ldr	r3, [r7, #4]
 800d682:	f003 0301 	and.w	r3, r3, #1
 800d686:	ea43 0308 	orr.w	r3, r3, r8
 800d68a:	607b      	str	r3, [r7, #4]
 800d68c:	e0b6      	b.n	800d7fc <_realloc_r+0x2e4>
 800d68e:	45d0      	cmp	r8, sl
 800d690:	dc35      	bgt.n	800d6fe <_realloc_r+0x1e6>
 800d692:	68cb      	ldr	r3, [r1, #12]
 800d694:	688a      	ldr	r2, [r1, #8]
 800d696:	4638      	mov	r0, r7
 800d698:	60d3      	str	r3, [r2, #12]
 800d69a:	609a      	str	r2, [r3, #8]
 800d69c:	f850 2f08 	ldr.w	r2, [r0, #8]!
 800d6a0:	68fb      	ldr	r3, [r7, #12]
 800d6a2:	60d3      	str	r3, [r2, #12]
 800d6a4:	609a      	str	r2, [r3, #8]
 800d6a6:	1f2a      	subs	r2, r5, #4
 800d6a8:	2a24      	cmp	r2, #36	; 0x24
 800d6aa:	d823      	bhi.n	800d6f4 <_realloc_r+0x1dc>
 800d6ac:	2a13      	cmp	r2, #19
 800d6ae:	d91a      	bls.n	800d6e6 <_realloc_r+0x1ce>
 800d6b0:	6823      	ldr	r3, [r4, #0]
 800d6b2:	60bb      	str	r3, [r7, #8]
 800d6b4:	6863      	ldr	r3, [r4, #4]
 800d6b6:	60fb      	str	r3, [r7, #12]
 800d6b8:	2a1b      	cmp	r2, #27
 800d6ba:	d803      	bhi.n	800d6c4 <_realloc_r+0x1ac>
 800d6bc:	f107 0010 	add.w	r0, r7, #16
 800d6c0:	3408      	adds	r4, #8
 800d6c2:	e010      	b.n	800d6e6 <_realloc_r+0x1ce>
 800d6c4:	68a3      	ldr	r3, [r4, #8]
 800d6c6:	613b      	str	r3, [r7, #16]
 800d6c8:	68e3      	ldr	r3, [r4, #12]
 800d6ca:	617b      	str	r3, [r7, #20]
 800d6cc:	2a24      	cmp	r2, #36	; 0x24
 800d6ce:	bf01      	itttt	eq
 800d6d0:	6923      	ldreq	r3, [r4, #16]
 800d6d2:	61bb      	streq	r3, [r7, #24]
 800d6d4:	6963      	ldreq	r3, [r4, #20]
 800d6d6:	61fb      	streq	r3, [r7, #28]
 800d6d8:	bf19      	ittee	ne
 800d6da:	f107 0018 	addne.w	r0, r7, #24
 800d6de:	3410      	addne	r4, #16
 800d6e0:	f107 0020 	addeq.w	r0, r7, #32
 800d6e4:	3418      	addeq	r4, #24
 800d6e6:	6823      	ldr	r3, [r4, #0]
 800d6e8:	6003      	str	r3, [r0, #0]
 800d6ea:	6863      	ldr	r3, [r4, #4]
 800d6ec:	6043      	str	r3, [r0, #4]
 800d6ee:	68a3      	ldr	r3, [r4, #8]
 800d6f0:	6083      	str	r3, [r0, #8]
 800d6f2:	e002      	b.n	800d6fa <_realloc_r+0x1e2>
 800d6f4:	4621      	mov	r1, r4
 800d6f6:	f7ff feab 	bl	800d450 <memmove>
 800d6fa:	4655      	mov	r5, sl
 800d6fc:	e02e      	b.n	800d75c <_realloc_r+0x244>
 800d6fe:	45b0      	cmp	r8, r6
 800d700:	dc32      	bgt.n	800d768 <_realloc_r+0x250>
 800d702:	4638      	mov	r0, r7
 800d704:	68fb      	ldr	r3, [r7, #12]
 800d706:	f850 2f08 	ldr.w	r2, [r0, #8]!
 800d70a:	60d3      	str	r3, [r2, #12]
 800d70c:	609a      	str	r2, [r3, #8]
 800d70e:	1f2a      	subs	r2, r5, #4
 800d710:	2a24      	cmp	r2, #36	; 0x24
 800d712:	d825      	bhi.n	800d760 <_realloc_r+0x248>
 800d714:	2a13      	cmp	r2, #19
 800d716:	d91a      	bls.n	800d74e <_realloc_r+0x236>
 800d718:	6823      	ldr	r3, [r4, #0]
 800d71a:	60bb      	str	r3, [r7, #8]
 800d71c:	6863      	ldr	r3, [r4, #4]
 800d71e:	60fb      	str	r3, [r7, #12]
 800d720:	2a1b      	cmp	r2, #27
 800d722:	d803      	bhi.n	800d72c <_realloc_r+0x214>
 800d724:	f107 0010 	add.w	r0, r7, #16
 800d728:	3408      	adds	r4, #8
 800d72a:	e010      	b.n	800d74e <_realloc_r+0x236>
 800d72c:	68a3      	ldr	r3, [r4, #8]
 800d72e:	613b      	str	r3, [r7, #16]
 800d730:	68e3      	ldr	r3, [r4, #12]
 800d732:	617b      	str	r3, [r7, #20]
 800d734:	2a24      	cmp	r2, #36	; 0x24
 800d736:	bf01      	itttt	eq
 800d738:	6923      	ldreq	r3, [r4, #16]
 800d73a:	61bb      	streq	r3, [r7, #24]
 800d73c:	6963      	ldreq	r3, [r4, #20]
 800d73e:	61fb      	streq	r3, [r7, #28]
 800d740:	bf19      	ittee	ne
 800d742:	f107 0018 	addne.w	r0, r7, #24
 800d746:	3410      	addne	r4, #16
 800d748:	f107 0020 	addeq.w	r0, r7, #32
 800d74c:	3418      	addeq	r4, #24
 800d74e:	6823      	ldr	r3, [r4, #0]
 800d750:	6003      	str	r3, [r0, #0]
 800d752:	6863      	ldr	r3, [r4, #4]
 800d754:	6043      	str	r3, [r0, #4]
 800d756:	68a3      	ldr	r3, [r4, #8]
 800d758:	6083      	str	r3, [r0, #8]
 800d75a:	4635      	mov	r5, r6
 800d75c:	46bb      	mov	fp, r7
 800d75e:	e055      	b.n	800d80c <_realloc_r+0x2f4>
 800d760:	4621      	mov	r1, r4
 800d762:	f7ff fe75 	bl	800d450 <memmove>
 800d766:	e7f8      	b.n	800d75a <_realloc_r+0x242>
 800d768:	4611      	mov	r1, r2
 800d76a:	4648      	mov	r0, r9
 800d76c:	f7ff fc36 	bl	800cfdc <_malloc_r>
 800d770:	4606      	mov	r6, r0
 800d772:	2800      	cmp	r0, #0
 800d774:	d042      	beq.n	800d7fc <_realloc_r+0x2e4>
 800d776:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800d77a:	f023 0301 	bic.w	r3, r3, #1
 800d77e:	f1a0 0208 	sub.w	r2, r0, #8
 800d782:	445b      	add	r3, fp
 800d784:	429a      	cmp	r2, r3
 800d786:	d105      	bne.n	800d794 <_realloc_r+0x27c>
 800d788:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800d78c:	f023 0303 	bic.w	r3, r3, #3
 800d790:	441d      	add	r5, r3
 800d792:	e03b      	b.n	800d80c <_realloc_r+0x2f4>
 800d794:	1f2a      	subs	r2, r5, #4
 800d796:	2a24      	cmp	r2, #36	; 0x24
 800d798:	d829      	bhi.n	800d7ee <_realloc_r+0x2d6>
 800d79a:	2a13      	cmp	r2, #19
 800d79c:	d91e      	bls.n	800d7dc <_realloc_r+0x2c4>
 800d79e:	6823      	ldr	r3, [r4, #0]
 800d7a0:	6003      	str	r3, [r0, #0]
 800d7a2:	6863      	ldr	r3, [r4, #4]
 800d7a4:	6043      	str	r3, [r0, #4]
 800d7a6:	2a1b      	cmp	r2, #27
 800d7a8:	d804      	bhi.n	800d7b4 <_realloc_r+0x29c>
 800d7aa:	f100 0308 	add.w	r3, r0, #8
 800d7ae:	f104 0208 	add.w	r2, r4, #8
 800d7b2:	e015      	b.n	800d7e0 <_realloc_r+0x2c8>
 800d7b4:	68a3      	ldr	r3, [r4, #8]
 800d7b6:	6083      	str	r3, [r0, #8]
 800d7b8:	68e3      	ldr	r3, [r4, #12]
 800d7ba:	60c3      	str	r3, [r0, #12]
 800d7bc:	2a24      	cmp	r2, #36	; 0x24
 800d7be:	bf01      	itttt	eq
 800d7c0:	6923      	ldreq	r3, [r4, #16]
 800d7c2:	6103      	streq	r3, [r0, #16]
 800d7c4:	6961      	ldreq	r1, [r4, #20]
 800d7c6:	6141      	streq	r1, [r0, #20]
 800d7c8:	bf19      	ittee	ne
 800d7ca:	f100 0310 	addne.w	r3, r0, #16
 800d7ce:	f104 0210 	addne.w	r2, r4, #16
 800d7d2:	f100 0318 	addeq.w	r3, r0, #24
 800d7d6:	f104 0218 	addeq.w	r2, r4, #24
 800d7da:	e001      	b.n	800d7e0 <_realloc_r+0x2c8>
 800d7dc:	4603      	mov	r3, r0
 800d7de:	4622      	mov	r2, r4
 800d7e0:	6811      	ldr	r1, [r2, #0]
 800d7e2:	6019      	str	r1, [r3, #0]
 800d7e4:	6851      	ldr	r1, [r2, #4]
 800d7e6:	6059      	str	r1, [r3, #4]
 800d7e8:	6892      	ldr	r2, [r2, #8]
 800d7ea:	609a      	str	r2, [r3, #8]
 800d7ec:	e002      	b.n	800d7f4 <_realloc_r+0x2dc>
 800d7ee:	4621      	mov	r1, r4
 800d7f0:	f7ff fe2e 	bl	800d450 <memmove>
 800d7f4:	4621      	mov	r1, r4
 800d7f6:	4648      	mov	r0, r9
 800d7f8:	f002 f958 	bl	800faac <_free_r>
 800d7fc:	4648      	mov	r0, r9
 800d7fe:	f7ff fe4b 	bl	800d498 <__malloc_unlock>
 800d802:	4630      	mov	r0, r6
 800d804:	e02d      	b.n	800d862 <_realloc_r+0x34a>
 800d806:	bf00      	nop
 800d808:	20000100 	.word	0x20000100
 800d80c:	ebc8 0205 	rsb	r2, r8, r5
 800d810:	2a0f      	cmp	r2, #15
 800d812:	f8db 3004 	ldr.w	r3, [fp, #4]
 800d816:	d914      	bls.n	800d842 <_realloc_r+0x32a>
 800d818:	f003 0301 	and.w	r3, r3, #1
 800d81c:	eb0b 0108 	add.w	r1, fp, r8
 800d820:	ea43 0308 	orr.w	r3, r3, r8
 800d824:	f8cb 3004 	str.w	r3, [fp, #4]
 800d828:	f042 0301 	orr.w	r3, r2, #1
 800d82c:	440a      	add	r2, r1
 800d82e:	604b      	str	r3, [r1, #4]
 800d830:	6853      	ldr	r3, [r2, #4]
 800d832:	f043 0301 	orr.w	r3, r3, #1
 800d836:	6053      	str	r3, [r2, #4]
 800d838:	3108      	adds	r1, #8
 800d83a:	4648      	mov	r0, r9
 800d83c:	f002 f936 	bl	800faac <_free_r>
 800d840:	e00a      	b.n	800d858 <_realloc_r+0x340>
 800d842:	f003 0301 	and.w	r3, r3, #1
 800d846:	432b      	orrs	r3, r5
 800d848:	eb0b 0205 	add.w	r2, fp, r5
 800d84c:	f8cb 3004 	str.w	r3, [fp, #4]
 800d850:	6853      	ldr	r3, [r2, #4]
 800d852:	f043 0301 	orr.w	r3, r3, #1
 800d856:	6053      	str	r3, [r2, #4]
 800d858:	4648      	mov	r0, r9
 800d85a:	f7ff fe1d 	bl	800d498 <__malloc_unlock>
 800d85e:	f10b 0008 	add.w	r0, fp, #8
 800d862:	b003      	add	sp, #12
 800d864:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d868 <_sbrk_r>:
 800d868:	b538      	push	{r3, r4, r5, lr}
 800d86a:	4c06      	ldr	r4, [pc, #24]	; (800d884 <_sbrk_r+0x1c>)
 800d86c:	2300      	movs	r3, #0
 800d86e:	4605      	mov	r5, r0
 800d870:	4608      	mov	r0, r1
 800d872:	6023      	str	r3, [r4, #0]
 800d874:	f002 ff08 	bl	8010688 <_sbrk>
 800d878:	1c43      	adds	r3, r0, #1
 800d87a:	d102      	bne.n	800d882 <_sbrk_r+0x1a>
 800d87c:	6823      	ldr	r3, [r4, #0]
 800d87e:	b103      	cbz	r3, 800d882 <_sbrk_r+0x1a>
 800d880:	602b      	str	r3, [r5, #0]
 800d882:	bd38      	pop	{r3, r4, r5, pc}
 800d884:	200006c0 	.word	0x200006c0

0800d888 <_raise_r>:
 800d888:	291f      	cmp	r1, #31
 800d88a:	b538      	push	{r3, r4, r5, lr}
 800d88c:	4604      	mov	r4, r0
 800d88e:	460d      	mov	r5, r1
 800d890:	d904      	bls.n	800d89c <_raise_r+0x14>
 800d892:	2316      	movs	r3, #22
 800d894:	6003      	str	r3, [r0, #0]
 800d896:	f04f 30ff 	mov.w	r0, #4294967295
 800d89a:	bd38      	pop	{r3, r4, r5, pc}
 800d89c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800d89e:	b112      	cbz	r2, 800d8a6 <_raise_r+0x1e>
 800d8a0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800d8a4:	b94b      	cbnz	r3, 800d8ba <_raise_r+0x32>
 800d8a6:	4620      	mov	r0, r4
 800d8a8:	f000 f832 	bl	800d910 <_getpid_r>
 800d8ac:	462a      	mov	r2, r5
 800d8ae:	4601      	mov	r1, r0
 800d8b0:	4620      	mov	r0, r4
 800d8b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d8b6:	f000 b819 	b.w	800d8ec <_kill_r>
 800d8ba:	2b01      	cmp	r3, #1
 800d8bc:	d00c      	beq.n	800d8d8 <_raise_r+0x50>
 800d8be:	1c59      	adds	r1, r3, #1
 800d8c0:	d103      	bne.n	800d8ca <_raise_r+0x42>
 800d8c2:	2316      	movs	r3, #22
 800d8c4:	6003      	str	r3, [r0, #0]
 800d8c6:	2001      	movs	r0, #1
 800d8c8:	bd38      	pop	{r3, r4, r5, pc}
 800d8ca:	2400      	movs	r4, #0
 800d8cc:	4628      	mov	r0, r5
 800d8ce:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800d8d2:	4798      	blx	r3
 800d8d4:	4620      	mov	r0, r4
 800d8d6:	bd38      	pop	{r3, r4, r5, pc}
 800d8d8:	2000      	movs	r0, #0
 800d8da:	bd38      	pop	{r3, r4, r5, pc}

0800d8dc <raise>:
 800d8dc:	4b02      	ldr	r3, [pc, #8]	; (800d8e8 <raise+0xc>)
 800d8de:	4601      	mov	r1, r0
 800d8e0:	6818      	ldr	r0, [r3, #0]
 800d8e2:	f7ff bfd1 	b.w	800d888 <_raise_r>
 800d8e6:	bf00      	nop
 800d8e8:	200000fc 	.word	0x200000fc

0800d8ec <_kill_r>:
 800d8ec:	b538      	push	{r3, r4, r5, lr}
 800d8ee:	4c07      	ldr	r4, [pc, #28]	; (800d90c <_kill_r+0x20>)
 800d8f0:	2300      	movs	r3, #0
 800d8f2:	4605      	mov	r5, r0
 800d8f4:	4608      	mov	r0, r1
 800d8f6:	4611      	mov	r1, r2
 800d8f8:	6023      	str	r3, [r4, #0]
 800d8fa:	f002 fead 	bl	8010658 <_kill>
 800d8fe:	1c43      	adds	r3, r0, #1
 800d900:	d102      	bne.n	800d908 <_kill_r+0x1c>
 800d902:	6823      	ldr	r3, [r4, #0]
 800d904:	b103      	cbz	r3, 800d908 <_kill_r+0x1c>
 800d906:	602b      	str	r3, [r5, #0]
 800d908:	bd38      	pop	{r3, r4, r5, pc}
 800d90a:	bf00      	nop
 800d90c:	200006c0 	.word	0x200006c0

0800d910 <_getpid_r>:
 800d910:	f002 be92 	b.w	8010638 <_getpid>

0800d914 <sprintf>:
 800d914:	b40e      	push	{r1, r2, r3}
 800d916:	b500      	push	{lr}
 800d918:	b09c      	sub	sp, #112	; 0x70
 800d91a:	f44f 7102 	mov.w	r1, #520	; 0x208
 800d91e:	ab1d      	add	r3, sp, #116	; 0x74
 800d920:	f8ad 1014 	strh.w	r1, [sp, #20]
 800d924:	9002      	str	r0, [sp, #8]
 800d926:	9006      	str	r0, [sp, #24]
 800d928:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800d92c:	480a      	ldr	r0, [pc, #40]	; (800d958 <sprintf+0x44>)
 800d92e:	9104      	str	r1, [sp, #16]
 800d930:	9107      	str	r1, [sp, #28]
 800d932:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800d936:	f853 2b04 	ldr.w	r2, [r3], #4
 800d93a:	f8ad 1016 	strh.w	r1, [sp, #22]
 800d93e:	6800      	ldr	r0, [r0, #0]
 800d940:	9301      	str	r3, [sp, #4]
 800d942:	a902      	add	r1, sp, #8
 800d944:	f000 f820 	bl	800d988 <_svfprintf_r>
 800d948:	9b02      	ldr	r3, [sp, #8]
 800d94a:	2200      	movs	r2, #0
 800d94c:	701a      	strb	r2, [r3, #0]
 800d94e:	b01c      	add	sp, #112	; 0x70
 800d950:	f85d eb04 	ldr.w	lr, [sp], #4
 800d954:	b003      	add	sp, #12
 800d956:	4770      	bx	lr
 800d958:	200000fc 	.word	0x200000fc

0800d95c <strncmp>:
 800d95c:	b530      	push	{r4, r5, lr}
 800d95e:	b182      	cbz	r2, 800d982 <strncmp+0x26>
 800d960:	1e45      	subs	r5, r0, #1
 800d962:	3901      	subs	r1, #1
 800d964:	f815 3f01 	ldrb.w	r3, [r5, #1]!
 800d968:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800d96c:	42a3      	cmp	r3, r4
 800d96e:	d106      	bne.n	800d97e <strncmp+0x22>
 800d970:	43ec      	mvns	r4, r5
 800d972:	4414      	add	r4, r2
 800d974:	42e0      	cmn	r0, r4
 800d976:	d001      	beq.n	800d97c <strncmp+0x20>
 800d978:	2b00      	cmp	r3, #0
 800d97a:	d1f3      	bne.n	800d964 <strncmp+0x8>
 800d97c:	461c      	mov	r4, r3
 800d97e:	1b18      	subs	r0, r3, r4
 800d980:	bd30      	pop	{r4, r5, pc}
 800d982:	4610      	mov	r0, r2
 800d984:	bd30      	pop	{r4, r5, pc}
	...

0800d988 <_svfprintf_r>:
 800d988:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d98c:	b0bd      	sub	sp, #244	; 0xf4
 800d98e:	468b      	mov	fp, r1
 800d990:	9205      	str	r2, [sp, #20]
 800d992:	461f      	mov	r7, r3
 800d994:	4682      	mov	sl, r0
 800d996:	f002 f965 	bl	800fc64 <_localeconv_r>
 800d99a:	6803      	ldr	r3, [r0, #0]
 800d99c:	930d      	str	r3, [sp, #52]	; 0x34
 800d99e:	4618      	mov	r0, r3
 800d9a0:	f7fa fda8 	bl	80084f4 <strlen>
 800d9a4:	f8bb 300c 	ldrh.w	r3, [fp, #12]
 800d9a8:	9008      	str	r0, [sp, #32]
 800d9aa:	0619      	lsls	r1, r3, #24
 800d9ac:	d515      	bpl.n	800d9da <_svfprintf_r+0x52>
 800d9ae:	f8db 3010 	ldr.w	r3, [fp, #16]
 800d9b2:	b993      	cbnz	r3, 800d9da <_svfprintf_r+0x52>
 800d9b4:	2140      	movs	r1, #64	; 0x40
 800d9b6:	4650      	mov	r0, sl
 800d9b8:	f7ff fb10 	bl	800cfdc <_malloc_r>
 800d9bc:	f8cb 0000 	str.w	r0, [fp]
 800d9c0:	f8cb 0010 	str.w	r0, [fp, #16]
 800d9c4:	b930      	cbnz	r0, 800d9d4 <_svfprintf_r+0x4c>
 800d9c6:	230c      	movs	r3, #12
 800d9c8:	f8ca 3000 	str.w	r3, [sl]
 800d9cc:	f04f 30ff 	mov.w	r0, #4294967295
 800d9d0:	f000 bf95 	b.w	800e8fe <_svfprintf_r+0xf76>
 800d9d4:	2340      	movs	r3, #64	; 0x40
 800d9d6:	f8cb 3014 	str.w	r3, [fp, #20]
 800d9da:	ed9f 7b99 	vldr	d7, [pc, #612]	; 800dc40 <_svfprintf_r+0x2b8>
 800d9de:	ed8d 7b06 	vstr	d7, [sp, #24]
 800d9e2:	2300      	movs	r3, #0
 800d9e4:	ac2c      	add	r4, sp, #176	; 0xb0
 800d9e6:	941f      	str	r4, [sp, #124]	; 0x7c
 800d9e8:	9321      	str	r3, [sp, #132]	; 0x84
 800d9ea:	9320      	str	r3, [sp, #128]	; 0x80
 800d9ec:	9304      	str	r3, [sp, #16]
 800d9ee:	9311      	str	r3, [sp, #68]	; 0x44
 800d9f0:	9310      	str	r3, [sp, #64]	; 0x40
 800d9f2:	930a      	str	r3, [sp, #40]	; 0x28
 800d9f4:	9d05      	ldr	r5, [sp, #20]
 800d9f6:	462b      	mov	r3, r5
 800d9f8:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d9fc:	b11a      	cbz	r2, 800da06 <_svfprintf_r+0x7e>
 800d9fe:	2a25      	cmp	r2, #37	; 0x25
 800da00:	d001      	beq.n	800da06 <_svfprintf_r+0x7e>
 800da02:	461d      	mov	r5, r3
 800da04:	e7f7      	b.n	800d9f6 <_svfprintf_r+0x6e>
 800da06:	9b05      	ldr	r3, [sp, #20]
 800da08:	1aee      	subs	r6, r5, r3
 800da0a:	d017      	beq.n	800da3c <_svfprintf_r+0xb4>
 800da0c:	e884 0048 	stmia.w	r4, {r3, r6}
 800da10:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800da12:	4433      	add	r3, r6
 800da14:	9321      	str	r3, [sp, #132]	; 0x84
 800da16:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800da18:	3301      	adds	r3, #1
 800da1a:	2b07      	cmp	r3, #7
 800da1c:	9320      	str	r3, [sp, #128]	; 0x80
 800da1e:	dc01      	bgt.n	800da24 <_svfprintf_r+0x9c>
 800da20:	3408      	adds	r4, #8
 800da22:	e008      	b.n	800da36 <_svfprintf_r+0xae>
 800da24:	aa1f      	add	r2, sp, #124	; 0x7c
 800da26:	4659      	mov	r1, fp
 800da28:	4650      	mov	r0, sl
 800da2a:	f002 fca0 	bl	801036e <__ssprint_r>
 800da2e:	2800      	cmp	r0, #0
 800da30:	f040 862c 	bne.w	800e68c <_svfprintf_r+0xd04>
 800da34:	ac2c      	add	r4, sp, #176	; 0xb0
 800da36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800da38:	4433      	add	r3, r6
 800da3a:	930a      	str	r3, [sp, #40]	; 0x28
 800da3c:	782b      	ldrb	r3, [r5, #0]
 800da3e:	2b00      	cmp	r3, #0
 800da40:	f000 861d 	beq.w	800e67e <_svfprintf_r+0xcf6>
 800da44:	2200      	movs	r2, #0
 800da46:	1c6b      	adds	r3, r5, #1
 800da48:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 800da4c:	4611      	mov	r1, r2
 800da4e:	f04f 39ff 	mov.w	r9, #4294967295
 800da52:	9209      	str	r2, [sp, #36]	; 0x24
 800da54:	4615      	mov	r5, r2
 800da56:	200a      	movs	r0, #10
 800da58:	1c5e      	adds	r6, r3, #1
 800da5a:	781b      	ldrb	r3, [r3, #0]
 800da5c:	9605      	str	r6, [sp, #20]
 800da5e:	9302      	str	r3, [sp, #8]
 800da60:	9b02      	ldr	r3, [sp, #8]
 800da62:	3b20      	subs	r3, #32
 800da64:	2b58      	cmp	r3, #88	; 0x58
 800da66:	f200 8263 	bhi.w	800df30 <_svfprintf_r+0x5a8>
 800da6a:	e8df f013 	tbh	[pc, r3, lsl #1]
 800da6e:	005c      	.short	0x005c
 800da70:	02610261 	.word	0x02610261
 800da74:	0261006b 	.word	0x0261006b
 800da78:	02610261 	.word	0x02610261
 800da7c:	02610261 	.word	0x02610261
 800da80:	006e0261 	.word	0x006e0261
 800da84:	02610059 	.word	0x02610059
 800da88:	007c0079 	.word	0x007c0079
 800da8c:	00a30261 	.word	0x00a30261
 800da90:	00a600a6 	.word	0x00a600a6
 800da94:	00a600a6 	.word	0x00a600a6
 800da98:	00a600a6 	.word	0x00a600a6
 800da9c:	00a600a6 	.word	0x00a600a6
 800daa0:	026100a6 	.word	0x026100a6
 800daa4:	02610261 	.word	0x02610261
 800daa8:	02610261 	.word	0x02610261
 800daac:	02610261 	.word	0x02610261
 800dab0:	02610261 	.word	0x02610261
 800dab4:	00d60261 	.word	0x00d60261
 800dab8:	0261010b 	.word	0x0261010b
 800dabc:	0261010b 	.word	0x0261010b
 800dac0:	02610261 	.word	0x02610261
 800dac4:	00b90261 	.word	0x00b90261
 800dac8:	02610261 	.word	0x02610261
 800dacc:	02610152 	.word	0x02610152
 800dad0:	02610261 	.word	0x02610261
 800dad4:	02610261 	.word	0x02610261
 800dad8:	02610199 	.word	0x02610199
 800dadc:	00660261 	.word	0x00660261
 800dae0:	02610261 	.word	0x02610261
 800dae4:	02610261 	.word	0x02610261
 800dae8:	02610261 	.word	0x02610261
 800daec:	02610261 	.word	0x02610261
 800daf0:	02610261 	.word	0x02610261
 800daf4:	006100cd 	.word	0x006100cd
 800daf8:	010b010b 	.word	0x010b010b
 800dafc:	00bc010b 	.word	0x00bc010b
 800db00:	02610061 	.word	0x02610061
 800db04:	00bf0261 	.word	0x00bf0261
 800db08:	01340261 	.word	0x01340261
 800db0c:	016f0154 	.word	0x016f0154
 800db10:	026100ca 	.word	0x026100ca
 800db14:	02610180 	.word	0x02610180
 800db18:	0261019b 	.word	0x0261019b
 800db1c:	01b30261 	.word	0x01b30261
 800db20:	2201      	movs	r2, #1
 800db22:	212b      	movs	r1, #43	; 0x2b
 800db24:	e002      	b.n	800db2c <_svfprintf_r+0x1a4>
 800db26:	b909      	cbnz	r1, 800db2c <_svfprintf_r+0x1a4>
 800db28:	2201      	movs	r2, #1
 800db2a:	2120      	movs	r1, #32
 800db2c:	9b05      	ldr	r3, [sp, #20]
 800db2e:	e793      	b.n	800da58 <_svfprintf_r+0xd0>
 800db30:	2a00      	cmp	r2, #0
 800db32:	d077      	beq.n	800dc24 <_svfprintf_r+0x29c>
 800db34:	f88d 105f 	strb.w	r1, [sp, #95]	; 0x5f
 800db38:	e074      	b.n	800dc24 <_svfprintf_r+0x29c>
 800db3a:	b10a      	cbz	r2, 800db40 <_svfprintf_r+0x1b8>
 800db3c:	f88d 105f 	strb.w	r1, [sp, #95]	; 0x5f
 800db40:	4b41      	ldr	r3, [pc, #260]	; (800dc48 <_svfprintf_r+0x2c0>)
 800db42:	e14b      	b.n	800dddc <_svfprintf_r+0x454>
 800db44:	f045 0501 	orr.w	r5, r5, #1
 800db48:	e7f0      	b.n	800db2c <_svfprintf_r+0x1a4>
 800db4a:	683e      	ldr	r6, [r7, #0]
 800db4c:	9609      	str	r6, [sp, #36]	; 0x24
 800db4e:	2e00      	cmp	r6, #0
 800db50:	f107 0304 	add.w	r3, r7, #4
 800db54:	db01      	blt.n	800db5a <_svfprintf_r+0x1d2>
 800db56:	461f      	mov	r7, r3
 800db58:	e7e8      	b.n	800db2c <_svfprintf_r+0x1a4>
 800db5a:	4276      	negs	r6, r6
 800db5c:	9609      	str	r6, [sp, #36]	; 0x24
 800db5e:	461f      	mov	r7, r3
 800db60:	f045 0504 	orr.w	r5, r5, #4
 800db64:	e7e2      	b.n	800db2c <_svfprintf_r+0x1a4>
 800db66:	9e05      	ldr	r6, [sp, #20]
 800db68:	9b05      	ldr	r3, [sp, #20]
 800db6a:	7836      	ldrb	r6, [r6, #0]
 800db6c:	9602      	str	r6, [sp, #8]
 800db6e:	2e2a      	cmp	r6, #42	; 0x2a
 800db70:	f103 0301 	add.w	r3, r3, #1
 800db74:	d002      	beq.n	800db7c <_svfprintf_r+0x1f4>
 800db76:	f04f 0900 	mov.w	r9, #0
 800db7a:	e00a      	b.n	800db92 <_svfprintf_r+0x20a>
 800db7c:	f8d7 9000 	ldr.w	r9, [r7]
 800db80:	9305      	str	r3, [sp, #20]
 800db82:	1d3e      	adds	r6, r7, #4
 800db84:	f1b9 0f00 	cmp.w	r9, #0
 800db88:	4637      	mov	r7, r6
 800db8a:	dacf      	bge.n	800db2c <_svfprintf_r+0x1a4>
 800db8c:	f04f 39ff 	mov.w	r9, #4294967295
 800db90:	e7cc      	b.n	800db2c <_svfprintf_r+0x1a4>
 800db92:	9305      	str	r3, [sp, #20]
 800db94:	9b02      	ldr	r3, [sp, #8]
 800db96:	3b30      	subs	r3, #48	; 0x30
 800db98:	2b09      	cmp	r3, #9
 800db9a:	d808      	bhi.n	800dbae <_svfprintf_r+0x226>
 800db9c:	fb00 3909 	mla	r9, r0, r9, r3
 800dba0:	9b05      	ldr	r3, [sp, #20]
 800dba2:	461e      	mov	r6, r3
 800dba4:	f816 3b01 	ldrb.w	r3, [r6], #1
 800dba8:	9302      	str	r3, [sp, #8]
 800dbaa:	4633      	mov	r3, r6
 800dbac:	e7f1      	b.n	800db92 <_svfprintf_r+0x20a>
 800dbae:	ea49 79e9 	orr.w	r9, r9, r9, asr #31
 800dbb2:	e755      	b.n	800da60 <_svfprintf_r+0xd8>
 800dbb4:	f045 0580 	orr.w	r5, r5, #128	; 0x80
 800dbb8:	e7b8      	b.n	800db2c <_svfprintf_r+0x1a4>
 800dbba:	2300      	movs	r3, #0
 800dbbc:	9309      	str	r3, [sp, #36]	; 0x24
 800dbbe:	9b02      	ldr	r3, [sp, #8]
 800dbc0:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800dbc2:	3b30      	subs	r3, #48	; 0x30
 800dbc4:	fb00 3306 	mla	r3, r0, r6, r3
 800dbc8:	9309      	str	r3, [sp, #36]	; 0x24
 800dbca:	9b05      	ldr	r3, [sp, #20]
 800dbcc:	461e      	mov	r6, r3
 800dbce:	f816 3b01 	ldrb.w	r3, [r6], #1
 800dbd2:	9302      	str	r3, [sp, #8]
 800dbd4:	9b02      	ldr	r3, [sp, #8]
 800dbd6:	9605      	str	r6, [sp, #20]
 800dbd8:	3b30      	subs	r3, #48	; 0x30
 800dbda:	2b09      	cmp	r3, #9
 800dbdc:	d9ef      	bls.n	800dbbe <_svfprintf_r+0x236>
 800dbde:	e73f      	b.n	800da60 <_svfprintf_r+0xd8>
 800dbe0:	f045 0508 	orr.w	r5, r5, #8
 800dbe4:	e7a2      	b.n	800db2c <_svfprintf_r+0x1a4>
 800dbe6:	f045 0540 	orr.w	r5, r5, #64	; 0x40
 800dbea:	e79f      	b.n	800db2c <_svfprintf_r+0x1a4>
 800dbec:	9b05      	ldr	r3, [sp, #20]
 800dbee:	781b      	ldrb	r3, [r3, #0]
 800dbf0:	2b6c      	cmp	r3, #108	; 0x6c
 800dbf2:	d103      	bne.n	800dbfc <_svfprintf_r+0x274>
 800dbf4:	9b05      	ldr	r3, [sp, #20]
 800dbf6:	3301      	adds	r3, #1
 800dbf8:	9305      	str	r3, [sp, #20]
 800dbfa:	e002      	b.n	800dc02 <_svfprintf_r+0x27a>
 800dbfc:	f045 0510 	orr.w	r5, r5, #16
 800dc00:	e794      	b.n	800db2c <_svfprintf_r+0x1a4>
 800dc02:	f045 0520 	orr.w	r5, r5, #32
 800dc06:	e791      	b.n	800db2c <_svfprintf_r+0x1a4>
 800dc08:	1d3b      	adds	r3, r7, #4
 800dc0a:	9303      	str	r3, [sp, #12]
 800dc0c:	2600      	movs	r6, #0
 800dc0e:	683b      	ldr	r3, [r7, #0]
 800dc10:	f88d 3088 	strb.w	r3, [sp, #136]	; 0x88
 800dc14:	f88d 605f 	strb.w	r6, [sp, #95]	; 0x5f
 800dc18:	e199      	b.n	800df4e <_svfprintf_r+0x5c6>
 800dc1a:	b10a      	cbz	r2, 800dc20 <_svfprintf_r+0x298>
 800dc1c:	f88d 105f 	strb.w	r1, [sp, #95]	; 0x5f
 800dc20:	f045 0510 	orr.w	r5, r5, #16
 800dc24:	06aa      	lsls	r2, r5, #26
 800dc26:	d511      	bpl.n	800dc4c <_svfprintf_r+0x2c4>
 800dc28:	3707      	adds	r7, #7
 800dc2a:	f027 0707 	bic.w	r7, r7, #7
 800dc2e:	f107 0308 	add.w	r3, r7, #8
 800dc32:	9303      	str	r3, [sp, #12]
 800dc34:	e9d7 6700 	ldrd	r6, r7, [r7]
 800dc38:	e017      	b.n	800dc6a <_svfprintf_r+0x2e2>
 800dc3a:	bf00      	nop
 800dc3c:	f3af 8000 	nop.w
	...
 800dc48:	080118bc 	.word	0x080118bc
 800dc4c:	f015 0f10 	tst.w	r5, #16
 800dc50:	f107 0304 	add.w	r3, r7, #4
 800dc54:	d002      	beq.n	800dc5c <_svfprintf_r+0x2d4>
 800dc56:	9303      	str	r3, [sp, #12]
 800dc58:	683e      	ldr	r6, [r7, #0]
 800dc5a:	e005      	b.n	800dc68 <_svfprintf_r+0x2e0>
 800dc5c:	683e      	ldr	r6, [r7, #0]
 800dc5e:	9303      	str	r3, [sp, #12]
 800dc60:	f015 0f40 	tst.w	r5, #64	; 0x40
 800dc64:	bf18      	it	ne
 800dc66:	b236      	sxthne	r6, r6
 800dc68:	17f7      	asrs	r7, r6, #31
 800dc6a:	2e00      	cmp	r6, #0
 800dc6c:	f177 0300 	sbcs.w	r3, r7, #0
 800dc70:	f280 80de 	bge.w	800de30 <_svfprintf_r+0x4a8>
 800dc74:	4276      	negs	r6, r6
 800dc76:	f04f 032d 	mov.w	r3, #45	; 0x2d
 800dc7a:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
 800dc7e:	f88d 305f 	strb.w	r3, [sp, #95]	; 0x5f
 800dc82:	e0d5      	b.n	800de30 <_svfprintf_r+0x4a8>
 800dc84:	b10a      	cbz	r2, 800dc8a <_svfprintf_r+0x302>
 800dc86:	f88d 105f 	strb.w	r1, [sp, #95]	; 0x5f
 800dc8a:	3707      	adds	r7, #7
 800dc8c:	f027 0707 	bic.w	r7, r7, #7
 800dc90:	f107 0308 	add.w	r3, r7, #8
 800dc94:	9303      	str	r3, [sp, #12]
 800dc96:	ed97 7b00 	vldr	d7, [r7]
 800dc9a:	ed8d 7b06 	vstr	d7, [sp, #24]
 800dc9e:	9b06      	ldr	r3, [sp, #24]
 800dca0:	9312      	str	r3, [sp, #72]	; 0x48
 800dca2:	9b07      	ldr	r3, [sp, #28]
 800dca4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800dca8:	9313      	str	r3, [sp, #76]	; 0x4c
 800dcaa:	f04f 32ff 	mov.w	r2, #4294967295
 800dcae:	4bab      	ldr	r3, [pc, #684]	; (800df5c <_svfprintf_r+0x5d4>)
 800dcb0:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
 800dcb4:	f7fb f878 	bl	8008da8 <__aeabi_dcmpun>
 800dcb8:	2800      	cmp	r0, #0
 800dcba:	f040 84f1 	bne.w	800e6a0 <_svfprintf_r+0xd18>
 800dcbe:	f04f 32ff 	mov.w	r2, #4294967295
 800dcc2:	4ba6      	ldr	r3, [pc, #664]	; (800df5c <_svfprintf_r+0x5d4>)
 800dcc4:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
 800dcc8:	f7fb f850 	bl	8008d6c <__aeabi_dcmple>
 800dccc:	2800      	cmp	r0, #0
 800dcce:	f040 84e7 	bne.w	800e6a0 <_svfprintf_r+0xd18>
 800dcd2:	f000 bdfd 	b.w	800e8d0 <_svfprintf_r+0xf48>
 800dcd6:	b10a      	cbz	r2, 800dcdc <_svfprintf_r+0x354>
 800dcd8:	f88d 105f 	strb.w	r1, [sp, #95]	; 0x5f
 800dcdc:	f015 0f20 	tst.w	r5, #32
 800dce0:	f107 0304 	add.w	r3, r7, #4
 800dce4:	d007      	beq.n	800dcf6 <_svfprintf_r+0x36e>
 800dce6:	990a      	ldr	r1, [sp, #40]	; 0x28
 800dce8:	683a      	ldr	r2, [r7, #0]
 800dcea:	17ce      	asrs	r6, r1, #31
 800dcec:	4608      	mov	r0, r1
 800dcee:	4631      	mov	r1, r6
 800dcf0:	e9c2 0100 	strd	r0, r1, [r2]
 800dcf4:	e00b      	b.n	800dd0e <_svfprintf_r+0x386>
 800dcf6:	06e9      	lsls	r1, r5, #27
 800dcf8:	d406      	bmi.n	800dd08 <_svfprintf_r+0x380>
 800dcfa:	066a      	lsls	r2, r5, #25
 800dcfc:	d504      	bpl.n	800dd08 <_svfprintf_r+0x380>
 800dcfe:	683a      	ldr	r2, [r7, #0]
 800dd00:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 800dd04:	8011      	strh	r1, [r2, #0]
 800dd06:	e002      	b.n	800dd0e <_svfprintf_r+0x386>
 800dd08:	683a      	ldr	r2, [r7, #0]
 800dd0a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800dd0c:	6011      	str	r1, [r2, #0]
 800dd0e:	461f      	mov	r7, r3
 800dd10:	e670      	b.n	800d9f4 <_svfprintf_r+0x6c>
 800dd12:	f045 0510 	orr.w	r5, r5, #16
 800dd16:	f015 0320 	ands.w	r3, r5, #32
 800dd1a:	d009      	beq.n	800dd30 <_svfprintf_r+0x3a8>
 800dd1c:	3707      	adds	r7, #7
 800dd1e:	f027 0707 	bic.w	r7, r7, #7
 800dd22:	f107 0308 	add.w	r3, r7, #8
 800dd26:	e9d7 6700 	ldrd	r6, r7, [r7]
 800dd2a:	9303      	str	r3, [sp, #12]
 800dd2c:	2300      	movs	r3, #0
 800dd2e:	e07b      	b.n	800de28 <_svfprintf_r+0x4a0>
 800dd30:	1d3a      	adds	r2, r7, #4
 800dd32:	f015 0110 	ands.w	r1, r5, #16
 800dd36:	9203      	str	r2, [sp, #12]
 800dd38:	d105      	bne.n	800dd46 <_svfprintf_r+0x3be>
 800dd3a:	f015 0340 	ands.w	r3, r5, #64	; 0x40
 800dd3e:	d002      	beq.n	800dd46 <_svfprintf_r+0x3be>
 800dd40:	883e      	ldrh	r6, [r7, #0]
 800dd42:	2700      	movs	r7, #0
 800dd44:	e7f2      	b.n	800dd2c <_svfprintf_r+0x3a4>
 800dd46:	683e      	ldr	r6, [r7, #0]
 800dd48:	2700      	movs	r7, #0
 800dd4a:	e06d      	b.n	800de28 <_svfprintf_r+0x4a0>
 800dd4c:	1d3b      	adds	r3, r7, #4
 800dd4e:	9303      	str	r3, [sp, #12]
 800dd50:	2330      	movs	r3, #48	; 0x30
 800dd52:	2278      	movs	r2, #120	; 0x78
 800dd54:	f88d 3060 	strb.w	r3, [sp, #96]	; 0x60
 800dd58:	4b81      	ldr	r3, [pc, #516]	; (800df60 <_svfprintf_r+0x5d8>)
 800dd5a:	683e      	ldr	r6, [r7, #0]
 800dd5c:	9311      	str	r3, [sp, #68]	; 0x44
 800dd5e:	2700      	movs	r7, #0
 800dd60:	f045 0502 	orr.w	r5, r5, #2
 800dd64:	f88d 2061 	strb.w	r2, [sp, #97]	; 0x61
 800dd68:	2302      	movs	r3, #2
 800dd6a:	9202      	str	r2, [sp, #8]
 800dd6c:	e05c      	b.n	800de28 <_svfprintf_r+0x4a0>
 800dd6e:	2600      	movs	r6, #0
 800dd70:	1d3b      	adds	r3, r7, #4
 800dd72:	45b1      	cmp	r9, r6
 800dd74:	9303      	str	r3, [sp, #12]
 800dd76:	f8d7 8000 	ldr.w	r8, [r7]
 800dd7a:	f88d 605f 	strb.w	r6, [sp, #95]	; 0x5f
 800dd7e:	db0a      	blt.n	800dd96 <_svfprintf_r+0x40e>
 800dd80:	464a      	mov	r2, r9
 800dd82:	4631      	mov	r1, r6
 800dd84:	4640      	mov	r0, r8
 800dd86:	f7fa fb5b 	bl	8008440 <memchr>
 800dd8a:	2800      	cmp	r0, #0
 800dd8c:	f000 80ea 	beq.w	800df64 <_svfprintf_r+0x5dc>
 800dd90:	ebc8 0900 	rsb	r9, r8, r0
 800dd94:	e0e7      	b.n	800df66 <_svfprintf_r+0x5de>
 800dd96:	4640      	mov	r0, r8
 800dd98:	f7fa fbac 	bl	80084f4 <strlen>
 800dd9c:	4681      	mov	r9, r0
 800dd9e:	e0e2      	b.n	800df66 <_svfprintf_r+0x5de>
 800dda0:	f045 0510 	orr.w	r5, r5, #16
 800dda4:	06ae      	lsls	r6, r5, #26
 800dda6:	d508      	bpl.n	800ddba <_svfprintf_r+0x432>
 800dda8:	3707      	adds	r7, #7
 800ddaa:	f027 0707 	bic.w	r7, r7, #7
 800ddae:	f107 0308 	add.w	r3, r7, #8
 800ddb2:	9303      	str	r3, [sp, #12]
 800ddb4:	e9d7 6700 	ldrd	r6, r7, [r7]
 800ddb8:	e00a      	b.n	800ddd0 <_svfprintf_r+0x448>
 800ddba:	1d3b      	adds	r3, r7, #4
 800ddbc:	f015 0f10 	tst.w	r5, #16
 800ddc0:	9303      	str	r3, [sp, #12]
 800ddc2:	d103      	bne.n	800ddcc <_svfprintf_r+0x444>
 800ddc4:	0668      	lsls	r0, r5, #25
 800ddc6:	d501      	bpl.n	800ddcc <_svfprintf_r+0x444>
 800ddc8:	883e      	ldrh	r6, [r7, #0]
 800ddca:	e000      	b.n	800ddce <_svfprintf_r+0x446>
 800ddcc:	683e      	ldr	r6, [r7, #0]
 800ddce:	2700      	movs	r7, #0
 800ddd0:	2301      	movs	r3, #1
 800ddd2:	e029      	b.n	800de28 <_svfprintf_r+0x4a0>
 800ddd4:	b10a      	cbz	r2, 800ddda <_svfprintf_r+0x452>
 800ddd6:	f88d 105f 	strb.w	r1, [sp, #95]	; 0x5f
 800ddda:	4b61      	ldr	r3, [pc, #388]	; (800df60 <_svfprintf_r+0x5d8>)
 800dddc:	9311      	str	r3, [sp, #68]	; 0x44
 800ddde:	06a9      	lsls	r1, r5, #26
 800dde0:	d508      	bpl.n	800ddf4 <_svfprintf_r+0x46c>
 800dde2:	3707      	adds	r7, #7
 800dde4:	f027 0707 	bic.w	r7, r7, #7
 800dde8:	f107 0308 	add.w	r3, r7, #8
 800ddec:	9303      	str	r3, [sp, #12]
 800ddee:	e9d7 6700 	ldrd	r6, r7, [r7]
 800ddf2:	e00a      	b.n	800de0a <_svfprintf_r+0x482>
 800ddf4:	1d3b      	adds	r3, r7, #4
 800ddf6:	f015 0f10 	tst.w	r5, #16
 800ddfa:	9303      	str	r3, [sp, #12]
 800ddfc:	d103      	bne.n	800de06 <_svfprintf_r+0x47e>
 800ddfe:	066a      	lsls	r2, r5, #25
 800de00:	d501      	bpl.n	800de06 <_svfprintf_r+0x47e>
 800de02:	883e      	ldrh	r6, [r7, #0]
 800de04:	e000      	b.n	800de08 <_svfprintf_r+0x480>
 800de06:	683e      	ldr	r6, [r7, #0]
 800de08:	2700      	movs	r7, #0
 800de0a:	07eb      	lsls	r3, r5, #31
 800de0c:	d50b      	bpl.n	800de26 <_svfprintf_r+0x49e>
 800de0e:	ea56 0307 	orrs.w	r3, r6, r7
 800de12:	d008      	beq.n	800de26 <_svfprintf_r+0x49e>
 800de14:	2330      	movs	r3, #48	; 0x30
 800de16:	f88d 3060 	strb.w	r3, [sp, #96]	; 0x60
 800de1a:	f89d 3008 	ldrb.w	r3, [sp, #8]
 800de1e:	f88d 3061 	strb.w	r3, [sp, #97]	; 0x61
 800de22:	f045 0502 	orr.w	r5, r5, #2
 800de26:	2302      	movs	r3, #2
 800de28:	2200      	movs	r2, #0
 800de2a:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 800de2e:	e000      	b.n	800de32 <_svfprintf_r+0x4aa>
 800de30:	2301      	movs	r3, #1
 800de32:	f1b9 0f00 	cmp.w	r9, #0
 800de36:	f2c0 855c 	blt.w	800e8f2 <_svfprintf_r+0xf6a>
 800de3a:	ea56 0207 	orrs.w	r2, r6, r7
 800de3e:	f025 0180 	bic.w	r1, r5, #128	; 0x80
 800de42:	d103      	bne.n	800de4c <_svfprintf_r+0x4c4>
 800de44:	f1b9 0f00 	cmp.w	r9, #0
 800de48:	d05f      	beq.n	800df0a <_svfprintf_r+0x582>
 800de4a:	e006      	b.n	800de5a <_svfprintf_r+0x4d2>
 800de4c:	460d      	mov	r5, r1
 800de4e:	2b01      	cmp	r3, #1
 800de50:	d025      	beq.n	800de9e <_svfprintf_r+0x516>
 800de52:	2b02      	cmp	r3, #2
 800de54:	d046      	beq.n	800dee4 <_svfprintf_r+0x55c>
 800de56:	4629      	mov	r1, r5
 800de58:	e007      	b.n	800de6a <_svfprintf_r+0x4e2>
 800de5a:	460d      	mov	r5, r1
 800de5c:	2b01      	cmp	r3, #1
 800de5e:	d022      	beq.n	800dea6 <_svfprintf_r+0x51e>
 800de60:	2b02      	cmp	r3, #2
 800de62:	d03d      	beq.n	800dee0 <_svfprintf_r+0x558>
 800de64:	4629      	mov	r1, r5
 800de66:	2600      	movs	r6, #0
 800de68:	2700      	movs	r7, #0
 800de6a:	f10d 08b0 	add.w	r8, sp, #176	; 0xb0
 800de6e:	08f2      	lsrs	r2, r6, #3
 800de70:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
 800de74:	08f8      	lsrs	r0, r7, #3
 800de76:	f006 0307 	and.w	r3, r6, #7
 800de7a:	4607      	mov	r7, r0
 800de7c:	4616      	mov	r6, r2
 800de7e:	3330      	adds	r3, #48	; 0x30
 800de80:	ea56 0207 	orrs.w	r2, r6, r7
 800de84:	f808 3d01 	strb.w	r3, [r8, #-1]!
 800de88:	d1f1      	bne.n	800de6e <_svfprintf_r+0x4e6>
 800de8a:	07e8      	lsls	r0, r5, #31
 800de8c:	d548      	bpl.n	800df20 <_svfprintf_r+0x598>
 800de8e:	2b30      	cmp	r3, #48	; 0x30
 800de90:	d046      	beq.n	800df20 <_svfprintf_r+0x598>
 800de92:	2330      	movs	r3, #48	; 0x30
 800de94:	f808 3c01 	strb.w	r3, [r8, #-1]
 800de98:	f108 38ff 	add.w	r8, r8, #4294967295
 800de9c:	e040      	b.n	800df20 <_svfprintf_r+0x598>
 800de9e:	2f00      	cmp	r7, #0
 800dea0:	bf08      	it	eq
 800dea2:	2e0a      	cmpeq	r6, #10
 800dea4:	d205      	bcs.n	800deb2 <_svfprintf_r+0x52a>
 800dea6:	f10d 08f0 	add.w	r8, sp, #240	; 0xf0
 800deaa:	3630      	adds	r6, #48	; 0x30
 800deac:	f808 6d41 	strb.w	r6, [r8, #-65]!
 800deb0:	e029      	b.n	800df06 <_svfprintf_r+0x57e>
 800deb2:	f10d 08b0 	add.w	r8, sp, #176	; 0xb0
 800deb6:	4630      	mov	r0, r6
 800deb8:	4639      	mov	r1, r7
 800deba:	220a      	movs	r2, #10
 800debc:	2300      	movs	r3, #0
 800debe:	f7fa ffb1 	bl	8008e24 <__aeabi_uldivmod>
 800dec2:	3230      	adds	r2, #48	; 0x30
 800dec4:	f808 2d01 	strb.w	r2, [r8, #-1]!
 800dec8:	2300      	movs	r3, #0
 800deca:	4630      	mov	r0, r6
 800decc:	4639      	mov	r1, r7
 800dece:	220a      	movs	r2, #10
 800ded0:	f7fa ffa8 	bl	8008e24 <__aeabi_uldivmod>
 800ded4:	4606      	mov	r6, r0
 800ded6:	460f      	mov	r7, r1
 800ded8:	ea56 0307 	orrs.w	r3, r6, r7
 800dedc:	d1eb      	bne.n	800deb6 <_svfprintf_r+0x52e>
 800dede:	e012      	b.n	800df06 <_svfprintf_r+0x57e>
 800dee0:	2600      	movs	r6, #0
 800dee2:	2700      	movs	r7, #0
 800dee4:	f10d 08b0 	add.w	r8, sp, #176	; 0xb0
 800dee8:	f006 030f 	and.w	r3, r6, #15
 800deec:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800deee:	5cd3      	ldrb	r3, [r2, r3]
 800def0:	f808 3d01 	strb.w	r3, [r8, #-1]!
 800def4:	0933      	lsrs	r3, r6, #4
 800def6:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
 800defa:	093a      	lsrs	r2, r7, #4
 800defc:	461e      	mov	r6, r3
 800defe:	4617      	mov	r7, r2
 800df00:	ea56 0307 	orrs.w	r3, r6, r7
 800df04:	d1f0      	bne.n	800dee8 <_svfprintf_r+0x560>
 800df06:	4629      	mov	r1, r5
 800df08:	e00a      	b.n	800df20 <_svfprintf_r+0x598>
 800df0a:	b93b      	cbnz	r3, 800df1c <_svfprintf_r+0x594>
 800df0c:	07ea      	lsls	r2, r5, #31
 800df0e:	d505      	bpl.n	800df1c <_svfprintf_r+0x594>
 800df10:	f10d 08f0 	add.w	r8, sp, #240	; 0xf0
 800df14:	2330      	movs	r3, #48	; 0x30
 800df16:	f808 3d41 	strb.w	r3, [r8, #-65]!
 800df1a:	e001      	b.n	800df20 <_svfprintf_r+0x598>
 800df1c:	f10d 08b0 	add.w	r8, sp, #176	; 0xb0
 800df20:	464e      	mov	r6, r9
 800df22:	f10d 09b0 	add.w	r9, sp, #176	; 0xb0
 800df26:	ebc8 0909 	rsb	r9, r8, r9
 800df2a:	460d      	mov	r5, r1
 800df2c:	2700      	movs	r7, #0
 800df2e:	e01b      	b.n	800df68 <_svfprintf_r+0x5e0>
 800df30:	b10a      	cbz	r2, 800df36 <_svfprintf_r+0x5ae>
 800df32:	f88d 105f 	strb.w	r1, [sp, #95]	; 0x5f
 800df36:	9b02      	ldr	r3, [sp, #8]
 800df38:	2b00      	cmp	r3, #0
 800df3a:	f000 83a0 	beq.w	800e67e <_svfprintf_r+0xcf6>
 800df3e:	f89d 3008 	ldrb.w	r3, [sp, #8]
 800df42:	f88d 3088 	strb.w	r3, [sp, #136]	; 0x88
 800df46:	2600      	movs	r6, #0
 800df48:	f88d 605f 	strb.w	r6, [sp, #95]	; 0x5f
 800df4c:	9703      	str	r7, [sp, #12]
 800df4e:	f04f 0901 	mov.w	r9, #1
 800df52:	4637      	mov	r7, r6
 800df54:	f10d 0888 	add.w	r8, sp, #136	; 0x88
 800df58:	e006      	b.n	800df68 <_svfprintf_r+0x5e0>
 800df5a:	bf00      	nop
 800df5c:	7fefffff 	.word	0x7fefffff
 800df60:	080118cd 	.word	0x080118cd
 800df64:	4606      	mov	r6, r0
 800df66:	4637      	mov	r7, r6
 800df68:	454e      	cmp	r6, r9
 800df6a:	4633      	mov	r3, r6
 800df6c:	bfb8      	it	lt
 800df6e:	464b      	movlt	r3, r9
 800df70:	930b      	str	r3, [sp, #44]	; 0x2c
 800df72:	f89d 305f 	ldrb.w	r3, [sp, #95]	; 0x5f
 800df76:	b113      	cbz	r3, 800df7e <_svfprintf_r+0x5f6>
 800df78:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800df7a:	3301      	adds	r3, #1
 800df7c:	930b      	str	r3, [sp, #44]	; 0x2c
 800df7e:	f015 0302 	ands.w	r3, r5, #2
 800df82:	9314      	str	r3, [sp, #80]	; 0x50
 800df84:	bf1e      	ittt	ne
 800df86:	9b0b      	ldrne	r3, [sp, #44]	; 0x2c
 800df88:	3302      	addne	r3, #2
 800df8a:	930b      	strne	r3, [sp, #44]	; 0x2c
 800df8c:	f015 0384 	ands.w	r3, r5, #132	; 0x84
 800df90:	9315      	str	r3, [sp, #84]	; 0x54
 800df92:	d139      	bne.n	800e008 <_svfprintf_r+0x680>
 800df94:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800df96:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800df98:	1a9b      	subs	r3, r3, r2
 800df9a:	2b00      	cmp	r3, #0
 800df9c:	930c      	str	r3, [sp, #48]	; 0x30
 800df9e:	dd33      	ble.n	800e008 <_svfprintf_r+0x680>
 800dfa0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800dfa2:	2b10      	cmp	r3, #16
 800dfa4:	4ba6      	ldr	r3, [pc, #664]	; (800e240 <_svfprintf_r+0x8b8>)
 800dfa6:	6023      	str	r3, [r4, #0]
 800dfa8:	dd18      	ble.n	800dfdc <_svfprintf_r+0x654>
 800dfaa:	2310      	movs	r3, #16
 800dfac:	6063      	str	r3, [r4, #4]
 800dfae:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800dfb0:	3310      	adds	r3, #16
 800dfb2:	9321      	str	r3, [sp, #132]	; 0x84
 800dfb4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800dfb6:	3301      	adds	r3, #1
 800dfb8:	2b07      	cmp	r3, #7
 800dfba:	9320      	str	r3, [sp, #128]	; 0x80
 800dfbc:	dc01      	bgt.n	800dfc2 <_svfprintf_r+0x63a>
 800dfbe:	3408      	adds	r4, #8
 800dfc0:	e008      	b.n	800dfd4 <_svfprintf_r+0x64c>
 800dfc2:	aa1f      	add	r2, sp, #124	; 0x7c
 800dfc4:	4659      	mov	r1, fp
 800dfc6:	4650      	mov	r0, sl
 800dfc8:	f002 f9d1 	bl	801036e <__ssprint_r>
 800dfcc:	2800      	cmp	r0, #0
 800dfce:	f040 835d 	bne.w	800e68c <_svfprintf_r+0xd04>
 800dfd2:	ac2c      	add	r4, sp, #176	; 0xb0
 800dfd4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800dfd6:	3b10      	subs	r3, #16
 800dfd8:	930c      	str	r3, [sp, #48]	; 0x30
 800dfda:	e7e1      	b.n	800dfa0 <_svfprintf_r+0x618>
 800dfdc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800dfde:	6063      	str	r3, [r4, #4]
 800dfe0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800dfe2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800dfe4:	4413      	add	r3, r2
 800dfe6:	9321      	str	r3, [sp, #132]	; 0x84
 800dfe8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800dfea:	3301      	adds	r3, #1
 800dfec:	2b07      	cmp	r3, #7
 800dfee:	9320      	str	r3, [sp, #128]	; 0x80
 800dff0:	dc01      	bgt.n	800dff6 <_svfprintf_r+0x66e>
 800dff2:	3408      	adds	r4, #8
 800dff4:	e008      	b.n	800e008 <_svfprintf_r+0x680>
 800dff6:	aa1f      	add	r2, sp, #124	; 0x7c
 800dff8:	4659      	mov	r1, fp
 800dffa:	4650      	mov	r0, sl
 800dffc:	f002 f9b7 	bl	801036e <__ssprint_r>
 800e000:	2800      	cmp	r0, #0
 800e002:	f040 8343 	bne.w	800e68c <_svfprintf_r+0xd04>
 800e006:	ac2c      	add	r4, sp, #176	; 0xb0
 800e008:	f89d 305f 	ldrb.w	r3, [sp, #95]	; 0x5f
 800e00c:	b1bb      	cbz	r3, 800e03e <_svfprintf_r+0x6b6>
 800e00e:	f10d 035f 	add.w	r3, sp, #95	; 0x5f
 800e012:	6023      	str	r3, [r4, #0]
 800e014:	2301      	movs	r3, #1
 800e016:	6063      	str	r3, [r4, #4]
 800e018:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e01a:	3301      	adds	r3, #1
 800e01c:	9321      	str	r3, [sp, #132]	; 0x84
 800e01e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800e020:	3301      	adds	r3, #1
 800e022:	2b07      	cmp	r3, #7
 800e024:	9320      	str	r3, [sp, #128]	; 0x80
 800e026:	dc01      	bgt.n	800e02c <_svfprintf_r+0x6a4>
 800e028:	3408      	adds	r4, #8
 800e02a:	e008      	b.n	800e03e <_svfprintf_r+0x6b6>
 800e02c:	aa1f      	add	r2, sp, #124	; 0x7c
 800e02e:	4659      	mov	r1, fp
 800e030:	4650      	mov	r0, sl
 800e032:	f002 f99c 	bl	801036e <__ssprint_r>
 800e036:	2800      	cmp	r0, #0
 800e038:	f040 8328 	bne.w	800e68c <_svfprintf_r+0xd04>
 800e03c:	ac2c      	add	r4, sp, #176	; 0xb0
 800e03e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800e040:	b1b3      	cbz	r3, 800e070 <_svfprintf_r+0x6e8>
 800e042:	ab18      	add	r3, sp, #96	; 0x60
 800e044:	6023      	str	r3, [r4, #0]
 800e046:	2302      	movs	r3, #2
 800e048:	6063      	str	r3, [r4, #4]
 800e04a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e04c:	3302      	adds	r3, #2
 800e04e:	9321      	str	r3, [sp, #132]	; 0x84
 800e050:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800e052:	3301      	adds	r3, #1
 800e054:	2b07      	cmp	r3, #7
 800e056:	9320      	str	r3, [sp, #128]	; 0x80
 800e058:	dc01      	bgt.n	800e05e <_svfprintf_r+0x6d6>
 800e05a:	3408      	adds	r4, #8
 800e05c:	e008      	b.n	800e070 <_svfprintf_r+0x6e8>
 800e05e:	aa1f      	add	r2, sp, #124	; 0x7c
 800e060:	4659      	mov	r1, fp
 800e062:	4650      	mov	r0, sl
 800e064:	f002 f983 	bl	801036e <__ssprint_r>
 800e068:	2800      	cmp	r0, #0
 800e06a:	f040 830f 	bne.w	800e68c <_svfprintf_r+0xd04>
 800e06e:	ac2c      	add	r4, sp, #176	; 0xb0
 800e070:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800e072:	2b80      	cmp	r3, #128	; 0x80
 800e074:	d135      	bne.n	800e0e2 <_svfprintf_r+0x75a>
 800e076:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e078:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800e07a:	1a9b      	subs	r3, r3, r2
 800e07c:	2b00      	cmp	r3, #0
 800e07e:	dd30      	ble.n	800e0e2 <_svfprintf_r+0x75a>
 800e080:	4a70      	ldr	r2, [pc, #448]	; (800e244 <_svfprintf_r+0x8bc>)
 800e082:	6022      	str	r2, [r4, #0]
 800e084:	2b10      	cmp	r3, #16
 800e086:	dd18      	ble.n	800e0ba <_svfprintf_r+0x732>
 800e088:	2210      	movs	r2, #16
 800e08a:	6062      	str	r2, [r4, #4]
 800e08c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800e08e:	3210      	adds	r2, #16
 800e090:	9221      	str	r2, [sp, #132]	; 0x84
 800e092:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800e094:	3201      	adds	r2, #1
 800e096:	2a07      	cmp	r2, #7
 800e098:	9220      	str	r2, [sp, #128]	; 0x80
 800e09a:	dc01      	bgt.n	800e0a0 <_svfprintf_r+0x718>
 800e09c:	3408      	adds	r4, #8
 800e09e:	e00a      	b.n	800e0b6 <_svfprintf_r+0x72e>
 800e0a0:	aa1f      	add	r2, sp, #124	; 0x7c
 800e0a2:	4659      	mov	r1, fp
 800e0a4:	4650      	mov	r0, sl
 800e0a6:	930c      	str	r3, [sp, #48]	; 0x30
 800e0a8:	f002 f961 	bl	801036e <__ssprint_r>
 800e0ac:	2800      	cmp	r0, #0
 800e0ae:	f040 82ed 	bne.w	800e68c <_svfprintf_r+0xd04>
 800e0b2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e0b4:	ac2c      	add	r4, sp, #176	; 0xb0
 800e0b6:	3b10      	subs	r3, #16
 800e0b8:	e7e2      	b.n	800e080 <_svfprintf_r+0x6f8>
 800e0ba:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800e0bc:	6063      	str	r3, [r4, #4]
 800e0be:	4413      	add	r3, r2
 800e0c0:	9321      	str	r3, [sp, #132]	; 0x84
 800e0c2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800e0c4:	3301      	adds	r3, #1
 800e0c6:	2b07      	cmp	r3, #7
 800e0c8:	9320      	str	r3, [sp, #128]	; 0x80
 800e0ca:	dc01      	bgt.n	800e0d0 <_svfprintf_r+0x748>
 800e0cc:	3408      	adds	r4, #8
 800e0ce:	e008      	b.n	800e0e2 <_svfprintf_r+0x75a>
 800e0d0:	aa1f      	add	r2, sp, #124	; 0x7c
 800e0d2:	4659      	mov	r1, fp
 800e0d4:	4650      	mov	r0, sl
 800e0d6:	f002 f94a 	bl	801036e <__ssprint_r>
 800e0da:	2800      	cmp	r0, #0
 800e0dc:	f040 82d6 	bne.w	800e68c <_svfprintf_r+0xd04>
 800e0e0:	ac2c      	add	r4, sp, #176	; 0xb0
 800e0e2:	ebc9 0606 	rsb	r6, r9, r6
 800e0e6:	2e00      	cmp	r6, #0
 800e0e8:	dd2e      	ble.n	800e148 <_svfprintf_r+0x7c0>
 800e0ea:	4b56      	ldr	r3, [pc, #344]	; (800e244 <_svfprintf_r+0x8bc>)
 800e0ec:	6023      	str	r3, [r4, #0]
 800e0ee:	2e10      	cmp	r6, #16
 800e0f0:	dd16      	ble.n	800e120 <_svfprintf_r+0x798>
 800e0f2:	2310      	movs	r3, #16
 800e0f4:	6063      	str	r3, [r4, #4]
 800e0f6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e0f8:	3310      	adds	r3, #16
 800e0fa:	9321      	str	r3, [sp, #132]	; 0x84
 800e0fc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800e0fe:	3301      	adds	r3, #1
 800e100:	2b07      	cmp	r3, #7
 800e102:	9320      	str	r3, [sp, #128]	; 0x80
 800e104:	dc01      	bgt.n	800e10a <_svfprintf_r+0x782>
 800e106:	3408      	adds	r4, #8
 800e108:	e008      	b.n	800e11c <_svfprintf_r+0x794>
 800e10a:	aa1f      	add	r2, sp, #124	; 0x7c
 800e10c:	4659      	mov	r1, fp
 800e10e:	4650      	mov	r0, sl
 800e110:	f002 f92d 	bl	801036e <__ssprint_r>
 800e114:	2800      	cmp	r0, #0
 800e116:	f040 82b9 	bne.w	800e68c <_svfprintf_r+0xd04>
 800e11a:	ac2c      	add	r4, sp, #176	; 0xb0
 800e11c:	3e10      	subs	r6, #16
 800e11e:	e7e4      	b.n	800e0ea <_svfprintf_r+0x762>
 800e120:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800e122:	9821      	ldr	r0, [sp, #132]	; 0x84
 800e124:	6066      	str	r6, [r4, #4]
 800e126:	3301      	adds	r3, #1
 800e128:	4406      	add	r6, r0
 800e12a:	2b07      	cmp	r3, #7
 800e12c:	9621      	str	r6, [sp, #132]	; 0x84
 800e12e:	9320      	str	r3, [sp, #128]	; 0x80
 800e130:	dc01      	bgt.n	800e136 <_svfprintf_r+0x7ae>
 800e132:	3408      	adds	r4, #8
 800e134:	e008      	b.n	800e148 <_svfprintf_r+0x7c0>
 800e136:	aa1f      	add	r2, sp, #124	; 0x7c
 800e138:	4659      	mov	r1, fp
 800e13a:	4650      	mov	r0, sl
 800e13c:	f002 f917 	bl	801036e <__ssprint_r>
 800e140:	2800      	cmp	r0, #0
 800e142:	f040 82a3 	bne.w	800e68c <_svfprintf_r+0xd04>
 800e146:	ac2c      	add	r4, sp, #176	; 0xb0
 800e148:	05eb      	lsls	r3, r5, #23
 800e14a:	d414      	bmi.n	800e176 <_svfprintf_r+0x7ee>
 800e14c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e14e:	e884 0300 	stmia.w	r4, {r8, r9}
 800e152:	444b      	add	r3, r9
 800e154:	9321      	str	r3, [sp, #132]	; 0x84
 800e156:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800e158:	3301      	adds	r3, #1
 800e15a:	2b07      	cmp	r3, #7
 800e15c:	9320      	str	r3, [sp, #128]	; 0x80
 800e15e:	f340 8244 	ble.w	800e5ea <_svfprintf_r+0xc62>
 800e162:	aa1f      	add	r2, sp, #124	; 0x7c
 800e164:	4659      	mov	r1, fp
 800e166:	4650      	mov	r0, sl
 800e168:	f002 f901 	bl	801036e <__ssprint_r>
 800e16c:	2800      	cmp	r0, #0
 800e16e:	f040 828d 	bne.w	800e68c <_svfprintf_r+0xd04>
 800e172:	ac2c      	add	r4, sp, #176	; 0xb0
 800e174:	e23a      	b.n	800e5ec <_svfprintf_r+0xc64>
 800e176:	9b02      	ldr	r3, [sp, #8]
 800e178:	2b65      	cmp	r3, #101	; 0x65
 800e17a:	f340 81ad 	ble.w	800e4d8 <_svfprintf_r+0xb50>
 800e17e:	2200      	movs	r2, #0
 800e180:	2300      	movs	r3, #0
 800e182:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800e186:	f7fa fddd 	bl	8008d44 <__aeabi_dcmpeq>
 800e18a:	2800      	cmp	r0, #0
 800e18c:	d05e      	beq.n	800e24c <_svfprintf_r+0x8c4>
 800e18e:	4b2e      	ldr	r3, [pc, #184]	; (800e248 <_svfprintf_r+0x8c0>)
 800e190:	6023      	str	r3, [r4, #0]
 800e192:	2301      	movs	r3, #1
 800e194:	6063      	str	r3, [r4, #4]
 800e196:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e198:	3301      	adds	r3, #1
 800e19a:	9321      	str	r3, [sp, #132]	; 0x84
 800e19c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800e19e:	3301      	adds	r3, #1
 800e1a0:	2b07      	cmp	r3, #7
 800e1a2:	9320      	str	r3, [sp, #128]	; 0x80
 800e1a4:	dc01      	bgt.n	800e1aa <_svfprintf_r+0x822>
 800e1a6:	3408      	adds	r4, #8
 800e1a8:	e008      	b.n	800e1bc <_svfprintf_r+0x834>
 800e1aa:	aa1f      	add	r2, sp, #124	; 0x7c
 800e1ac:	4659      	mov	r1, fp
 800e1ae:	4650      	mov	r0, sl
 800e1b0:	f002 f8dd 	bl	801036e <__ssprint_r>
 800e1b4:	2800      	cmp	r0, #0
 800e1b6:	f040 8269 	bne.w	800e68c <_svfprintf_r+0xd04>
 800e1ba:	ac2c      	add	r4, sp, #176	; 0xb0
 800e1bc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800e1be:	9a04      	ldr	r2, [sp, #16]
 800e1c0:	4293      	cmp	r3, r2
 800e1c2:	db02      	blt.n	800e1ca <_svfprintf_r+0x842>
 800e1c4:	07ee      	lsls	r6, r5, #31
 800e1c6:	f140 8211 	bpl.w	800e5ec <_svfprintf_r+0xc64>
 800e1ca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e1cc:	6023      	str	r3, [r4, #0]
 800e1ce:	9b08      	ldr	r3, [sp, #32]
 800e1d0:	6063      	str	r3, [r4, #4]
 800e1d2:	9a08      	ldr	r2, [sp, #32]
 800e1d4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e1d6:	4413      	add	r3, r2
 800e1d8:	9321      	str	r3, [sp, #132]	; 0x84
 800e1da:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800e1dc:	3301      	adds	r3, #1
 800e1de:	2b07      	cmp	r3, #7
 800e1e0:	9320      	str	r3, [sp, #128]	; 0x80
 800e1e2:	dc01      	bgt.n	800e1e8 <_svfprintf_r+0x860>
 800e1e4:	3408      	adds	r4, #8
 800e1e6:	e008      	b.n	800e1fa <_svfprintf_r+0x872>
 800e1e8:	aa1f      	add	r2, sp, #124	; 0x7c
 800e1ea:	4659      	mov	r1, fp
 800e1ec:	4650      	mov	r0, sl
 800e1ee:	f002 f8be 	bl	801036e <__ssprint_r>
 800e1f2:	2800      	cmp	r0, #0
 800e1f4:	f040 824a 	bne.w	800e68c <_svfprintf_r+0xd04>
 800e1f8:	ac2c      	add	r4, sp, #176	; 0xb0
 800e1fa:	9b04      	ldr	r3, [sp, #16]
 800e1fc:	1e5e      	subs	r6, r3, #1
 800e1fe:	2e00      	cmp	r6, #0
 800e200:	f340 81f4 	ble.w	800e5ec <_svfprintf_r+0xc64>
 800e204:	4f0f      	ldr	r7, [pc, #60]	; (800e244 <_svfprintf_r+0x8bc>)
 800e206:	f04f 0810 	mov.w	r8, #16
 800e20a:	2e10      	cmp	r6, #16
 800e20c:	f340 8159 	ble.w	800e4c2 <_svfprintf_r+0xb3a>
 800e210:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e212:	3310      	adds	r3, #16
 800e214:	9321      	str	r3, [sp, #132]	; 0x84
 800e216:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800e218:	3301      	adds	r3, #1
 800e21a:	2b07      	cmp	r3, #7
 800e21c:	e884 0180 	stmia.w	r4, {r7, r8}
 800e220:	9320      	str	r3, [sp, #128]	; 0x80
 800e222:	dc01      	bgt.n	800e228 <_svfprintf_r+0x8a0>
 800e224:	3408      	adds	r4, #8
 800e226:	e008      	b.n	800e23a <_svfprintf_r+0x8b2>
 800e228:	aa1f      	add	r2, sp, #124	; 0x7c
 800e22a:	4659      	mov	r1, fp
 800e22c:	4650      	mov	r0, sl
 800e22e:	f002 f89e 	bl	801036e <__ssprint_r>
 800e232:	2800      	cmp	r0, #0
 800e234:	f040 822a 	bne.w	800e68c <_svfprintf_r+0xd04>
 800e238:	ac2c      	add	r4, sp, #176	; 0xb0
 800e23a:	3e10      	subs	r6, #16
 800e23c:	e7e5      	b.n	800e20a <_svfprintf_r+0x882>
 800e23e:	bf00      	nop
 800e240:	080118e0 	.word	0x080118e0
 800e244:	0801189c 	.word	0x0801189c
 800e248:	080118de 	.word	0x080118de
 800e24c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800e24e:	2b00      	cmp	r3, #0
 800e250:	dc7c      	bgt.n	800e34c <_svfprintf_r+0x9c4>
 800e252:	4b9f      	ldr	r3, [pc, #636]	; (800e4d0 <_svfprintf_r+0xb48>)
 800e254:	6023      	str	r3, [r4, #0]
 800e256:	2301      	movs	r3, #1
 800e258:	6063      	str	r3, [r4, #4]
 800e25a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e25c:	3301      	adds	r3, #1
 800e25e:	9321      	str	r3, [sp, #132]	; 0x84
 800e260:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800e262:	3301      	adds	r3, #1
 800e264:	2b07      	cmp	r3, #7
 800e266:	9320      	str	r3, [sp, #128]	; 0x80
 800e268:	dc01      	bgt.n	800e26e <_svfprintf_r+0x8e6>
 800e26a:	3408      	adds	r4, #8
 800e26c:	e008      	b.n	800e280 <_svfprintf_r+0x8f8>
 800e26e:	aa1f      	add	r2, sp, #124	; 0x7c
 800e270:	4659      	mov	r1, fp
 800e272:	4650      	mov	r0, sl
 800e274:	f002 f87b 	bl	801036e <__ssprint_r>
 800e278:	2800      	cmp	r0, #0
 800e27a:	f040 8207 	bne.w	800e68c <_svfprintf_r+0xd04>
 800e27e:	ac2c      	add	r4, sp, #176	; 0xb0
 800e280:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800e282:	b923      	cbnz	r3, 800e28e <_svfprintf_r+0x906>
 800e284:	9b04      	ldr	r3, [sp, #16]
 800e286:	b913      	cbnz	r3, 800e28e <_svfprintf_r+0x906>
 800e288:	07e8      	lsls	r0, r5, #31
 800e28a:	f140 81af 	bpl.w	800e5ec <_svfprintf_r+0xc64>
 800e28e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e290:	6023      	str	r3, [r4, #0]
 800e292:	9b08      	ldr	r3, [sp, #32]
 800e294:	6063      	str	r3, [r4, #4]
 800e296:	9a08      	ldr	r2, [sp, #32]
 800e298:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e29a:	4413      	add	r3, r2
 800e29c:	9321      	str	r3, [sp, #132]	; 0x84
 800e29e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800e2a0:	3301      	adds	r3, #1
 800e2a2:	2b07      	cmp	r3, #7
 800e2a4:	9320      	str	r3, [sp, #128]	; 0x80
 800e2a6:	dc02      	bgt.n	800e2ae <_svfprintf_r+0x926>
 800e2a8:	f104 0308 	add.w	r3, r4, #8
 800e2ac:	e008      	b.n	800e2c0 <_svfprintf_r+0x938>
 800e2ae:	aa1f      	add	r2, sp, #124	; 0x7c
 800e2b0:	4659      	mov	r1, fp
 800e2b2:	4650      	mov	r0, sl
 800e2b4:	f002 f85b 	bl	801036e <__ssprint_r>
 800e2b8:	2800      	cmp	r0, #0
 800e2ba:	f040 81e7 	bne.w	800e68c <_svfprintf_r+0xd04>
 800e2be:	ab2c      	add	r3, sp, #176	; 0xb0
 800e2c0:	9e19      	ldr	r6, [sp, #100]	; 0x64
 800e2c2:	4276      	negs	r6, r6
 800e2c4:	2e00      	cmp	r6, #0
 800e2c6:	dd30      	ble.n	800e32a <_svfprintf_r+0x9a2>
 800e2c8:	4f82      	ldr	r7, [pc, #520]	; (800e4d4 <_svfprintf_r+0xb4c>)
 800e2ca:	2410      	movs	r4, #16
 800e2cc:	2e10      	cmp	r6, #16
 800e2ce:	dd16      	ble.n	800e2fe <_svfprintf_r+0x976>
 800e2d0:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800e2d2:	601f      	str	r7, [r3, #0]
 800e2d4:	3210      	adds	r2, #16
 800e2d6:	9221      	str	r2, [sp, #132]	; 0x84
 800e2d8:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800e2da:	605c      	str	r4, [r3, #4]
 800e2dc:	3201      	adds	r2, #1
 800e2de:	2a07      	cmp	r2, #7
 800e2e0:	9220      	str	r2, [sp, #128]	; 0x80
 800e2e2:	dc01      	bgt.n	800e2e8 <_svfprintf_r+0x960>
 800e2e4:	3308      	adds	r3, #8
 800e2e6:	e008      	b.n	800e2fa <_svfprintf_r+0x972>
 800e2e8:	aa1f      	add	r2, sp, #124	; 0x7c
 800e2ea:	4659      	mov	r1, fp
 800e2ec:	4650      	mov	r0, sl
 800e2ee:	f002 f83e 	bl	801036e <__ssprint_r>
 800e2f2:	2800      	cmp	r0, #0
 800e2f4:	f040 81ca 	bne.w	800e68c <_svfprintf_r+0xd04>
 800e2f8:	ab2c      	add	r3, sp, #176	; 0xb0
 800e2fa:	3e10      	subs	r6, #16
 800e2fc:	e7e6      	b.n	800e2cc <_svfprintf_r+0x944>
 800e2fe:	4a75      	ldr	r2, [pc, #468]	; (800e4d4 <_svfprintf_r+0xb4c>)
 800e300:	e883 0044 	stmia.w	r3, {r2, r6}
 800e304:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800e306:	4416      	add	r6, r2
 800e308:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800e30a:	9621      	str	r6, [sp, #132]	; 0x84
 800e30c:	3201      	adds	r2, #1
 800e30e:	2a07      	cmp	r2, #7
 800e310:	9220      	str	r2, [sp, #128]	; 0x80
 800e312:	dc01      	bgt.n	800e318 <_svfprintf_r+0x990>
 800e314:	3308      	adds	r3, #8
 800e316:	e008      	b.n	800e32a <_svfprintf_r+0x9a2>
 800e318:	aa1f      	add	r2, sp, #124	; 0x7c
 800e31a:	4659      	mov	r1, fp
 800e31c:	4650      	mov	r0, sl
 800e31e:	f002 f826 	bl	801036e <__ssprint_r>
 800e322:	2800      	cmp	r0, #0
 800e324:	f040 81b2 	bne.w	800e68c <_svfprintf_r+0xd04>
 800e328:	ab2c      	add	r3, sp, #176	; 0xb0
 800e32a:	9a04      	ldr	r2, [sp, #16]
 800e32c:	605a      	str	r2, [r3, #4]
 800e32e:	9904      	ldr	r1, [sp, #16]
 800e330:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800e332:	f8c3 8000 	str.w	r8, [r3]
 800e336:	440a      	add	r2, r1
 800e338:	9221      	str	r2, [sp, #132]	; 0x84
 800e33a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800e33c:	3201      	adds	r2, #1
 800e33e:	2a07      	cmp	r2, #7
 800e340:	9220      	str	r2, [sp, #128]	; 0x80
 800e342:	f73f af0e 	bgt.w	800e162 <_svfprintf_r+0x7da>
 800e346:	f103 0408 	add.w	r4, r3, #8
 800e34a:	e14f      	b.n	800e5ec <_svfprintf_r+0xc64>
 800e34c:	9b04      	ldr	r3, [sp, #16]
 800e34e:	42bb      	cmp	r3, r7
 800e350:	bfa8      	it	ge
 800e352:	463b      	movge	r3, r7
 800e354:	2b00      	cmp	r3, #0
 800e356:	461e      	mov	r6, r3
 800e358:	dd15      	ble.n	800e386 <_svfprintf_r+0x9fe>
 800e35a:	6063      	str	r3, [r4, #4]
 800e35c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e35e:	f8c4 8000 	str.w	r8, [r4]
 800e362:	4433      	add	r3, r6
 800e364:	9321      	str	r3, [sp, #132]	; 0x84
 800e366:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800e368:	3301      	adds	r3, #1
 800e36a:	2b07      	cmp	r3, #7
 800e36c:	9320      	str	r3, [sp, #128]	; 0x80
 800e36e:	dc01      	bgt.n	800e374 <_svfprintf_r+0x9ec>
 800e370:	3408      	adds	r4, #8
 800e372:	e008      	b.n	800e386 <_svfprintf_r+0x9fe>
 800e374:	aa1f      	add	r2, sp, #124	; 0x7c
 800e376:	4659      	mov	r1, fp
 800e378:	4650      	mov	r0, sl
 800e37a:	f001 fff8 	bl	801036e <__ssprint_r>
 800e37e:	2800      	cmp	r0, #0
 800e380:	f040 8184 	bne.w	800e68c <_svfprintf_r+0xd04>
 800e384:	ac2c      	add	r4, sp, #176	; 0xb0
 800e386:	2e00      	cmp	r6, #0
 800e388:	bfac      	ite	ge
 800e38a:	1bbe      	subge	r6, r7, r6
 800e38c:	463e      	movlt	r6, r7
 800e38e:	2e00      	cmp	r6, #0
 800e390:	dd30      	ble.n	800e3f4 <_svfprintf_r+0xa6c>
 800e392:	f04f 0910 	mov.w	r9, #16
 800e396:	4b4f      	ldr	r3, [pc, #316]	; (800e4d4 <_svfprintf_r+0xb4c>)
 800e398:	6023      	str	r3, [r4, #0]
 800e39a:	2e10      	cmp	r6, #16
 800e39c:	dd16      	ble.n	800e3cc <_svfprintf_r+0xa44>
 800e39e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e3a0:	f8c4 9004 	str.w	r9, [r4, #4]
 800e3a4:	3310      	adds	r3, #16
 800e3a6:	9321      	str	r3, [sp, #132]	; 0x84
 800e3a8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800e3aa:	3301      	adds	r3, #1
 800e3ac:	2b07      	cmp	r3, #7
 800e3ae:	9320      	str	r3, [sp, #128]	; 0x80
 800e3b0:	dc01      	bgt.n	800e3b6 <_svfprintf_r+0xa2e>
 800e3b2:	3408      	adds	r4, #8
 800e3b4:	e008      	b.n	800e3c8 <_svfprintf_r+0xa40>
 800e3b6:	aa1f      	add	r2, sp, #124	; 0x7c
 800e3b8:	4659      	mov	r1, fp
 800e3ba:	4650      	mov	r0, sl
 800e3bc:	f001 ffd7 	bl	801036e <__ssprint_r>
 800e3c0:	2800      	cmp	r0, #0
 800e3c2:	f040 8163 	bne.w	800e68c <_svfprintf_r+0xd04>
 800e3c6:	ac2c      	add	r4, sp, #176	; 0xb0
 800e3c8:	3e10      	subs	r6, #16
 800e3ca:	e7e4      	b.n	800e396 <_svfprintf_r+0xa0e>
 800e3cc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e3ce:	6066      	str	r6, [r4, #4]
 800e3d0:	441e      	add	r6, r3
 800e3d2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800e3d4:	9621      	str	r6, [sp, #132]	; 0x84
 800e3d6:	3301      	adds	r3, #1
 800e3d8:	2b07      	cmp	r3, #7
 800e3da:	9320      	str	r3, [sp, #128]	; 0x80
 800e3dc:	dc01      	bgt.n	800e3e2 <_svfprintf_r+0xa5a>
 800e3de:	3408      	adds	r4, #8
 800e3e0:	e008      	b.n	800e3f4 <_svfprintf_r+0xa6c>
 800e3e2:	aa1f      	add	r2, sp, #124	; 0x7c
 800e3e4:	4659      	mov	r1, fp
 800e3e6:	4650      	mov	r0, sl
 800e3e8:	f001 ffc1 	bl	801036e <__ssprint_r>
 800e3ec:	2800      	cmp	r0, #0
 800e3ee:	f040 814d 	bne.w	800e68c <_svfprintf_r+0xd04>
 800e3f2:	ac2c      	add	r4, sp, #176	; 0xb0
 800e3f4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800e3f6:	9a04      	ldr	r2, [sp, #16]
 800e3f8:	4293      	cmp	r3, r2
 800e3fa:	4447      	add	r7, r8
 800e3fc:	db01      	blt.n	800e402 <_svfprintf_r+0xa7a>
 800e3fe:	07e9      	lsls	r1, r5, #31
 800e400:	d517      	bpl.n	800e432 <_svfprintf_r+0xaaa>
 800e402:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e404:	6023      	str	r3, [r4, #0]
 800e406:	9b08      	ldr	r3, [sp, #32]
 800e408:	6063      	str	r3, [r4, #4]
 800e40a:	9a08      	ldr	r2, [sp, #32]
 800e40c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e40e:	4413      	add	r3, r2
 800e410:	9321      	str	r3, [sp, #132]	; 0x84
 800e412:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800e414:	3301      	adds	r3, #1
 800e416:	2b07      	cmp	r3, #7
 800e418:	9320      	str	r3, [sp, #128]	; 0x80
 800e41a:	dc01      	bgt.n	800e420 <_svfprintf_r+0xa98>
 800e41c:	3408      	adds	r4, #8
 800e41e:	e008      	b.n	800e432 <_svfprintf_r+0xaaa>
 800e420:	aa1f      	add	r2, sp, #124	; 0x7c
 800e422:	4659      	mov	r1, fp
 800e424:	4650      	mov	r0, sl
 800e426:	f001 ffa2 	bl	801036e <__ssprint_r>
 800e42a:	2800      	cmp	r0, #0
 800e42c:	f040 812e 	bne.w	800e68c <_svfprintf_r+0xd04>
 800e430:	ac2c      	add	r4, sp, #176	; 0xb0
 800e432:	9b04      	ldr	r3, [sp, #16]
 800e434:	9a04      	ldr	r2, [sp, #16]
 800e436:	eb08 0603 	add.w	r6, r8, r3
 800e43a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800e43c:	1bf6      	subs	r6, r6, r7
 800e43e:	1ad3      	subs	r3, r2, r3
 800e440:	429e      	cmp	r6, r3
 800e442:	bfa8      	it	ge
 800e444:	461e      	movge	r6, r3
 800e446:	2e00      	cmp	r6, #0
 800e448:	dd14      	ble.n	800e474 <_svfprintf_r+0xaec>
 800e44a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e44c:	6027      	str	r7, [r4, #0]
 800e44e:	4433      	add	r3, r6
 800e450:	9321      	str	r3, [sp, #132]	; 0x84
 800e452:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800e454:	6066      	str	r6, [r4, #4]
 800e456:	3301      	adds	r3, #1
 800e458:	2b07      	cmp	r3, #7
 800e45a:	9320      	str	r3, [sp, #128]	; 0x80
 800e45c:	dc01      	bgt.n	800e462 <_svfprintf_r+0xada>
 800e45e:	3408      	adds	r4, #8
 800e460:	e008      	b.n	800e474 <_svfprintf_r+0xaec>
 800e462:	aa1f      	add	r2, sp, #124	; 0x7c
 800e464:	4659      	mov	r1, fp
 800e466:	4650      	mov	r0, sl
 800e468:	f001 ff81 	bl	801036e <__ssprint_r>
 800e46c:	2800      	cmp	r0, #0
 800e46e:	f040 810d 	bne.w	800e68c <_svfprintf_r+0xd04>
 800e472:	ac2c      	add	r4, sp, #176	; 0xb0
 800e474:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800e476:	9a04      	ldr	r2, [sp, #16]
 800e478:	2e00      	cmp	r6, #0
 800e47a:	eba2 0303 	sub.w	r3, r2, r3
 800e47e:	bfac      	ite	ge
 800e480:	1b9e      	subge	r6, r3, r6
 800e482:	461e      	movlt	r6, r3
 800e484:	2e00      	cmp	r6, #0
 800e486:	f340 80b1 	ble.w	800e5ec <_svfprintf_r+0xc64>
 800e48a:	4f12      	ldr	r7, [pc, #72]	; (800e4d4 <_svfprintf_r+0xb4c>)
 800e48c:	f04f 0810 	mov.w	r8, #16
 800e490:	2e10      	cmp	r6, #16
 800e492:	dd16      	ble.n	800e4c2 <_svfprintf_r+0xb3a>
 800e494:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e496:	3310      	adds	r3, #16
 800e498:	9321      	str	r3, [sp, #132]	; 0x84
 800e49a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800e49c:	3301      	adds	r3, #1
 800e49e:	2b07      	cmp	r3, #7
 800e4a0:	e884 0180 	stmia.w	r4, {r7, r8}
 800e4a4:	9320      	str	r3, [sp, #128]	; 0x80
 800e4a6:	dc01      	bgt.n	800e4ac <_svfprintf_r+0xb24>
 800e4a8:	3408      	adds	r4, #8
 800e4aa:	e008      	b.n	800e4be <_svfprintf_r+0xb36>
 800e4ac:	aa1f      	add	r2, sp, #124	; 0x7c
 800e4ae:	4659      	mov	r1, fp
 800e4b0:	4650      	mov	r0, sl
 800e4b2:	f001 ff5c 	bl	801036e <__ssprint_r>
 800e4b6:	2800      	cmp	r0, #0
 800e4b8:	f040 80e8 	bne.w	800e68c <_svfprintf_r+0xd04>
 800e4bc:	ac2c      	add	r4, sp, #176	; 0xb0
 800e4be:	3e10      	subs	r6, #16
 800e4c0:	e7e6      	b.n	800e490 <_svfprintf_r+0xb08>
 800e4c2:	4b04      	ldr	r3, [pc, #16]	; (800e4d4 <_svfprintf_r+0xb4c>)
 800e4c4:	e884 0048 	stmia.w	r4, {r3, r6}
 800e4c8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e4ca:	441e      	add	r6, r3
 800e4cc:	9621      	str	r6, [sp, #132]	; 0x84
 800e4ce:	e642      	b.n	800e156 <_svfprintf_r+0x7ce>
 800e4d0:	080118de 	.word	0x080118de
 800e4d4:	0801189c 	.word	0x0801189c
 800e4d8:	9b04      	ldr	r3, [sp, #16]
 800e4da:	2b01      	cmp	r3, #1
 800e4dc:	dc01      	bgt.n	800e4e2 <_svfprintf_r+0xb5a>
 800e4de:	07ea      	lsls	r2, r5, #31
 800e4e0:	d573      	bpl.n	800e5ca <_svfprintf_r+0xc42>
 800e4e2:	2301      	movs	r3, #1
 800e4e4:	6063      	str	r3, [r4, #4]
 800e4e6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e4e8:	f8c4 8000 	str.w	r8, [r4]
 800e4ec:	3301      	adds	r3, #1
 800e4ee:	9321      	str	r3, [sp, #132]	; 0x84
 800e4f0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800e4f2:	3301      	adds	r3, #1
 800e4f4:	2b07      	cmp	r3, #7
 800e4f6:	9320      	str	r3, [sp, #128]	; 0x80
 800e4f8:	dc01      	bgt.n	800e4fe <_svfprintf_r+0xb76>
 800e4fa:	3408      	adds	r4, #8
 800e4fc:	e008      	b.n	800e510 <_svfprintf_r+0xb88>
 800e4fe:	aa1f      	add	r2, sp, #124	; 0x7c
 800e500:	4659      	mov	r1, fp
 800e502:	4650      	mov	r0, sl
 800e504:	f001 ff33 	bl	801036e <__ssprint_r>
 800e508:	2800      	cmp	r0, #0
 800e50a:	f040 80bf 	bne.w	800e68c <_svfprintf_r+0xd04>
 800e50e:	ac2c      	add	r4, sp, #176	; 0xb0
 800e510:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e512:	6023      	str	r3, [r4, #0]
 800e514:	9b08      	ldr	r3, [sp, #32]
 800e516:	6063      	str	r3, [r4, #4]
 800e518:	9a08      	ldr	r2, [sp, #32]
 800e51a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e51c:	4413      	add	r3, r2
 800e51e:	9321      	str	r3, [sp, #132]	; 0x84
 800e520:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800e522:	3301      	adds	r3, #1
 800e524:	2b07      	cmp	r3, #7
 800e526:	9320      	str	r3, [sp, #128]	; 0x80
 800e528:	dc01      	bgt.n	800e52e <_svfprintf_r+0xba6>
 800e52a:	3408      	adds	r4, #8
 800e52c:	e008      	b.n	800e540 <_svfprintf_r+0xbb8>
 800e52e:	aa1f      	add	r2, sp, #124	; 0x7c
 800e530:	4659      	mov	r1, fp
 800e532:	4650      	mov	r0, sl
 800e534:	f001 ff1b 	bl	801036e <__ssprint_r>
 800e538:	2800      	cmp	r0, #0
 800e53a:	f040 80a7 	bne.w	800e68c <_svfprintf_r+0xd04>
 800e53e:	ac2c      	add	r4, sp, #176	; 0xb0
 800e540:	2300      	movs	r3, #0
 800e542:	2200      	movs	r2, #0
 800e544:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800e548:	f7fa fbfc 	bl	8008d44 <__aeabi_dcmpeq>
 800e54c:	9b04      	ldr	r3, [sp, #16]
 800e54e:	1e5e      	subs	r6, r3, #1
 800e550:	b9b8      	cbnz	r0, 800e582 <_svfprintf_r+0xbfa>
 800e552:	f108 0301 	add.w	r3, r8, #1
 800e556:	e884 0048 	stmia.w	r4, {r3, r6}
 800e55a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e55c:	9a04      	ldr	r2, [sp, #16]
 800e55e:	3b01      	subs	r3, #1
 800e560:	4413      	add	r3, r2
 800e562:	9321      	str	r3, [sp, #132]	; 0x84
 800e564:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800e566:	3301      	adds	r3, #1
 800e568:	2b07      	cmp	r3, #7
 800e56a:	9320      	str	r3, [sp, #128]	; 0x80
 800e56c:	dd34      	ble.n	800e5d8 <_svfprintf_r+0xc50>
 800e56e:	aa1f      	add	r2, sp, #124	; 0x7c
 800e570:	4659      	mov	r1, fp
 800e572:	4650      	mov	r0, sl
 800e574:	f001 fefb 	bl	801036e <__ssprint_r>
 800e578:	2800      	cmp	r0, #0
 800e57a:	f040 8087 	bne.w	800e68c <_svfprintf_r+0xd04>
 800e57e:	ac2c      	add	r4, sp, #176	; 0xb0
 800e580:	e02b      	b.n	800e5da <_svfprintf_r+0xc52>
 800e582:	2e00      	cmp	r6, #0
 800e584:	dd29      	ble.n	800e5da <_svfprintf_r+0xc52>
 800e586:	4fa7      	ldr	r7, [pc, #668]	; (800e824 <_svfprintf_r+0xe9c>)
 800e588:	f04f 0810 	mov.w	r8, #16
 800e58c:	2e10      	cmp	r6, #16
 800e58e:	dd15      	ble.n	800e5bc <_svfprintf_r+0xc34>
 800e590:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e592:	3310      	adds	r3, #16
 800e594:	9321      	str	r3, [sp, #132]	; 0x84
 800e596:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800e598:	3301      	adds	r3, #1
 800e59a:	2b07      	cmp	r3, #7
 800e59c:	e884 0180 	stmia.w	r4, {r7, r8}
 800e5a0:	9320      	str	r3, [sp, #128]	; 0x80
 800e5a2:	dc01      	bgt.n	800e5a8 <_svfprintf_r+0xc20>
 800e5a4:	3408      	adds	r4, #8
 800e5a6:	e007      	b.n	800e5b8 <_svfprintf_r+0xc30>
 800e5a8:	aa1f      	add	r2, sp, #124	; 0x7c
 800e5aa:	4659      	mov	r1, fp
 800e5ac:	4650      	mov	r0, sl
 800e5ae:	f001 fede 	bl	801036e <__ssprint_r>
 800e5b2:	2800      	cmp	r0, #0
 800e5b4:	d16a      	bne.n	800e68c <_svfprintf_r+0xd04>
 800e5b6:	ac2c      	add	r4, sp, #176	; 0xb0
 800e5b8:	3e10      	subs	r6, #16
 800e5ba:	e7e7      	b.n	800e58c <_svfprintf_r+0xc04>
 800e5bc:	4b99      	ldr	r3, [pc, #612]	; (800e824 <_svfprintf_r+0xe9c>)
 800e5be:	e884 0048 	stmia.w	r4, {r3, r6}
 800e5c2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e5c4:	441e      	add	r6, r3
 800e5c6:	9621      	str	r6, [sp, #132]	; 0x84
 800e5c8:	e7cc      	b.n	800e564 <_svfprintf_r+0xbdc>
 800e5ca:	2301      	movs	r3, #1
 800e5cc:	6063      	str	r3, [r4, #4]
 800e5ce:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e5d0:	f8c4 8000 	str.w	r8, [r4]
 800e5d4:	3301      	adds	r3, #1
 800e5d6:	e7c4      	b.n	800e562 <_svfprintf_r+0xbda>
 800e5d8:	3408      	adds	r4, #8
 800e5da:	ab1b      	add	r3, sp, #108	; 0x6c
 800e5dc:	6023      	str	r3, [r4, #0]
 800e5de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e5e0:	6063      	str	r3, [r4, #4]
 800e5e2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800e5e4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e5e6:	4413      	add	r3, r2
 800e5e8:	e5b4      	b.n	800e154 <_svfprintf_r+0x7cc>
 800e5ea:	3408      	adds	r4, #8
 800e5ec:	076b      	lsls	r3, r5, #29
 800e5ee:	d40b      	bmi.n	800e608 <_svfprintf_r+0xc80>
 800e5f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e5f2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800e5f4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800e5f6:	428a      	cmp	r2, r1
 800e5f8:	bfac      	ite	ge
 800e5fa:	189b      	addge	r3, r3, r2
 800e5fc:	185b      	addlt	r3, r3, r1
 800e5fe:	930a      	str	r3, [sp, #40]	; 0x28
 800e600:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e602:	2b00      	cmp	r3, #0
 800e604:	d035      	beq.n	800e672 <_svfprintf_r+0xcea>
 800e606:	e02e      	b.n	800e666 <_svfprintf_r+0xcde>
 800e608:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e60a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800e60c:	1a9d      	subs	r5, r3, r2
 800e60e:	2d00      	cmp	r5, #0
 800e610:	ddee      	ble.n	800e5f0 <_svfprintf_r+0xc68>
 800e612:	2610      	movs	r6, #16
 800e614:	4b84      	ldr	r3, [pc, #528]	; (800e828 <_svfprintf_r+0xea0>)
 800e616:	6023      	str	r3, [r4, #0]
 800e618:	2d10      	cmp	r5, #16
 800e61a:	dd13      	ble.n	800e644 <_svfprintf_r+0xcbc>
 800e61c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e61e:	6066      	str	r6, [r4, #4]
 800e620:	3310      	adds	r3, #16
 800e622:	9321      	str	r3, [sp, #132]	; 0x84
 800e624:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800e626:	3301      	adds	r3, #1
 800e628:	2b07      	cmp	r3, #7
 800e62a:	9320      	str	r3, [sp, #128]	; 0x80
 800e62c:	dc01      	bgt.n	800e632 <_svfprintf_r+0xcaa>
 800e62e:	3408      	adds	r4, #8
 800e630:	e006      	b.n	800e640 <_svfprintf_r+0xcb8>
 800e632:	aa1f      	add	r2, sp, #124	; 0x7c
 800e634:	4659      	mov	r1, fp
 800e636:	4650      	mov	r0, sl
 800e638:	f001 fe99 	bl	801036e <__ssprint_r>
 800e63c:	bb30      	cbnz	r0, 800e68c <_svfprintf_r+0xd04>
 800e63e:	ac2c      	add	r4, sp, #176	; 0xb0
 800e640:	3d10      	subs	r5, #16
 800e642:	e7e7      	b.n	800e614 <_svfprintf_r+0xc8c>
 800e644:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e646:	6065      	str	r5, [r4, #4]
 800e648:	441d      	add	r5, r3
 800e64a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800e64c:	9521      	str	r5, [sp, #132]	; 0x84
 800e64e:	3301      	adds	r3, #1
 800e650:	2b07      	cmp	r3, #7
 800e652:	9320      	str	r3, [sp, #128]	; 0x80
 800e654:	ddcc      	ble.n	800e5f0 <_svfprintf_r+0xc68>
 800e656:	aa1f      	add	r2, sp, #124	; 0x7c
 800e658:	4659      	mov	r1, fp
 800e65a:	4650      	mov	r0, sl
 800e65c:	f001 fe87 	bl	801036e <__ssprint_r>
 800e660:	2800      	cmp	r0, #0
 800e662:	d0c5      	beq.n	800e5f0 <_svfprintf_r+0xc68>
 800e664:	e012      	b.n	800e68c <_svfprintf_r+0xd04>
 800e666:	aa1f      	add	r2, sp, #124	; 0x7c
 800e668:	4659      	mov	r1, fp
 800e66a:	4650      	mov	r0, sl
 800e66c:	f001 fe7f 	bl	801036e <__ssprint_r>
 800e670:	b960      	cbnz	r0, 800e68c <_svfprintf_r+0xd04>
 800e672:	2300      	movs	r3, #0
 800e674:	9320      	str	r3, [sp, #128]	; 0x80
 800e676:	9f03      	ldr	r7, [sp, #12]
 800e678:	ac2c      	add	r4, sp, #176	; 0xb0
 800e67a:	f7ff b9bb 	b.w	800d9f4 <_svfprintf_r+0x6c>
 800e67e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e680:	b123      	cbz	r3, 800e68c <_svfprintf_r+0xd04>
 800e682:	aa1f      	add	r2, sp, #124	; 0x7c
 800e684:	4659      	mov	r1, fp
 800e686:	4650      	mov	r0, sl
 800e688:	f001 fe71 	bl	801036e <__ssprint_r>
 800e68c:	f8bb 300c 	ldrh.w	r3, [fp, #12]
 800e690:	f013 0f40 	tst.w	r3, #64	; 0x40
 800e694:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e696:	bf18      	it	ne
 800e698:	f04f 33ff 	movne.w	r3, #4294967295
 800e69c:	4618      	mov	r0, r3
 800e69e:	e12e      	b.n	800e8fe <_svfprintf_r+0xf76>
 800e6a0:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800e6a4:	4610      	mov	r0, r2
 800e6a6:	4619      	mov	r1, r3
 800e6a8:	f7fa fb7e 	bl	8008da8 <__aeabi_dcmpun>
 800e6ac:	b160      	cbz	r0, 800e6c8 <_svfprintf_r+0xd40>
 800e6ae:	4b5f      	ldr	r3, [pc, #380]	; (800e82c <_svfprintf_r+0xea4>)
 800e6b0:	4a5f      	ldr	r2, [pc, #380]	; (800e830 <_svfprintf_r+0xea8>)
 800e6b2:	9902      	ldr	r1, [sp, #8]
 800e6b4:	f025 0580 	bic.w	r5, r5, #128	; 0x80
 800e6b8:	2947      	cmp	r1, #71	; 0x47
 800e6ba:	bfcc      	ite	gt
 800e6bc:	4690      	movgt	r8, r2
 800e6be:	4698      	movle	r8, r3
 800e6c0:	f04f 0903 	mov.w	r9, #3
 800e6c4:	2600      	movs	r6, #0
 800e6c6:	e44e      	b.n	800df66 <_svfprintf_r+0x5de>
 800e6c8:	f1b9 3fff 	cmp.w	r9, #4294967295
 800e6cc:	d00a      	beq.n	800e6e4 <_svfprintf_r+0xd5c>
 800e6ce:	9b02      	ldr	r3, [sp, #8]
 800e6d0:	f023 0320 	bic.w	r3, r3, #32
 800e6d4:	2b47      	cmp	r3, #71	; 0x47
 800e6d6:	d107      	bne.n	800e6e8 <_svfprintf_r+0xd60>
 800e6d8:	f1b9 0f00 	cmp.w	r9, #0
 800e6dc:	bf08      	it	eq
 800e6de:	f04f 0901 	moveq.w	r9, #1
 800e6e2:	e001      	b.n	800e6e8 <_svfprintf_r+0xd60>
 800e6e4:	f04f 0906 	mov.w	r9, #6
 800e6e8:	f445 7380 	orr.w	r3, r5, #256	; 0x100
 800e6ec:	930c      	str	r3, [sp, #48]	; 0x30
 800e6ee:	9b07      	ldr	r3, [sp, #28]
 800e6f0:	2b00      	cmp	r3, #0
 800e6f2:	da07      	bge.n	800e704 <_svfprintf_r+0xd7c>
 800e6f4:	9b06      	ldr	r3, [sp, #24]
 800e6f6:	930e      	str	r3, [sp, #56]	; 0x38
 800e6f8:	9b07      	ldr	r3, [sp, #28]
 800e6fa:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 800e6fe:	930f      	str	r3, [sp, #60]	; 0x3c
 800e700:	232d      	movs	r3, #45	; 0x2d
 800e702:	e004      	b.n	800e70e <_svfprintf_r+0xd86>
 800e704:	ed9d 7b06 	vldr	d7, [sp, #24]
 800e708:	ed8d 7b0e 	vstr	d7, [sp, #56]	; 0x38
 800e70c:	2300      	movs	r3, #0
 800e70e:	930b      	str	r3, [sp, #44]	; 0x2c
 800e710:	9b02      	ldr	r3, [sp, #8]
 800e712:	f023 0720 	bic.w	r7, r3, #32
 800e716:	2f46      	cmp	r7, #70	; 0x46
 800e718:	d004      	beq.n	800e724 <_svfprintf_r+0xd9c>
 800e71a:	2f45      	cmp	r7, #69	; 0x45
 800e71c:	d105      	bne.n	800e72a <_svfprintf_r+0xda2>
 800e71e:	f109 0601 	add.w	r6, r9, #1
 800e722:	e003      	b.n	800e72c <_svfprintf_r+0xda4>
 800e724:	464e      	mov	r6, r9
 800e726:	2103      	movs	r1, #3
 800e728:	e001      	b.n	800e72e <_svfprintf_r+0xda6>
 800e72a:	464e      	mov	r6, r9
 800e72c:	2102      	movs	r1, #2
 800e72e:	ab1d      	add	r3, sp, #116	; 0x74
 800e730:	9301      	str	r3, [sp, #4]
 800e732:	ab1a      	add	r3, sp, #104	; 0x68
 800e734:	9300      	str	r3, [sp, #0]
 800e736:	4632      	mov	r2, r6
 800e738:	ab19      	add	r3, sp, #100	; 0x64
 800e73a:	ed9d 0b0e 	vldr	d0, [sp, #56]	; 0x38
 800e73e:	4650      	mov	r0, sl
 800e740:	f000 fa52 	bl	800ebe8 <_dtoa_r>
 800e744:	2f47      	cmp	r7, #71	; 0x47
 800e746:	4680      	mov	r8, r0
 800e748:	d102      	bne.n	800e750 <_svfprintf_r+0xdc8>
 800e74a:	07eb      	lsls	r3, r5, #31
 800e74c:	f140 80cd 	bpl.w	800e8ea <_svfprintf_r+0xf62>
 800e750:	eb08 0306 	add.w	r3, r8, r6
 800e754:	2f46      	cmp	r7, #70	; 0x46
 800e756:	9304      	str	r3, [sp, #16]
 800e758:	d111      	bne.n	800e77e <_svfprintf_r+0xdf6>
 800e75a:	f898 3000 	ldrb.w	r3, [r8]
 800e75e:	2b30      	cmp	r3, #48	; 0x30
 800e760:	d109      	bne.n	800e776 <_svfprintf_r+0xdee>
 800e762:	2200      	movs	r2, #0
 800e764:	2300      	movs	r3, #0
 800e766:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 800e76a:	f7fa faeb 	bl	8008d44 <__aeabi_dcmpeq>
 800e76e:	b910      	cbnz	r0, 800e776 <_svfprintf_r+0xdee>
 800e770:	f1c6 0601 	rsb	r6, r6, #1
 800e774:	9619      	str	r6, [sp, #100]	; 0x64
 800e776:	9a04      	ldr	r2, [sp, #16]
 800e778:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800e77a:	441a      	add	r2, r3
 800e77c:	9204      	str	r2, [sp, #16]
 800e77e:	2200      	movs	r2, #0
 800e780:	2300      	movs	r3, #0
 800e782:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 800e786:	f7fa fadd 	bl	8008d44 <__aeabi_dcmpeq>
 800e78a:	b908      	cbnz	r0, 800e790 <_svfprintf_r+0xe08>
 800e78c:	2230      	movs	r2, #48	; 0x30
 800e78e:	e002      	b.n	800e796 <_svfprintf_r+0xe0e>
 800e790:	9b04      	ldr	r3, [sp, #16]
 800e792:	931d      	str	r3, [sp, #116]	; 0x74
 800e794:	e007      	b.n	800e7a6 <_svfprintf_r+0xe1e>
 800e796:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800e798:	9904      	ldr	r1, [sp, #16]
 800e79a:	4299      	cmp	r1, r3
 800e79c:	d903      	bls.n	800e7a6 <_svfprintf_r+0xe1e>
 800e79e:	1c59      	adds	r1, r3, #1
 800e7a0:	911d      	str	r1, [sp, #116]	; 0x74
 800e7a2:	701a      	strb	r2, [r3, #0]
 800e7a4:	e7f7      	b.n	800e796 <_svfprintf_r+0xe0e>
 800e7a6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800e7a8:	2f47      	cmp	r7, #71	; 0x47
 800e7aa:	ebc8 0303 	rsb	r3, r8, r3
 800e7ae:	9304      	str	r3, [sp, #16]
 800e7b0:	d108      	bne.n	800e7c4 <_svfprintf_r+0xe3c>
 800e7b2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800e7b4:	1cdf      	adds	r7, r3, #3
 800e7b6:	db01      	blt.n	800e7bc <_svfprintf_r+0xe34>
 800e7b8:	4599      	cmp	r9, r3
 800e7ba:	da68      	bge.n	800e88e <_svfprintf_r+0xf06>
 800e7bc:	9b02      	ldr	r3, [sp, #8]
 800e7be:	3b02      	subs	r3, #2
 800e7c0:	9302      	str	r3, [sp, #8]
 800e7c2:	e002      	b.n	800e7ca <_svfprintf_r+0xe42>
 800e7c4:	9b02      	ldr	r3, [sp, #8]
 800e7c6:	2b65      	cmp	r3, #101	; 0x65
 800e7c8:	dc4a      	bgt.n	800e860 <_svfprintf_r+0xed8>
 800e7ca:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800e7cc:	f89d 2008 	ldrb.w	r2, [sp, #8]
 800e7d0:	f88d 206c 	strb.w	r2, [sp, #108]	; 0x6c
 800e7d4:	3b01      	subs	r3, #1
 800e7d6:	2b00      	cmp	r3, #0
 800e7d8:	9319      	str	r3, [sp, #100]	; 0x64
 800e7da:	bfba      	itte	lt
 800e7dc:	425b      	neglt	r3, r3
 800e7de:	222d      	movlt	r2, #45	; 0x2d
 800e7e0:	222b      	movge	r2, #43	; 0x2b
 800e7e2:	2b09      	cmp	r3, #9
 800e7e4:	f88d 206d 	strb.w	r2, [sp, #109]	; 0x6d
 800e7e8:	dd24      	ble.n	800e834 <_svfprintf_r+0xeac>
 800e7ea:	f10d 027b 	add.w	r2, sp, #123	; 0x7b
 800e7ee:	200a      	movs	r0, #10
 800e7f0:	fb93 f1f0 	sdiv	r1, r3, r0
 800e7f4:	fb00 3311 	mls	r3, r0, r1, r3
 800e7f8:	3330      	adds	r3, #48	; 0x30
 800e7fa:	2909      	cmp	r1, #9
 800e7fc:	f802 3d01 	strb.w	r3, [r2, #-1]!
 800e800:	460b      	mov	r3, r1
 800e802:	dcf5      	bgt.n	800e7f0 <_svfprintf_r+0xe68>
 800e804:	3330      	adds	r3, #48	; 0x30
 800e806:	f802 3c01 	strb.w	r3, [r2, #-1]
 800e80a:	1e51      	subs	r1, r2, #1
 800e80c:	f10d 036e 	add.w	r3, sp, #110	; 0x6e
 800e810:	f10d 007b 	add.w	r0, sp, #123	; 0x7b
 800e814:	4281      	cmp	r1, r0
 800e816:	461a      	mov	r2, r3
 800e818:	d213      	bcs.n	800e842 <_svfprintf_r+0xeba>
 800e81a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800e81e:	f803 2b01 	strb.w	r2, [r3], #1
 800e822:	e7f7      	b.n	800e814 <_svfprintf_r+0xe8c>
 800e824:	0801189c 	.word	0x0801189c
 800e828:	080118e0 	.word	0x080118e0
 800e82c:	080118b4 	.word	0x080118b4
 800e830:	080118b8 	.word	0x080118b8
 800e834:	2230      	movs	r2, #48	; 0x30
 800e836:	4413      	add	r3, r2
 800e838:	f88d 206e 	strb.w	r2, [sp, #110]	; 0x6e
 800e83c:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 800e840:	aa1c      	add	r2, sp, #112	; 0x70
 800e842:	ab1b      	add	r3, sp, #108	; 0x6c
 800e844:	1ad3      	subs	r3, r2, r3
 800e846:	9a04      	ldr	r2, [sp, #16]
 800e848:	9310      	str	r3, [sp, #64]	; 0x40
 800e84a:	2a01      	cmp	r2, #1
 800e84c:	eb03 0902 	add.w	r9, r3, r2
 800e850:	dc02      	bgt.n	800e858 <_svfprintf_r+0xed0>
 800e852:	f015 0701 	ands.w	r7, r5, #1
 800e856:	d032      	beq.n	800e8be <_svfprintf_r+0xf36>
 800e858:	9b08      	ldr	r3, [sp, #32]
 800e85a:	2700      	movs	r7, #0
 800e85c:	4499      	add	r9, r3
 800e85e:	e02e      	b.n	800e8be <_svfprintf_r+0xf36>
 800e860:	9b02      	ldr	r3, [sp, #8]
 800e862:	2b66      	cmp	r3, #102	; 0x66
 800e864:	d113      	bne.n	800e88e <_svfprintf_r+0xf06>
 800e866:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800e868:	2b00      	cmp	r3, #0
 800e86a:	dd07      	ble.n	800e87c <_svfprintf_r+0xef4>
 800e86c:	f1b9 0f00 	cmp.w	r9, #0
 800e870:	d101      	bne.n	800e876 <_svfprintf_r+0xeee>
 800e872:	07ee      	lsls	r6, r5, #31
 800e874:	d521      	bpl.n	800e8ba <_svfprintf_r+0xf32>
 800e876:	9a08      	ldr	r2, [sp, #32]
 800e878:	4413      	add	r3, r2
 800e87a:	e006      	b.n	800e88a <_svfprintf_r+0xf02>
 800e87c:	f1b9 0f00 	cmp.w	r9, #0
 800e880:	d101      	bne.n	800e886 <_svfprintf_r+0xefe>
 800e882:	07ed      	lsls	r5, r5, #31
 800e884:	d514      	bpl.n	800e8b0 <_svfprintf_r+0xf28>
 800e886:	9b08      	ldr	r3, [sp, #32]
 800e888:	3301      	adds	r3, #1
 800e88a:	444b      	add	r3, r9
 800e88c:	e015      	b.n	800e8ba <_svfprintf_r+0xf32>
 800e88e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800e890:	9a04      	ldr	r2, [sp, #16]
 800e892:	4293      	cmp	r3, r2
 800e894:	db03      	blt.n	800e89e <_svfprintf_r+0xf16>
 800e896:	07e8      	lsls	r0, r5, #31
 800e898:	d50d      	bpl.n	800e8b6 <_svfprintf_r+0xf2e>
 800e89a:	9a08      	ldr	r2, [sp, #32]
 800e89c:	e006      	b.n	800e8ac <_svfprintf_r+0xf24>
 800e89e:	9a04      	ldr	r2, [sp, #16]
 800e8a0:	9908      	ldr	r1, [sp, #32]
 800e8a2:	2b00      	cmp	r3, #0
 800e8a4:	440a      	add	r2, r1
 800e8a6:	dc05      	bgt.n	800e8b4 <_svfprintf_r+0xf2c>
 800e8a8:	f1c3 0301 	rsb	r3, r3, #1
 800e8ac:	4413      	add	r3, r2
 800e8ae:	e002      	b.n	800e8b6 <_svfprintf_r+0xf2e>
 800e8b0:	2301      	movs	r3, #1
 800e8b2:	e002      	b.n	800e8ba <_svfprintf_r+0xf32>
 800e8b4:	4613      	mov	r3, r2
 800e8b6:	2267      	movs	r2, #103	; 0x67
 800e8b8:	9202      	str	r2, [sp, #8]
 800e8ba:	9f19      	ldr	r7, [sp, #100]	; 0x64
 800e8bc:	4699      	mov	r9, r3
 800e8be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e8c0:	b113      	cbz	r3, 800e8c8 <_svfprintf_r+0xf40>
 800e8c2:	232d      	movs	r3, #45	; 0x2d
 800e8c4:	f88d 305f 	strb.w	r3, [sp, #95]	; 0x5f
 800e8c8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800e8ca:	2600      	movs	r6, #0
 800e8cc:	f7ff bb4c 	b.w	800df68 <_svfprintf_r+0x5e0>
 800e8d0:	2200      	movs	r2, #0
 800e8d2:	2300      	movs	r3, #0
 800e8d4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800e8d8:	f7fa fa3e 	bl	8008d58 <__aeabi_dcmplt>
 800e8dc:	b110      	cbz	r0, 800e8e4 <_svfprintf_r+0xf5c>
 800e8de:	232d      	movs	r3, #45	; 0x2d
 800e8e0:	f88d 305f 	strb.w	r3, [sp, #95]	; 0x5f
 800e8e4:	4b07      	ldr	r3, [pc, #28]	; (800e904 <_svfprintf_r+0xf7c>)
 800e8e6:	4a08      	ldr	r2, [pc, #32]	; (800e908 <_svfprintf_r+0xf80>)
 800e8e8:	e6e3      	b.n	800e6b2 <_svfprintf_r+0xd2a>
 800e8ea:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800e8ec:	1a1b      	subs	r3, r3, r0
 800e8ee:	9304      	str	r3, [sp, #16]
 800e8f0:	e75f      	b.n	800e7b2 <_svfprintf_r+0xe2a>
 800e8f2:	ea56 0207 	orrs.w	r2, r6, r7
 800e8f6:	f47f aaaa 	bne.w	800de4e <_svfprintf_r+0x4c6>
 800e8fa:	f7ff baaf 	b.w	800de5c <_svfprintf_r+0x4d4>
 800e8fe:	b03d      	add	sp, #244	; 0xf4
 800e900:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e904:	080118ac 	.word	0x080118ac
 800e908:	080118b0 	.word	0x080118b0

0800e90c <__swbuf_r>:
 800e90c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e90e:	460f      	mov	r7, r1
 800e910:	4614      	mov	r4, r2
 800e912:	4606      	mov	r6, r0
 800e914:	b118      	cbz	r0, 800e91e <__swbuf_r+0x12>
 800e916:	6983      	ldr	r3, [r0, #24]
 800e918:	b90b      	cbnz	r3, 800e91e <__swbuf_r+0x12>
 800e91a:	f000 ffff 	bl	800f91c <__sinit>
 800e91e:	4b27      	ldr	r3, [pc, #156]	; (800e9bc <__swbuf_r+0xb0>)
 800e920:	429c      	cmp	r4, r3
 800e922:	d101      	bne.n	800e928 <__swbuf_r+0x1c>
 800e924:	6874      	ldr	r4, [r6, #4]
 800e926:	e008      	b.n	800e93a <__swbuf_r+0x2e>
 800e928:	4b25      	ldr	r3, [pc, #148]	; (800e9c0 <__swbuf_r+0xb4>)
 800e92a:	429c      	cmp	r4, r3
 800e92c:	d101      	bne.n	800e932 <__swbuf_r+0x26>
 800e92e:	68b4      	ldr	r4, [r6, #8]
 800e930:	e003      	b.n	800e93a <__swbuf_r+0x2e>
 800e932:	4b24      	ldr	r3, [pc, #144]	; (800e9c4 <__swbuf_r+0xb8>)
 800e934:	429c      	cmp	r4, r3
 800e936:	bf08      	it	eq
 800e938:	68f4      	ldreq	r4, [r6, #12]
 800e93a:	69a3      	ldr	r3, [r4, #24]
 800e93c:	60a3      	str	r3, [r4, #8]
 800e93e:	89a3      	ldrh	r3, [r4, #12]
 800e940:	0719      	lsls	r1, r3, #28
 800e942:	d50e      	bpl.n	800e962 <__swbuf_r+0x56>
 800e944:	6923      	ldr	r3, [r4, #16]
 800e946:	b163      	cbz	r3, 800e962 <__swbuf_r+0x56>
 800e948:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800e94c:	049a      	lsls	r2, r3, #18
 800e94e:	b2fd      	uxtb	r5, r7
 800e950:	d410      	bmi.n	800e974 <__swbuf_r+0x68>
 800e952:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800e956:	81a3      	strh	r3, [r4, #12]
 800e958:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800e95a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800e95e:	6663      	str	r3, [r4, #100]	; 0x64
 800e960:	e008      	b.n	800e974 <__swbuf_r+0x68>
 800e962:	4621      	mov	r1, r4
 800e964:	4630      	mov	r0, r6
 800e966:	f000 f841 	bl	800e9ec <__swsetup_r>
 800e96a:	2800      	cmp	r0, #0
 800e96c:	d0ec      	beq.n	800e948 <__swbuf_r+0x3c>
 800e96e:	f04f 30ff 	mov.w	r0, #4294967295
 800e972:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e974:	6823      	ldr	r3, [r4, #0]
 800e976:	6920      	ldr	r0, [r4, #16]
 800e978:	1a18      	subs	r0, r3, r0
 800e97a:	6963      	ldr	r3, [r4, #20]
 800e97c:	4298      	cmp	r0, r3
 800e97e:	db05      	blt.n	800e98c <__swbuf_r+0x80>
 800e980:	4621      	mov	r1, r4
 800e982:	4630      	mov	r0, r6
 800e984:	f000 ff60 	bl	800f848 <_fflush_r>
 800e988:	2800      	cmp	r0, #0
 800e98a:	d1f0      	bne.n	800e96e <__swbuf_r+0x62>
 800e98c:	68a3      	ldr	r3, [r4, #8]
 800e98e:	3b01      	subs	r3, #1
 800e990:	60a3      	str	r3, [r4, #8]
 800e992:	6823      	ldr	r3, [r4, #0]
 800e994:	1c5a      	adds	r2, r3, #1
 800e996:	6022      	str	r2, [r4, #0]
 800e998:	701f      	strb	r7, [r3, #0]
 800e99a:	6962      	ldr	r2, [r4, #20]
 800e99c:	1c43      	adds	r3, r0, #1
 800e99e:	4293      	cmp	r3, r2
 800e9a0:	d004      	beq.n	800e9ac <__swbuf_r+0xa0>
 800e9a2:	89a3      	ldrh	r3, [r4, #12]
 800e9a4:	07db      	lsls	r3, r3, #31
 800e9a6:	d507      	bpl.n	800e9b8 <__swbuf_r+0xac>
 800e9a8:	2d0a      	cmp	r5, #10
 800e9aa:	d105      	bne.n	800e9b8 <__swbuf_r+0xac>
 800e9ac:	4621      	mov	r1, r4
 800e9ae:	4630      	mov	r0, r6
 800e9b0:	f000 ff4a 	bl	800f848 <_fflush_r>
 800e9b4:	2800      	cmp	r0, #0
 800e9b6:	d1da      	bne.n	800e96e <__swbuf_r+0x62>
 800e9b8:	4628      	mov	r0, r5
 800e9ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e9bc:	08011900 	.word	0x08011900
 800e9c0:	08011920 	.word	0x08011920
 800e9c4:	08011940 	.word	0x08011940

0800e9c8 <_write_r>:
 800e9c8:	b538      	push	{r3, r4, r5, lr}
 800e9ca:	4c07      	ldr	r4, [pc, #28]	; (800e9e8 <_write_r+0x20>)
 800e9cc:	4605      	mov	r5, r0
 800e9ce:	4608      	mov	r0, r1
 800e9d0:	4611      	mov	r1, r2
 800e9d2:	2200      	movs	r2, #0
 800e9d4:	6022      	str	r2, [r4, #0]
 800e9d6:	461a      	mov	r2, r3
 800e9d8:	f001 fe64 	bl	80106a4 <_write>
 800e9dc:	1c43      	adds	r3, r0, #1
 800e9de:	d102      	bne.n	800e9e6 <_write_r+0x1e>
 800e9e0:	6823      	ldr	r3, [r4, #0]
 800e9e2:	b103      	cbz	r3, 800e9e6 <_write_r+0x1e>
 800e9e4:	602b      	str	r3, [r5, #0]
 800e9e6:	bd38      	pop	{r3, r4, r5, pc}
 800e9e8:	200006c0 	.word	0x200006c0

0800e9ec <__swsetup_r>:
 800e9ec:	4b32      	ldr	r3, [pc, #200]	; (800eab8 <__swsetup_r+0xcc>)
 800e9ee:	b570      	push	{r4, r5, r6, lr}
 800e9f0:	681d      	ldr	r5, [r3, #0]
 800e9f2:	4606      	mov	r6, r0
 800e9f4:	460c      	mov	r4, r1
 800e9f6:	b125      	cbz	r5, 800ea02 <__swsetup_r+0x16>
 800e9f8:	69ab      	ldr	r3, [r5, #24]
 800e9fa:	b913      	cbnz	r3, 800ea02 <__swsetup_r+0x16>
 800e9fc:	4628      	mov	r0, r5
 800e9fe:	f000 ff8d 	bl	800f91c <__sinit>
 800ea02:	4b2e      	ldr	r3, [pc, #184]	; (800eabc <__swsetup_r+0xd0>)
 800ea04:	429c      	cmp	r4, r3
 800ea06:	d101      	bne.n	800ea0c <__swsetup_r+0x20>
 800ea08:	686c      	ldr	r4, [r5, #4]
 800ea0a:	e008      	b.n	800ea1e <__swsetup_r+0x32>
 800ea0c:	4b2c      	ldr	r3, [pc, #176]	; (800eac0 <__swsetup_r+0xd4>)
 800ea0e:	429c      	cmp	r4, r3
 800ea10:	d101      	bne.n	800ea16 <__swsetup_r+0x2a>
 800ea12:	68ac      	ldr	r4, [r5, #8]
 800ea14:	e003      	b.n	800ea1e <__swsetup_r+0x32>
 800ea16:	4b2b      	ldr	r3, [pc, #172]	; (800eac4 <__swsetup_r+0xd8>)
 800ea18:	429c      	cmp	r4, r3
 800ea1a:	bf08      	it	eq
 800ea1c:	68ec      	ldreq	r4, [r5, #12]
 800ea1e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800ea22:	b29a      	uxth	r2, r3
 800ea24:	0715      	lsls	r5, r2, #28
 800ea26:	d41d      	bmi.n	800ea64 <__swsetup_r+0x78>
 800ea28:	06d0      	lsls	r0, r2, #27
 800ea2a:	d402      	bmi.n	800ea32 <__swsetup_r+0x46>
 800ea2c:	2209      	movs	r2, #9
 800ea2e:	6032      	str	r2, [r6, #0]
 800ea30:	e03a      	b.n	800eaa8 <__swsetup_r+0xbc>
 800ea32:	0751      	lsls	r1, r2, #29
 800ea34:	d512      	bpl.n	800ea5c <__swsetup_r+0x70>
 800ea36:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800ea38:	b141      	cbz	r1, 800ea4c <__swsetup_r+0x60>
 800ea3a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800ea3e:	4299      	cmp	r1, r3
 800ea40:	d002      	beq.n	800ea48 <__swsetup_r+0x5c>
 800ea42:	4630      	mov	r0, r6
 800ea44:	f001 f832 	bl	800faac <_free_r>
 800ea48:	2300      	movs	r3, #0
 800ea4a:	6363      	str	r3, [r4, #52]	; 0x34
 800ea4c:	89a3      	ldrh	r3, [r4, #12]
 800ea4e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800ea52:	81a3      	strh	r3, [r4, #12]
 800ea54:	2300      	movs	r3, #0
 800ea56:	6063      	str	r3, [r4, #4]
 800ea58:	6923      	ldr	r3, [r4, #16]
 800ea5a:	6023      	str	r3, [r4, #0]
 800ea5c:	89a3      	ldrh	r3, [r4, #12]
 800ea5e:	f043 0308 	orr.w	r3, r3, #8
 800ea62:	81a3      	strh	r3, [r4, #12]
 800ea64:	6923      	ldr	r3, [r4, #16]
 800ea66:	b94b      	cbnz	r3, 800ea7c <__swsetup_r+0x90>
 800ea68:	89a3      	ldrh	r3, [r4, #12]
 800ea6a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800ea6e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800ea72:	d003      	beq.n	800ea7c <__swsetup_r+0x90>
 800ea74:	4621      	mov	r1, r4
 800ea76:	4630      	mov	r0, r6
 800ea78:	f001 f924 	bl	800fcc4 <__smakebuf_r>
 800ea7c:	89a2      	ldrh	r2, [r4, #12]
 800ea7e:	f012 0301 	ands.w	r3, r2, #1
 800ea82:	d005      	beq.n	800ea90 <__swsetup_r+0xa4>
 800ea84:	2300      	movs	r3, #0
 800ea86:	60a3      	str	r3, [r4, #8]
 800ea88:	6963      	ldr	r3, [r4, #20]
 800ea8a:	425b      	negs	r3, r3
 800ea8c:	61a3      	str	r3, [r4, #24]
 800ea8e:	e003      	b.n	800ea98 <__swsetup_r+0xac>
 800ea90:	0792      	lsls	r2, r2, #30
 800ea92:	bf58      	it	pl
 800ea94:	6963      	ldrpl	r3, [r4, #20]
 800ea96:	60a3      	str	r3, [r4, #8]
 800ea98:	6923      	ldr	r3, [r4, #16]
 800ea9a:	b95b      	cbnz	r3, 800eab4 <__swsetup_r+0xc8>
 800ea9c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800eaa0:	f003 0080 	and.w	r0, r3, #128	; 0x80
 800eaa4:	b280      	uxth	r0, r0
 800eaa6:	b130      	cbz	r0, 800eab6 <__swsetup_r+0xca>
 800eaa8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800eaac:	81a3      	strh	r3, [r4, #12]
 800eaae:	f04f 30ff 	mov.w	r0, #4294967295
 800eab2:	bd70      	pop	{r4, r5, r6, pc}
 800eab4:	2000      	movs	r0, #0
 800eab6:	bd70      	pop	{r4, r5, r6, pc}
 800eab8:	200000fc 	.word	0x200000fc
 800eabc:	08011900 	.word	0x08011900
 800eac0:	08011920 	.word	0x08011920
 800eac4:	08011940 	.word	0x08011940

0800eac8 <quorem>:
 800eac8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eacc:	6903      	ldr	r3, [r0, #16]
 800eace:	690c      	ldr	r4, [r1, #16]
 800ead0:	429c      	cmp	r4, r3
 800ead2:	4680      	mov	r8, r0
 800ead4:	f300 8083 	bgt.w	800ebde <quorem+0x116>
 800ead8:	3c01      	subs	r4, #1
 800eada:	f101 0714 	add.w	r7, r1, #20
 800eade:	ea4f 0e84 	mov.w	lr, r4, lsl #2
 800eae2:	f100 0614 	add.w	r6, r0, #20
 800eae6:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 800eaea:	eb06 030e 	add.w	r3, r6, lr
 800eaee:	9301      	str	r3, [sp, #4]
 800eaf0:	3501      	adds	r5, #1
 800eaf2:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
 800eaf6:	fbb3 f5f5 	udiv	r5, r3, r5
 800eafa:	eb07 090e 	add.w	r9, r7, lr
 800eafe:	2d00      	cmp	r5, #0
 800eb00:	d039      	beq.n	800eb76 <quorem+0xae>
 800eb02:	f04f 0a00 	mov.w	sl, #0
 800eb06:	4638      	mov	r0, r7
 800eb08:	46b4      	mov	ip, r6
 800eb0a:	46d3      	mov	fp, sl
 800eb0c:	f850 2b04 	ldr.w	r2, [r0], #4
 800eb10:	b293      	uxth	r3, r2
 800eb12:	fb05 a303 	mla	r3, r5, r3, sl
 800eb16:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800eb1a:	b29b      	uxth	r3, r3
 800eb1c:	ebc3 030b 	rsb	r3, r3, fp
 800eb20:	0c12      	lsrs	r2, r2, #16
 800eb22:	f8bc b000 	ldrh.w	fp, [ip]
 800eb26:	fb05 a202 	mla	r2, r5, r2, sl
 800eb2a:	fa13 f38b 	uxtah	r3, r3, fp
 800eb2e:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 800eb32:	fa1f fb82 	uxth.w	fp, r2
 800eb36:	f8dc 2000 	ldr.w	r2, [ip]
 800eb3a:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 800eb3e:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800eb42:	b29b      	uxth	r3, r3
 800eb44:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800eb48:	4581      	cmp	r9, r0
 800eb4a:	ea4f 4b22 	mov.w	fp, r2, asr #16
 800eb4e:	f84c 3b04 	str.w	r3, [ip], #4
 800eb52:	d2db      	bcs.n	800eb0c <quorem+0x44>
 800eb54:	f856 300e 	ldr.w	r3, [r6, lr]
 800eb58:	b96b      	cbnz	r3, 800eb76 <quorem+0xae>
 800eb5a:	9b01      	ldr	r3, [sp, #4]
 800eb5c:	3b04      	subs	r3, #4
 800eb5e:	429e      	cmp	r6, r3
 800eb60:	461a      	mov	r2, r3
 800eb62:	d302      	bcc.n	800eb6a <quorem+0xa2>
 800eb64:	f8c8 4010 	str.w	r4, [r8, #16]
 800eb68:	e005      	b.n	800eb76 <quorem+0xae>
 800eb6a:	6812      	ldr	r2, [r2, #0]
 800eb6c:	3b04      	subs	r3, #4
 800eb6e:	2a00      	cmp	r2, #0
 800eb70:	d1f8      	bne.n	800eb64 <quorem+0x9c>
 800eb72:	3c01      	subs	r4, #1
 800eb74:	e7f3      	b.n	800eb5e <quorem+0x96>
 800eb76:	4640      	mov	r0, r8
 800eb78:	f001 faed 	bl	8010156 <__mcmp>
 800eb7c:	2800      	cmp	r0, #0
 800eb7e:	db2c      	blt.n	800ebda <quorem+0x112>
 800eb80:	3501      	adds	r5, #1
 800eb82:	4630      	mov	r0, r6
 800eb84:	f04f 0e00 	mov.w	lr, #0
 800eb88:	f857 1b04 	ldr.w	r1, [r7], #4
 800eb8c:	f8d0 c000 	ldr.w	ip, [r0]
 800eb90:	b28a      	uxth	r2, r1
 800eb92:	ebc2 030e 	rsb	r3, r2, lr
 800eb96:	0c09      	lsrs	r1, r1, #16
 800eb98:	fa13 f38c 	uxtah	r3, r3, ip
 800eb9c:	ebc1 421c 	rsb	r2, r1, ip, lsr #16
 800eba0:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800eba4:	b29b      	uxth	r3, r3
 800eba6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800ebaa:	45b9      	cmp	r9, r7
 800ebac:	ea4f 4e22 	mov.w	lr, r2, asr #16
 800ebb0:	f840 3b04 	str.w	r3, [r0], #4
 800ebb4:	d2e8      	bcs.n	800eb88 <quorem+0xc0>
 800ebb6:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 800ebba:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800ebbe:	b962      	cbnz	r2, 800ebda <quorem+0x112>
 800ebc0:	3b04      	subs	r3, #4
 800ebc2:	429e      	cmp	r6, r3
 800ebc4:	461a      	mov	r2, r3
 800ebc6:	d302      	bcc.n	800ebce <quorem+0x106>
 800ebc8:	f8c8 4010 	str.w	r4, [r8, #16]
 800ebcc:	e005      	b.n	800ebda <quorem+0x112>
 800ebce:	6812      	ldr	r2, [r2, #0]
 800ebd0:	3b04      	subs	r3, #4
 800ebd2:	2a00      	cmp	r2, #0
 800ebd4:	d1f8      	bne.n	800ebc8 <quorem+0x100>
 800ebd6:	3c01      	subs	r4, #1
 800ebd8:	e7f3      	b.n	800ebc2 <quorem+0xfa>
 800ebda:	4628      	mov	r0, r5
 800ebdc:	e000      	b.n	800ebe0 <quorem+0x118>
 800ebde:	2000      	movs	r0, #0
 800ebe0:	b003      	add	sp, #12
 800ebe2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800ebe8 <_dtoa_r>:
 800ebe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ebec:	ec59 8b10 	vmov	r8, r9, d0
 800ebf0:	b097      	sub	sp, #92	; 0x5c
 800ebf2:	6a45      	ldr	r5, [r0, #36]	; 0x24
 800ebf4:	9106      	str	r1, [sp, #24]
 800ebf6:	4682      	mov	sl, r0
 800ebf8:	9209      	str	r2, [sp, #36]	; 0x24
 800ebfa:	9310      	str	r3, [sp, #64]	; 0x40
 800ebfc:	9c20      	ldr	r4, [sp, #128]	; 0x80
 800ebfe:	e9cd 8900 	strd	r8, r9, [sp]
 800ec02:	b945      	cbnz	r5, 800ec16 <_dtoa_r+0x2e>
 800ec04:	2010      	movs	r0, #16
 800ec06:	f7fe f9d9 	bl	800cfbc <malloc>
 800ec0a:	f8ca 0024 	str.w	r0, [sl, #36]	; 0x24
 800ec0e:	6045      	str	r5, [r0, #4]
 800ec10:	6085      	str	r5, [r0, #8]
 800ec12:	6005      	str	r5, [r0, #0]
 800ec14:	60c5      	str	r5, [r0, #12]
 800ec16:	f8da 3024 	ldr.w	r3, [sl, #36]	; 0x24
 800ec1a:	6819      	ldr	r1, [r3, #0]
 800ec1c:	b159      	cbz	r1, 800ec36 <_dtoa_r+0x4e>
 800ec1e:	685a      	ldr	r2, [r3, #4]
 800ec20:	604a      	str	r2, [r1, #4]
 800ec22:	2301      	movs	r3, #1
 800ec24:	4093      	lsls	r3, r2
 800ec26:	608b      	str	r3, [r1, #8]
 800ec28:	4650      	mov	r0, sl
 800ec2a:	f001 f8bc 	bl	800fda6 <_Bfree>
 800ec2e:	f8da 3024 	ldr.w	r3, [sl, #36]	; 0x24
 800ec32:	2200      	movs	r2, #0
 800ec34:	601a      	str	r2, [r3, #0]
 800ec36:	9b01      	ldr	r3, [sp, #4]
 800ec38:	4a9f      	ldr	r2, [pc, #636]	; (800eeb8 <_dtoa_r+0x2d0>)
 800ec3a:	2b00      	cmp	r3, #0
 800ec3c:	bfbf      	itttt	lt
 800ec3e:	2301      	movlt	r3, #1
 800ec40:	6023      	strlt	r3, [r4, #0]
 800ec42:	9b01      	ldrlt	r3, [sp, #4]
 800ec44:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 800ec48:	bfb8      	it	lt
 800ec4a:	9301      	strlt	r3, [sp, #4]
 800ec4c:	9f01      	ldr	r7, [sp, #4]
 800ec4e:	bfa4      	itt	ge
 800ec50:	2300      	movge	r3, #0
 800ec52:	6023      	strge	r3, [r4, #0]
 800ec54:	f027 4300 	bic.w	r3, r7, #2147483648	; 0x80000000
 800ec58:	0d1b      	lsrs	r3, r3, #20
 800ec5a:	051b      	lsls	r3, r3, #20
 800ec5c:	4293      	cmp	r3, r2
 800ec5e:	d11d      	bne.n	800ec9c <_dtoa_r+0xb4>
 800ec60:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ec62:	f242 730f 	movw	r3, #9999	; 0x270f
 800ec66:	6013      	str	r3, [r2, #0]
 800ec68:	9b00      	ldr	r3, [sp, #0]
 800ec6a:	b943      	cbnz	r3, 800ec7e <_dtoa_r+0x96>
 800ec6c:	4a93      	ldr	r2, [pc, #588]	; (800eebc <_dtoa_r+0x2d4>)
 800ec6e:	4b94      	ldr	r3, [pc, #592]	; (800eec0 <_dtoa_r+0x2d8>)
 800ec70:	f3c7 0013 	ubfx	r0, r7, #0, #20
 800ec74:	2800      	cmp	r0, #0
 800ec76:	bf14      	ite	ne
 800ec78:	4618      	movne	r0, r3
 800ec7a:	4610      	moveq	r0, r2
 800ec7c:	e000      	b.n	800ec80 <_dtoa_r+0x98>
 800ec7e:	4890      	ldr	r0, [pc, #576]	; (800eec0 <_dtoa_r+0x2d8>)
 800ec80:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800ec82:	2b00      	cmp	r3, #0
 800ec84:	f000 854a 	beq.w	800f71c <_dtoa_r+0xb34>
 800ec88:	78c3      	ldrb	r3, [r0, #3]
 800ec8a:	b113      	cbz	r3, 800ec92 <_dtoa_r+0xaa>
 800ec8c:	f100 0308 	add.w	r3, r0, #8
 800ec90:	e000      	b.n	800ec94 <_dtoa_r+0xac>
 800ec92:	1cc3      	adds	r3, r0, #3
 800ec94:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800ec96:	6013      	str	r3, [r2, #0]
 800ec98:	f000 bd40 	b.w	800f71c <_dtoa_r+0xb34>
 800ec9c:	e9dd 4500 	ldrd	r4, r5, [sp]
 800eca0:	2200      	movs	r2, #0
 800eca2:	2300      	movs	r3, #0
 800eca4:	4620      	mov	r0, r4
 800eca6:	4629      	mov	r1, r5
 800eca8:	f7fa f84c 	bl	8008d44 <__aeabi_dcmpeq>
 800ecac:	4680      	mov	r8, r0
 800ecae:	b158      	cbz	r0, 800ecc8 <_dtoa_r+0xe0>
 800ecb0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ecb2:	2301      	movs	r3, #1
 800ecb4:	6013      	str	r3, [r2, #0]
 800ecb6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800ecb8:	2b00      	cmp	r3, #0
 800ecba:	f000 8522 	beq.w	800f702 <_dtoa_r+0xb1a>
 800ecbe:	4881      	ldr	r0, [pc, #516]	; (800eec4 <_dtoa_r+0x2dc>)
 800ecc0:	6018      	str	r0, [r3, #0]
 800ecc2:	3801      	subs	r0, #1
 800ecc4:	f000 bd2a 	b.w	800f71c <_dtoa_r+0xb34>
 800ecc8:	aa14      	add	r2, sp, #80	; 0x50
 800ecca:	a915      	add	r1, sp, #84	; 0x54
 800eccc:	ec45 4b10 	vmov	d0, r4, r5
 800ecd0:	4650      	mov	r0, sl
 800ecd2:	f001 fabb 	bl	801024c <__d2b>
 800ecd6:	f3c7 560a 	ubfx	r6, r7, #20, #11
 800ecda:	9002      	str	r0, [sp, #8]
 800ecdc:	b15e      	cbz	r6, 800ecf6 <_dtoa_r+0x10e>
 800ecde:	f3c5 0313 	ubfx	r3, r5, #0, #20
 800ece2:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 800ece6:	4620      	mov	r0, r4
 800ece8:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 800ecec:	f2a6 36ff 	subw	r6, r6, #1023	; 0x3ff
 800ecf0:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
 800ecf4:	e01d      	b.n	800ed32 <_dtoa_r+0x14a>
 800ecf6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800ecf8:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800ecfa:	441e      	add	r6, r3
 800ecfc:	f206 4332 	addw	r3, r6, #1074	; 0x432
 800ed00:	2b20      	cmp	r3, #32
 800ed02:	dd0a      	ble.n	800ed1a <_dtoa_r+0x132>
 800ed04:	9a00      	ldr	r2, [sp, #0]
 800ed06:	f206 4012 	addw	r0, r6, #1042	; 0x412
 800ed0a:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 800ed0e:	fa22 f000 	lsr.w	r0, r2, r0
 800ed12:	fa07 f303 	lsl.w	r3, r7, r3
 800ed16:	4318      	orrs	r0, r3
 800ed18:	e004      	b.n	800ed24 <_dtoa_r+0x13c>
 800ed1a:	f1c3 0020 	rsb	r0, r3, #32
 800ed1e:	9b00      	ldr	r3, [sp, #0]
 800ed20:	fa03 f000 	lsl.w	r0, r3, r0
 800ed24:	f7f9 fd30 	bl	8008788 <__aeabi_ui2d>
 800ed28:	2301      	movs	r3, #1
 800ed2a:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 800ed2e:	3e01      	subs	r6, #1
 800ed30:	9311      	str	r3, [sp, #68]	; 0x44
 800ed32:	2200      	movs	r2, #0
 800ed34:	4b64      	ldr	r3, [pc, #400]	; (800eec8 <_dtoa_r+0x2e0>)
 800ed36:	f7f9 fbe9 	bl	800850c <__aeabi_dsub>
 800ed3a:	a359      	add	r3, pc, #356	; (adr r3, 800eea0 <_dtoa_r+0x2b8>)
 800ed3c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ed40:	f7f9 fd98 	bl	8008874 <__aeabi_dmul>
 800ed44:	a358      	add	r3, pc, #352	; (adr r3, 800eea8 <_dtoa_r+0x2c0>)
 800ed46:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ed4a:	f7f9 fbe1 	bl	8008510 <__adddf3>
 800ed4e:	4604      	mov	r4, r0
 800ed50:	4630      	mov	r0, r6
 800ed52:	460d      	mov	r5, r1
 800ed54:	f7f9 fd28 	bl	80087a8 <__aeabi_i2d>
 800ed58:	a355      	add	r3, pc, #340	; (adr r3, 800eeb0 <_dtoa_r+0x2c8>)
 800ed5a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ed5e:	f7f9 fd89 	bl	8008874 <__aeabi_dmul>
 800ed62:	4602      	mov	r2, r0
 800ed64:	460b      	mov	r3, r1
 800ed66:	4620      	mov	r0, r4
 800ed68:	4629      	mov	r1, r5
 800ed6a:	f7f9 fbd1 	bl	8008510 <__adddf3>
 800ed6e:	4604      	mov	r4, r0
 800ed70:	460d      	mov	r5, r1
 800ed72:	f7fa f82f 	bl	8008dd4 <__aeabi_d2iz>
 800ed76:	2200      	movs	r2, #0
 800ed78:	4683      	mov	fp, r0
 800ed7a:	2300      	movs	r3, #0
 800ed7c:	4620      	mov	r0, r4
 800ed7e:	4629      	mov	r1, r5
 800ed80:	f7f9 ffea 	bl	8008d58 <__aeabi_dcmplt>
 800ed84:	b158      	cbz	r0, 800ed9e <_dtoa_r+0x1b6>
 800ed86:	4658      	mov	r0, fp
 800ed88:	f7f9 fd0e 	bl	80087a8 <__aeabi_i2d>
 800ed8c:	4602      	mov	r2, r0
 800ed8e:	460b      	mov	r3, r1
 800ed90:	4620      	mov	r0, r4
 800ed92:	4629      	mov	r1, r5
 800ed94:	f7f9 ffd6 	bl	8008d44 <__aeabi_dcmpeq>
 800ed98:	b908      	cbnz	r0, 800ed9e <_dtoa_r+0x1b6>
 800ed9a:	f10b 3bff 	add.w	fp, fp, #4294967295
 800ed9e:	f1bb 0f16 	cmp.w	fp, #22
 800eda2:	d80d      	bhi.n	800edc0 <_dtoa_r+0x1d8>
 800eda4:	4949      	ldr	r1, [pc, #292]	; (800eecc <_dtoa_r+0x2e4>)
 800eda6:	eb01 01cb 	add.w	r1, r1, fp, lsl #3
 800edaa:	e9dd 2300 	ldrd	r2, r3, [sp]
 800edae:	e9d1 0100 	ldrd	r0, r1, [r1]
 800edb2:	f7f9 ffef 	bl	8008d94 <__aeabi_dcmpgt>
 800edb6:	b130      	cbz	r0, 800edc6 <_dtoa_r+0x1de>
 800edb8:	f10b 3bff 	add.w	fp, fp, #4294967295
 800edbc:	2300      	movs	r3, #0
 800edbe:	e000      	b.n	800edc2 <_dtoa_r+0x1da>
 800edc0:	2301      	movs	r3, #1
 800edc2:	930d      	str	r3, [sp, #52]	; 0x34
 800edc4:	e000      	b.n	800edc8 <_dtoa_r+0x1e0>
 800edc6:	900d      	str	r0, [sp, #52]	; 0x34
 800edc8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800edca:	1b9e      	subs	r6, r3, r6
 800edcc:	1e73      	subs	r3, r6, #1
 800edce:	9305      	str	r3, [sp, #20]
 800edd0:	bf43      	ittte	mi
 800edd2:	f1c3 0900 	rsbmi	r9, r3, #0
 800edd6:	2300      	movmi	r3, #0
 800edd8:	9305      	strmi	r3, [sp, #20]
 800edda:	f04f 0900 	movpl.w	r9, #0
 800edde:	f1bb 0f00 	cmp.w	fp, #0
 800ede2:	db07      	blt.n	800edf4 <_dtoa_r+0x20c>
 800ede4:	9b05      	ldr	r3, [sp, #20]
 800ede6:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 800edea:	445b      	add	r3, fp
 800edec:	9305      	str	r3, [sp, #20]
 800edee:	2300      	movs	r3, #0
 800edf0:	9307      	str	r3, [sp, #28]
 800edf2:	e006      	b.n	800ee02 <_dtoa_r+0x21a>
 800edf4:	f1cb 0300 	rsb	r3, fp, #0
 800edf8:	9307      	str	r3, [sp, #28]
 800edfa:	2300      	movs	r3, #0
 800edfc:	ebcb 0909 	rsb	r9, fp, r9
 800ee00:	930c      	str	r3, [sp, #48]	; 0x30
 800ee02:	9b06      	ldr	r3, [sp, #24]
 800ee04:	2b09      	cmp	r3, #9
 800ee06:	d827      	bhi.n	800ee58 <_dtoa_r+0x270>
 800ee08:	2b05      	cmp	r3, #5
 800ee0a:	bfc4      	itt	gt
 800ee0c:	3b04      	subgt	r3, #4
 800ee0e:	9306      	strgt	r3, [sp, #24]
 800ee10:	9b06      	ldr	r3, [sp, #24]
 800ee12:	f1a3 0302 	sub.w	r3, r3, #2
 800ee16:	bfcc      	ite	gt
 800ee18:	2500      	movgt	r5, #0
 800ee1a:	2501      	movle	r5, #1
 800ee1c:	2b03      	cmp	r3, #3
 800ee1e:	d820      	bhi.n	800ee62 <_dtoa_r+0x27a>
 800ee20:	e8df f003 	tbb	[pc, r3]
 800ee24:	04020e06 	.word	0x04020e06
 800ee28:	2301      	movs	r3, #1
 800ee2a:	e002      	b.n	800ee32 <_dtoa_r+0x24a>
 800ee2c:	2301      	movs	r3, #1
 800ee2e:	e008      	b.n	800ee42 <_dtoa_r+0x25a>
 800ee30:	2300      	movs	r3, #0
 800ee32:	9308      	str	r3, [sp, #32]
 800ee34:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ee36:	2b00      	cmp	r3, #0
 800ee38:	dd1c      	ble.n	800ee74 <_dtoa_r+0x28c>
 800ee3a:	9303      	str	r3, [sp, #12]
 800ee3c:	4698      	mov	r8, r3
 800ee3e:	e01e      	b.n	800ee7e <_dtoa_r+0x296>
 800ee40:	2300      	movs	r3, #0
 800ee42:	9308      	str	r3, [sp, #32]
 800ee44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ee46:	445b      	add	r3, fp
 800ee48:	f103 0801 	add.w	r8, r3, #1
 800ee4c:	9303      	str	r3, [sp, #12]
 800ee4e:	4643      	mov	r3, r8
 800ee50:	2b01      	cmp	r3, #1
 800ee52:	bfb8      	it	lt
 800ee54:	2301      	movlt	r3, #1
 800ee56:	e012      	b.n	800ee7e <_dtoa_r+0x296>
 800ee58:	2501      	movs	r5, #1
 800ee5a:	2300      	movs	r3, #0
 800ee5c:	9306      	str	r3, [sp, #24]
 800ee5e:	9508      	str	r5, [sp, #32]
 800ee60:	e001      	b.n	800ee66 <_dtoa_r+0x27e>
 800ee62:	2301      	movs	r3, #1
 800ee64:	9308      	str	r3, [sp, #32]
 800ee66:	f04f 33ff 	mov.w	r3, #4294967295
 800ee6a:	9303      	str	r3, [sp, #12]
 800ee6c:	4698      	mov	r8, r3
 800ee6e:	2200      	movs	r2, #0
 800ee70:	2312      	movs	r3, #18
 800ee72:	e003      	b.n	800ee7c <_dtoa_r+0x294>
 800ee74:	2301      	movs	r3, #1
 800ee76:	9303      	str	r3, [sp, #12]
 800ee78:	4698      	mov	r8, r3
 800ee7a:	461a      	mov	r2, r3
 800ee7c:	9209      	str	r2, [sp, #36]	; 0x24
 800ee7e:	f8da 4024 	ldr.w	r4, [sl, #36]	; 0x24
 800ee82:	2200      	movs	r2, #0
 800ee84:	6062      	str	r2, [r4, #4]
 800ee86:	2104      	movs	r1, #4
 800ee88:	f101 0214 	add.w	r2, r1, #20
 800ee8c:	429a      	cmp	r2, r3
 800ee8e:	d81f      	bhi.n	800eed0 <_dtoa_r+0x2e8>
 800ee90:	6862      	ldr	r2, [r4, #4]
 800ee92:	3201      	adds	r2, #1
 800ee94:	6062      	str	r2, [r4, #4]
 800ee96:	0049      	lsls	r1, r1, #1
 800ee98:	e7f6      	b.n	800ee88 <_dtoa_r+0x2a0>
 800ee9a:	bf00      	nop
 800ee9c:	f3af 8000 	nop.w
 800eea0:	636f4361 	.word	0x636f4361
 800eea4:	3fd287a7 	.word	0x3fd287a7
 800eea8:	8b60c8b3 	.word	0x8b60c8b3
 800eeac:	3fc68a28 	.word	0x3fc68a28
 800eeb0:	509f79fb 	.word	0x509f79fb
 800eeb4:	3fd34413 	.word	0x3fd34413
 800eeb8:	7ff00000 	.word	0x7ff00000
 800eebc:	080118f0 	.word	0x080118f0
 800eec0:	080118f9 	.word	0x080118f9
 800eec4:	080118df 	.word	0x080118df
 800eec8:	3ff80000 	.word	0x3ff80000
 800eecc:	08011968 	.word	0x08011968
 800eed0:	6861      	ldr	r1, [r4, #4]
 800eed2:	4650      	mov	r0, sl
 800eed4:	f000 ff32 	bl	800fd3c <_Balloc>
 800eed8:	f8da 3024 	ldr.w	r3, [sl, #36]	; 0x24
 800eedc:	6020      	str	r0, [r4, #0]
 800eede:	681b      	ldr	r3, [r3, #0]
 800eee0:	9304      	str	r3, [sp, #16]
 800eee2:	f1b8 0f0e 	cmp.w	r8, #14
 800eee6:	f200 815d 	bhi.w	800f1a4 <_dtoa_r+0x5bc>
 800eeea:	2d00      	cmp	r5, #0
 800eeec:	f000 815a 	beq.w	800f1a4 <_dtoa_r+0x5bc>
 800eef0:	ed9d 7b00 	vldr	d7, [sp]
 800eef4:	f1bb 0f00 	cmp.w	fp, #0
 800eef8:	ed8d 7b0e 	vstr	d7, [sp, #56]	; 0x38
 800eefc:	dd31      	ble.n	800ef62 <_dtoa_r+0x37a>
 800eefe:	4aa0      	ldr	r2, [pc, #640]	; (800f180 <_dtoa_r+0x598>)
 800ef00:	f00b 030f 	and.w	r3, fp, #15
 800ef04:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800ef08:	ed93 7b00 	vldr	d7, [r3]
 800ef0c:	ea4f 142b 	mov.w	r4, fp, asr #4
 800ef10:	06e2      	lsls	r2, r4, #27
 800ef12:	ed8d 7b0a 	vstr	d7, [sp, #40]	; 0x28
 800ef16:	d50c      	bpl.n	800ef32 <_dtoa_r+0x34a>
 800ef18:	4b9a      	ldr	r3, [pc, #616]	; (800f184 <_dtoa_r+0x59c>)
 800ef1a:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 800ef1e:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800ef22:	f7f9 fdd1 	bl	8008ac8 <__aeabi_ddiv>
 800ef26:	f004 040f 	and.w	r4, r4, #15
 800ef2a:	e9cd 0100 	strd	r0, r1, [sp]
 800ef2e:	2603      	movs	r6, #3
 800ef30:	e000      	b.n	800ef34 <_dtoa_r+0x34c>
 800ef32:	2602      	movs	r6, #2
 800ef34:	4d93      	ldr	r5, [pc, #588]	; (800f184 <_dtoa_r+0x59c>)
 800ef36:	b16c      	cbz	r4, 800ef54 <_dtoa_r+0x36c>
 800ef38:	07e3      	lsls	r3, r4, #31
 800ef3a:	d508      	bpl.n	800ef4e <_dtoa_r+0x366>
 800ef3c:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800ef40:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ef44:	f7f9 fc96 	bl	8008874 <__aeabi_dmul>
 800ef48:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 800ef4c:	3601      	adds	r6, #1
 800ef4e:	1064      	asrs	r4, r4, #1
 800ef50:	3508      	adds	r5, #8
 800ef52:	e7f0      	b.n	800ef36 <_dtoa_r+0x34e>
 800ef54:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800ef58:	e9dd 0100 	ldrd	r0, r1, [sp]
 800ef5c:	f7f9 fdb4 	bl	8008ac8 <__aeabi_ddiv>
 800ef60:	e020      	b.n	800efa4 <_dtoa_r+0x3bc>
 800ef62:	f1cb 0400 	rsb	r4, fp, #0
 800ef66:	b304      	cbz	r4, 800efaa <_dtoa_r+0x3c2>
 800ef68:	4b85      	ldr	r3, [pc, #532]	; (800f180 <_dtoa_r+0x598>)
 800ef6a:	4d86      	ldr	r5, [pc, #536]	; (800f184 <_dtoa_r+0x59c>)
 800ef6c:	f004 020f 	and.w	r2, r4, #15
 800ef70:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800ef74:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ef78:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 800ef7c:	f7f9 fc7a 	bl	8008874 <__aeabi_dmul>
 800ef80:	e9cd 0100 	strd	r0, r1, [sp]
 800ef84:	1124      	asrs	r4, r4, #4
 800ef86:	2300      	movs	r3, #0
 800ef88:	2602      	movs	r6, #2
 800ef8a:	b154      	cbz	r4, 800efa2 <_dtoa_r+0x3ba>
 800ef8c:	07e7      	lsls	r7, r4, #31
 800ef8e:	d505      	bpl.n	800ef9c <_dtoa_r+0x3b4>
 800ef90:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ef94:	f7f9 fc6e 	bl	8008874 <__aeabi_dmul>
 800ef98:	3601      	adds	r6, #1
 800ef9a:	2301      	movs	r3, #1
 800ef9c:	1064      	asrs	r4, r4, #1
 800ef9e:	3508      	adds	r5, #8
 800efa0:	e7f3      	b.n	800ef8a <_dtoa_r+0x3a2>
 800efa2:	b11b      	cbz	r3, 800efac <_dtoa_r+0x3c4>
 800efa4:	e9cd 0100 	strd	r0, r1, [sp]
 800efa8:	e000      	b.n	800efac <_dtoa_r+0x3c4>
 800efaa:	2602      	movs	r6, #2
 800efac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800efae:	b1eb      	cbz	r3, 800efec <_dtoa_r+0x404>
 800efb0:	e9dd 4500 	ldrd	r4, r5, [sp]
 800efb4:	2200      	movs	r2, #0
 800efb6:	4b74      	ldr	r3, [pc, #464]	; (800f188 <_dtoa_r+0x5a0>)
 800efb8:	4620      	mov	r0, r4
 800efba:	4629      	mov	r1, r5
 800efbc:	f7f9 fecc 	bl	8008d58 <__aeabi_dcmplt>
 800efc0:	b1a0      	cbz	r0, 800efec <_dtoa_r+0x404>
 800efc2:	f1b8 0f00 	cmp.w	r8, #0
 800efc6:	d011      	beq.n	800efec <_dtoa_r+0x404>
 800efc8:	9b03      	ldr	r3, [sp, #12]
 800efca:	2b00      	cmp	r3, #0
 800efcc:	f340 80e6 	ble.w	800f19c <_dtoa_r+0x5b4>
 800efd0:	f10b 33ff 	add.w	r3, fp, #4294967295
 800efd4:	930a      	str	r3, [sp, #40]	; 0x28
 800efd6:	2200      	movs	r2, #0
 800efd8:	4b6c      	ldr	r3, [pc, #432]	; (800f18c <_dtoa_r+0x5a4>)
 800efda:	4620      	mov	r0, r4
 800efdc:	4629      	mov	r1, r5
 800efde:	f7f9 fc49 	bl	8008874 <__aeabi_dmul>
 800efe2:	3601      	adds	r6, #1
 800efe4:	e9cd 0100 	strd	r0, r1, [sp]
 800efe8:	9f03      	ldr	r7, [sp, #12]
 800efea:	e002      	b.n	800eff2 <_dtoa_r+0x40a>
 800efec:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800eff0:	4647      	mov	r7, r8
 800eff2:	4630      	mov	r0, r6
 800eff4:	f7f9 fbd8 	bl	80087a8 <__aeabi_i2d>
 800eff8:	e9dd 2300 	ldrd	r2, r3, [sp]
 800effc:	f7f9 fc3a 	bl	8008874 <__aeabi_dmul>
 800f000:	2200      	movs	r2, #0
 800f002:	4b63      	ldr	r3, [pc, #396]	; (800f190 <_dtoa_r+0x5a8>)
 800f004:	f7f9 fa84 	bl	8008510 <__adddf3>
 800f008:	4604      	mov	r4, r0
 800f00a:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
 800f00e:	b9cf      	cbnz	r7, 800f044 <_dtoa_r+0x45c>
 800f010:	2200      	movs	r2, #0
 800f012:	4b60      	ldr	r3, [pc, #384]	; (800f194 <_dtoa_r+0x5ac>)
 800f014:	e9dd 0100 	ldrd	r0, r1, [sp]
 800f018:	f7f9 fa78 	bl	800850c <__aeabi_dsub>
 800f01c:	4622      	mov	r2, r4
 800f01e:	462b      	mov	r3, r5
 800f020:	e9cd 0100 	strd	r0, r1, [sp]
 800f024:	f7f9 feb6 	bl	8008d94 <__aeabi_dcmpgt>
 800f028:	2800      	cmp	r0, #0
 800f02a:	f040 8241 	bne.w	800f4b0 <_dtoa_r+0x8c8>
 800f02e:	4622      	mov	r2, r4
 800f030:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 800f034:	e9dd 0100 	ldrd	r0, r1, [sp]
 800f038:	f7f9 fe8e 	bl	8008d58 <__aeabi_dcmplt>
 800f03c:	2800      	cmp	r0, #0
 800f03e:	f040 822e 	bne.w	800f49e <_dtoa_r+0x8b6>
 800f042:	e0ab      	b.n	800f19c <_dtoa_r+0x5b4>
 800f044:	9a08      	ldr	r2, [sp, #32]
 800f046:	4b4e      	ldr	r3, [pc, #312]	; (800f180 <_dtoa_r+0x598>)
 800f048:	1e79      	subs	r1, r7, #1
 800f04a:	2a00      	cmp	r2, #0
 800f04c:	d04a      	beq.n	800f0e4 <_dtoa_r+0x4fc>
 800f04e:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 800f052:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f056:	2000      	movs	r0, #0
 800f058:	494f      	ldr	r1, [pc, #316]	; (800f198 <_dtoa_r+0x5b0>)
 800f05a:	f7f9 fd35 	bl	8008ac8 <__aeabi_ddiv>
 800f05e:	4622      	mov	r2, r4
 800f060:	462b      	mov	r3, r5
 800f062:	f7f9 fa53 	bl	800850c <__aeabi_dsub>
 800f066:	9c04      	ldr	r4, [sp, #16]
 800f068:	4605      	mov	r5, r0
 800f06a:	460e      	mov	r6, r1
 800f06c:	e9dd 0100 	ldrd	r0, r1, [sp]
 800f070:	f7f9 feb0 	bl	8008dd4 <__aeabi_d2iz>
 800f074:	9012      	str	r0, [sp, #72]	; 0x48
 800f076:	f7f9 fb97 	bl	80087a8 <__aeabi_i2d>
 800f07a:	4602      	mov	r2, r0
 800f07c:	460b      	mov	r3, r1
 800f07e:	e9dd 0100 	ldrd	r0, r1, [sp]
 800f082:	f7f9 fa43 	bl	800850c <__aeabi_dsub>
 800f086:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800f088:	3330      	adds	r3, #48	; 0x30
 800f08a:	f804 3b01 	strb.w	r3, [r4], #1
 800f08e:	462a      	mov	r2, r5
 800f090:	4633      	mov	r3, r6
 800f092:	e9cd 0100 	strd	r0, r1, [sp]
 800f096:	f7f9 fe5f 	bl	8008d58 <__aeabi_dcmplt>
 800f09a:	2800      	cmp	r0, #0
 800f09c:	f040 8321 	bne.w	800f6e2 <_dtoa_r+0xafa>
 800f0a0:	e9dd 2300 	ldrd	r2, r3, [sp]
 800f0a4:	2000      	movs	r0, #0
 800f0a6:	4938      	ldr	r1, [pc, #224]	; (800f188 <_dtoa_r+0x5a0>)
 800f0a8:	f7f9 fa30 	bl	800850c <__aeabi_dsub>
 800f0ac:	462a      	mov	r2, r5
 800f0ae:	4633      	mov	r3, r6
 800f0b0:	f7f9 fe52 	bl	8008d58 <__aeabi_dcmplt>
 800f0b4:	2800      	cmp	r0, #0
 800f0b6:	f040 80d2 	bne.w	800f25e <_dtoa_r+0x676>
 800f0ba:	9b04      	ldr	r3, [sp, #16]
 800f0bc:	1ae3      	subs	r3, r4, r3
 800f0be:	42bb      	cmp	r3, r7
 800f0c0:	da6c      	bge.n	800f19c <_dtoa_r+0x5b4>
 800f0c2:	2200      	movs	r2, #0
 800f0c4:	4b31      	ldr	r3, [pc, #196]	; (800f18c <_dtoa_r+0x5a4>)
 800f0c6:	4628      	mov	r0, r5
 800f0c8:	4631      	mov	r1, r6
 800f0ca:	f7f9 fbd3 	bl	8008874 <__aeabi_dmul>
 800f0ce:	2200      	movs	r2, #0
 800f0d0:	4605      	mov	r5, r0
 800f0d2:	460e      	mov	r6, r1
 800f0d4:	4b2d      	ldr	r3, [pc, #180]	; (800f18c <_dtoa_r+0x5a4>)
 800f0d6:	e9dd 0100 	ldrd	r0, r1, [sp]
 800f0da:	f7f9 fbcb 	bl	8008874 <__aeabi_dmul>
 800f0de:	e9cd 0100 	strd	r0, r1, [sp]
 800f0e2:	e7c3      	b.n	800f06c <_dtoa_r+0x484>
 800f0e4:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 800f0e8:	4622      	mov	r2, r4
 800f0ea:	462b      	mov	r3, r5
 800f0ec:	e9d1 0100 	ldrd	r0, r1, [r1]
 800f0f0:	f7f9 fbc0 	bl	8008874 <__aeabi_dmul>
 800f0f4:	9b04      	ldr	r3, [sp, #16]
 800f0f6:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
 800f0fa:	19dc      	adds	r4, r3, r7
 800f0fc:	461d      	mov	r5, r3
 800f0fe:	e9dd 0100 	ldrd	r0, r1, [sp]
 800f102:	f7f9 fe67 	bl	8008dd4 <__aeabi_d2iz>
 800f106:	4606      	mov	r6, r0
 800f108:	f7f9 fb4e 	bl	80087a8 <__aeabi_i2d>
 800f10c:	3630      	adds	r6, #48	; 0x30
 800f10e:	4602      	mov	r2, r0
 800f110:	460b      	mov	r3, r1
 800f112:	e9dd 0100 	ldrd	r0, r1, [sp]
 800f116:	f7f9 f9f9 	bl	800850c <__aeabi_dsub>
 800f11a:	f805 6b01 	strb.w	r6, [r5], #1
 800f11e:	42ac      	cmp	r4, r5
 800f120:	e9cd 0100 	strd	r0, r1, [sp]
 800f124:	f04f 0200 	mov.w	r2, #0
 800f128:	d123      	bne.n	800f172 <_dtoa_r+0x58a>
 800f12a:	4b1b      	ldr	r3, [pc, #108]	; (800f198 <_dtoa_r+0x5b0>)
 800f12c:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
 800f130:	f7f9 f9ee 	bl	8008510 <__adddf3>
 800f134:	4602      	mov	r2, r0
 800f136:	460b      	mov	r3, r1
 800f138:	e9dd 0100 	ldrd	r0, r1, [sp]
 800f13c:	f7f9 fe2a 	bl	8008d94 <__aeabi_dcmpgt>
 800f140:	2800      	cmp	r0, #0
 800f142:	f040 808c 	bne.w	800f25e <_dtoa_r+0x676>
 800f146:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
 800f14a:	2000      	movs	r0, #0
 800f14c:	4912      	ldr	r1, [pc, #72]	; (800f198 <_dtoa_r+0x5b0>)
 800f14e:	f7f9 f9dd 	bl	800850c <__aeabi_dsub>
 800f152:	4602      	mov	r2, r0
 800f154:	460b      	mov	r3, r1
 800f156:	e9dd 0100 	ldrd	r0, r1, [sp]
 800f15a:	f7f9 fdfd 	bl	8008d58 <__aeabi_dcmplt>
 800f15e:	b1e8      	cbz	r0, 800f19c <_dtoa_r+0x5b4>
 800f160:	f814 3c01 	ldrb.w	r3, [r4, #-1]
 800f164:	2b30      	cmp	r3, #48	; 0x30
 800f166:	f104 32ff 	add.w	r2, r4, #4294967295
 800f16a:	f040 82ba 	bne.w	800f6e2 <_dtoa_r+0xafa>
 800f16e:	4614      	mov	r4, r2
 800f170:	e7f6      	b.n	800f160 <_dtoa_r+0x578>
 800f172:	4b06      	ldr	r3, [pc, #24]	; (800f18c <_dtoa_r+0x5a4>)
 800f174:	f7f9 fb7e 	bl	8008874 <__aeabi_dmul>
 800f178:	e9cd 0100 	strd	r0, r1, [sp]
 800f17c:	e7bf      	b.n	800f0fe <_dtoa_r+0x516>
 800f17e:	bf00      	nop
 800f180:	08011968 	.word	0x08011968
 800f184:	08011a30 	.word	0x08011a30
 800f188:	3ff00000 	.word	0x3ff00000
 800f18c:	40240000 	.word	0x40240000
 800f190:	401c0000 	.word	0x401c0000
 800f194:	40140000 	.word	0x40140000
 800f198:	3fe00000 	.word	0x3fe00000
 800f19c:	e9dd 340e 	ldrd	r3, r4, [sp, #56]	; 0x38
 800f1a0:	e88d 0018 	stmia.w	sp, {r3, r4}
 800f1a4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800f1a6:	2b00      	cmp	r3, #0
 800f1a8:	db7c      	blt.n	800f2a4 <_dtoa_r+0x6bc>
 800f1aa:	f1bb 0f0e 	cmp.w	fp, #14
 800f1ae:	dc79      	bgt.n	800f2a4 <_dtoa_r+0x6bc>
 800f1b0:	4b8f      	ldr	r3, [pc, #572]	; (800f3f0 <_dtoa_r+0x808>)
 800f1b2:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800f1b6:	e9d3 6700 	ldrd	r6, r7, [r3]
 800f1ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f1bc:	2b00      	cmp	r3, #0
 800f1be:	da14      	bge.n	800f1ea <_dtoa_r+0x602>
 800f1c0:	f1b8 0f00 	cmp.w	r8, #0
 800f1c4:	dc11      	bgt.n	800f1ea <_dtoa_r+0x602>
 800f1c6:	f040 816c 	bne.w	800f4a2 <_dtoa_r+0x8ba>
 800f1ca:	2200      	movs	r2, #0
 800f1cc:	4b89      	ldr	r3, [pc, #548]	; (800f3f4 <_dtoa_r+0x80c>)
 800f1ce:	4630      	mov	r0, r6
 800f1d0:	4639      	mov	r1, r7
 800f1d2:	f7f9 fb4f 	bl	8008874 <__aeabi_dmul>
 800f1d6:	e9dd 2300 	ldrd	r2, r3, [sp]
 800f1da:	f7f9 fdd1 	bl	8008d80 <__aeabi_dcmpge>
 800f1de:	4645      	mov	r5, r8
 800f1e0:	4646      	mov	r6, r8
 800f1e2:	2800      	cmp	r0, #0
 800f1e4:	f040 815f 	bne.w	800f4a6 <_dtoa_r+0x8be>
 800f1e8:	e166      	b.n	800f4b8 <_dtoa_r+0x8d0>
 800f1ea:	9c04      	ldr	r4, [sp, #16]
 800f1ec:	4632      	mov	r2, r6
 800f1ee:	463b      	mov	r3, r7
 800f1f0:	e9dd 0100 	ldrd	r0, r1, [sp]
 800f1f4:	f7f9 fc68 	bl	8008ac8 <__aeabi_ddiv>
 800f1f8:	f7f9 fdec 	bl	8008dd4 <__aeabi_d2iz>
 800f1fc:	4605      	mov	r5, r0
 800f1fe:	f7f9 fad3 	bl	80087a8 <__aeabi_i2d>
 800f202:	4632      	mov	r2, r6
 800f204:	463b      	mov	r3, r7
 800f206:	f7f9 fb35 	bl	8008874 <__aeabi_dmul>
 800f20a:	460b      	mov	r3, r1
 800f20c:	4602      	mov	r2, r0
 800f20e:	e9dd 0100 	ldrd	r0, r1, [sp]
 800f212:	f7f9 f97b 	bl	800850c <__aeabi_dsub>
 800f216:	f105 0e30 	add.w	lr, r5, #48	; 0x30
 800f21a:	f804 eb01 	strb.w	lr, [r4], #1
 800f21e:	9b04      	ldr	r3, [sp, #16]
 800f220:	ebc3 0e04 	rsb	lr, r3, r4
 800f224:	45f0      	cmp	r8, lr
 800f226:	e9cd 0100 	strd	r0, r1, [sp]
 800f22a:	d12e      	bne.n	800f28a <_dtoa_r+0x6a2>
 800f22c:	4602      	mov	r2, r0
 800f22e:	460b      	mov	r3, r1
 800f230:	f7f9 f96e 	bl	8008510 <__adddf3>
 800f234:	4680      	mov	r8, r0
 800f236:	4689      	mov	r9, r1
 800f238:	4602      	mov	r2, r0
 800f23a:	460b      	mov	r3, r1
 800f23c:	4630      	mov	r0, r6
 800f23e:	4639      	mov	r1, r7
 800f240:	f7f9 fd8a 	bl	8008d58 <__aeabi_dcmplt>
 800f244:	b978      	cbnz	r0, 800f266 <_dtoa_r+0x67e>
 800f246:	4642      	mov	r2, r8
 800f248:	464b      	mov	r3, r9
 800f24a:	4630      	mov	r0, r6
 800f24c:	4639      	mov	r1, r7
 800f24e:	f7f9 fd79 	bl	8008d44 <__aeabi_dcmpeq>
 800f252:	2800      	cmp	r0, #0
 800f254:	f000 8247 	beq.w	800f6e6 <_dtoa_r+0xafe>
 800f258:	07e9      	lsls	r1, r5, #31
 800f25a:	d404      	bmi.n	800f266 <_dtoa_r+0x67e>
 800f25c:	e243      	b.n	800f6e6 <_dtoa_r+0xafe>
 800f25e:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800f262:	e000      	b.n	800f266 <_dtoa_r+0x67e>
 800f264:	461c      	mov	r4, r3
 800f266:	f814 2c01 	ldrb.w	r2, [r4, #-1]
 800f26a:	2a39      	cmp	r2, #57	; 0x39
 800f26c:	f104 33ff 	add.w	r3, r4, #4294967295
 800f270:	d107      	bne.n	800f282 <_dtoa_r+0x69a>
 800f272:	9a04      	ldr	r2, [sp, #16]
 800f274:	429a      	cmp	r2, r3
 800f276:	d1f5      	bne.n	800f264 <_dtoa_r+0x67c>
 800f278:	9904      	ldr	r1, [sp, #16]
 800f27a:	2230      	movs	r2, #48	; 0x30
 800f27c:	f10b 0b01 	add.w	fp, fp, #1
 800f280:	700a      	strb	r2, [r1, #0]
 800f282:	781a      	ldrb	r2, [r3, #0]
 800f284:	3201      	adds	r2, #1
 800f286:	701a      	strb	r2, [r3, #0]
 800f288:	e22d      	b.n	800f6e6 <_dtoa_r+0xafe>
 800f28a:	2200      	movs	r2, #0
 800f28c:	4b5a      	ldr	r3, [pc, #360]	; (800f3f8 <_dtoa_r+0x810>)
 800f28e:	f7f9 faf1 	bl	8008874 <__aeabi_dmul>
 800f292:	2200      	movs	r2, #0
 800f294:	2300      	movs	r3, #0
 800f296:	e9cd 0100 	strd	r0, r1, [sp]
 800f29a:	f7f9 fd53 	bl	8008d44 <__aeabi_dcmpeq>
 800f29e:	2800      	cmp	r0, #0
 800f2a0:	d0a4      	beq.n	800f1ec <_dtoa_r+0x604>
 800f2a2:	e220      	b.n	800f6e6 <_dtoa_r+0xafe>
 800f2a4:	9a08      	ldr	r2, [sp, #32]
 800f2a6:	2a00      	cmp	r2, #0
 800f2a8:	d02d      	beq.n	800f306 <_dtoa_r+0x71e>
 800f2aa:	9a06      	ldr	r2, [sp, #24]
 800f2ac:	2a01      	cmp	r2, #1
 800f2ae:	dc0a      	bgt.n	800f2c6 <_dtoa_r+0x6de>
 800f2b0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f2b2:	b112      	cbz	r2, 800f2ba <_dtoa_r+0x6d2>
 800f2b4:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800f2b8:	e002      	b.n	800f2c0 <_dtoa_r+0x6d8>
 800f2ba:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800f2bc:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800f2c0:	9d07      	ldr	r5, [sp, #28]
 800f2c2:	464c      	mov	r4, r9
 800f2c4:	e015      	b.n	800f2f2 <_dtoa_r+0x70a>
 800f2c6:	9b07      	ldr	r3, [sp, #28]
 800f2c8:	f108 35ff 	add.w	r5, r8, #4294967295
 800f2cc:	42ab      	cmp	r3, r5
 800f2ce:	bfbf      	itttt	lt
 800f2d0:	9b07      	ldrlt	r3, [sp, #28]
 800f2d2:	9507      	strlt	r5, [sp, #28]
 800f2d4:	1aea      	sublt	r2, r5, r3
 800f2d6:	9b0c      	ldrlt	r3, [sp, #48]	; 0x30
 800f2d8:	bfb7      	itett	lt
 800f2da:	189b      	addlt	r3, r3, r2
 800f2dc:	1b5d      	subge	r5, r3, r5
 800f2de:	930c      	strlt	r3, [sp, #48]	; 0x30
 800f2e0:	2500      	movlt	r5, #0
 800f2e2:	f1b8 0f00 	cmp.w	r8, #0
 800f2e6:	bfb9      	ittee	lt
 800f2e8:	ebc8 0409 	rsblt	r4, r8, r9
 800f2ec:	2300      	movlt	r3, #0
 800f2ee:	464c      	movge	r4, r9
 800f2f0:	4643      	movge	r3, r8
 800f2f2:	9a05      	ldr	r2, [sp, #20]
 800f2f4:	2101      	movs	r1, #1
 800f2f6:	441a      	add	r2, r3
 800f2f8:	4650      	mov	r0, sl
 800f2fa:	4499      	add	r9, r3
 800f2fc:	9205      	str	r2, [sp, #20]
 800f2fe:	f000 fdf1 	bl	800fee4 <__i2b>
 800f302:	4606      	mov	r6, r0
 800f304:	e002      	b.n	800f30c <_dtoa_r+0x724>
 800f306:	9d07      	ldr	r5, [sp, #28]
 800f308:	9e08      	ldr	r6, [sp, #32]
 800f30a:	464c      	mov	r4, r9
 800f30c:	b15c      	cbz	r4, 800f326 <_dtoa_r+0x73e>
 800f30e:	9b05      	ldr	r3, [sp, #20]
 800f310:	2b00      	cmp	r3, #0
 800f312:	dd08      	ble.n	800f326 <_dtoa_r+0x73e>
 800f314:	42a3      	cmp	r3, r4
 800f316:	9a05      	ldr	r2, [sp, #20]
 800f318:	bfa8      	it	ge
 800f31a:	4623      	movge	r3, r4
 800f31c:	ebc3 0909 	rsb	r9, r3, r9
 800f320:	1ae4      	subs	r4, r4, r3
 800f322:	1ad3      	subs	r3, r2, r3
 800f324:	9305      	str	r3, [sp, #20]
 800f326:	9b07      	ldr	r3, [sp, #28]
 800f328:	2b00      	cmp	r3, #0
 800f32a:	dd1d      	ble.n	800f368 <_dtoa_r+0x780>
 800f32c:	9b08      	ldr	r3, [sp, #32]
 800f32e:	b1ab      	cbz	r3, 800f35c <_dtoa_r+0x774>
 800f330:	b185      	cbz	r5, 800f354 <_dtoa_r+0x76c>
 800f332:	4631      	mov	r1, r6
 800f334:	462a      	mov	r2, r5
 800f336:	4650      	mov	r0, sl
 800f338:	f000 fe6e 	bl	8010018 <__pow5mult>
 800f33c:	9a02      	ldr	r2, [sp, #8]
 800f33e:	4601      	mov	r1, r0
 800f340:	4606      	mov	r6, r0
 800f342:	4650      	mov	r0, sl
 800f344:	f000 fdd7 	bl	800fef6 <__multiply>
 800f348:	9902      	ldr	r1, [sp, #8]
 800f34a:	4607      	mov	r7, r0
 800f34c:	4650      	mov	r0, sl
 800f34e:	f000 fd2a 	bl	800fda6 <_Bfree>
 800f352:	9702      	str	r7, [sp, #8]
 800f354:	9b07      	ldr	r3, [sp, #28]
 800f356:	1b5a      	subs	r2, r3, r5
 800f358:	d006      	beq.n	800f368 <_dtoa_r+0x780>
 800f35a:	e000      	b.n	800f35e <_dtoa_r+0x776>
 800f35c:	9a07      	ldr	r2, [sp, #28]
 800f35e:	9902      	ldr	r1, [sp, #8]
 800f360:	4650      	mov	r0, sl
 800f362:	f000 fe59 	bl	8010018 <__pow5mult>
 800f366:	9002      	str	r0, [sp, #8]
 800f368:	2101      	movs	r1, #1
 800f36a:	4650      	mov	r0, sl
 800f36c:	f000 fdba 	bl	800fee4 <__i2b>
 800f370:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f372:	4605      	mov	r5, r0
 800f374:	b35b      	cbz	r3, 800f3ce <_dtoa_r+0x7e6>
 800f376:	461a      	mov	r2, r3
 800f378:	4601      	mov	r1, r0
 800f37a:	4650      	mov	r0, sl
 800f37c:	f000 fe4c 	bl	8010018 <__pow5mult>
 800f380:	9b06      	ldr	r3, [sp, #24]
 800f382:	2b01      	cmp	r3, #1
 800f384:	4605      	mov	r5, r0
 800f386:	dc18      	bgt.n	800f3ba <_dtoa_r+0x7d2>
 800f388:	9b00      	ldr	r3, [sp, #0]
 800f38a:	b983      	cbnz	r3, 800f3ae <_dtoa_r+0x7c6>
 800f38c:	9b01      	ldr	r3, [sp, #4]
 800f38e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800f392:	b973      	cbnz	r3, 800f3b2 <_dtoa_r+0x7ca>
 800f394:	9b01      	ldr	r3, [sp, #4]
 800f396:	f023 4700 	bic.w	r7, r3, #2147483648	; 0x80000000
 800f39a:	0d3f      	lsrs	r7, r7, #20
 800f39c:	053f      	lsls	r7, r7, #20
 800f39e:	b14f      	cbz	r7, 800f3b4 <_dtoa_r+0x7cc>
 800f3a0:	9b05      	ldr	r3, [sp, #20]
 800f3a2:	3301      	adds	r3, #1
 800f3a4:	f109 0901 	add.w	r9, r9, #1
 800f3a8:	9305      	str	r3, [sp, #20]
 800f3aa:	2701      	movs	r7, #1
 800f3ac:	e002      	b.n	800f3b4 <_dtoa_r+0x7cc>
 800f3ae:	2700      	movs	r7, #0
 800f3b0:	e000      	b.n	800f3b4 <_dtoa_r+0x7cc>
 800f3b2:	9f00      	ldr	r7, [sp, #0]
 800f3b4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f3b6:	b173      	cbz	r3, 800f3d6 <_dtoa_r+0x7ee>
 800f3b8:	e000      	b.n	800f3bc <_dtoa_r+0x7d4>
 800f3ba:	2700      	movs	r7, #0
 800f3bc:	692b      	ldr	r3, [r5, #16]
 800f3be:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 800f3c2:	6918      	ldr	r0, [r3, #16]
 800f3c4:	f000 fd41 	bl	800fe4a <__hi0bits>
 800f3c8:	f1c0 0020 	rsb	r0, r0, #32
 800f3cc:	e004      	b.n	800f3d8 <_dtoa_r+0x7f0>
 800f3ce:	9b06      	ldr	r3, [sp, #24]
 800f3d0:	2b01      	cmp	r3, #1
 800f3d2:	ddd9      	ble.n	800f388 <_dtoa_r+0x7a0>
 800f3d4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 800f3d6:	2001      	movs	r0, #1
 800f3d8:	9b05      	ldr	r3, [sp, #20]
 800f3da:	4418      	add	r0, r3
 800f3dc:	f010 001f 	ands.w	r0, r0, #31
 800f3e0:	d00e      	beq.n	800f400 <_dtoa_r+0x818>
 800f3e2:	f1c0 0320 	rsb	r3, r0, #32
 800f3e6:	2b04      	cmp	r3, #4
 800f3e8:	dd08      	ble.n	800f3fc <_dtoa_r+0x814>
 800f3ea:	f1c0 001c 	rsb	r0, r0, #28
 800f3ee:	e008      	b.n	800f402 <_dtoa_r+0x81a>
 800f3f0:	08011968 	.word	0x08011968
 800f3f4:	40140000 	.word	0x40140000
 800f3f8:	40240000 	.word	0x40240000
 800f3fc:	d006      	beq.n	800f40c <_dtoa_r+0x824>
 800f3fe:	4618      	mov	r0, r3
 800f400:	301c      	adds	r0, #28
 800f402:	9b05      	ldr	r3, [sp, #20]
 800f404:	4403      	add	r3, r0
 800f406:	4481      	add	r9, r0
 800f408:	4404      	add	r4, r0
 800f40a:	9305      	str	r3, [sp, #20]
 800f40c:	f1b9 0f00 	cmp.w	r9, #0
 800f410:	dd05      	ble.n	800f41e <_dtoa_r+0x836>
 800f412:	464a      	mov	r2, r9
 800f414:	9902      	ldr	r1, [sp, #8]
 800f416:	4650      	mov	r0, sl
 800f418:	f000 fe4c 	bl	80100b4 <__lshift>
 800f41c:	9002      	str	r0, [sp, #8]
 800f41e:	9b05      	ldr	r3, [sp, #20]
 800f420:	2b00      	cmp	r3, #0
 800f422:	dd05      	ble.n	800f430 <_dtoa_r+0x848>
 800f424:	4629      	mov	r1, r5
 800f426:	461a      	mov	r2, r3
 800f428:	4650      	mov	r0, sl
 800f42a:	f000 fe43 	bl	80100b4 <__lshift>
 800f42e:	4605      	mov	r5, r0
 800f430:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f432:	b1eb      	cbz	r3, 800f470 <_dtoa_r+0x888>
 800f434:	4629      	mov	r1, r5
 800f436:	9802      	ldr	r0, [sp, #8]
 800f438:	f000 fe8d 	bl	8010156 <__mcmp>
 800f43c:	2800      	cmp	r0, #0
 800f43e:	da17      	bge.n	800f470 <_dtoa_r+0x888>
 800f440:	2300      	movs	r3, #0
 800f442:	220a      	movs	r2, #10
 800f444:	9902      	ldr	r1, [sp, #8]
 800f446:	4650      	mov	r0, sl
 800f448:	f000 fcc4 	bl	800fdd4 <__multadd>
 800f44c:	9b08      	ldr	r3, [sp, #32]
 800f44e:	9002      	str	r0, [sp, #8]
 800f450:	f10b 3bff 	add.w	fp, fp, #4294967295
 800f454:	2b00      	cmp	r3, #0
 800f456:	f000 8158 	beq.w	800f70a <_dtoa_r+0xb22>
 800f45a:	2300      	movs	r3, #0
 800f45c:	4631      	mov	r1, r6
 800f45e:	220a      	movs	r2, #10
 800f460:	4650      	mov	r0, sl
 800f462:	f000 fcb7 	bl	800fdd4 <__multadd>
 800f466:	9b03      	ldr	r3, [sp, #12]
 800f468:	2b00      	cmp	r3, #0
 800f46a:	4606      	mov	r6, r0
 800f46c:	dc37      	bgt.n	800f4de <_dtoa_r+0x8f6>
 800f46e:	e033      	b.n	800f4d8 <_dtoa_r+0x8f0>
 800f470:	f1b8 0f00 	cmp.w	r8, #0
 800f474:	dc2a      	bgt.n	800f4cc <_dtoa_r+0x8e4>
 800f476:	9b06      	ldr	r3, [sp, #24]
 800f478:	2b02      	cmp	r3, #2
 800f47a:	dd27      	ble.n	800f4cc <_dtoa_r+0x8e4>
 800f47c:	f8cd 800c 	str.w	r8, [sp, #12]
 800f480:	9b03      	ldr	r3, [sp, #12]
 800f482:	b983      	cbnz	r3, 800f4a6 <_dtoa_r+0x8be>
 800f484:	4629      	mov	r1, r5
 800f486:	2205      	movs	r2, #5
 800f488:	4650      	mov	r0, sl
 800f48a:	f000 fca3 	bl	800fdd4 <__multadd>
 800f48e:	4601      	mov	r1, r0
 800f490:	4605      	mov	r5, r0
 800f492:	9802      	ldr	r0, [sp, #8]
 800f494:	f000 fe5f 	bl	8010156 <__mcmp>
 800f498:	2800      	cmp	r0, #0
 800f49a:	dc0d      	bgt.n	800f4b8 <_dtoa_r+0x8d0>
 800f49c:	e003      	b.n	800f4a6 <_dtoa_r+0x8be>
 800f49e:	463d      	mov	r5, r7
 800f4a0:	e000      	b.n	800f4a4 <_dtoa_r+0x8bc>
 800f4a2:	2500      	movs	r5, #0
 800f4a4:	462e      	mov	r6, r5
 800f4a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f4a8:	9c04      	ldr	r4, [sp, #16]
 800f4aa:	ea6f 0b03 	mvn.w	fp, r3
 800f4ae:	e00a      	b.n	800f4c6 <_dtoa_r+0x8de>
 800f4b0:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800f4b4:	463d      	mov	r5, r7
 800f4b6:	463e      	mov	r6, r7
 800f4b8:	9b04      	ldr	r3, [sp, #16]
 800f4ba:	9a04      	ldr	r2, [sp, #16]
 800f4bc:	1c5c      	adds	r4, r3, #1
 800f4be:	2331      	movs	r3, #49	; 0x31
 800f4c0:	7013      	strb	r3, [r2, #0]
 800f4c2:	f10b 0b01 	add.w	fp, fp, #1
 800f4c6:	46b0      	mov	r8, r6
 800f4c8:	2600      	movs	r6, #0
 800f4ca:	e0f7      	b.n	800f6bc <_dtoa_r+0xad4>
 800f4cc:	9b08      	ldr	r3, [sp, #32]
 800f4ce:	f8cd 800c 	str.w	r8, [sp, #12]
 800f4d2:	b923      	cbnz	r3, 800f4de <_dtoa_r+0x8f6>
 800f4d4:	9c04      	ldr	r4, [sp, #16]
 800f4d6:	e0b1      	b.n	800f63c <_dtoa_r+0xa54>
 800f4d8:	9b06      	ldr	r3, [sp, #24]
 800f4da:	2b02      	cmp	r3, #2
 800f4dc:	dcd0      	bgt.n	800f480 <_dtoa_r+0x898>
 800f4de:	2c00      	cmp	r4, #0
 800f4e0:	dd05      	ble.n	800f4ee <_dtoa_r+0x906>
 800f4e2:	4631      	mov	r1, r6
 800f4e4:	4622      	mov	r2, r4
 800f4e6:	4650      	mov	r0, sl
 800f4e8:	f000 fde4 	bl	80100b4 <__lshift>
 800f4ec:	4606      	mov	r6, r0
 800f4ee:	b19f      	cbz	r7, 800f518 <_dtoa_r+0x930>
 800f4f0:	6871      	ldr	r1, [r6, #4]
 800f4f2:	4650      	mov	r0, sl
 800f4f4:	f000 fc22 	bl	800fd3c <_Balloc>
 800f4f8:	6932      	ldr	r2, [r6, #16]
 800f4fa:	3202      	adds	r2, #2
 800f4fc:	4604      	mov	r4, r0
 800f4fe:	0092      	lsls	r2, r2, #2
 800f500:	f106 010c 	add.w	r1, r6, #12
 800f504:	300c      	adds	r0, #12
 800f506:	f7fd ff98 	bl	800d43a <memcpy>
 800f50a:	2201      	movs	r2, #1
 800f50c:	4621      	mov	r1, r4
 800f50e:	4650      	mov	r0, sl
 800f510:	f000 fdd0 	bl	80100b4 <__lshift>
 800f514:	4680      	mov	r8, r0
 800f516:	e000      	b.n	800f51a <_dtoa_r+0x932>
 800f518:	46b0      	mov	r8, r6
 800f51a:	9b00      	ldr	r3, [sp, #0]
 800f51c:	f8dd 9010 	ldr.w	r9, [sp, #16]
 800f520:	f003 0301 	and.w	r3, r3, #1
 800f524:	9305      	str	r3, [sp, #20]
 800f526:	4629      	mov	r1, r5
 800f528:	9802      	ldr	r0, [sp, #8]
 800f52a:	f7ff facd 	bl	800eac8 <quorem>
 800f52e:	4631      	mov	r1, r6
 800f530:	4604      	mov	r4, r0
 800f532:	f100 0730 	add.w	r7, r0, #48	; 0x30
 800f536:	9802      	ldr	r0, [sp, #8]
 800f538:	f000 fe0d 	bl	8010156 <__mcmp>
 800f53c:	4642      	mov	r2, r8
 800f53e:	9000      	str	r0, [sp, #0]
 800f540:	4629      	mov	r1, r5
 800f542:	4650      	mov	r0, sl
 800f544:	f000 fe23 	bl	801018e <__mdiff>
 800f548:	68c3      	ldr	r3, [r0, #12]
 800f54a:	4602      	mov	r2, r0
 800f54c:	b93b      	cbnz	r3, 800f55e <_dtoa_r+0x976>
 800f54e:	4601      	mov	r1, r0
 800f550:	9007      	str	r0, [sp, #28]
 800f552:	9802      	ldr	r0, [sp, #8]
 800f554:	f000 fdff 	bl	8010156 <__mcmp>
 800f558:	9a07      	ldr	r2, [sp, #28]
 800f55a:	4603      	mov	r3, r0
 800f55c:	e000      	b.n	800f560 <_dtoa_r+0x978>
 800f55e:	2301      	movs	r3, #1
 800f560:	4611      	mov	r1, r2
 800f562:	4650      	mov	r0, sl
 800f564:	9307      	str	r3, [sp, #28]
 800f566:	f000 fc1e 	bl	800fda6 <_Bfree>
 800f56a:	9b07      	ldr	r3, [sp, #28]
 800f56c:	b94b      	cbnz	r3, 800f582 <_dtoa_r+0x99a>
 800f56e:	9a06      	ldr	r2, [sp, #24]
 800f570:	b93a      	cbnz	r2, 800f582 <_dtoa_r+0x99a>
 800f572:	9a05      	ldr	r2, [sp, #20]
 800f574:	b92a      	cbnz	r2, 800f582 <_dtoa_r+0x99a>
 800f576:	2f39      	cmp	r7, #57	; 0x39
 800f578:	d028      	beq.n	800f5cc <_dtoa_r+0x9e4>
 800f57a:	9b00      	ldr	r3, [sp, #0]
 800f57c:	2b00      	cmp	r3, #0
 800f57e:	dc1a      	bgt.n	800f5b6 <_dtoa_r+0x9ce>
 800f580:	e01b      	b.n	800f5ba <_dtoa_r+0x9d2>
 800f582:	9a00      	ldr	r2, [sp, #0]
 800f584:	2a00      	cmp	r2, #0
 800f586:	db04      	blt.n	800f592 <_dtoa_r+0x9aa>
 800f588:	d11a      	bne.n	800f5c0 <_dtoa_r+0x9d8>
 800f58a:	9a06      	ldr	r2, [sp, #24]
 800f58c:	b9c2      	cbnz	r2, 800f5c0 <_dtoa_r+0x9d8>
 800f58e:	9a05      	ldr	r2, [sp, #20]
 800f590:	b9b2      	cbnz	r2, 800f5c0 <_dtoa_r+0x9d8>
 800f592:	2b00      	cmp	r3, #0
 800f594:	dd11      	ble.n	800f5ba <_dtoa_r+0x9d2>
 800f596:	2201      	movs	r2, #1
 800f598:	9902      	ldr	r1, [sp, #8]
 800f59a:	4650      	mov	r0, sl
 800f59c:	f000 fd8a 	bl	80100b4 <__lshift>
 800f5a0:	4629      	mov	r1, r5
 800f5a2:	9002      	str	r0, [sp, #8]
 800f5a4:	f000 fdd7 	bl	8010156 <__mcmp>
 800f5a8:	2800      	cmp	r0, #0
 800f5aa:	dc02      	bgt.n	800f5b2 <_dtoa_r+0x9ca>
 800f5ac:	d105      	bne.n	800f5ba <_dtoa_r+0x9d2>
 800f5ae:	07fa      	lsls	r2, r7, #31
 800f5b0:	d503      	bpl.n	800f5ba <_dtoa_r+0x9d2>
 800f5b2:	2f39      	cmp	r7, #57	; 0x39
 800f5b4:	d00a      	beq.n	800f5cc <_dtoa_r+0x9e4>
 800f5b6:	f104 0731 	add.w	r7, r4, #49	; 0x31
 800f5ba:	f109 0401 	add.w	r4, r9, #1
 800f5be:	e00c      	b.n	800f5da <_dtoa_r+0x9f2>
 800f5c0:	2b00      	cmp	r3, #0
 800f5c2:	f109 0401 	add.w	r4, r9, #1
 800f5c6:	dd0b      	ble.n	800f5e0 <_dtoa_r+0x9f8>
 800f5c8:	2f39      	cmp	r7, #57	; 0x39
 800f5ca:	d105      	bne.n	800f5d8 <_dtoa_r+0x9f0>
 800f5cc:	2339      	movs	r3, #57	; 0x39
 800f5ce:	f889 3000 	strb.w	r3, [r9]
 800f5d2:	f109 0901 	add.w	r9, r9, #1
 800f5d6:	e054      	b.n	800f682 <_dtoa_r+0xa9a>
 800f5d8:	3701      	adds	r7, #1
 800f5da:	f889 7000 	strb.w	r7, [r9]
 800f5de:	e06d      	b.n	800f6bc <_dtoa_r+0xad4>
 800f5e0:	9b04      	ldr	r3, [sp, #16]
 800f5e2:	9a03      	ldr	r2, [sp, #12]
 800f5e4:	f804 7c01 	strb.w	r7, [r4, #-1]
 800f5e8:	1ae3      	subs	r3, r4, r3
 800f5ea:	4293      	cmp	r3, r2
 800f5ec:	46a1      	mov	r9, r4
 800f5ee:	d03a      	beq.n	800f666 <_dtoa_r+0xa7e>
 800f5f0:	2300      	movs	r3, #0
 800f5f2:	220a      	movs	r2, #10
 800f5f4:	9902      	ldr	r1, [sp, #8]
 800f5f6:	4650      	mov	r0, sl
 800f5f8:	f000 fbec 	bl	800fdd4 <__multadd>
 800f5fc:	4546      	cmp	r6, r8
 800f5fe:	9002      	str	r0, [sp, #8]
 800f600:	f04f 0300 	mov.w	r3, #0
 800f604:	f04f 020a 	mov.w	r2, #10
 800f608:	4631      	mov	r1, r6
 800f60a:	4650      	mov	r0, sl
 800f60c:	d104      	bne.n	800f618 <_dtoa_r+0xa30>
 800f60e:	f000 fbe1 	bl	800fdd4 <__multadd>
 800f612:	4606      	mov	r6, r0
 800f614:	4680      	mov	r8, r0
 800f616:	e786      	b.n	800f526 <_dtoa_r+0x93e>
 800f618:	f000 fbdc 	bl	800fdd4 <__multadd>
 800f61c:	4641      	mov	r1, r8
 800f61e:	4606      	mov	r6, r0
 800f620:	2300      	movs	r3, #0
 800f622:	220a      	movs	r2, #10
 800f624:	4650      	mov	r0, sl
 800f626:	f000 fbd5 	bl	800fdd4 <__multadd>
 800f62a:	4680      	mov	r8, r0
 800f62c:	e77b      	b.n	800f526 <_dtoa_r+0x93e>
 800f62e:	2300      	movs	r3, #0
 800f630:	220a      	movs	r2, #10
 800f632:	9902      	ldr	r1, [sp, #8]
 800f634:	4650      	mov	r0, sl
 800f636:	f000 fbcd 	bl	800fdd4 <__multadd>
 800f63a:	9002      	str	r0, [sp, #8]
 800f63c:	4629      	mov	r1, r5
 800f63e:	9802      	ldr	r0, [sp, #8]
 800f640:	f7ff fa42 	bl	800eac8 <quorem>
 800f644:	f100 0730 	add.w	r7, r0, #48	; 0x30
 800f648:	f804 7b01 	strb.w	r7, [r4], #1
 800f64c:	9b04      	ldr	r3, [sp, #16]
 800f64e:	9a03      	ldr	r2, [sp, #12]
 800f650:	1ae3      	subs	r3, r4, r3
 800f652:	4293      	cmp	r3, r2
 800f654:	dbeb      	blt.n	800f62e <_dtoa_r+0xa46>
 800f656:	9b04      	ldr	r3, [sp, #16]
 800f658:	2a01      	cmp	r2, #1
 800f65a:	bfac      	ite	ge
 800f65c:	189b      	addge	r3, r3, r2
 800f65e:	3301      	addlt	r3, #1
 800f660:	46b0      	mov	r8, r6
 800f662:	4699      	mov	r9, r3
 800f664:	2600      	movs	r6, #0
 800f666:	2201      	movs	r2, #1
 800f668:	9902      	ldr	r1, [sp, #8]
 800f66a:	4650      	mov	r0, sl
 800f66c:	f000 fd22 	bl	80100b4 <__lshift>
 800f670:	4629      	mov	r1, r5
 800f672:	9002      	str	r0, [sp, #8]
 800f674:	f000 fd6f 	bl	8010156 <__mcmp>
 800f678:	2800      	cmp	r0, #0
 800f67a:	dc02      	bgt.n	800f682 <_dtoa_r+0xa9a>
 800f67c:	d115      	bne.n	800f6aa <_dtoa_r+0xac2>
 800f67e:	07fb      	lsls	r3, r7, #31
 800f680:	d513      	bpl.n	800f6aa <_dtoa_r+0xac2>
 800f682:	464c      	mov	r4, r9
 800f684:	f814 3c01 	ldrb.w	r3, [r4, #-1]
 800f688:	2b39      	cmp	r3, #57	; 0x39
 800f68a:	f104 32ff 	add.w	r2, r4, #4294967295
 800f68e:	d109      	bne.n	800f6a4 <_dtoa_r+0xabc>
 800f690:	9b04      	ldr	r3, [sp, #16]
 800f692:	4293      	cmp	r3, r2
 800f694:	d104      	bne.n	800f6a0 <_dtoa_r+0xab8>
 800f696:	f10b 0b01 	add.w	fp, fp, #1
 800f69a:	2331      	movs	r3, #49	; 0x31
 800f69c:	9a04      	ldr	r2, [sp, #16]
 800f69e:	e002      	b.n	800f6a6 <_dtoa_r+0xabe>
 800f6a0:	4614      	mov	r4, r2
 800f6a2:	e7ef      	b.n	800f684 <_dtoa_r+0xa9c>
 800f6a4:	3301      	adds	r3, #1
 800f6a6:	7013      	strb	r3, [r2, #0]
 800f6a8:	e008      	b.n	800f6bc <_dtoa_r+0xad4>
 800f6aa:	464c      	mov	r4, r9
 800f6ac:	f814 3c01 	ldrb.w	r3, [r4, #-1]
 800f6b0:	2b30      	cmp	r3, #48	; 0x30
 800f6b2:	f104 32ff 	add.w	r2, r4, #4294967295
 800f6b6:	d101      	bne.n	800f6bc <_dtoa_r+0xad4>
 800f6b8:	4614      	mov	r4, r2
 800f6ba:	e7f7      	b.n	800f6ac <_dtoa_r+0xac4>
 800f6bc:	4629      	mov	r1, r5
 800f6be:	4650      	mov	r0, sl
 800f6c0:	f000 fb71 	bl	800fda6 <_Bfree>
 800f6c4:	f1b8 0f00 	cmp.w	r8, #0
 800f6c8:	d00d      	beq.n	800f6e6 <_dtoa_r+0xafe>
 800f6ca:	b12e      	cbz	r6, 800f6d8 <_dtoa_r+0xaf0>
 800f6cc:	4546      	cmp	r6, r8
 800f6ce:	d003      	beq.n	800f6d8 <_dtoa_r+0xaf0>
 800f6d0:	4631      	mov	r1, r6
 800f6d2:	4650      	mov	r0, sl
 800f6d4:	f000 fb67 	bl	800fda6 <_Bfree>
 800f6d8:	4641      	mov	r1, r8
 800f6da:	4650      	mov	r0, sl
 800f6dc:	f000 fb63 	bl	800fda6 <_Bfree>
 800f6e0:	e001      	b.n	800f6e6 <_dtoa_r+0xafe>
 800f6e2:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800f6e6:	9902      	ldr	r1, [sp, #8]
 800f6e8:	4650      	mov	r0, sl
 800f6ea:	f000 fb5c 	bl	800fda6 <_Bfree>
 800f6ee:	2300      	movs	r3, #0
 800f6f0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f6f2:	7023      	strb	r3, [r4, #0]
 800f6f4:	f10b 0301 	add.w	r3, fp, #1
 800f6f8:	6013      	str	r3, [r2, #0]
 800f6fa:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800f6fc:	b11b      	cbz	r3, 800f706 <_dtoa_r+0xb1e>
 800f6fe:	601c      	str	r4, [r3, #0]
 800f700:	e001      	b.n	800f706 <_dtoa_r+0xb1e>
 800f702:	4808      	ldr	r0, [pc, #32]	; (800f724 <_dtoa_r+0xb3c>)
 800f704:	e00a      	b.n	800f71c <_dtoa_r+0xb34>
 800f706:	9804      	ldr	r0, [sp, #16]
 800f708:	e008      	b.n	800f71c <_dtoa_r+0xb34>
 800f70a:	9b03      	ldr	r3, [sp, #12]
 800f70c:	2b00      	cmp	r3, #0
 800f70e:	f73f aee1 	bgt.w	800f4d4 <_dtoa_r+0x8ec>
 800f712:	9b06      	ldr	r3, [sp, #24]
 800f714:	2b02      	cmp	r3, #2
 800f716:	f77f aedd 	ble.w	800f4d4 <_dtoa_r+0x8ec>
 800f71a:	e6b1      	b.n	800f480 <_dtoa_r+0x898>
 800f71c:	b017      	add	sp, #92	; 0x5c
 800f71e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f722:	bf00      	nop
 800f724:	080118de 	.word	0x080118de

0800f728 <__sflush_r>:
 800f728:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800f72c:	b293      	uxth	r3, r2
 800f72e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f732:	4605      	mov	r5, r0
 800f734:	0718      	lsls	r0, r3, #28
 800f736:	460c      	mov	r4, r1
 800f738:	d460      	bmi.n	800f7fc <__sflush_r+0xd4>
 800f73a:	684b      	ldr	r3, [r1, #4]
 800f73c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800f740:	2b00      	cmp	r3, #0
 800f742:	818a      	strh	r2, [r1, #12]
 800f744:	dc02      	bgt.n	800f74c <__sflush_r+0x24>
 800f746:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800f748:	2b00      	cmp	r3, #0
 800f74a:	dd17      	ble.n	800f77c <__sflush_r+0x54>
 800f74c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800f74e:	b1ae      	cbz	r6, 800f77c <__sflush_r+0x54>
 800f750:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
 800f754:	2300      	movs	r3, #0
 800f756:	b292      	uxth	r2, r2
 800f758:	682f      	ldr	r7, [r5, #0]
 800f75a:	602b      	str	r3, [r5, #0]
 800f75c:	b10a      	cbz	r2, 800f762 <__sflush_r+0x3a>
 800f75e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800f760:	e015      	b.n	800f78e <__sflush_r+0x66>
 800f762:	6a21      	ldr	r1, [r4, #32]
 800f764:	2301      	movs	r3, #1
 800f766:	4628      	mov	r0, r5
 800f768:	47b0      	blx	r6
 800f76a:	1c41      	adds	r1, r0, #1
 800f76c:	d10f      	bne.n	800f78e <__sflush_r+0x66>
 800f76e:	682b      	ldr	r3, [r5, #0]
 800f770:	b16b      	cbz	r3, 800f78e <__sflush_r+0x66>
 800f772:	2b1d      	cmp	r3, #29
 800f774:	d001      	beq.n	800f77a <__sflush_r+0x52>
 800f776:	2b16      	cmp	r3, #22
 800f778:	d103      	bne.n	800f782 <__sflush_r+0x5a>
 800f77a:	602f      	str	r7, [r5, #0]
 800f77c:	2000      	movs	r0, #0
 800f77e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f782:	89a3      	ldrh	r3, [r4, #12]
 800f784:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f788:	81a3      	strh	r3, [r4, #12]
 800f78a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f78e:	89a3      	ldrh	r3, [r4, #12]
 800f790:	075a      	lsls	r2, r3, #29
 800f792:	d505      	bpl.n	800f7a0 <__sflush_r+0x78>
 800f794:	6863      	ldr	r3, [r4, #4]
 800f796:	1ac0      	subs	r0, r0, r3
 800f798:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f79a:	b10b      	cbz	r3, 800f7a0 <__sflush_r+0x78>
 800f79c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800f79e:	1ac0      	subs	r0, r0, r3
 800f7a0:	2300      	movs	r3, #0
 800f7a2:	4602      	mov	r2, r0
 800f7a4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800f7a6:	6a21      	ldr	r1, [r4, #32]
 800f7a8:	4628      	mov	r0, r5
 800f7aa:	47b0      	blx	r6
 800f7ac:	1c43      	adds	r3, r0, #1
 800f7ae:	89a3      	ldrh	r3, [r4, #12]
 800f7b0:	d106      	bne.n	800f7c0 <__sflush_r+0x98>
 800f7b2:	6829      	ldr	r1, [r5, #0]
 800f7b4:	291d      	cmp	r1, #29
 800f7b6:	d83e      	bhi.n	800f836 <__sflush_r+0x10e>
 800f7b8:	4a22      	ldr	r2, [pc, #136]	; (800f844 <__sflush_r+0x11c>)
 800f7ba:	40ca      	lsrs	r2, r1
 800f7bc:	07d6      	lsls	r6, r2, #31
 800f7be:	d53a      	bpl.n	800f836 <__sflush_r+0x10e>
 800f7c0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800f7c4:	b21b      	sxth	r3, r3
 800f7c6:	2200      	movs	r2, #0
 800f7c8:	6062      	str	r2, [r4, #4]
 800f7ca:	04d9      	lsls	r1, r3, #19
 800f7cc:	6922      	ldr	r2, [r4, #16]
 800f7ce:	81a3      	strh	r3, [r4, #12]
 800f7d0:	6022      	str	r2, [r4, #0]
 800f7d2:	d504      	bpl.n	800f7de <__sflush_r+0xb6>
 800f7d4:	1c42      	adds	r2, r0, #1
 800f7d6:	d101      	bne.n	800f7dc <__sflush_r+0xb4>
 800f7d8:	682b      	ldr	r3, [r5, #0]
 800f7da:	b903      	cbnz	r3, 800f7de <__sflush_r+0xb6>
 800f7dc:	6560      	str	r0, [r4, #84]	; 0x54
 800f7de:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800f7e0:	602f      	str	r7, [r5, #0]
 800f7e2:	2900      	cmp	r1, #0
 800f7e4:	d0ca      	beq.n	800f77c <__sflush_r+0x54>
 800f7e6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800f7ea:	4299      	cmp	r1, r3
 800f7ec:	d002      	beq.n	800f7f4 <__sflush_r+0xcc>
 800f7ee:	4628      	mov	r0, r5
 800f7f0:	f000 f95c 	bl	800faac <_free_r>
 800f7f4:	2000      	movs	r0, #0
 800f7f6:	6360      	str	r0, [r4, #52]	; 0x34
 800f7f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f7fc:	690f      	ldr	r7, [r1, #16]
 800f7fe:	2f00      	cmp	r7, #0
 800f800:	d0bc      	beq.n	800f77c <__sflush_r+0x54>
 800f802:	079b      	lsls	r3, r3, #30
 800f804:	680e      	ldr	r6, [r1, #0]
 800f806:	bf08      	it	eq
 800f808:	694b      	ldreq	r3, [r1, #20]
 800f80a:	600f      	str	r7, [r1, #0]
 800f80c:	bf18      	it	ne
 800f80e:	2300      	movne	r3, #0
 800f810:	ebc7 0806 	rsb	r8, r7, r6
 800f814:	608b      	str	r3, [r1, #8]
 800f816:	e002      	b.n	800f81e <__sflush_r+0xf6>
 800f818:	4407      	add	r7, r0
 800f81a:	ebc0 0808 	rsb	r8, r0, r8
 800f81e:	f1b8 0f00 	cmp.w	r8, #0
 800f822:	ddab      	ble.n	800f77c <__sflush_r+0x54>
 800f824:	4643      	mov	r3, r8
 800f826:	463a      	mov	r2, r7
 800f828:	6a21      	ldr	r1, [r4, #32]
 800f82a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800f82c:	4628      	mov	r0, r5
 800f82e:	47b0      	blx	r6
 800f830:	2800      	cmp	r0, #0
 800f832:	dcf1      	bgt.n	800f818 <__sflush_r+0xf0>
 800f834:	89a3      	ldrh	r3, [r4, #12]
 800f836:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f83a:	81a3      	strh	r3, [r4, #12]
 800f83c:	f04f 30ff 	mov.w	r0, #4294967295
 800f840:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f844:	20400001 	.word	0x20400001

0800f848 <_fflush_r>:
 800f848:	b538      	push	{r3, r4, r5, lr}
 800f84a:	690b      	ldr	r3, [r1, #16]
 800f84c:	4605      	mov	r5, r0
 800f84e:	460c      	mov	r4, r1
 800f850:	b1db      	cbz	r3, 800f88a <_fflush_r+0x42>
 800f852:	b118      	cbz	r0, 800f85c <_fflush_r+0x14>
 800f854:	6983      	ldr	r3, [r0, #24]
 800f856:	b90b      	cbnz	r3, 800f85c <_fflush_r+0x14>
 800f858:	f000 f860 	bl	800f91c <__sinit>
 800f85c:	4b0c      	ldr	r3, [pc, #48]	; (800f890 <_fflush_r+0x48>)
 800f85e:	429c      	cmp	r4, r3
 800f860:	d101      	bne.n	800f866 <_fflush_r+0x1e>
 800f862:	686c      	ldr	r4, [r5, #4]
 800f864:	e008      	b.n	800f878 <_fflush_r+0x30>
 800f866:	4b0b      	ldr	r3, [pc, #44]	; (800f894 <_fflush_r+0x4c>)
 800f868:	429c      	cmp	r4, r3
 800f86a:	d101      	bne.n	800f870 <_fflush_r+0x28>
 800f86c:	68ac      	ldr	r4, [r5, #8]
 800f86e:	e003      	b.n	800f878 <_fflush_r+0x30>
 800f870:	4b09      	ldr	r3, [pc, #36]	; (800f898 <_fflush_r+0x50>)
 800f872:	429c      	cmp	r4, r3
 800f874:	bf08      	it	eq
 800f876:	68ec      	ldreq	r4, [r5, #12]
 800f878:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f87c:	b12b      	cbz	r3, 800f88a <_fflush_r+0x42>
 800f87e:	4621      	mov	r1, r4
 800f880:	4628      	mov	r0, r5
 800f882:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f886:	f7ff bf4f 	b.w	800f728 <__sflush_r>
 800f88a:	2000      	movs	r0, #0
 800f88c:	bd38      	pop	{r3, r4, r5, pc}
 800f88e:	bf00      	nop
 800f890:	08011900 	.word	0x08011900
 800f894:	08011920 	.word	0x08011920
 800f898:	08011940 	.word	0x08011940

0800f89c <_cleanup_r>:
 800f89c:	4901      	ldr	r1, [pc, #4]	; (800f8a4 <_cleanup_r+0x8>)
 800f89e:	f000 b9c3 	b.w	800fc28 <_fwalk_reent>
 800f8a2:	bf00      	nop
 800f8a4:	080104e9 	.word	0x080104e9

0800f8a8 <std.isra.0>:
 800f8a8:	2300      	movs	r3, #0
 800f8aa:	b510      	push	{r4, lr}
 800f8ac:	4604      	mov	r4, r0
 800f8ae:	6003      	str	r3, [r0, #0]
 800f8b0:	6043      	str	r3, [r0, #4]
 800f8b2:	6083      	str	r3, [r0, #8]
 800f8b4:	8181      	strh	r1, [r0, #12]
 800f8b6:	6643      	str	r3, [r0, #100]	; 0x64
 800f8b8:	81c2      	strh	r2, [r0, #14]
 800f8ba:	6103      	str	r3, [r0, #16]
 800f8bc:	6143      	str	r3, [r0, #20]
 800f8be:	6183      	str	r3, [r0, #24]
 800f8c0:	4619      	mov	r1, r3
 800f8c2:	2208      	movs	r2, #8
 800f8c4:	305c      	adds	r0, #92	; 0x5c
 800f8c6:	f7fd fdde 	bl	800d486 <memset>
 800f8ca:	4b05      	ldr	r3, [pc, #20]	; (800f8e0 <std.isra.0+0x38>)
 800f8cc:	6263      	str	r3, [r4, #36]	; 0x24
 800f8ce:	4b05      	ldr	r3, [pc, #20]	; (800f8e4 <std.isra.0+0x3c>)
 800f8d0:	62a3      	str	r3, [r4, #40]	; 0x28
 800f8d2:	4b05      	ldr	r3, [pc, #20]	; (800f8e8 <std.isra.0+0x40>)
 800f8d4:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f8d6:	4b05      	ldr	r3, [pc, #20]	; (800f8ec <std.isra.0+0x44>)
 800f8d8:	6224      	str	r4, [r4, #32]
 800f8da:	6323      	str	r3, [r4, #48]	; 0x30
 800f8dc:	bd10      	pop	{r4, pc}
 800f8de:	bf00      	nop
 800f8e0:	080102e9 	.word	0x080102e9
 800f8e4:	0801030b 	.word	0x0801030b
 800f8e8:	08010343 	.word	0x08010343
 800f8ec:	08010367 	.word	0x08010367

0800f8f0 <__sfmoreglue>:
 800f8f0:	b570      	push	{r4, r5, r6, lr}
 800f8f2:	2368      	movs	r3, #104	; 0x68
 800f8f4:	1e4d      	subs	r5, r1, #1
 800f8f6:	435d      	muls	r5, r3
 800f8f8:	460e      	mov	r6, r1
 800f8fa:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800f8fe:	f7fd fb6d 	bl	800cfdc <_malloc_r>
 800f902:	4604      	mov	r4, r0
 800f904:	b140      	cbz	r0, 800f918 <__sfmoreglue+0x28>
 800f906:	2100      	movs	r1, #0
 800f908:	e880 0042 	stmia.w	r0, {r1, r6}
 800f90c:	300c      	adds	r0, #12
 800f90e:	60a0      	str	r0, [r4, #8]
 800f910:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800f914:	f7fd fdb7 	bl	800d486 <memset>
 800f918:	4620      	mov	r0, r4
 800f91a:	bd70      	pop	{r4, r5, r6, pc}

0800f91c <__sinit>:
 800f91c:	6983      	ldr	r3, [r0, #24]
 800f91e:	b510      	push	{r4, lr}
 800f920:	4604      	mov	r4, r0
 800f922:	bb4b      	cbnz	r3, 800f978 <__sinit+0x5c>
 800f924:	f8c0 30d8 	str.w	r3, [r0, #216]	; 0xd8
 800f928:	f8c0 30dc 	str.w	r3, [r0, #220]	; 0xdc
 800f92c:	f8c0 30e0 	str.w	r3, [r0, #224]	; 0xe0
 800f930:	4b12      	ldr	r3, [pc, #72]	; (800f97c <__sinit+0x60>)
 800f932:	4a13      	ldr	r2, [pc, #76]	; (800f980 <__sinit+0x64>)
 800f934:	681b      	ldr	r3, [r3, #0]
 800f936:	6282      	str	r2, [r0, #40]	; 0x28
 800f938:	4298      	cmp	r0, r3
 800f93a:	bf04      	itt	eq
 800f93c:	2301      	moveq	r3, #1
 800f93e:	6183      	streq	r3, [r0, #24]
 800f940:	f000 f820 	bl	800f984 <__sfp>
 800f944:	6060      	str	r0, [r4, #4]
 800f946:	4620      	mov	r0, r4
 800f948:	f000 f81c 	bl	800f984 <__sfp>
 800f94c:	60a0      	str	r0, [r4, #8]
 800f94e:	4620      	mov	r0, r4
 800f950:	f000 f818 	bl	800f984 <__sfp>
 800f954:	2200      	movs	r2, #0
 800f956:	60e0      	str	r0, [r4, #12]
 800f958:	2104      	movs	r1, #4
 800f95a:	6860      	ldr	r0, [r4, #4]
 800f95c:	f7ff ffa4 	bl	800f8a8 <std.isra.0>
 800f960:	2201      	movs	r2, #1
 800f962:	2109      	movs	r1, #9
 800f964:	68a0      	ldr	r0, [r4, #8]
 800f966:	f7ff ff9f 	bl	800f8a8 <std.isra.0>
 800f96a:	2202      	movs	r2, #2
 800f96c:	2112      	movs	r1, #18
 800f96e:	68e0      	ldr	r0, [r4, #12]
 800f970:	f7ff ff9a 	bl	800f8a8 <std.isra.0>
 800f974:	2301      	movs	r3, #1
 800f976:	61a3      	str	r3, [r4, #24]
 800f978:	bd10      	pop	{r4, pc}
 800f97a:	bf00      	nop
 800f97c:	08011898 	.word	0x08011898
 800f980:	0800f89d 	.word	0x0800f89d

0800f984 <__sfp>:
 800f984:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f986:	4b1c      	ldr	r3, [pc, #112]	; (800f9f8 <__sfp+0x74>)
 800f988:	681e      	ldr	r6, [r3, #0]
 800f98a:	69b3      	ldr	r3, [r6, #24]
 800f98c:	4607      	mov	r7, r0
 800f98e:	b913      	cbnz	r3, 800f996 <__sfp+0x12>
 800f990:	4630      	mov	r0, r6
 800f992:	f7ff ffc3 	bl	800f91c <__sinit>
 800f996:	36d8      	adds	r6, #216	; 0xd8
 800f998:	68b4      	ldr	r4, [r6, #8]
 800f99a:	6873      	ldr	r3, [r6, #4]
 800f99c:	3b01      	subs	r3, #1
 800f99e:	d404      	bmi.n	800f9aa <__sfp+0x26>
 800f9a0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800f9a4:	b17d      	cbz	r5, 800f9c6 <__sfp+0x42>
 800f9a6:	3468      	adds	r4, #104	; 0x68
 800f9a8:	e7f8      	b.n	800f99c <__sfp+0x18>
 800f9aa:	6833      	ldr	r3, [r6, #0]
 800f9ac:	b10b      	cbz	r3, 800f9b2 <__sfp+0x2e>
 800f9ae:	6836      	ldr	r6, [r6, #0]
 800f9b0:	e7f2      	b.n	800f998 <__sfp+0x14>
 800f9b2:	2104      	movs	r1, #4
 800f9b4:	4638      	mov	r0, r7
 800f9b6:	f7ff ff9b 	bl	800f8f0 <__sfmoreglue>
 800f9ba:	6030      	str	r0, [r6, #0]
 800f9bc:	2800      	cmp	r0, #0
 800f9be:	d1f6      	bne.n	800f9ae <__sfp+0x2a>
 800f9c0:	230c      	movs	r3, #12
 800f9c2:	603b      	str	r3, [r7, #0]
 800f9c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f9c6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800f9ca:	81e3      	strh	r3, [r4, #14]
 800f9cc:	2301      	movs	r3, #1
 800f9ce:	81a3      	strh	r3, [r4, #12]
 800f9d0:	6665      	str	r5, [r4, #100]	; 0x64
 800f9d2:	6025      	str	r5, [r4, #0]
 800f9d4:	60a5      	str	r5, [r4, #8]
 800f9d6:	6065      	str	r5, [r4, #4]
 800f9d8:	6125      	str	r5, [r4, #16]
 800f9da:	6165      	str	r5, [r4, #20]
 800f9dc:	61a5      	str	r5, [r4, #24]
 800f9de:	2208      	movs	r2, #8
 800f9e0:	4629      	mov	r1, r5
 800f9e2:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800f9e6:	f7fd fd4e 	bl	800d486 <memset>
 800f9ea:	6365      	str	r5, [r4, #52]	; 0x34
 800f9ec:	63a5      	str	r5, [r4, #56]	; 0x38
 800f9ee:	64a5      	str	r5, [r4, #72]	; 0x48
 800f9f0:	64e5      	str	r5, [r4, #76]	; 0x4c
 800f9f2:	4620      	mov	r0, r4
 800f9f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f9f6:	bf00      	nop
 800f9f8:	08011898 	.word	0x08011898

0800f9fc <__sfp_lock_acquire>:
 800f9fc:	4770      	bx	lr

0800f9fe <__sfp_lock_release>:
 800f9fe:	4770      	bx	lr

0800fa00 <_malloc_trim_r>:
 800fa00:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800fa04:	4f25      	ldr	r7, [pc, #148]	; (800fa9c <_malloc_trim_r+0x9c>)
 800fa06:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800faa8 <_malloc_trim_r+0xa8>
 800fa0a:	4689      	mov	r9, r1
 800fa0c:	4606      	mov	r6, r0
 800fa0e:	f7fd fd42 	bl	800d496 <__malloc_lock>
 800fa12:	68bb      	ldr	r3, [r7, #8]
 800fa14:	685d      	ldr	r5, [r3, #4]
 800fa16:	f1a8 0411 	sub.w	r4, r8, #17
 800fa1a:	f025 0503 	bic.w	r5, r5, #3
 800fa1e:	442c      	add	r4, r5
 800fa20:	ebc9 0404 	rsb	r4, r9, r4
 800fa24:	fbb4 f4f8 	udiv	r4, r4, r8
 800fa28:	3c01      	subs	r4, #1
 800fa2a:	fb08 f404 	mul.w	r4, r8, r4
 800fa2e:	4544      	cmp	r4, r8
 800fa30:	da05      	bge.n	800fa3e <_malloc_trim_r+0x3e>
 800fa32:	4630      	mov	r0, r6
 800fa34:	f7fd fd30 	bl	800d498 <__malloc_unlock>
 800fa38:	2000      	movs	r0, #0
 800fa3a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800fa3e:	2100      	movs	r1, #0
 800fa40:	4630      	mov	r0, r6
 800fa42:	f7fd ff11 	bl	800d868 <_sbrk_r>
 800fa46:	68bb      	ldr	r3, [r7, #8]
 800fa48:	442b      	add	r3, r5
 800fa4a:	4298      	cmp	r0, r3
 800fa4c:	d1f1      	bne.n	800fa32 <_malloc_trim_r+0x32>
 800fa4e:	4261      	negs	r1, r4
 800fa50:	4630      	mov	r0, r6
 800fa52:	f7fd ff09 	bl	800d868 <_sbrk_r>
 800fa56:	3001      	adds	r0, #1
 800fa58:	d110      	bne.n	800fa7c <_malloc_trim_r+0x7c>
 800fa5a:	2100      	movs	r1, #0
 800fa5c:	4630      	mov	r0, r6
 800fa5e:	f7fd ff03 	bl	800d868 <_sbrk_r>
 800fa62:	68ba      	ldr	r2, [r7, #8]
 800fa64:	1a83      	subs	r3, r0, r2
 800fa66:	2b0f      	cmp	r3, #15
 800fa68:	dde3      	ble.n	800fa32 <_malloc_trim_r+0x32>
 800fa6a:	490d      	ldr	r1, [pc, #52]	; (800faa0 <_malloc_trim_r+0xa0>)
 800fa6c:	6809      	ldr	r1, [r1, #0]
 800fa6e:	1a40      	subs	r0, r0, r1
 800fa70:	490c      	ldr	r1, [pc, #48]	; (800faa4 <_malloc_trim_r+0xa4>)
 800fa72:	f043 0301 	orr.w	r3, r3, #1
 800fa76:	6008      	str	r0, [r1, #0]
 800fa78:	6053      	str	r3, [r2, #4]
 800fa7a:	e7da      	b.n	800fa32 <_malloc_trim_r+0x32>
 800fa7c:	68bb      	ldr	r3, [r7, #8]
 800fa7e:	4a09      	ldr	r2, [pc, #36]	; (800faa4 <_malloc_trim_r+0xa4>)
 800fa80:	1b2d      	subs	r5, r5, r4
 800fa82:	f045 0501 	orr.w	r5, r5, #1
 800fa86:	605d      	str	r5, [r3, #4]
 800fa88:	6813      	ldr	r3, [r2, #0]
 800fa8a:	4630      	mov	r0, r6
 800fa8c:	1b1c      	subs	r4, r3, r4
 800fa8e:	6014      	str	r4, [r2, #0]
 800fa90:	f7fd fd02 	bl	800d498 <__malloc_unlock>
 800fa94:	2001      	movs	r0, #1
 800fa96:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800fa9a:	bf00      	nop
 800fa9c:	20000100 	.word	0x20000100
 800faa0:	2000050c 	.word	0x2000050c
 800faa4:	20000590 	.word	0x20000590
 800faa8:	00001000 	.word	0x00001000

0800faac <_free_r>:
 800faac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fab0:	4604      	mov	r4, r0
 800fab2:	4688      	mov	r8, r1
 800fab4:	2900      	cmp	r1, #0
 800fab6:	f000 80ad 	beq.w	800fc14 <_free_r+0x168>
 800faba:	f7fd fcec 	bl	800d496 <__malloc_lock>
 800fabe:	f858 2c04 	ldr.w	r2, [r8, #-4]
 800fac2:	4d55      	ldr	r5, [pc, #340]	; (800fc18 <_free_r+0x16c>)
 800fac4:	f022 0001 	bic.w	r0, r2, #1
 800fac8:	f1a8 0308 	sub.w	r3, r8, #8
 800facc:	181f      	adds	r7, r3, r0
 800face:	68a9      	ldr	r1, [r5, #8]
 800fad0:	687e      	ldr	r6, [r7, #4]
 800fad2:	428f      	cmp	r7, r1
 800fad4:	f026 0603 	bic.w	r6, r6, #3
 800fad8:	f002 0201 	and.w	r2, r2, #1
 800fadc:	d11b      	bne.n	800fb16 <_free_r+0x6a>
 800fade:	4430      	add	r0, r6
 800fae0:	b93a      	cbnz	r2, 800faf2 <_free_r+0x46>
 800fae2:	f858 2c08 	ldr.w	r2, [r8, #-8]
 800fae6:	1a9b      	subs	r3, r3, r2
 800fae8:	4410      	add	r0, r2
 800faea:	6899      	ldr	r1, [r3, #8]
 800faec:	68da      	ldr	r2, [r3, #12]
 800faee:	60ca      	str	r2, [r1, #12]
 800faf0:	6091      	str	r1, [r2, #8]
 800faf2:	f040 0201 	orr.w	r2, r0, #1
 800faf6:	605a      	str	r2, [r3, #4]
 800faf8:	60ab      	str	r3, [r5, #8]
 800fafa:	4b48      	ldr	r3, [pc, #288]	; (800fc1c <_free_r+0x170>)
 800fafc:	681b      	ldr	r3, [r3, #0]
 800fafe:	4298      	cmp	r0, r3
 800fb00:	d304      	bcc.n	800fb0c <_free_r+0x60>
 800fb02:	4b47      	ldr	r3, [pc, #284]	; (800fc20 <_free_r+0x174>)
 800fb04:	4620      	mov	r0, r4
 800fb06:	6819      	ldr	r1, [r3, #0]
 800fb08:	f7ff ff7a 	bl	800fa00 <_malloc_trim_r>
 800fb0c:	4620      	mov	r0, r4
 800fb0e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800fb12:	f7fd bcc1 	b.w	800d498 <__malloc_unlock>
 800fb16:	607e      	str	r6, [r7, #4]
 800fb18:	b97a      	cbnz	r2, 800fb3a <_free_r+0x8e>
 800fb1a:	f858 1c08 	ldr.w	r1, [r8, #-8]
 800fb1e:	1a5b      	subs	r3, r3, r1
 800fb20:	4408      	add	r0, r1
 800fb22:	6899      	ldr	r1, [r3, #8]
 800fb24:	f105 0e08 	add.w	lr, r5, #8
 800fb28:	4571      	cmp	r1, lr
 800fb2a:	d008      	beq.n	800fb3e <_free_r+0x92>
 800fb2c:	f8d3 e00c 	ldr.w	lr, [r3, #12]
 800fb30:	f8c1 e00c 	str.w	lr, [r1, #12]
 800fb34:	f8ce 1008 	str.w	r1, [lr, #8]
 800fb38:	e002      	b.n	800fb40 <_free_r+0x94>
 800fb3a:	2200      	movs	r2, #0
 800fb3c:	e000      	b.n	800fb40 <_free_r+0x94>
 800fb3e:	2201      	movs	r2, #1
 800fb40:	19b9      	adds	r1, r7, r6
 800fb42:	6849      	ldr	r1, [r1, #4]
 800fb44:	07c9      	lsls	r1, r1, #31
 800fb46:	d40e      	bmi.n	800fb66 <_free_r+0xba>
 800fb48:	4430      	add	r0, r6
 800fb4a:	68b9      	ldr	r1, [r7, #8]
 800fb4c:	b942      	cbnz	r2, 800fb60 <_free_r+0xb4>
 800fb4e:	4e35      	ldr	r6, [pc, #212]	; (800fc24 <_free_r+0x178>)
 800fb50:	42b1      	cmp	r1, r6
 800fb52:	d105      	bne.n	800fb60 <_free_r+0xb4>
 800fb54:	616b      	str	r3, [r5, #20]
 800fb56:	612b      	str	r3, [r5, #16]
 800fb58:	2201      	movs	r2, #1
 800fb5a:	60d9      	str	r1, [r3, #12]
 800fb5c:	6099      	str	r1, [r3, #8]
 800fb5e:	e002      	b.n	800fb66 <_free_r+0xba>
 800fb60:	68fe      	ldr	r6, [r7, #12]
 800fb62:	60ce      	str	r6, [r1, #12]
 800fb64:	60b1      	str	r1, [r6, #8]
 800fb66:	f040 0101 	orr.w	r1, r0, #1
 800fb6a:	6059      	str	r1, [r3, #4]
 800fb6c:	5018      	str	r0, [r3, r0]
 800fb6e:	2a00      	cmp	r2, #0
 800fb70:	d1cc      	bne.n	800fb0c <_free_r+0x60>
 800fb72:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 800fb76:	d212      	bcs.n	800fb9e <_free_r+0xf2>
 800fb78:	08c0      	lsrs	r0, r0, #3
 800fb7a:	1081      	asrs	r1, r0, #2
 800fb7c:	2201      	movs	r2, #1
 800fb7e:	fa02 f101 	lsl.w	r1, r2, r1
 800fb82:	686a      	ldr	r2, [r5, #4]
 800fb84:	3001      	adds	r0, #1
 800fb86:	430a      	orrs	r2, r1
 800fb88:	606a      	str	r2, [r5, #4]
 800fb8a:	eb05 02c0 	add.w	r2, r5, r0, lsl #3
 800fb8e:	f855 1030 	ldr.w	r1, [r5, r0, lsl #3]
 800fb92:	6099      	str	r1, [r3, #8]
 800fb94:	3a08      	subs	r2, #8
 800fb96:	60da      	str	r2, [r3, #12]
 800fb98:	f845 3030 	str.w	r3, [r5, r0, lsl #3]
 800fb9c:	e038      	b.n	800fc10 <_free_r+0x164>
 800fb9e:	0a42      	lsrs	r2, r0, #9
 800fba0:	2a04      	cmp	r2, #4
 800fba2:	d802      	bhi.n	800fbaa <_free_r+0xfe>
 800fba4:	0982      	lsrs	r2, r0, #6
 800fba6:	3238      	adds	r2, #56	; 0x38
 800fba8:	e015      	b.n	800fbd6 <_free_r+0x12a>
 800fbaa:	2a14      	cmp	r2, #20
 800fbac:	d801      	bhi.n	800fbb2 <_free_r+0x106>
 800fbae:	325b      	adds	r2, #91	; 0x5b
 800fbb0:	e011      	b.n	800fbd6 <_free_r+0x12a>
 800fbb2:	2a54      	cmp	r2, #84	; 0x54
 800fbb4:	d802      	bhi.n	800fbbc <_free_r+0x110>
 800fbb6:	0b02      	lsrs	r2, r0, #12
 800fbb8:	326e      	adds	r2, #110	; 0x6e
 800fbba:	e00c      	b.n	800fbd6 <_free_r+0x12a>
 800fbbc:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 800fbc0:	d802      	bhi.n	800fbc8 <_free_r+0x11c>
 800fbc2:	0bc2      	lsrs	r2, r0, #15
 800fbc4:	3277      	adds	r2, #119	; 0x77
 800fbc6:	e006      	b.n	800fbd6 <_free_r+0x12a>
 800fbc8:	f240 5154 	movw	r1, #1364	; 0x554
 800fbcc:	428a      	cmp	r2, r1
 800fbce:	bf9a      	itte	ls
 800fbd0:	0c82      	lsrls	r2, r0, #18
 800fbd2:	327c      	addls	r2, #124	; 0x7c
 800fbd4:	227e      	movhi	r2, #126	; 0x7e
 800fbd6:	1c51      	adds	r1, r2, #1
 800fbd8:	eb05 06c2 	add.w	r6, r5, r2, lsl #3
 800fbdc:	f855 1031 	ldr.w	r1, [r5, r1, lsl #3]
 800fbe0:	4f0d      	ldr	r7, [pc, #52]	; (800fc18 <_free_r+0x16c>)
 800fbe2:	428e      	cmp	r6, r1
 800fbe4:	d10b      	bne.n	800fbfe <_free_r+0x152>
 800fbe6:	2101      	movs	r1, #1
 800fbe8:	1092      	asrs	r2, r2, #2
 800fbea:	fa01 f202 	lsl.w	r2, r1, r2
 800fbee:	6879      	ldr	r1, [r7, #4]
 800fbf0:	4311      	orrs	r1, r2
 800fbf2:	6079      	str	r1, [r7, #4]
 800fbf4:	4631      	mov	r1, r6
 800fbf6:	e008      	b.n	800fc0a <_free_r+0x15e>
 800fbf8:	6889      	ldr	r1, [r1, #8]
 800fbfa:	428e      	cmp	r6, r1
 800fbfc:	d004      	beq.n	800fc08 <_free_r+0x15c>
 800fbfe:	684a      	ldr	r2, [r1, #4]
 800fc00:	f022 0203 	bic.w	r2, r2, #3
 800fc04:	4290      	cmp	r0, r2
 800fc06:	d3f7      	bcc.n	800fbf8 <_free_r+0x14c>
 800fc08:	68ce      	ldr	r6, [r1, #12]
 800fc0a:	60de      	str	r6, [r3, #12]
 800fc0c:	6099      	str	r1, [r3, #8]
 800fc0e:	60b3      	str	r3, [r6, #8]
 800fc10:	60cb      	str	r3, [r1, #12]
 800fc12:	e77b      	b.n	800fb0c <_free_r+0x60>
 800fc14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fc18:	20000100 	.word	0x20000100
 800fc1c:	20000508 	.word	0x20000508
 800fc20:	2000058c 	.word	0x2000058c
 800fc24:	20000108 	.word	0x20000108

0800fc28 <_fwalk_reent>:
 800fc28:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800fc2c:	4680      	mov	r8, r0
 800fc2e:	4689      	mov	r9, r1
 800fc30:	f100 04d8 	add.w	r4, r0, #216	; 0xd8
 800fc34:	2600      	movs	r6, #0
 800fc36:	b194      	cbz	r4, 800fc5e <_fwalk_reent+0x36>
 800fc38:	68a5      	ldr	r5, [r4, #8]
 800fc3a:	6867      	ldr	r7, [r4, #4]
 800fc3c:	3f01      	subs	r7, #1
 800fc3e:	d40c      	bmi.n	800fc5a <_fwalk_reent+0x32>
 800fc40:	89ab      	ldrh	r3, [r5, #12]
 800fc42:	2b01      	cmp	r3, #1
 800fc44:	d907      	bls.n	800fc56 <_fwalk_reent+0x2e>
 800fc46:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800fc4a:	3301      	adds	r3, #1
 800fc4c:	d003      	beq.n	800fc56 <_fwalk_reent+0x2e>
 800fc4e:	4629      	mov	r1, r5
 800fc50:	4640      	mov	r0, r8
 800fc52:	47c8      	blx	r9
 800fc54:	4306      	orrs	r6, r0
 800fc56:	3568      	adds	r5, #104	; 0x68
 800fc58:	e7f0      	b.n	800fc3c <_fwalk_reent+0x14>
 800fc5a:	6824      	ldr	r4, [r4, #0]
 800fc5c:	e7eb      	b.n	800fc36 <_fwalk_reent+0xe>
 800fc5e:	4630      	mov	r0, r6
 800fc60:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800fc64 <_localeconv_r>:
 800fc64:	4800      	ldr	r0, [pc, #0]	; (800fc68 <_localeconv_r+0x4>)
 800fc66:	4770      	bx	lr
 800fc68:	20000510 	.word	0x20000510

0800fc6c <__swhatbuf_r>:
 800fc6c:	b570      	push	{r4, r5, r6, lr}
 800fc6e:	460e      	mov	r6, r1
 800fc70:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800fc74:	2900      	cmp	r1, #0
 800fc76:	b090      	sub	sp, #64	; 0x40
 800fc78:	4614      	mov	r4, r2
 800fc7a:	461d      	mov	r5, r3
 800fc7c:	da0a      	bge.n	800fc94 <__swhatbuf_r+0x28>
 800fc7e:	89b3      	ldrh	r3, [r6, #12]
 800fc80:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800fc84:	2200      	movs	r2, #0
 800fc86:	b298      	uxth	r0, r3
 800fc88:	602a      	str	r2, [r5, #0]
 800fc8a:	b1b0      	cbz	r0, 800fcba <__swhatbuf_r+0x4e>
 800fc8c:	2340      	movs	r3, #64	; 0x40
 800fc8e:	6023      	str	r3, [r4, #0]
 800fc90:	4610      	mov	r0, r2
 800fc92:	e015      	b.n	800fcc0 <__swhatbuf_r+0x54>
 800fc94:	aa01      	add	r2, sp, #4
 800fc96:	f000 fc79 	bl	801058c <_fstat_r>
 800fc9a:	2800      	cmp	r0, #0
 800fc9c:	dbef      	blt.n	800fc7e <__swhatbuf_r+0x12>
 800fc9e:	9a02      	ldr	r2, [sp, #8]
 800fca0:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800fca4:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800fca8:	425a      	negs	r2, r3
 800fcaa:	415a      	adcs	r2, r3
 800fcac:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800fcb0:	602a      	str	r2, [r5, #0]
 800fcb2:	f44f 6000 	mov.w	r0, #2048	; 0x800
 800fcb6:	6023      	str	r3, [r4, #0]
 800fcb8:	e002      	b.n	800fcc0 <__swhatbuf_r+0x54>
 800fcba:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800fcbe:	6023      	str	r3, [r4, #0]
 800fcc0:	b010      	add	sp, #64	; 0x40
 800fcc2:	bd70      	pop	{r4, r5, r6, pc}

0800fcc4 <__smakebuf_r>:
 800fcc4:	898b      	ldrh	r3, [r1, #12]
 800fcc6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fcc8:	079e      	lsls	r6, r3, #30
 800fcca:	4605      	mov	r5, r0
 800fccc:	460c      	mov	r4, r1
 800fcce:	d410      	bmi.n	800fcf2 <__smakebuf_r+0x2e>
 800fcd0:	ab01      	add	r3, sp, #4
 800fcd2:	466a      	mov	r2, sp
 800fcd4:	f7ff ffca 	bl	800fc6c <__swhatbuf_r>
 800fcd8:	9900      	ldr	r1, [sp, #0]
 800fcda:	4606      	mov	r6, r0
 800fcdc:	4628      	mov	r0, r5
 800fcde:	f7fd f97d 	bl	800cfdc <_malloc_r>
 800fce2:	b968      	cbnz	r0, 800fd00 <__smakebuf_r+0x3c>
 800fce4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800fce8:	059a      	lsls	r2, r3, #22
 800fcea:	d422      	bmi.n	800fd32 <__smakebuf_r+0x6e>
 800fcec:	f043 0302 	orr.w	r3, r3, #2
 800fcf0:	81a3      	strh	r3, [r4, #12]
 800fcf2:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800fcf6:	6023      	str	r3, [r4, #0]
 800fcf8:	6123      	str	r3, [r4, #16]
 800fcfa:	2301      	movs	r3, #1
 800fcfc:	6163      	str	r3, [r4, #20]
 800fcfe:	e018      	b.n	800fd32 <__smakebuf_r+0x6e>
 800fd00:	4b0d      	ldr	r3, [pc, #52]	; (800fd38 <__smakebuf_r+0x74>)
 800fd02:	62ab      	str	r3, [r5, #40]	; 0x28
 800fd04:	89a3      	ldrh	r3, [r4, #12]
 800fd06:	6020      	str	r0, [r4, #0]
 800fd08:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800fd0c:	81a3      	strh	r3, [r4, #12]
 800fd0e:	9b00      	ldr	r3, [sp, #0]
 800fd10:	6163      	str	r3, [r4, #20]
 800fd12:	9b01      	ldr	r3, [sp, #4]
 800fd14:	6120      	str	r0, [r4, #16]
 800fd16:	b14b      	cbz	r3, 800fd2c <__smakebuf_r+0x68>
 800fd18:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800fd1c:	4628      	mov	r0, r5
 800fd1e:	f000 fc47 	bl	80105b0 <_isatty_r>
 800fd22:	b118      	cbz	r0, 800fd2c <__smakebuf_r+0x68>
 800fd24:	89a3      	ldrh	r3, [r4, #12]
 800fd26:	f043 0301 	orr.w	r3, r3, #1
 800fd2a:	81a3      	strh	r3, [r4, #12]
 800fd2c:	89a0      	ldrh	r0, [r4, #12]
 800fd2e:	4330      	orrs	r0, r6
 800fd30:	81a0      	strh	r0, [r4, #12]
 800fd32:	b002      	add	sp, #8
 800fd34:	bd70      	pop	{r4, r5, r6, pc}
 800fd36:	bf00      	nop
 800fd38:	0800f89d 	.word	0x0800f89d

0800fd3c <_Balloc>:
 800fd3c:	b570      	push	{r4, r5, r6, lr}
 800fd3e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 800fd40:	4604      	mov	r4, r0
 800fd42:	460e      	mov	r6, r1
 800fd44:	b93d      	cbnz	r5, 800fd56 <_Balloc+0x1a>
 800fd46:	2010      	movs	r0, #16
 800fd48:	f7fd f938 	bl	800cfbc <malloc>
 800fd4c:	6260      	str	r0, [r4, #36]	; 0x24
 800fd4e:	6045      	str	r5, [r0, #4]
 800fd50:	6085      	str	r5, [r0, #8]
 800fd52:	6005      	str	r5, [r0, #0]
 800fd54:	60c5      	str	r5, [r0, #12]
 800fd56:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800fd58:	68eb      	ldr	r3, [r5, #12]
 800fd5a:	b143      	cbz	r3, 800fd6e <_Balloc+0x32>
 800fd5c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800fd5e:	68db      	ldr	r3, [r3, #12]
 800fd60:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 800fd64:	b178      	cbz	r0, 800fd86 <_Balloc+0x4a>
 800fd66:	6802      	ldr	r2, [r0, #0]
 800fd68:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 800fd6c:	e017      	b.n	800fd9e <_Balloc+0x62>
 800fd6e:	2221      	movs	r2, #33	; 0x21
 800fd70:	2104      	movs	r1, #4
 800fd72:	4620      	mov	r0, r4
 800fd74:	f000 fb7a 	bl	801046c <_calloc_r>
 800fd78:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800fd7a:	60e8      	str	r0, [r5, #12]
 800fd7c:	68db      	ldr	r3, [r3, #12]
 800fd7e:	2b00      	cmp	r3, #0
 800fd80:	d1ec      	bne.n	800fd5c <_Balloc+0x20>
 800fd82:	2000      	movs	r0, #0
 800fd84:	bd70      	pop	{r4, r5, r6, pc}
 800fd86:	2101      	movs	r1, #1
 800fd88:	fa01 f506 	lsl.w	r5, r1, r6
 800fd8c:	1d6a      	adds	r2, r5, #5
 800fd8e:	0092      	lsls	r2, r2, #2
 800fd90:	4620      	mov	r0, r4
 800fd92:	f000 fb6b 	bl	801046c <_calloc_r>
 800fd96:	2800      	cmp	r0, #0
 800fd98:	d0f3      	beq.n	800fd82 <_Balloc+0x46>
 800fd9a:	6046      	str	r6, [r0, #4]
 800fd9c:	6085      	str	r5, [r0, #8]
 800fd9e:	2300      	movs	r3, #0
 800fda0:	6103      	str	r3, [r0, #16]
 800fda2:	60c3      	str	r3, [r0, #12]
 800fda4:	bd70      	pop	{r4, r5, r6, pc}

0800fda6 <_Bfree>:
 800fda6:	b570      	push	{r4, r5, r6, lr}
 800fda8:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800fdaa:	4606      	mov	r6, r0
 800fdac:	460d      	mov	r5, r1
 800fdae:	b93c      	cbnz	r4, 800fdc0 <_Bfree+0x1a>
 800fdb0:	2010      	movs	r0, #16
 800fdb2:	f7fd f903 	bl	800cfbc <malloc>
 800fdb6:	6270      	str	r0, [r6, #36]	; 0x24
 800fdb8:	6044      	str	r4, [r0, #4]
 800fdba:	6084      	str	r4, [r0, #8]
 800fdbc:	6004      	str	r4, [r0, #0]
 800fdbe:	60c4      	str	r4, [r0, #12]
 800fdc0:	b13d      	cbz	r5, 800fdd2 <_Bfree+0x2c>
 800fdc2:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800fdc4:	686a      	ldr	r2, [r5, #4]
 800fdc6:	68db      	ldr	r3, [r3, #12]
 800fdc8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800fdcc:	6029      	str	r1, [r5, #0]
 800fdce:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 800fdd2:	bd70      	pop	{r4, r5, r6, pc}

0800fdd4 <__multadd>:
 800fdd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fdd8:	690d      	ldr	r5, [r1, #16]
 800fdda:	461f      	mov	r7, r3
 800fddc:	4606      	mov	r6, r0
 800fdde:	460c      	mov	r4, r1
 800fde0:	f101 0e14 	add.w	lr, r1, #20
 800fde4:	2300      	movs	r3, #0
 800fde6:	f8de 0000 	ldr.w	r0, [lr]
 800fdea:	b281      	uxth	r1, r0
 800fdec:	fb02 7101 	mla	r1, r2, r1, r7
 800fdf0:	0c0f      	lsrs	r7, r1, #16
 800fdf2:	0c00      	lsrs	r0, r0, #16
 800fdf4:	fb02 7000 	mla	r0, r2, r0, r7
 800fdf8:	b289      	uxth	r1, r1
 800fdfa:	3301      	adds	r3, #1
 800fdfc:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 800fe00:	429d      	cmp	r5, r3
 800fe02:	ea4f 4710 	mov.w	r7, r0, lsr #16
 800fe06:	f84e 1b04 	str.w	r1, [lr], #4
 800fe0a:	dcec      	bgt.n	800fde6 <__multadd+0x12>
 800fe0c:	b1d7      	cbz	r7, 800fe44 <__multadd+0x70>
 800fe0e:	68a3      	ldr	r3, [r4, #8]
 800fe10:	429d      	cmp	r5, r3
 800fe12:	db12      	blt.n	800fe3a <__multadd+0x66>
 800fe14:	6861      	ldr	r1, [r4, #4]
 800fe16:	4630      	mov	r0, r6
 800fe18:	3101      	adds	r1, #1
 800fe1a:	f7ff ff8f 	bl	800fd3c <_Balloc>
 800fe1e:	6922      	ldr	r2, [r4, #16]
 800fe20:	3202      	adds	r2, #2
 800fe22:	f104 010c 	add.w	r1, r4, #12
 800fe26:	4680      	mov	r8, r0
 800fe28:	0092      	lsls	r2, r2, #2
 800fe2a:	300c      	adds	r0, #12
 800fe2c:	f7fd fb05 	bl	800d43a <memcpy>
 800fe30:	4621      	mov	r1, r4
 800fe32:	4630      	mov	r0, r6
 800fe34:	f7ff ffb7 	bl	800fda6 <_Bfree>
 800fe38:	4644      	mov	r4, r8
 800fe3a:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800fe3e:	3501      	adds	r5, #1
 800fe40:	615f      	str	r7, [r3, #20]
 800fe42:	6125      	str	r5, [r4, #16]
 800fe44:	4620      	mov	r0, r4
 800fe46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fe4a <__hi0bits>:
 800fe4a:	0c03      	lsrs	r3, r0, #16
 800fe4c:	041b      	lsls	r3, r3, #16
 800fe4e:	b913      	cbnz	r3, 800fe56 <__hi0bits+0xc>
 800fe50:	0400      	lsls	r0, r0, #16
 800fe52:	2310      	movs	r3, #16
 800fe54:	e000      	b.n	800fe58 <__hi0bits+0xe>
 800fe56:	2300      	movs	r3, #0
 800fe58:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800fe5c:	bf04      	itt	eq
 800fe5e:	0200      	lsleq	r0, r0, #8
 800fe60:	3308      	addeq	r3, #8
 800fe62:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 800fe66:	bf04      	itt	eq
 800fe68:	0100      	lsleq	r0, r0, #4
 800fe6a:	3304      	addeq	r3, #4
 800fe6c:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800fe70:	bf04      	itt	eq
 800fe72:	0080      	lsleq	r0, r0, #2
 800fe74:	3302      	addeq	r3, #2
 800fe76:	2800      	cmp	r0, #0
 800fe78:	db03      	blt.n	800fe82 <__hi0bits+0x38>
 800fe7a:	0042      	lsls	r2, r0, #1
 800fe7c:	d503      	bpl.n	800fe86 <__hi0bits+0x3c>
 800fe7e:	1c58      	adds	r0, r3, #1
 800fe80:	4770      	bx	lr
 800fe82:	4618      	mov	r0, r3
 800fe84:	4770      	bx	lr
 800fe86:	2020      	movs	r0, #32
 800fe88:	4770      	bx	lr

0800fe8a <__lo0bits>:
 800fe8a:	6803      	ldr	r3, [r0, #0]
 800fe8c:	f013 0207 	ands.w	r2, r3, #7
 800fe90:	d00b      	beq.n	800feaa <__lo0bits+0x20>
 800fe92:	07d9      	lsls	r1, r3, #31
 800fe94:	d422      	bmi.n	800fedc <__lo0bits+0x52>
 800fe96:	079a      	lsls	r2, r3, #30
 800fe98:	bf4b      	itete	mi
 800fe9a:	085b      	lsrmi	r3, r3, #1
 800fe9c:	089b      	lsrpl	r3, r3, #2
 800fe9e:	6003      	strmi	r3, [r0, #0]
 800fea0:	6003      	strpl	r3, [r0, #0]
 800fea2:	bf4c      	ite	mi
 800fea4:	2001      	movmi	r0, #1
 800fea6:	2002      	movpl	r0, #2
 800fea8:	4770      	bx	lr
 800feaa:	b299      	uxth	r1, r3
 800feac:	b909      	cbnz	r1, 800feb2 <__lo0bits+0x28>
 800feae:	0c1b      	lsrs	r3, r3, #16
 800feb0:	2210      	movs	r2, #16
 800feb2:	f013 0fff 	tst.w	r3, #255	; 0xff
 800feb6:	bf04      	itt	eq
 800feb8:	0a1b      	lsreq	r3, r3, #8
 800feba:	3208      	addeq	r2, #8
 800febc:	0719      	lsls	r1, r3, #28
 800febe:	bf04      	itt	eq
 800fec0:	091b      	lsreq	r3, r3, #4
 800fec2:	3204      	addeq	r2, #4
 800fec4:	0799      	lsls	r1, r3, #30
 800fec6:	bf04      	itt	eq
 800fec8:	089b      	lsreq	r3, r3, #2
 800feca:	3202      	addeq	r2, #2
 800fecc:	07d9      	lsls	r1, r3, #31
 800fece:	d402      	bmi.n	800fed6 <__lo0bits+0x4c>
 800fed0:	085b      	lsrs	r3, r3, #1
 800fed2:	d005      	beq.n	800fee0 <__lo0bits+0x56>
 800fed4:	3201      	adds	r2, #1
 800fed6:	6003      	str	r3, [r0, #0]
 800fed8:	4610      	mov	r0, r2
 800feda:	4770      	bx	lr
 800fedc:	2000      	movs	r0, #0
 800fede:	4770      	bx	lr
 800fee0:	2020      	movs	r0, #32
 800fee2:	4770      	bx	lr

0800fee4 <__i2b>:
 800fee4:	b510      	push	{r4, lr}
 800fee6:	460c      	mov	r4, r1
 800fee8:	2101      	movs	r1, #1
 800feea:	f7ff ff27 	bl	800fd3c <_Balloc>
 800feee:	2201      	movs	r2, #1
 800fef0:	6144      	str	r4, [r0, #20]
 800fef2:	6102      	str	r2, [r0, #16]
 800fef4:	bd10      	pop	{r4, pc}

0800fef6 <__multiply>:
 800fef6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fefa:	4614      	mov	r4, r2
 800fefc:	690a      	ldr	r2, [r1, #16]
 800fefe:	6923      	ldr	r3, [r4, #16]
 800ff00:	429a      	cmp	r2, r3
 800ff02:	bfb8      	it	lt
 800ff04:	460b      	movlt	r3, r1
 800ff06:	4688      	mov	r8, r1
 800ff08:	bfbc      	itt	lt
 800ff0a:	46a0      	movlt	r8, r4
 800ff0c:	461c      	movlt	r4, r3
 800ff0e:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800ff12:	f8d4 9010 	ldr.w	r9, [r4, #16]
 800ff16:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800ff1a:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800ff1e:	eb07 0609 	add.w	r6, r7, r9
 800ff22:	429e      	cmp	r6, r3
 800ff24:	bfc8      	it	gt
 800ff26:	3101      	addgt	r1, #1
 800ff28:	f7ff ff08 	bl	800fd3c <_Balloc>
 800ff2c:	f100 0514 	add.w	r5, r0, #20
 800ff30:	eb05 0c86 	add.w	ip, r5, r6, lsl #2
 800ff34:	462b      	mov	r3, r5
 800ff36:	2200      	movs	r2, #0
 800ff38:	4563      	cmp	r3, ip
 800ff3a:	d202      	bcs.n	800ff42 <__multiply+0x4c>
 800ff3c:	f843 2b04 	str.w	r2, [r3], #4
 800ff40:	e7fa      	b.n	800ff38 <__multiply+0x42>
 800ff42:	f104 0214 	add.w	r2, r4, #20
 800ff46:	f108 0114 	add.w	r1, r8, #20
 800ff4a:	eb02 0389 	add.w	r3, r2, r9, lsl #2
 800ff4e:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 800ff52:	9300      	str	r3, [sp, #0]
 800ff54:	9b00      	ldr	r3, [sp, #0]
 800ff56:	9201      	str	r2, [sp, #4]
 800ff58:	4293      	cmp	r3, r2
 800ff5a:	d957      	bls.n	801000c <__multiply+0x116>
 800ff5c:	f8b2 b000 	ldrh.w	fp, [r2]
 800ff60:	f1bb 0f00 	cmp.w	fp, #0
 800ff64:	d023      	beq.n	800ffae <__multiply+0xb8>
 800ff66:	4689      	mov	r9, r1
 800ff68:	46ae      	mov	lr, r5
 800ff6a:	f04f 0800 	mov.w	r8, #0
 800ff6e:	f859 4b04 	ldr.w	r4, [r9], #4
 800ff72:	f8be a000 	ldrh.w	sl, [lr]
 800ff76:	b2a3      	uxth	r3, r4
 800ff78:	fb0b a303 	mla	r3, fp, r3, sl
 800ff7c:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 800ff80:	f8de 4000 	ldr.w	r4, [lr]
 800ff84:	4443      	add	r3, r8
 800ff86:	ea4f 4814 	mov.w	r8, r4, lsr #16
 800ff8a:	fb0b 840a 	mla	r4, fp, sl, r8
 800ff8e:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 800ff92:	46f2      	mov	sl, lr
 800ff94:	b29b      	uxth	r3, r3
 800ff96:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800ff9a:	454f      	cmp	r7, r9
 800ff9c:	ea4f 4814 	mov.w	r8, r4, lsr #16
 800ffa0:	f84a 3b04 	str.w	r3, [sl], #4
 800ffa4:	d901      	bls.n	800ffaa <__multiply+0xb4>
 800ffa6:	46d6      	mov	lr, sl
 800ffa8:	e7e1      	b.n	800ff6e <__multiply+0x78>
 800ffaa:	f8ce 8004 	str.w	r8, [lr, #4]
 800ffae:	9b01      	ldr	r3, [sp, #4]
 800ffb0:	f8b3 a002 	ldrh.w	sl, [r3, #2]
 800ffb4:	3204      	adds	r2, #4
 800ffb6:	f1ba 0f00 	cmp.w	sl, #0
 800ffba:	d021      	beq.n	8010000 <__multiply+0x10a>
 800ffbc:	682b      	ldr	r3, [r5, #0]
 800ffbe:	462c      	mov	r4, r5
 800ffc0:	4689      	mov	r9, r1
 800ffc2:	f04f 0800 	mov.w	r8, #0
 800ffc6:	f8b9 e000 	ldrh.w	lr, [r9]
 800ffca:	f8b4 b002 	ldrh.w	fp, [r4, #2]
 800ffce:	fb0a be0e 	mla	lr, sl, lr, fp
 800ffd2:	44f0      	add	r8, lr
 800ffd4:	46a3      	mov	fp, r4
 800ffd6:	b29b      	uxth	r3, r3
 800ffd8:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800ffdc:	f84b 3b04 	str.w	r3, [fp], #4
 800ffe0:	f859 3b04 	ldr.w	r3, [r9], #4
 800ffe4:	f8b4 e004 	ldrh.w	lr, [r4, #4]
 800ffe8:	0c1b      	lsrs	r3, r3, #16
 800ffea:	fb0a e303 	mla	r3, sl, r3, lr
 800ffee:	eb03 4318 	add.w	r3, r3, r8, lsr #16
 800fff2:	454f      	cmp	r7, r9
 800fff4:	ea4f 4813 	mov.w	r8, r3, lsr #16
 800fff8:	d901      	bls.n	800fffe <__multiply+0x108>
 800fffa:	465c      	mov	r4, fp
 800fffc:	e7e3      	b.n	800ffc6 <__multiply+0xd0>
 800fffe:	6063      	str	r3, [r4, #4]
 8010000:	3504      	adds	r5, #4
 8010002:	e7a7      	b.n	800ff54 <__multiply+0x5e>
 8010004:	f85c 3d04 	ldr.w	r3, [ip, #-4]!
 8010008:	b913      	cbnz	r3, 8010010 <__multiply+0x11a>
 801000a:	3e01      	subs	r6, #1
 801000c:	2e00      	cmp	r6, #0
 801000e:	dcf9      	bgt.n	8010004 <__multiply+0x10e>
 8010010:	6106      	str	r6, [r0, #16]
 8010012:	b003      	add	sp, #12
 8010014:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010018 <__pow5mult>:
 8010018:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801001c:	4615      	mov	r5, r2
 801001e:	f012 0203 	ands.w	r2, r2, #3
 8010022:	4606      	mov	r6, r0
 8010024:	460f      	mov	r7, r1
 8010026:	d007      	beq.n	8010038 <__pow5mult+0x20>
 8010028:	3a01      	subs	r2, #1
 801002a:	4c21      	ldr	r4, [pc, #132]	; (80100b0 <__pow5mult+0x98>)
 801002c:	2300      	movs	r3, #0
 801002e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8010032:	f7ff fecf 	bl	800fdd4 <__multadd>
 8010036:	4607      	mov	r7, r0
 8010038:	10ad      	asrs	r5, r5, #2
 801003a:	d036      	beq.n	80100aa <__pow5mult+0x92>
 801003c:	6a74      	ldr	r4, [r6, #36]	; 0x24
 801003e:	b93c      	cbnz	r4, 8010050 <__pow5mult+0x38>
 8010040:	2010      	movs	r0, #16
 8010042:	f7fc ffbb 	bl	800cfbc <malloc>
 8010046:	6270      	str	r0, [r6, #36]	; 0x24
 8010048:	6044      	str	r4, [r0, #4]
 801004a:	6084      	str	r4, [r0, #8]
 801004c:	6004      	str	r4, [r0, #0]
 801004e:	60c4      	str	r4, [r0, #12]
 8010050:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8010054:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8010058:	b94c      	cbnz	r4, 801006e <__pow5mult+0x56>
 801005a:	f240 2171 	movw	r1, #625	; 0x271
 801005e:	4630      	mov	r0, r6
 8010060:	f7ff ff40 	bl	800fee4 <__i2b>
 8010064:	2300      	movs	r3, #0
 8010066:	f8c8 0008 	str.w	r0, [r8, #8]
 801006a:	4604      	mov	r4, r0
 801006c:	6003      	str	r3, [r0, #0]
 801006e:	f04f 0800 	mov.w	r8, #0
 8010072:	07eb      	lsls	r3, r5, #31
 8010074:	d50a      	bpl.n	801008c <__pow5mult+0x74>
 8010076:	4639      	mov	r1, r7
 8010078:	4622      	mov	r2, r4
 801007a:	4630      	mov	r0, r6
 801007c:	f7ff ff3b 	bl	800fef6 <__multiply>
 8010080:	4639      	mov	r1, r7
 8010082:	4681      	mov	r9, r0
 8010084:	4630      	mov	r0, r6
 8010086:	f7ff fe8e 	bl	800fda6 <_Bfree>
 801008a:	464f      	mov	r7, r9
 801008c:	106d      	asrs	r5, r5, #1
 801008e:	d00c      	beq.n	80100aa <__pow5mult+0x92>
 8010090:	6820      	ldr	r0, [r4, #0]
 8010092:	b108      	cbz	r0, 8010098 <__pow5mult+0x80>
 8010094:	4604      	mov	r4, r0
 8010096:	e7ec      	b.n	8010072 <__pow5mult+0x5a>
 8010098:	4622      	mov	r2, r4
 801009a:	4621      	mov	r1, r4
 801009c:	4630      	mov	r0, r6
 801009e:	f7ff ff2a 	bl	800fef6 <__multiply>
 80100a2:	6020      	str	r0, [r4, #0]
 80100a4:	f8c0 8000 	str.w	r8, [r0]
 80100a8:	e7f4      	b.n	8010094 <__pow5mult+0x7c>
 80100aa:	4638      	mov	r0, r7
 80100ac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80100b0:	08011a58 	.word	0x08011a58

080100b4 <__lshift>:
 80100b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80100b8:	460c      	mov	r4, r1
 80100ba:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80100be:	6926      	ldr	r6, [r4, #16]
 80100c0:	6849      	ldr	r1, [r1, #4]
 80100c2:	68a3      	ldr	r3, [r4, #8]
 80100c4:	4456      	add	r6, sl
 80100c6:	4607      	mov	r7, r0
 80100c8:	4691      	mov	r9, r2
 80100ca:	1c75      	adds	r5, r6, #1
 80100cc:	42ab      	cmp	r3, r5
 80100ce:	da02      	bge.n	80100d6 <__lshift+0x22>
 80100d0:	3101      	adds	r1, #1
 80100d2:	005b      	lsls	r3, r3, #1
 80100d4:	e7fa      	b.n	80100cc <__lshift+0x18>
 80100d6:	4638      	mov	r0, r7
 80100d8:	f7ff fe30 	bl	800fd3c <_Balloc>
 80100dc:	2300      	movs	r3, #0
 80100de:	4680      	mov	r8, r0
 80100e0:	f100 0114 	add.w	r1, r0, #20
 80100e4:	461a      	mov	r2, r3
 80100e6:	4553      	cmp	r3, sl
 80100e8:	da03      	bge.n	80100f2 <__lshift+0x3e>
 80100ea:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80100ee:	3301      	adds	r3, #1
 80100f0:	e7f9      	b.n	80100e6 <__lshift+0x32>
 80100f2:	ea2a 73ea 	bic.w	r3, sl, sl, asr #31
 80100f6:	6920      	ldr	r0, [r4, #16]
 80100f8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80100fc:	f019 091f 	ands.w	r9, r9, #31
 8010100:	f104 0114 	add.w	r1, r4, #20
 8010104:	eb01 0e80 	add.w	lr, r1, r0, lsl #2
 8010108:	d014      	beq.n	8010134 <__lshift+0x80>
 801010a:	f1c9 0c20 	rsb	ip, r9, #32
 801010e:	2200      	movs	r2, #0
 8010110:	6808      	ldr	r0, [r1, #0]
 8010112:	fa00 f009 	lsl.w	r0, r0, r9
 8010116:	4302      	orrs	r2, r0
 8010118:	469a      	mov	sl, r3
 801011a:	f843 2b04 	str.w	r2, [r3], #4
 801011e:	f851 2b04 	ldr.w	r2, [r1], #4
 8010122:	458e      	cmp	lr, r1
 8010124:	fa22 f20c 	lsr.w	r2, r2, ip
 8010128:	d8f2      	bhi.n	8010110 <__lshift+0x5c>
 801012a:	f8ca 2004 	str.w	r2, [sl, #4]
 801012e:	b142      	cbz	r2, 8010142 <__lshift+0x8e>
 8010130:	1cb5      	adds	r5, r6, #2
 8010132:	e006      	b.n	8010142 <__lshift+0x8e>
 8010134:	3b04      	subs	r3, #4
 8010136:	f851 2b04 	ldr.w	r2, [r1], #4
 801013a:	f843 2f04 	str.w	r2, [r3, #4]!
 801013e:	458e      	cmp	lr, r1
 8010140:	d8f9      	bhi.n	8010136 <__lshift+0x82>
 8010142:	3d01      	subs	r5, #1
 8010144:	4638      	mov	r0, r7
 8010146:	f8c8 5010 	str.w	r5, [r8, #16]
 801014a:	4621      	mov	r1, r4
 801014c:	f7ff fe2b 	bl	800fda6 <_Bfree>
 8010150:	4640      	mov	r0, r8
 8010152:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08010156 <__mcmp>:
 8010156:	6903      	ldr	r3, [r0, #16]
 8010158:	690a      	ldr	r2, [r1, #16]
 801015a:	1a9b      	subs	r3, r3, r2
 801015c:	b510      	push	{r4, lr}
 801015e:	d111      	bne.n	8010184 <__mcmp+0x2e>
 8010160:	0092      	lsls	r2, r2, #2
 8010162:	3014      	adds	r0, #20
 8010164:	3114      	adds	r1, #20
 8010166:	1883      	adds	r3, r0, r2
 8010168:	440a      	add	r2, r1
 801016a:	f853 4d04 	ldr.w	r4, [r3, #-4]!
 801016e:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 8010172:	428c      	cmp	r4, r1
 8010174:	d002      	beq.n	801017c <__mcmp+0x26>
 8010176:	d307      	bcc.n	8010188 <__mcmp+0x32>
 8010178:	2001      	movs	r0, #1
 801017a:	bd10      	pop	{r4, pc}
 801017c:	4298      	cmp	r0, r3
 801017e:	d3f4      	bcc.n	801016a <__mcmp+0x14>
 8010180:	2000      	movs	r0, #0
 8010182:	bd10      	pop	{r4, pc}
 8010184:	4618      	mov	r0, r3
 8010186:	bd10      	pop	{r4, pc}
 8010188:	f04f 30ff 	mov.w	r0, #4294967295
 801018c:	bd10      	pop	{r4, pc}

0801018e <__mdiff>:
 801018e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010192:	460c      	mov	r4, r1
 8010194:	4607      	mov	r7, r0
 8010196:	4611      	mov	r1, r2
 8010198:	4620      	mov	r0, r4
 801019a:	4615      	mov	r5, r2
 801019c:	f7ff ffdb 	bl	8010156 <__mcmp>
 80101a0:	1e06      	subs	r6, r0, #0
 80101a2:	d108      	bne.n	80101b6 <__mdiff+0x28>
 80101a4:	4631      	mov	r1, r6
 80101a6:	4638      	mov	r0, r7
 80101a8:	f7ff fdc8 	bl	800fd3c <_Balloc>
 80101ac:	2301      	movs	r3, #1
 80101ae:	6103      	str	r3, [r0, #16]
 80101b0:	6146      	str	r6, [r0, #20]
 80101b2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80101b6:	bfbc      	itt	lt
 80101b8:	4623      	movlt	r3, r4
 80101ba:	462c      	movlt	r4, r5
 80101bc:	4638      	mov	r0, r7
 80101be:	6861      	ldr	r1, [r4, #4]
 80101c0:	bfba      	itte	lt
 80101c2:	461d      	movlt	r5, r3
 80101c4:	2601      	movlt	r6, #1
 80101c6:	2600      	movge	r6, #0
 80101c8:	f7ff fdb8 	bl	800fd3c <_Balloc>
 80101cc:	692b      	ldr	r3, [r5, #16]
 80101ce:	60c6      	str	r6, [r0, #12]
 80101d0:	6926      	ldr	r6, [r4, #16]
 80101d2:	f105 0914 	add.w	r9, r5, #20
 80101d6:	3414      	adds	r4, #20
 80101d8:	eb04 0786 	add.w	r7, r4, r6, lsl #2
 80101dc:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 80101e0:	f100 0514 	add.w	r5, r0, #20
 80101e4:	f04f 0c00 	mov.w	ip, #0
 80101e8:	f854 3b04 	ldr.w	r3, [r4], #4
 80101ec:	f859 2b04 	ldr.w	r2, [r9], #4
 80101f0:	fa1c f183 	uxtah	r1, ip, r3
 80101f4:	fa1f fe82 	uxth.w	lr, r2
 80101f8:	0c12      	lsrs	r2, r2, #16
 80101fa:	ebce 0101 	rsb	r1, lr, r1
 80101fe:	ebc2 4313 	rsb	r3, r2, r3, lsr #16
 8010202:	eb03 4321 	add.w	r3, r3, r1, asr #16
 8010206:	b289      	uxth	r1, r1
 8010208:	ea4f 4c23 	mov.w	ip, r3, asr #16
 801020c:	45c8      	cmp	r8, r9
 801020e:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8010212:	46a6      	mov	lr, r4
 8010214:	f845 3b04 	str.w	r3, [r5], #4
 8010218:	d8e6      	bhi.n	80101e8 <__mdiff+0x5a>
 801021a:	45be      	cmp	lr, r7
 801021c:	d20e      	bcs.n	801023c <__mdiff+0xae>
 801021e:	f85e 1b04 	ldr.w	r1, [lr], #4
 8010222:	fa1c f281 	uxtah	r2, ip, r1
 8010226:	1413      	asrs	r3, r2, #16
 8010228:	eb03 4311 	add.w	r3, r3, r1, lsr #16
 801022c:	b292      	uxth	r2, r2
 801022e:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8010232:	ea4f 4c23 	mov.w	ip, r3, asr #16
 8010236:	f845 2b04 	str.w	r2, [r5], #4
 801023a:	e7ee      	b.n	801021a <__mdiff+0x8c>
 801023c:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 8010240:	b90b      	cbnz	r3, 8010246 <__mdiff+0xb8>
 8010242:	3e01      	subs	r6, #1
 8010244:	e7fa      	b.n	801023c <__mdiff+0xae>
 8010246:	6106      	str	r6, [r0, #16]
 8010248:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0801024c <__d2b>:
 801024c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8010250:	460e      	mov	r6, r1
 8010252:	2101      	movs	r1, #1
 8010254:	ec59 8b10 	vmov	r8, r9, d0
 8010258:	4615      	mov	r5, r2
 801025a:	f7ff fd6f 	bl	800fd3c <_Balloc>
 801025e:	f3c9 540a 	ubfx	r4, r9, #20, #11
 8010262:	4607      	mov	r7, r0
 8010264:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8010268:	b10c      	cbz	r4, 801026e <__d2b+0x22>
 801026a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 801026e:	9301      	str	r3, [sp, #4]
 8010270:	f1b8 0f00 	cmp.w	r8, #0
 8010274:	d019      	beq.n	80102aa <__d2b+0x5e>
 8010276:	a802      	add	r0, sp, #8
 8010278:	f840 8d08 	str.w	r8, [r0, #-8]!
 801027c:	f7ff fe05 	bl	800fe8a <__lo0bits>
 8010280:	9b00      	ldr	r3, [sp, #0]
 8010282:	b148      	cbz	r0, 8010298 <__d2b+0x4c>
 8010284:	9a01      	ldr	r2, [sp, #4]
 8010286:	f1c0 0120 	rsb	r1, r0, #32
 801028a:	fa02 f101 	lsl.w	r1, r2, r1
 801028e:	430b      	orrs	r3, r1
 8010290:	40c2      	lsrs	r2, r0
 8010292:	617b      	str	r3, [r7, #20]
 8010294:	9201      	str	r2, [sp, #4]
 8010296:	e000      	b.n	801029a <__d2b+0x4e>
 8010298:	617b      	str	r3, [r7, #20]
 801029a:	9b01      	ldr	r3, [sp, #4]
 801029c:	61bb      	str	r3, [r7, #24]
 801029e:	2b00      	cmp	r3, #0
 80102a0:	bf14      	ite	ne
 80102a2:	2102      	movne	r1, #2
 80102a4:	2101      	moveq	r1, #1
 80102a6:	6139      	str	r1, [r7, #16]
 80102a8:	e007      	b.n	80102ba <__d2b+0x6e>
 80102aa:	a801      	add	r0, sp, #4
 80102ac:	f7ff fded 	bl	800fe8a <__lo0bits>
 80102b0:	9b01      	ldr	r3, [sp, #4]
 80102b2:	617b      	str	r3, [r7, #20]
 80102b4:	2101      	movs	r1, #1
 80102b6:	6139      	str	r1, [r7, #16]
 80102b8:	3020      	adds	r0, #32
 80102ba:	b134      	cbz	r4, 80102ca <__d2b+0x7e>
 80102bc:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 80102c0:	4404      	add	r4, r0
 80102c2:	6034      	str	r4, [r6, #0]
 80102c4:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 80102c8:	e009      	b.n	80102de <__d2b+0x92>
 80102ca:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 80102ce:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 80102d2:	6030      	str	r0, [r6, #0]
 80102d4:	6918      	ldr	r0, [r3, #16]
 80102d6:	f7ff fdb8 	bl	800fe4a <__hi0bits>
 80102da:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 80102de:	6028      	str	r0, [r5, #0]
 80102e0:	4638      	mov	r0, r7
 80102e2:	b003      	add	sp, #12
 80102e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080102e8 <__sread>:
 80102e8:	b510      	push	{r4, lr}
 80102ea:	460c      	mov	r4, r1
 80102ec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80102f0:	f000 f980 	bl	80105f4 <_read_r>
 80102f4:	2800      	cmp	r0, #0
 80102f6:	bfab      	itete	ge
 80102f8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80102fa:	89a3      	ldrhlt	r3, [r4, #12]
 80102fc:	181b      	addge	r3, r3, r0
 80102fe:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8010302:	bfac      	ite	ge
 8010304:	6563      	strge	r3, [r4, #84]	; 0x54
 8010306:	81a3      	strhlt	r3, [r4, #12]
 8010308:	bd10      	pop	{r4, pc}

0801030a <__swrite>:
 801030a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801030e:	461f      	mov	r7, r3
 8010310:	898b      	ldrh	r3, [r1, #12]
 8010312:	05db      	lsls	r3, r3, #23
 8010314:	4605      	mov	r5, r0
 8010316:	460c      	mov	r4, r1
 8010318:	4616      	mov	r6, r2
 801031a:	d505      	bpl.n	8010328 <__swrite+0x1e>
 801031c:	2302      	movs	r3, #2
 801031e:	2200      	movs	r2, #0
 8010320:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8010324:	f000 f954 	bl	80105d0 <_lseek_r>
 8010328:	89a3      	ldrh	r3, [r4, #12]
 801032a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801032e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8010332:	81a3      	strh	r3, [r4, #12]
 8010334:	4632      	mov	r2, r6
 8010336:	463b      	mov	r3, r7
 8010338:	4628      	mov	r0, r5
 801033a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801033e:	f7fe bb43 	b.w	800e9c8 <_write_r>

08010342 <__sseek>:
 8010342:	b510      	push	{r4, lr}
 8010344:	460c      	mov	r4, r1
 8010346:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801034a:	f000 f941 	bl	80105d0 <_lseek_r>
 801034e:	1c43      	adds	r3, r0, #1
 8010350:	89a3      	ldrh	r3, [r4, #12]
 8010352:	bf15      	itete	ne
 8010354:	6560      	strne	r0, [r4, #84]	; 0x54
 8010356:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801035a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801035e:	81a3      	strheq	r3, [r4, #12]
 8010360:	bf18      	it	ne
 8010362:	81a3      	strhne	r3, [r4, #12]
 8010364:	bd10      	pop	{r4, pc}

08010366 <__sclose>:
 8010366:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801036a:	f000 b8ad 	b.w	80104c8 <_close_r>

0801036e <__ssprint_r>:
 801036e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010372:	4693      	mov	fp, r2
 8010374:	6892      	ldr	r2, [r2, #8]
 8010376:	4681      	mov	r9, r0
 8010378:	460c      	mov	r4, r1
 801037a:	b34a      	cbz	r2, 80103d0 <__ssprint_r+0x62>
 801037c:	2300      	movs	r3, #0
 801037e:	f8db a000 	ldr.w	sl, [fp]
 8010382:	9301      	str	r3, [sp, #4]
 8010384:	461f      	mov	r7, r3
 8010386:	e006      	b.n	8010396 <__ssprint_r+0x28>
 8010388:	f8da 3000 	ldr.w	r3, [sl]
 801038c:	f8da 7004 	ldr.w	r7, [sl, #4]
 8010390:	9301      	str	r3, [sp, #4]
 8010392:	f10a 0a08 	add.w	sl, sl, #8
 8010396:	2f00      	cmp	r7, #0
 8010398:	d0f6      	beq.n	8010388 <__ssprint_r+0x1a>
 801039a:	68a6      	ldr	r6, [r4, #8]
 801039c:	42b7      	cmp	r7, r6
 801039e:	d360      	bcc.n	8010462 <__ssprint_r+0xf4>
 80103a0:	89a0      	ldrh	r0, [r4, #12]
 80103a2:	f410 6f90 	tst.w	r0, #1152	; 0x480
 80103a6:	d117      	bne.n	80103d8 <__ssprint_r+0x6a>
 80103a8:	42b7      	cmp	r7, r6
 80103aa:	d35a      	bcc.n	8010462 <__ssprint_r+0xf4>
 80103ac:	4632      	mov	r2, r6
 80103ae:	9901      	ldr	r1, [sp, #4]
 80103b0:	6820      	ldr	r0, [r4, #0]
 80103b2:	f7fd f84d 	bl	800d450 <memmove>
 80103b6:	68a2      	ldr	r2, [r4, #8]
 80103b8:	1b92      	subs	r2, r2, r6
 80103ba:	60a2      	str	r2, [r4, #8]
 80103bc:	6822      	ldr	r2, [r4, #0]
 80103be:	4416      	add	r6, r2
 80103c0:	f8db 2008 	ldr.w	r2, [fp, #8]
 80103c4:	6026      	str	r6, [r4, #0]
 80103c6:	1bd7      	subs	r7, r2, r7
 80103c8:	f8cb 7008 	str.w	r7, [fp, #8]
 80103cc:	2f00      	cmp	r7, #0
 80103ce:	d1db      	bne.n	8010388 <__ssprint_r+0x1a>
 80103d0:	2000      	movs	r0, #0
 80103d2:	f8cb 0004 	str.w	r0, [fp, #4]
 80103d6:	e046      	b.n	8010466 <__ssprint_r+0xf8>
 80103d8:	6825      	ldr	r5, [r4, #0]
 80103da:	6921      	ldr	r1, [r4, #16]
 80103dc:	ebc1 0805 	rsb	r8, r1, r5
 80103e0:	f108 0201 	add.w	r2, r8, #1
 80103e4:	6965      	ldr	r5, [r4, #20]
 80103e6:	443a      	add	r2, r7
 80103e8:	2302      	movs	r3, #2
 80103ea:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80103ee:	fb95 f5f3 	sdiv	r5, r5, r3
 80103f2:	4295      	cmp	r5, r2
 80103f4:	bf38      	it	cc
 80103f6:	4615      	movcc	r5, r2
 80103f8:	0543      	lsls	r3, r0, #21
 80103fa:	d510      	bpl.n	801041e <__ssprint_r+0xb0>
 80103fc:	4629      	mov	r1, r5
 80103fe:	4648      	mov	r0, r9
 8010400:	f7fc fdec 	bl	800cfdc <_malloc_r>
 8010404:	4606      	mov	r6, r0
 8010406:	b1a0      	cbz	r0, 8010432 <__ssprint_r+0xc4>
 8010408:	4642      	mov	r2, r8
 801040a:	6921      	ldr	r1, [r4, #16]
 801040c:	f7fd f815 	bl	800d43a <memcpy>
 8010410:	89a2      	ldrh	r2, [r4, #12]
 8010412:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 8010416:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 801041a:	81a2      	strh	r2, [r4, #12]
 801041c:	e018      	b.n	8010450 <__ssprint_r+0xe2>
 801041e:	462a      	mov	r2, r5
 8010420:	4648      	mov	r0, r9
 8010422:	f7fd f879 	bl	800d518 <_realloc_r>
 8010426:	4606      	mov	r6, r0
 8010428:	b990      	cbnz	r0, 8010450 <__ssprint_r+0xe2>
 801042a:	6921      	ldr	r1, [r4, #16]
 801042c:	4648      	mov	r0, r9
 801042e:	f7ff fb3d 	bl	800faac <_free_r>
 8010432:	220c      	movs	r2, #12
 8010434:	f8c9 2000 	str.w	r2, [r9]
 8010438:	89a2      	ldrh	r2, [r4, #12]
 801043a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 801043e:	81a2      	strh	r2, [r4, #12]
 8010440:	2200      	movs	r2, #0
 8010442:	f8cb 2008 	str.w	r2, [fp, #8]
 8010446:	f8cb 2004 	str.w	r2, [fp, #4]
 801044a:	f04f 30ff 	mov.w	r0, #4294967295
 801044e:	e00a      	b.n	8010466 <__ssprint_r+0xf8>
 8010450:	6126      	str	r6, [r4, #16]
 8010452:	6165      	str	r5, [r4, #20]
 8010454:	4446      	add	r6, r8
 8010456:	ebc8 0505 	rsb	r5, r8, r5
 801045a:	6026      	str	r6, [r4, #0]
 801045c:	60a5      	str	r5, [r4, #8]
 801045e:	463e      	mov	r6, r7
 8010460:	e7a2      	b.n	80103a8 <__ssprint_r+0x3a>
 8010462:	463e      	mov	r6, r7
 8010464:	e7a2      	b.n	80103ac <__ssprint_r+0x3e>
 8010466:	b003      	add	sp, #12
 8010468:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801046c <_calloc_r>:
 801046c:	b510      	push	{r4, lr}
 801046e:	4351      	muls	r1, r2
 8010470:	f7fc fdb4 	bl	800cfdc <_malloc_r>
 8010474:	4604      	mov	r4, r0
 8010476:	b320      	cbz	r0, 80104c2 <_calloc_r+0x56>
 8010478:	f850 2c04 	ldr.w	r2, [r0, #-4]
 801047c:	f022 0203 	bic.w	r2, r2, #3
 8010480:	3a04      	subs	r2, #4
 8010482:	2a24      	cmp	r2, #36	; 0x24
 8010484:	d81a      	bhi.n	80104bc <_calloc_r+0x50>
 8010486:	2a13      	cmp	r2, #19
 8010488:	d912      	bls.n	80104b0 <_calloc_r+0x44>
 801048a:	2100      	movs	r1, #0
 801048c:	2a1b      	cmp	r2, #27
 801048e:	6001      	str	r1, [r0, #0]
 8010490:	6041      	str	r1, [r0, #4]
 8010492:	d802      	bhi.n	801049a <_calloc_r+0x2e>
 8010494:	f100 0308 	add.w	r3, r0, #8
 8010498:	e00b      	b.n	80104b2 <_calloc_r+0x46>
 801049a:	2a24      	cmp	r2, #36	; 0x24
 801049c:	6081      	str	r1, [r0, #8]
 801049e:	60c1      	str	r1, [r0, #12]
 80104a0:	bf11      	iteee	ne
 80104a2:	f100 0310 	addne.w	r3, r0, #16
 80104a6:	6101      	streq	r1, [r0, #16]
 80104a8:	f100 0318 	addeq.w	r3, r0, #24
 80104ac:	6141      	streq	r1, [r0, #20]
 80104ae:	e000      	b.n	80104b2 <_calloc_r+0x46>
 80104b0:	4603      	mov	r3, r0
 80104b2:	2200      	movs	r2, #0
 80104b4:	601a      	str	r2, [r3, #0]
 80104b6:	605a      	str	r2, [r3, #4]
 80104b8:	609a      	str	r2, [r3, #8]
 80104ba:	e002      	b.n	80104c2 <_calloc_r+0x56>
 80104bc:	2100      	movs	r1, #0
 80104be:	f7fc ffe2 	bl	800d486 <memset>
 80104c2:	4620      	mov	r0, r4
 80104c4:	bd10      	pop	{r4, pc}
	...

080104c8 <_close_r>:
 80104c8:	b538      	push	{r3, r4, r5, lr}
 80104ca:	4c06      	ldr	r4, [pc, #24]	; (80104e4 <_close_r+0x1c>)
 80104cc:	2300      	movs	r3, #0
 80104ce:	4605      	mov	r5, r0
 80104d0:	4608      	mov	r0, r1
 80104d2:	6023      	str	r3, [r4, #0]
 80104d4:	f000 f8a0 	bl	8010618 <_close>
 80104d8:	1c43      	adds	r3, r0, #1
 80104da:	d102      	bne.n	80104e2 <_close_r+0x1a>
 80104dc:	6823      	ldr	r3, [r4, #0]
 80104de:	b103      	cbz	r3, 80104e2 <_close_r+0x1a>
 80104e0:	602b      	str	r3, [r5, #0]
 80104e2:	bd38      	pop	{r3, r4, r5, pc}
 80104e4:	200006c0 	.word	0x200006c0

080104e8 <_fclose_r>:
 80104e8:	b570      	push	{r4, r5, r6, lr}
 80104ea:	4605      	mov	r5, r0
 80104ec:	460c      	mov	r4, r1
 80104ee:	b909      	cbnz	r1, 80104f4 <_fclose_r+0xc>
 80104f0:	2000      	movs	r0, #0
 80104f2:	bd70      	pop	{r4, r5, r6, pc}
 80104f4:	b118      	cbz	r0, 80104fe <_fclose_r+0x16>
 80104f6:	6983      	ldr	r3, [r0, #24]
 80104f8:	b90b      	cbnz	r3, 80104fe <_fclose_r+0x16>
 80104fa:	f7ff fa0f 	bl	800f91c <__sinit>
 80104fe:	4b20      	ldr	r3, [pc, #128]	; (8010580 <_fclose_r+0x98>)
 8010500:	429c      	cmp	r4, r3
 8010502:	d101      	bne.n	8010508 <_fclose_r+0x20>
 8010504:	686c      	ldr	r4, [r5, #4]
 8010506:	e008      	b.n	801051a <_fclose_r+0x32>
 8010508:	4b1e      	ldr	r3, [pc, #120]	; (8010584 <_fclose_r+0x9c>)
 801050a:	429c      	cmp	r4, r3
 801050c:	d101      	bne.n	8010512 <_fclose_r+0x2a>
 801050e:	68ac      	ldr	r4, [r5, #8]
 8010510:	e003      	b.n	801051a <_fclose_r+0x32>
 8010512:	4b1d      	ldr	r3, [pc, #116]	; (8010588 <_fclose_r+0xa0>)
 8010514:	429c      	cmp	r4, r3
 8010516:	bf08      	it	eq
 8010518:	68ec      	ldreq	r4, [r5, #12]
 801051a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801051e:	2b00      	cmp	r3, #0
 8010520:	d0e6      	beq.n	80104f0 <_fclose_r+0x8>
 8010522:	4621      	mov	r1, r4
 8010524:	4628      	mov	r0, r5
 8010526:	f7ff f8ff 	bl	800f728 <__sflush_r>
 801052a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801052c:	4606      	mov	r6, r0
 801052e:	b133      	cbz	r3, 801053e <_fclose_r+0x56>
 8010530:	6a21      	ldr	r1, [r4, #32]
 8010532:	4628      	mov	r0, r5
 8010534:	4798      	blx	r3
 8010536:	2800      	cmp	r0, #0
 8010538:	bfb8      	it	lt
 801053a:	f04f 36ff 	movlt.w	r6, #4294967295
 801053e:	89a3      	ldrh	r3, [r4, #12]
 8010540:	061b      	lsls	r3, r3, #24
 8010542:	d503      	bpl.n	801054c <_fclose_r+0x64>
 8010544:	6921      	ldr	r1, [r4, #16]
 8010546:	4628      	mov	r0, r5
 8010548:	f7ff fab0 	bl	800faac <_free_r>
 801054c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801054e:	b141      	cbz	r1, 8010562 <_fclose_r+0x7a>
 8010550:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8010554:	4299      	cmp	r1, r3
 8010556:	d002      	beq.n	801055e <_fclose_r+0x76>
 8010558:	4628      	mov	r0, r5
 801055a:	f7ff faa7 	bl	800faac <_free_r>
 801055e:	2300      	movs	r3, #0
 8010560:	6363      	str	r3, [r4, #52]	; 0x34
 8010562:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8010564:	b121      	cbz	r1, 8010570 <_fclose_r+0x88>
 8010566:	4628      	mov	r0, r5
 8010568:	f7ff faa0 	bl	800faac <_free_r>
 801056c:	2300      	movs	r3, #0
 801056e:	64a3      	str	r3, [r4, #72]	; 0x48
 8010570:	f7ff fa44 	bl	800f9fc <__sfp_lock_acquire>
 8010574:	2300      	movs	r3, #0
 8010576:	81a3      	strh	r3, [r4, #12]
 8010578:	f7ff fa41 	bl	800f9fe <__sfp_lock_release>
 801057c:	4630      	mov	r0, r6
 801057e:	bd70      	pop	{r4, r5, r6, pc}
 8010580:	08011900 	.word	0x08011900
 8010584:	08011920 	.word	0x08011920
 8010588:	08011940 	.word	0x08011940

0801058c <_fstat_r>:
 801058c:	b538      	push	{r3, r4, r5, lr}
 801058e:	4c07      	ldr	r4, [pc, #28]	; (80105ac <_fstat_r+0x20>)
 8010590:	2300      	movs	r3, #0
 8010592:	4605      	mov	r5, r0
 8010594:	4608      	mov	r0, r1
 8010596:	4611      	mov	r1, r2
 8010598:	6023      	str	r3, [r4, #0]
 801059a:	f000 f845 	bl	8010628 <_fstat>
 801059e:	1c43      	adds	r3, r0, #1
 80105a0:	d102      	bne.n	80105a8 <_fstat_r+0x1c>
 80105a2:	6823      	ldr	r3, [r4, #0]
 80105a4:	b103      	cbz	r3, 80105a8 <_fstat_r+0x1c>
 80105a6:	602b      	str	r3, [r5, #0]
 80105a8:	bd38      	pop	{r3, r4, r5, pc}
 80105aa:	bf00      	nop
 80105ac:	200006c0 	.word	0x200006c0

080105b0 <_isatty_r>:
 80105b0:	b538      	push	{r3, r4, r5, lr}
 80105b2:	4c06      	ldr	r4, [pc, #24]	; (80105cc <_isatty_r+0x1c>)
 80105b4:	2300      	movs	r3, #0
 80105b6:	4605      	mov	r5, r0
 80105b8:	4608      	mov	r0, r1
 80105ba:	6023      	str	r3, [r4, #0]
 80105bc:	f000 f844 	bl	8010648 <_isatty>
 80105c0:	1c43      	adds	r3, r0, #1
 80105c2:	d102      	bne.n	80105ca <_isatty_r+0x1a>
 80105c4:	6823      	ldr	r3, [r4, #0]
 80105c6:	b103      	cbz	r3, 80105ca <_isatty_r+0x1a>
 80105c8:	602b      	str	r3, [r5, #0]
 80105ca:	bd38      	pop	{r3, r4, r5, pc}
 80105cc:	200006c0 	.word	0x200006c0

080105d0 <_lseek_r>:
 80105d0:	b538      	push	{r3, r4, r5, lr}
 80105d2:	4c07      	ldr	r4, [pc, #28]	; (80105f0 <_lseek_r+0x20>)
 80105d4:	4605      	mov	r5, r0
 80105d6:	4608      	mov	r0, r1
 80105d8:	4611      	mov	r1, r2
 80105da:	2200      	movs	r2, #0
 80105dc:	6022      	str	r2, [r4, #0]
 80105de:	461a      	mov	r2, r3
 80105e0:	f000 f842 	bl	8010668 <_lseek>
 80105e4:	1c43      	adds	r3, r0, #1
 80105e6:	d102      	bne.n	80105ee <_lseek_r+0x1e>
 80105e8:	6823      	ldr	r3, [r4, #0]
 80105ea:	b103      	cbz	r3, 80105ee <_lseek_r+0x1e>
 80105ec:	602b      	str	r3, [r5, #0]
 80105ee:	bd38      	pop	{r3, r4, r5, pc}
 80105f0:	200006c0 	.word	0x200006c0

080105f4 <_read_r>:
 80105f4:	b538      	push	{r3, r4, r5, lr}
 80105f6:	4c07      	ldr	r4, [pc, #28]	; (8010614 <_read_r+0x20>)
 80105f8:	4605      	mov	r5, r0
 80105fa:	4608      	mov	r0, r1
 80105fc:	4611      	mov	r1, r2
 80105fe:	2200      	movs	r2, #0
 8010600:	6022      	str	r2, [r4, #0]
 8010602:	461a      	mov	r2, r3
 8010604:	f000 f838 	bl	8010678 <_read>
 8010608:	1c43      	adds	r3, r0, #1
 801060a:	d102      	bne.n	8010612 <_read_r+0x1e>
 801060c:	6823      	ldr	r3, [r4, #0]
 801060e:	b103      	cbz	r3, 8010612 <_read_r+0x1e>
 8010610:	602b      	str	r3, [r5, #0]
 8010612:	bd38      	pop	{r3, r4, r5, pc}
 8010614:	200006c0 	.word	0x200006c0

08010618 <_close>:
 8010618:	4b02      	ldr	r3, [pc, #8]	; (8010624 <_close+0xc>)
 801061a:	2258      	movs	r2, #88	; 0x58
 801061c:	601a      	str	r2, [r3, #0]
 801061e:	f04f 30ff 	mov.w	r0, #4294967295
 8010622:	4770      	bx	lr
 8010624:	200006c0 	.word	0x200006c0

08010628 <_fstat>:
 8010628:	4b02      	ldr	r3, [pc, #8]	; (8010634 <_fstat+0xc>)
 801062a:	2258      	movs	r2, #88	; 0x58
 801062c:	601a      	str	r2, [r3, #0]
 801062e:	f04f 30ff 	mov.w	r0, #4294967295
 8010632:	4770      	bx	lr
 8010634:	200006c0 	.word	0x200006c0

08010638 <_getpid>:
 8010638:	4b02      	ldr	r3, [pc, #8]	; (8010644 <_getpid+0xc>)
 801063a:	2258      	movs	r2, #88	; 0x58
 801063c:	601a      	str	r2, [r3, #0]
 801063e:	f04f 30ff 	mov.w	r0, #4294967295
 8010642:	4770      	bx	lr
 8010644:	200006c0 	.word	0x200006c0

08010648 <_isatty>:
 8010648:	4b02      	ldr	r3, [pc, #8]	; (8010654 <_isatty+0xc>)
 801064a:	2258      	movs	r2, #88	; 0x58
 801064c:	601a      	str	r2, [r3, #0]
 801064e:	2000      	movs	r0, #0
 8010650:	4770      	bx	lr
 8010652:	bf00      	nop
 8010654:	200006c0 	.word	0x200006c0

08010658 <_kill>:
 8010658:	4b02      	ldr	r3, [pc, #8]	; (8010664 <_kill+0xc>)
 801065a:	2258      	movs	r2, #88	; 0x58
 801065c:	601a      	str	r2, [r3, #0]
 801065e:	f04f 30ff 	mov.w	r0, #4294967295
 8010662:	4770      	bx	lr
 8010664:	200006c0 	.word	0x200006c0

08010668 <_lseek>:
 8010668:	4b02      	ldr	r3, [pc, #8]	; (8010674 <_lseek+0xc>)
 801066a:	2258      	movs	r2, #88	; 0x58
 801066c:	601a      	str	r2, [r3, #0]
 801066e:	f04f 30ff 	mov.w	r0, #4294967295
 8010672:	4770      	bx	lr
 8010674:	200006c0 	.word	0x200006c0

08010678 <_read>:
 8010678:	4b02      	ldr	r3, [pc, #8]	; (8010684 <_read+0xc>)
 801067a:	2258      	movs	r2, #88	; 0x58
 801067c:	601a      	str	r2, [r3, #0]
 801067e:	f04f 30ff 	mov.w	r0, #4294967295
 8010682:	4770      	bx	lr
 8010684:	200006c0 	.word	0x200006c0

08010688 <_sbrk>:
 8010688:	4b04      	ldr	r3, [pc, #16]	; (801069c <_sbrk+0x14>)
 801068a:	6819      	ldr	r1, [r3, #0]
 801068c:	4602      	mov	r2, r0
 801068e:	b909      	cbnz	r1, 8010694 <_sbrk+0xc>
 8010690:	4903      	ldr	r1, [pc, #12]	; (80106a0 <_sbrk+0x18>)
 8010692:	6019      	str	r1, [r3, #0]
 8010694:	6818      	ldr	r0, [r3, #0]
 8010696:	4402      	add	r2, r0
 8010698:	601a      	str	r2, [r3, #0]
 801069a:	4770      	bx	lr
 801069c:	200005b8 	.word	0x200005b8
 80106a0:	200006c4 	.word	0x200006c4

080106a4 <_write>:
 80106a4:	4b02      	ldr	r3, [pc, #8]	; (80106b0 <_write+0xc>)
 80106a6:	2258      	movs	r2, #88	; 0x58
 80106a8:	601a      	str	r2, [r3, #0]
 80106aa:	f04f 30ff 	mov.w	r0, #4294967295
 80106ae:	4770      	bx	lr
 80106b0:	200006c0 	.word	0x200006c0

080106b4 <_exit>:
 80106b4:	e7fe      	b.n	80106b4 <_exit>
	...

080106b8 <_init>:
 80106b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80106ba:	bf00      	nop
 80106bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80106be:	bc08      	pop	{r3}
 80106c0:	469e      	mov	lr, r3
 80106c2:	4770      	bx	lr

080106c4 <_fini>:
 80106c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80106c6:	bf00      	nop
 80106c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80106ca:	bc08      	pop	{r3}
 80106cc:	469e      	mov	lr, r3
 80106ce:	4770      	bx	lr
